{
  "version": 3,
  "sources": ["../node_modules/delayed-stream/lib/delayed_stream.js", "../node_modules/combined-stream/lib/combined_stream.js", "../node_modules/mime-db/index.js", "../node_modules/mime-types/index.js", "../node_modules/asynckit/lib/defer.js", "../node_modules/asynckit/lib/async.js", "../node_modules/asynckit/lib/abort.js", "../node_modules/asynckit/lib/iterate.js", "../node_modules/asynckit/lib/state.js", "../node_modules/asynckit/lib/terminator.js", "../node_modules/asynckit/parallel.js", "../node_modules/asynckit/serialOrdered.js", "../node_modules/asynckit/serial.js", "../node_modules/asynckit/index.js", "../node_modules/form-data/lib/populate.js", "../node_modules/form-data/lib/form_data.js", "../node_modules/proxy-from-env/index.js", "../node_modules/ms/index.js", "../node_modules/debug/src/common.js", "../node_modules/debug/src/browser.js", "../node_modules/has-flag/index.js", "../node_modules/supports-color/index.js", "../node_modules/debug/src/node.js", "../node_modules/debug/src/index.js", "../node_modules/follow-redirects/debug.js", "../node_modules/follow-redirects/index.js", "../node_modules/vscode-languageclient/node_modules/semver/semver.js", "../node_modules/vscode-jsonrpc/lib/is.js", "../node_modules/vscode-jsonrpc/lib/messages.js", "../node_modules/vscode-jsonrpc/lib/events.js", "../node_modules/vscode-jsonrpc/lib/messageReader.js", "../node_modules/vscode-jsonrpc/lib/messageWriter.js", "../node_modules/vscode-jsonrpc/lib/cancellation.js", "../node_modules/vscode-jsonrpc/lib/linkedMap.js", "../node_modules/vscode-jsonrpc/lib/pipeSupport.js", "../node_modules/vscode-jsonrpc/lib/socketSupport.js", "../node_modules/vscode-jsonrpc/lib/main.js", "../node_modules/vscode-languageserver-types/lib/esm/main.js", "../node_modules/vscode-languageserver-protocol/lib/utils/is.js", "../node_modules/vscode-languageserver-protocol/lib/protocol.implementation.js", "../node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js", "../node_modules/vscode-languageserver-protocol/lib/protocol.workspaceFolders.js", "../node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js", "../node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js", "../node_modules/vscode-languageserver-protocol/lib/protocol.foldingRange.js", "../node_modules/vscode-languageserver-protocol/lib/protocol.declaration.js", "../node_modules/vscode-languageserver-protocol/lib/protocol.js", "../node_modules/vscode-languageserver-protocol/lib/main.js", "../node_modules/vscode-languageclient/lib/utils/is.js", "../node_modules/vscode-languageclient/lib/protocolCompletionItem.js", "../node_modules/vscode-languageclient/lib/protocolCodeLens.js", "../node_modules/vscode-languageclient/lib/protocolDocumentLink.js", "../node_modules/vscode-languageclient/lib/codeConverter.js", "../node_modules/vscode-languageclient/lib/protocolConverter.js", "../node_modules/vscode-languageclient/lib/utils/async.js", "../node_modules/vscode-languageclient/lib/utils/uuid.js", "../node_modules/vscode-languageclient/lib/client.js", "../node_modules/vscode-languageclient/lib/colorProvider.js", "../node_modules/vscode-languageclient/lib/configuration.js", "../node_modules/vscode-languageclient/lib/implementation.js", "../node_modules/vscode-languageclient/lib/typeDefinition.js", "../node_modules/vscode-languageclient/lib/workspaceFolders.js", "../node_modules/vscode-languageclient/lib/foldingRange.js", "../node_modules/vscode-languageclient/lib/declaration.js", "../node_modules/vscode-languageclient/lib/utils/processes.js", "../node_modules/vscode-languageclient/lib/main.js", "../node_modules/isexe/windows.js", "../node_modules/isexe/mode.js", "../node_modules/isexe/index.js", "../node_modules/which/which.js", "../node_modules/fs.realpath/old.js", "../node_modules/fs.realpath/index.js", "../node_modules/concat-map/index.js", "../node_modules/balanced-match/index.js", "../node_modules/brace-expansion/index.js", "../node_modules/minimatch/minimatch.js", "../node_modules/inherits/inherits_browser.js", "../node_modules/inherits/inherits.js", "../node_modules/path-is-absolute/index.js", "../node_modules/glob/common.js", "../node_modules/glob/sync.js", "../node_modules/wrappy/wrappy.js", "../node_modules/once/once.js", "../node_modules/inflight/inflight.js", "../node_modules/glob/glob.js", "../src/extension.ts", "../src/callbacks.ts", "../src/messagePane.ts", "../src/utilities.ts", "../node_modules/jsonc-parser/lib/esm/impl/scanner.js", "../node_modules/jsonc-parser/lib/esm/impl/string-intern.js", "../node_modules/jsonc-parser/lib/esm/impl/format.js", "../node_modules/jsonc-parser/lib/esm/impl/parser.js", "../node_modules/jsonc-parser/lib/esm/impl/edit.js", "../node_modules/jsonc-parser/lib/esm/main.js", "../src/vcastTestInterface.ts", "../src-common/commonUtilities.ts", "../src/configuration.ts", "../src/vcastAdapter.ts", "../src/manage/manageSrc/manageCommands.ts", "../src/manage/manageSrc/manageCallbacks.ts", "../src/testPane.ts", "../src/client.ts", "../node_modules/axios/lib/helpers/bind.js", "../node_modules/axios/lib/utils.js", "../node_modules/axios/lib/core/AxiosError.js", "../node_modules/axios/lib/platform/node/classes/FormData.js", "../node_modules/axios/lib/helpers/toFormData.js", "../node_modules/axios/lib/helpers/AxiosURLSearchParams.js", "../node_modules/axios/lib/helpers/buildURL.js", "../node_modules/axios/lib/core/InterceptorManager.js", "../node_modules/axios/lib/defaults/transitional.js", "../node_modules/axios/lib/platform/node/classes/URLSearchParams.js", "../node_modules/axios/lib/platform/node/index.js", "../node_modules/axios/lib/platform/common/utils.js", "../node_modules/axios/lib/platform/index.js", "../node_modules/axios/lib/helpers/toURLEncodedForm.js", "../node_modules/axios/lib/helpers/formDataToJSON.js", "../node_modules/axios/lib/defaults/index.js", "../node_modules/axios/lib/helpers/parseHeaders.js", "../node_modules/axios/lib/core/AxiosHeaders.js", "../node_modules/axios/lib/core/transformData.js", "../node_modules/axios/lib/cancel/isCancel.js", "../node_modules/axios/lib/cancel/CanceledError.js", "../node_modules/axios/lib/core/settle.js", "../node_modules/axios/lib/helpers/isAbsoluteURL.js", "../node_modules/axios/lib/helpers/combineURLs.js", "../node_modules/axios/lib/core/buildFullPath.js", "../node_modules/axios/lib/adapters/http.js", "../node_modules/axios/lib/env/data.js", "../node_modules/axios/lib/helpers/parseProtocol.js", "../node_modules/axios/lib/helpers/fromDataURI.js", "../node_modules/axios/lib/helpers/AxiosTransformStream.js", "../node_modules/axios/lib/helpers/formDataToStream.js", "../node_modules/axios/lib/helpers/readBlob.js", "../node_modules/axios/lib/helpers/ZlibHeaderTransformStream.js", "../node_modules/axios/lib/helpers/callbackify.js", "../node_modules/axios/lib/helpers/speedometer.js", "../node_modules/axios/lib/helpers/throttle.js", "../node_modules/axios/lib/helpers/progressEventReducer.js", "../node_modules/axios/lib/helpers/isURLSameOrigin.js", "../node_modules/axios/lib/helpers/cookies.js", "../node_modules/axios/lib/core/mergeConfig.js", "../node_modules/axios/lib/helpers/resolveConfig.js", "../node_modules/axios/lib/adapters/xhr.js", "../node_modules/axios/lib/helpers/composeSignals.js", "../node_modules/axios/lib/helpers/trackStream.js", "../node_modules/axios/lib/adapters/fetch.js", "../node_modules/axios/lib/adapters/adapters.js", "../node_modules/axios/lib/core/dispatchRequest.js", "../node_modules/axios/lib/helpers/validator.js", "../node_modules/axios/lib/core/Axios.js", "../node_modules/axios/lib/cancel/CancelToken.js", "../node_modules/axios/lib/helpers/spread.js", "../node_modules/axios/lib/helpers/isAxiosError.js", "../node_modules/axios/lib/helpers/HttpStatusCode.js", "../node_modules/axios/lib/axios.js", "../node_modules/axios/index.js", "../src-common/vcastServer.ts", "../src/vcastInstallation.ts", "../src/vcastCommandRunner.ts", "../src/coverage.ts", "../src/fileDecorator.ts", "../src/editorDecorator.ts", "../src/reporting.ts", "../src/vcastUtilities.ts", "../src/manage/manageSrc/manageUtils.ts", "../src/testData.ts", "../src/vcastDataServer.ts"],
  "sourcesContent": ["var Stream = require('stream').Stream;\nvar util = require('util');\n\nmodule.exports = DelayedStream;\nfunction DelayedStream() {\n  this.source = null;\n  this.dataSize = 0;\n  this.maxDataSize = 1024 * 1024;\n  this.pauseStream = true;\n\n  this._maxDataSizeExceeded = false;\n  this._released = false;\n  this._bufferedEvents = [];\n}\nutil.inherits(DelayedStream, Stream);\n\nDelayedStream.create = function(source, options) {\n  var delayedStream = new this();\n\n  options = options || {};\n  for (var option in options) {\n    delayedStream[option] = options[option];\n  }\n\n  delayedStream.source = source;\n\n  var realEmit = source.emit;\n  source.emit = function() {\n    delayedStream._handleEmit(arguments);\n    return realEmit.apply(source, arguments);\n  };\n\n  source.on('error', function() {});\n  if (delayedStream.pauseStream) {\n    source.pause();\n  }\n\n  return delayedStream;\n};\n\nObject.defineProperty(DelayedStream.prototype, 'readable', {\n  configurable: true,\n  enumerable: true,\n  get: function() {\n    return this.source.readable;\n  }\n});\n\nDelayedStream.prototype.setEncoding = function() {\n  return this.source.setEncoding.apply(this.source, arguments);\n};\n\nDelayedStream.prototype.resume = function() {\n  if (!this._released) {\n    this.release();\n  }\n\n  this.source.resume();\n};\n\nDelayedStream.prototype.pause = function() {\n  this.source.pause();\n};\n\nDelayedStream.prototype.release = function() {\n  this._released = true;\n\n  this._bufferedEvents.forEach(function(args) {\n    this.emit.apply(this, args);\n  }.bind(this));\n  this._bufferedEvents = [];\n};\n\nDelayedStream.prototype.pipe = function() {\n  var r = Stream.prototype.pipe.apply(this, arguments);\n  this.resume();\n  return r;\n};\n\nDelayedStream.prototype._handleEmit = function(args) {\n  if (this._released) {\n    this.emit.apply(this, args);\n    return;\n  }\n\n  if (args[0] === 'data') {\n    this.dataSize += args[1].length;\n    this._checkIfMaxDataSizeExceeded();\n  }\n\n  this._bufferedEvents.push(args);\n};\n\nDelayedStream.prototype._checkIfMaxDataSizeExceeded = function() {\n  if (this._maxDataSizeExceeded) {\n    return;\n  }\n\n  if (this.dataSize <= this.maxDataSize) {\n    return;\n  }\n\n  this._maxDataSizeExceeded = true;\n  var message =\n    'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.'\n  this.emit('error', new Error(message));\n};\n", "var util = require('util');\nvar Stream = require('stream').Stream;\nvar DelayedStream = require('delayed-stream');\n\nmodule.exports = CombinedStream;\nfunction CombinedStream() {\n  this.writable = false;\n  this.readable = true;\n  this.dataSize = 0;\n  this.maxDataSize = 2 * 1024 * 1024;\n  this.pauseStreams = true;\n\n  this._released = false;\n  this._streams = [];\n  this._currentStream = null;\n  this._insideLoop = false;\n  this._pendingNext = false;\n}\nutil.inherits(CombinedStream, Stream);\n\nCombinedStream.create = function(options) {\n  var combinedStream = new this();\n\n  options = options || {};\n  for (var option in options) {\n    combinedStream[option] = options[option];\n  }\n\n  return combinedStream;\n};\n\nCombinedStream.isStreamLike = function(stream) {\n  return (typeof stream !== 'function')\n    && (typeof stream !== 'string')\n    && (typeof stream !== 'boolean')\n    && (typeof stream !== 'number')\n    && (!Buffer.isBuffer(stream));\n};\n\nCombinedStream.prototype.append = function(stream) {\n  var isStreamLike = CombinedStream.isStreamLike(stream);\n\n  if (isStreamLike) {\n    if (!(stream instanceof DelayedStream)) {\n      var newStream = DelayedStream.create(stream, {\n        maxDataSize: Infinity,\n        pauseStream: this.pauseStreams,\n      });\n      stream.on('data', this._checkDataSize.bind(this));\n      stream = newStream;\n    }\n\n    this._handleErrors(stream);\n\n    if (this.pauseStreams) {\n      stream.pause();\n    }\n  }\n\n  this._streams.push(stream);\n  return this;\n};\n\nCombinedStream.prototype.pipe = function(dest, options) {\n  Stream.prototype.pipe.call(this, dest, options);\n  this.resume();\n  return dest;\n};\n\nCombinedStream.prototype._getNext = function() {\n  this._currentStream = null;\n\n  if (this._insideLoop) {\n    this._pendingNext = true;\n    return; // defer call\n  }\n\n  this._insideLoop = true;\n  try {\n    do {\n      this._pendingNext = false;\n      this._realGetNext();\n    } while (this._pendingNext);\n  } finally {\n    this._insideLoop = false;\n  }\n};\n\nCombinedStream.prototype._realGetNext = function() {\n  var stream = this._streams.shift();\n\n\n  if (typeof stream == 'undefined') {\n    this.end();\n    return;\n  }\n\n  if (typeof stream !== 'function') {\n    this._pipeNext(stream);\n    return;\n  }\n\n  var getStream = stream;\n  getStream(function(stream) {\n    var isStreamLike = CombinedStream.isStreamLike(stream);\n    if (isStreamLike) {\n      stream.on('data', this._checkDataSize.bind(this));\n      this._handleErrors(stream);\n    }\n\n    this._pipeNext(stream);\n  }.bind(this));\n};\n\nCombinedStream.prototype._pipeNext = function(stream) {\n  this._currentStream = stream;\n\n  var isStreamLike = CombinedStream.isStreamLike(stream);\n  if (isStreamLike) {\n    stream.on('end', this._getNext.bind(this));\n    stream.pipe(this, {end: false});\n    return;\n  }\n\n  var value = stream;\n  this.write(value);\n  this._getNext();\n};\n\nCombinedStream.prototype._handleErrors = function(stream) {\n  var self = this;\n  stream.on('error', function(err) {\n    self._emitError(err);\n  });\n};\n\nCombinedStream.prototype.write = function(data) {\n  this.emit('data', data);\n};\n\nCombinedStream.prototype.pause = function() {\n  if (!this.pauseStreams) {\n    return;\n  }\n\n  if(this.pauseStreams && this._currentStream && typeof(this._currentStream.pause) == 'function') this._currentStream.pause();\n  this.emit('pause');\n};\n\nCombinedStream.prototype.resume = function() {\n  if (!this._released) {\n    this._released = true;\n    this.writable = true;\n    this._getNext();\n  }\n\n  if(this.pauseStreams && this._currentStream && typeof(this._currentStream.resume) == 'function') this._currentStream.resume();\n  this.emit('resume');\n};\n\nCombinedStream.prototype.end = function() {\n  this._reset();\n  this.emit('end');\n};\n\nCombinedStream.prototype.destroy = function() {\n  this._reset();\n  this.emit('close');\n};\n\nCombinedStream.prototype._reset = function() {\n  this.writable = false;\n  this._streams = [];\n  this._currentStream = null;\n};\n\nCombinedStream.prototype._checkDataSize = function() {\n  this._updateDataSize();\n  if (this.dataSize <= this.maxDataSize) {\n    return;\n  }\n\n  var message =\n    'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.';\n  this._emitError(new Error(message));\n};\n\nCombinedStream.prototype._updateDataSize = function() {\n  this.dataSize = 0;\n\n  var self = this;\n  this._streams.forEach(function(stream) {\n    if (!stream.dataSize) {\n      return;\n    }\n\n    self.dataSize += stream.dataSize;\n  });\n\n  if (this._currentStream && this._currentStream.dataSize) {\n    this.dataSize += this._currentStream.dataSize;\n  }\n};\n\nCombinedStream.prototype._emitError = function(err) {\n  this._reset();\n  this.emit('error', err);\n};\n", "/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n", "/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = require('mime-db')\nvar extname = require('path').extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar TEXT_TYPE_REGEXP = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions, exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType (str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup (path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps (extensions, types) {\n  // source preference (least -> most)\n  var preference = ['nginx', 'apache', undefined, 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType (type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream' &&\n          (from > to || (from === to && types[extension].substr(0, 12) === 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n", "module.exports = defer;\n\n/**\n * Runs provided function on next iteration of the event loop\n *\n * @param {function} fn - function to run\n */\nfunction defer(fn)\n{\n  var nextTick = typeof setImmediate == 'function'\n    ? setImmediate\n    : (\n      typeof process == 'object' && typeof process.nextTick == 'function'\n      ? process.nextTick\n      : null\n    );\n\n  if (nextTick)\n  {\n    nextTick(fn);\n  }\n  else\n  {\n    setTimeout(fn, 0);\n  }\n}\n", "var defer = require('./defer.js');\n\n// API\nmodule.exports = async;\n\n/**\n * Runs provided callback asynchronously\n * even if callback itself is not\n *\n * @param   {function} callback - callback to invoke\n * @returns {function} - augmented callback\n */\nfunction async(callback)\n{\n  var isAsync = false;\n\n  // check if async happened\n  defer(function() { isAsync = true; });\n\n  return function async_callback(err, result)\n  {\n    if (isAsync)\n    {\n      callback(err, result);\n    }\n    else\n    {\n      defer(function nextTick_callback()\n      {\n        callback(err, result);\n      });\n    }\n  };\n}\n", "// API\nmodule.exports = abort;\n\n/**\n * Aborts leftover active jobs\n *\n * @param {object} state - current state object\n */\nfunction abort(state)\n{\n  Object.keys(state.jobs).forEach(clean.bind(state));\n\n  // reset leftover jobs\n  state.jobs = {};\n}\n\n/**\n * Cleans up leftover job by invoking abort function for the provided job id\n *\n * @this  state\n * @param {string|number} key - job id to abort\n */\nfunction clean(key)\n{\n  if (typeof this.jobs[key] == 'function')\n  {\n    this.jobs[key]();\n  }\n}\n", "var async = require('./async.js')\n  , abort = require('./abort.js')\n  ;\n\n// API\nmodule.exports = iterate;\n\n/**\n * Iterates over each job object\n *\n * @param {array|object} list - array or object (named list) to iterate over\n * @param {function} iterator - iterator to run\n * @param {object} state - current job status\n * @param {function} callback - invoked when all elements processed\n */\nfunction iterate(list, iterator, state, callback)\n{\n  // store current index\n  var key = state['keyedList'] ? state['keyedList'][state.index] : state.index;\n\n  state.jobs[key] = runJob(iterator, key, list[key], function(error, output)\n  {\n    // don't repeat yourself\n    // skip secondary callbacks\n    if (!(key in state.jobs))\n    {\n      return;\n    }\n\n    // clean up jobs\n    delete state.jobs[key];\n\n    if (error)\n    {\n      // don't process rest of the results\n      // stop still active jobs\n      // and reset the list\n      abort(state);\n    }\n    else\n    {\n      state.results[key] = output;\n    }\n\n    // return salvaged results\n    callback(error, state.results);\n  });\n}\n\n/**\n * Runs iterator over provided job element\n *\n * @param   {function} iterator - iterator to invoke\n * @param   {string|number} key - key/index of the element in the list of jobs\n * @param   {mixed} item - job description\n * @param   {function} callback - invoked after iterator is done with the job\n * @returns {function|mixed} - job abort function or something else\n */\nfunction runJob(iterator, key, item, callback)\n{\n  var aborter;\n\n  // allow shortcut if iterator expects only two arguments\n  if (iterator.length == 2)\n  {\n    aborter = iterator(item, async(callback));\n  }\n  // otherwise go with full three arguments\n  else\n  {\n    aborter = iterator(item, key, async(callback));\n  }\n\n  return aborter;\n}\n", "// API\nmodule.exports = state;\n\n/**\n * Creates initial state object\n * for iteration over list\n *\n * @param   {array|object} list - list to iterate over\n * @param   {function|null} sortMethod - function to use for keys sort,\n *                                     or `null` to keep them as is\n * @returns {object} - initial state object\n */\nfunction state(list, sortMethod)\n{\n  var isNamedList = !Array.isArray(list)\n    , initState =\n    {\n      index    : 0,\n      keyedList: isNamedList || sortMethod ? Object.keys(list) : null,\n      jobs     : {},\n      results  : isNamedList ? {} : [],\n      size     : isNamedList ? Object.keys(list).length : list.length\n    }\n    ;\n\n  if (sortMethod)\n  {\n    // sort array keys based on it's values\n    // sort object's keys just on own merit\n    initState.keyedList.sort(isNamedList ? sortMethod : function(a, b)\n    {\n      return sortMethod(list[a], list[b]);\n    });\n  }\n\n  return initState;\n}\n", "var abort = require('./abort.js')\n  , async = require('./async.js')\n  ;\n\n// API\nmodule.exports = terminator;\n\n/**\n * Terminates jobs in the attached state context\n *\n * @this  AsyncKitState#\n * @param {function} callback - final callback to invoke after termination\n */\nfunction terminator(callback)\n{\n  if (!Object.keys(this.jobs).length)\n  {\n    return;\n  }\n\n  // fast forward iteration index\n  this.index = this.size;\n\n  // abort jobs\n  abort(this);\n\n  // send back results we have so far\n  async(callback)(null, this.results);\n}\n", "var iterate    = require('./lib/iterate.js')\n  , initState  = require('./lib/state.js')\n  , terminator = require('./lib/terminator.js')\n  ;\n\n// Public API\nmodule.exports = parallel;\n\n/**\n * Runs iterator over provided array elements in parallel\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction parallel(list, iterator, callback)\n{\n  var state = initState(list);\n\n  while (state.index < (state['keyedList'] || list).length)\n  {\n    iterate(list, iterator, state, function(error, result)\n    {\n      if (error)\n      {\n        callback(error, result);\n        return;\n      }\n\n      // looks like it's the last one\n      if (Object.keys(state.jobs).length === 0)\n      {\n        callback(null, state.results);\n        return;\n      }\n    });\n\n    state.index++;\n  }\n\n  return terminator.bind(state, callback);\n}\n", "var iterate    = require('./lib/iterate.js')\n  , initState  = require('./lib/state.js')\n  , terminator = require('./lib/terminator.js')\n  ;\n\n// Public API\nmodule.exports = serialOrdered;\n// sorting helpers\nmodule.exports.ascending  = ascending;\nmodule.exports.descending = descending;\n\n/**\n * Runs iterator over provided sorted array elements in series\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} sortMethod - custom sort function\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction serialOrdered(list, iterator, sortMethod, callback)\n{\n  var state = initState(list, sortMethod);\n\n  iterate(list, iterator, state, function iteratorHandler(error, result)\n  {\n    if (error)\n    {\n      callback(error, result);\n      return;\n    }\n\n    state.index++;\n\n    // are we there yet?\n    if (state.index < (state['keyedList'] || list).length)\n    {\n      iterate(list, iterator, state, iteratorHandler);\n      return;\n    }\n\n    // done here\n    callback(null, state.results);\n  });\n\n  return terminator.bind(state, callback);\n}\n\n/*\n * -- Sort methods\n */\n\n/**\n * sort helper to sort array elements in ascending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction ascending(a, b)\n{\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n\n/**\n * sort helper to sort array elements in descending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction descending(a, b)\n{\n  return -1 * ascending(a, b);\n}\n", "var serialOrdered = require('./serialOrdered.js');\n\n// Public API\nmodule.exports = serial;\n\n/**\n * Runs iterator over provided array elements in series\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction serial(list, iterator, callback)\n{\n  return serialOrdered(list, iterator, null, callback);\n}\n", "module.exports =\n{\n  parallel      : require('./parallel.js'),\n  serial        : require('./serial.js'),\n  serialOrdered : require('./serialOrdered.js')\n};\n", "// populates missing values\nmodule.exports = function(dst, src) {\n\n  Object.keys(src).forEach(function(prop)\n  {\n    dst[prop] = dst[prop] || src[prop];\n  });\n\n  return dst;\n};\n", "var CombinedStream = require('combined-stream');\nvar util = require('util');\nvar path = require('path');\nvar http = require('http');\nvar https = require('https');\nvar parseUrl = require('url').parse;\nvar fs = require('fs');\nvar Stream = require('stream').Stream;\nvar mime = require('mime-types');\nvar asynckit = require('asynckit');\nvar populate = require('./populate.js');\n\n// Public API\nmodule.exports = FormData;\n\n// make it a Stream\nutil.inherits(FormData, CombinedStream);\n\n/**\n * Create readable \"multipart/form-data\" streams.\n * Can be used to submit forms\n * and file uploads to other web applications.\n *\n * @constructor\n * @param {Object} options - Properties to be added/overriden for FormData and CombinedStream\n */\nfunction FormData(options) {\n  if (!(this instanceof FormData)) {\n    return new FormData(options);\n  }\n\n  this._overheadLength = 0;\n  this._valueLength = 0;\n  this._valuesToMeasure = [];\n\n  CombinedStream.call(this);\n\n  options = options || {};\n  for (var option in options) {\n    this[option] = options[option];\n  }\n}\n\nFormData.LINE_BREAK = '\\r\\n';\nFormData.DEFAULT_CONTENT_TYPE = 'application/octet-stream';\n\nFormData.prototype.append = function(field, value, options) {\n\n  options = options || {};\n\n  // allow filename as single option\n  if (typeof options == 'string') {\n    options = {filename: options};\n  }\n\n  var append = CombinedStream.prototype.append.bind(this);\n\n  // all that streamy business can't handle numbers\n  if (typeof value == 'number') {\n    value = '' + value;\n  }\n\n  // https://github.com/felixge/node-form-data/issues/38\n  if (util.isArray(value)) {\n    // Please convert your array into string\n    // the way web server expects it\n    this._error(new Error('Arrays are not supported.'));\n    return;\n  }\n\n  var header = this._multiPartHeader(field, value, options);\n  var footer = this._multiPartFooter();\n\n  append(header);\n  append(value);\n  append(footer);\n\n  // pass along options.knownLength\n  this._trackLength(header, value, options);\n};\n\nFormData.prototype._trackLength = function(header, value, options) {\n  var valueLength = 0;\n\n  // used w/ getLengthSync(), when length is known.\n  // e.g. for streaming directly from a remote server,\n  // w/ a known file a size, and not wanting to wait for\n  // incoming file to finish to get its size.\n  if (options.knownLength != null) {\n    valueLength += +options.knownLength;\n  } else if (Buffer.isBuffer(value)) {\n    valueLength = value.length;\n  } else if (typeof value === 'string') {\n    valueLength = Buffer.byteLength(value);\n  }\n\n  this._valueLength += valueLength;\n\n  // @check why add CRLF? does this account for custom/multiple CRLFs?\n  this._overheadLength +=\n    Buffer.byteLength(header) +\n    FormData.LINE_BREAK.length;\n\n  // empty or either doesn't have path or not an http response or not a stream\n  if (!value || ( !value.path && !(value.readable && value.hasOwnProperty('httpVersion')) && !(value instanceof Stream))) {\n    return;\n  }\n\n  // no need to bother with the length\n  if (!options.knownLength) {\n    this._valuesToMeasure.push(value);\n  }\n};\n\nFormData.prototype._lengthRetriever = function(value, callback) {\n\n  if (value.hasOwnProperty('fd')) {\n\n    // take read range into a account\n    // `end` = Infinity \u2013> read file till the end\n    //\n    // TODO: Looks like there is bug in Node fs.createReadStream\n    // it doesn't respect `end` options without `start` options\n    // Fix it when node fixes it.\n    // https://github.com/joyent/node/issues/7819\n    if (value.end != undefined && value.end != Infinity && value.start != undefined) {\n\n      // when end specified\n      // no need to calculate range\n      // inclusive, starts with 0\n      callback(null, value.end + 1 - (value.start ? value.start : 0));\n\n    // not that fast snoopy\n    } else {\n      // still need to fetch file size from fs\n      fs.stat(value.path, function(err, stat) {\n\n        var fileSize;\n\n        if (err) {\n          callback(err);\n          return;\n        }\n\n        // update final size based on the range options\n        fileSize = stat.size - (value.start ? value.start : 0);\n        callback(null, fileSize);\n      });\n    }\n\n  // or http response\n  } else if (value.hasOwnProperty('httpVersion')) {\n    callback(null, +value.headers['content-length']);\n\n  // or request stream http://github.com/mikeal/request\n  } else if (value.hasOwnProperty('httpModule')) {\n    // wait till response come back\n    value.on('response', function(response) {\n      value.pause();\n      callback(null, +response.headers['content-length']);\n    });\n    value.resume();\n\n  // something else\n  } else {\n    callback('Unknown stream');\n  }\n};\n\nFormData.prototype._multiPartHeader = function(field, value, options) {\n  // custom header specified (as string)?\n  // it becomes responsible for boundary\n  // (e.g. to handle extra CRLFs on .NET servers)\n  if (typeof options.header == 'string') {\n    return options.header;\n  }\n\n  var contentDisposition = this._getContentDisposition(value, options);\n  var contentType = this._getContentType(value, options);\n\n  var contents = '';\n  var headers  = {\n    // add custom disposition as third element or keep it two elements if not\n    'Content-Disposition': ['form-data', 'name=\"' + field + '\"'].concat(contentDisposition || []),\n    // if no content type. allow it to be empty array\n    'Content-Type': [].concat(contentType || [])\n  };\n\n  // allow custom headers.\n  if (typeof options.header == 'object') {\n    populate(headers, options.header);\n  }\n\n  var header;\n  for (var prop in headers) {\n    if (!headers.hasOwnProperty(prop)) continue;\n    header = headers[prop];\n\n    // skip nullish headers.\n    if (header == null) {\n      continue;\n    }\n\n    // convert all headers to arrays.\n    if (!Array.isArray(header)) {\n      header = [header];\n    }\n\n    // add non-empty headers.\n    if (header.length) {\n      contents += prop + ': ' + header.join('; ') + FormData.LINE_BREAK;\n    }\n  }\n\n  return '--' + this.getBoundary() + FormData.LINE_BREAK + contents + FormData.LINE_BREAK;\n};\n\nFormData.prototype._getContentDisposition = function(value, options) {\n\n  var filename\n    , contentDisposition\n    ;\n\n  if (typeof options.filepath === 'string') {\n    // custom filepath for relative paths\n    filename = path.normalize(options.filepath).replace(/\\\\/g, '/');\n  } else if (options.filename || value.name || value.path) {\n    // custom filename take precedence\n    // formidable and the browser add a name property\n    // fs- and request- streams have path property\n    filename = path.basename(options.filename || value.name || value.path);\n  } else if (value.readable && value.hasOwnProperty('httpVersion')) {\n    // or try http response\n    filename = path.basename(value.client._httpMessage.path || '');\n  }\n\n  if (filename) {\n    contentDisposition = 'filename=\"' + filename + '\"';\n  }\n\n  return contentDisposition;\n};\n\nFormData.prototype._getContentType = function(value, options) {\n\n  // use custom content-type above all\n  var contentType = options.contentType;\n\n  // or try `name` from formidable, browser\n  if (!contentType && value.name) {\n    contentType = mime.lookup(value.name);\n  }\n\n  // or try `path` from fs-, request- streams\n  if (!contentType && value.path) {\n    contentType = mime.lookup(value.path);\n  }\n\n  // or if it's http-reponse\n  if (!contentType && value.readable && value.hasOwnProperty('httpVersion')) {\n    contentType = value.headers['content-type'];\n  }\n\n  // or guess it from the filepath or filename\n  if (!contentType && (options.filepath || options.filename)) {\n    contentType = mime.lookup(options.filepath || options.filename);\n  }\n\n  // fallback to the default content type if `value` is not simple value\n  if (!contentType && typeof value == 'object') {\n    contentType = FormData.DEFAULT_CONTENT_TYPE;\n  }\n\n  return contentType;\n};\n\nFormData.prototype._multiPartFooter = function() {\n  return function(next) {\n    var footer = FormData.LINE_BREAK;\n\n    var lastPart = (this._streams.length === 0);\n    if (lastPart) {\n      footer += this._lastBoundary();\n    }\n\n    next(footer);\n  }.bind(this);\n};\n\nFormData.prototype._lastBoundary = function() {\n  return '--' + this.getBoundary() + '--' + FormData.LINE_BREAK;\n};\n\nFormData.prototype.getHeaders = function(userHeaders) {\n  var header;\n  var formHeaders = {\n    'content-type': 'multipart/form-data; boundary=' + this.getBoundary()\n  };\n\n  for (header in userHeaders) {\n    if (userHeaders.hasOwnProperty(header)) {\n      formHeaders[header.toLowerCase()] = userHeaders[header];\n    }\n  }\n\n  return formHeaders;\n};\n\nFormData.prototype.setBoundary = function(boundary) {\n  this._boundary = boundary;\n};\n\nFormData.prototype.getBoundary = function() {\n  if (!this._boundary) {\n    this._generateBoundary();\n  }\n\n  return this._boundary;\n};\n\nFormData.prototype.getBuffer = function() {\n  var dataBuffer = new Buffer.alloc( 0 );\n  var boundary = this.getBoundary();\n\n  // Create the form content. Add Line breaks to the end of data.\n  for (var i = 0, len = this._streams.length; i < len; i++) {\n    if (typeof this._streams[i] !== 'function') {\n\n      // Add content to the buffer.\n      if(Buffer.isBuffer(this._streams[i])) {\n        dataBuffer = Buffer.concat( [dataBuffer, this._streams[i]]);\n      }else {\n        dataBuffer = Buffer.concat( [dataBuffer, Buffer.from(this._streams[i])]);\n      }\n\n      // Add break after content.\n      if (typeof this._streams[i] !== 'string' || this._streams[i].substring( 2, boundary.length + 2 ) !== boundary) {\n        dataBuffer = Buffer.concat( [dataBuffer, Buffer.from(FormData.LINE_BREAK)] );\n      }\n    }\n  }\n\n  // Add the footer and return the Buffer object.\n  return Buffer.concat( [dataBuffer, Buffer.from(this._lastBoundary())] );\n};\n\nFormData.prototype._generateBoundary = function() {\n  // This generates a 50 character boundary similar to those used by Firefox.\n  // They are optimized for boyer-moore parsing.\n  var boundary = '--------------------------';\n  for (var i = 0; i < 24; i++) {\n    boundary += Math.floor(Math.random() * 10).toString(16);\n  }\n\n  this._boundary = boundary;\n};\n\n// Note: getLengthSync DOESN'T calculate streams length\n// As workaround one can calculate file size manually\n// and add it as knownLength option\nFormData.prototype.getLengthSync = function() {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  // Don't get confused, there are 3 \"internal\" streams for each keyval pair\n  // so it basically checks if there is any value added to the form\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  // https://github.com/form-data/form-data/issues/40\n  if (!this.hasKnownLength()) {\n    // Some async length retrievers are present\n    // therefore synchronous length calculation is false.\n    // Please use getLength(callback) to get proper length\n    this._error(new Error('Cannot calculate proper length in synchronous way.'));\n  }\n\n  return knownLength;\n};\n\n// Public API to check if length of added values is known\n// https://github.com/form-data/form-data/issues/196\n// https://github.com/form-data/form-data/issues/262\nFormData.prototype.hasKnownLength = function() {\n  var hasKnownLength = true;\n\n  if (this._valuesToMeasure.length) {\n    hasKnownLength = false;\n  }\n\n  return hasKnownLength;\n};\n\nFormData.prototype.getLength = function(cb) {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  if (!this._valuesToMeasure.length) {\n    process.nextTick(cb.bind(this, null, knownLength));\n    return;\n  }\n\n  asynckit.parallel(this._valuesToMeasure, this._lengthRetriever, function(err, values) {\n    if (err) {\n      cb(err);\n      return;\n    }\n\n    values.forEach(function(length) {\n      knownLength += length;\n    });\n\n    cb(null, knownLength);\n  });\n};\n\nFormData.prototype.submit = function(params, cb) {\n  var request\n    , options\n    , defaults = {method: 'post'}\n    ;\n\n  // parse provided url if it's string\n  // or treat it as options object\n  if (typeof params == 'string') {\n\n    params = parseUrl(params);\n    options = populate({\n      port: params.port,\n      path: params.pathname,\n      host: params.hostname,\n      protocol: params.protocol\n    }, defaults);\n\n  // use custom params\n  } else {\n\n    options = populate(params, defaults);\n    // if no port provided use default one\n    if (!options.port) {\n      options.port = options.protocol == 'https:' ? 443 : 80;\n    }\n  }\n\n  // put that good code in getHeaders to some use\n  options.headers = this.getHeaders(params.headers);\n\n  // https if specified, fallback to http in any other case\n  if (options.protocol == 'https:') {\n    request = https.request(options);\n  } else {\n    request = http.request(options);\n  }\n\n  // get content length and fire away\n  this.getLength(function(err, length) {\n    if (err && err !== 'Unknown stream') {\n      this._error(err);\n      return;\n    }\n\n    // add content length\n    if (length) {\n      request.setHeader('Content-Length', length);\n    }\n\n    this.pipe(request);\n    if (cb) {\n      var onResponse;\n\n      var callback = function (error, responce) {\n        request.removeListener('error', callback);\n        request.removeListener('response', onResponse);\n\n        return cb.call(this, error, responce);\n      };\n\n      onResponse = callback.bind(this, null);\n\n      request.on('error', callback);\n      request.on('response', onResponse);\n    }\n  }.bind(this));\n\n  return request;\n};\n\nFormData.prototype._error = function(err) {\n  if (!this.error) {\n    this.error = err;\n    this.pause();\n    this.emit('error', err);\n  }\n};\n\nFormData.prototype.toString = function () {\n  return '[object FormData]';\n};\n", "'use strict';\n\nvar parseUrl = require('url').parse;\n\nvar DEFAULT_PORTS = {\n  ftp: 21,\n  gopher: 70,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443,\n};\n\nvar stringEndsWith = String.prototype.endsWith || function(s) {\n  return s.length <= this.length &&\n    this.indexOf(s, this.length - s.length) !== -1;\n};\n\n/**\n * @param {string|object} url - The URL, or the result from url.parse.\n * @return {string} The URL of the proxy that should handle the request to the\n *  given URL. If no proxy is set, this will be an empty string.\n */\nfunction getProxyForUrl(url) {\n  var parsedUrl = typeof url === 'string' ? parseUrl(url) : url || {};\n  var proto = parsedUrl.protocol;\n  var hostname = parsedUrl.host;\n  var port = parsedUrl.port;\n  if (typeof hostname !== 'string' || !hostname || typeof proto !== 'string') {\n    return '';  // Don't proxy URLs without a valid scheme or host.\n  }\n\n  proto = proto.split(':', 1)[0];\n  // Stripping ports in this way instead of using parsedUrl.hostname to make\n  // sure that the brackets around IPv6 addresses are kept.\n  hostname = hostname.replace(/:\\d*$/, '');\n  port = parseInt(port) || DEFAULT_PORTS[proto] || 0;\n  if (!shouldProxy(hostname, port)) {\n    return '';  // Don't proxy URLs that match NO_PROXY.\n  }\n\n  var proxy =\n    getEnv('npm_config_' + proto + '_proxy') ||\n    getEnv(proto + '_proxy') ||\n    getEnv('npm_config_proxy') ||\n    getEnv('all_proxy');\n  if (proxy && proxy.indexOf('://') === -1) {\n    // Missing scheme in proxy, default to the requested URL's scheme.\n    proxy = proto + '://' + proxy;\n  }\n  return proxy;\n}\n\n/**\n * Determines whether a given URL should be proxied.\n *\n * @param {string} hostname - The host name of the URL.\n * @param {number} port - The effective port of the URL.\n * @returns {boolean} Whether the given URL should be proxied.\n * @private\n */\nfunction shouldProxy(hostname, port) {\n  var NO_PROXY =\n    (getEnv('npm_config_no_proxy') || getEnv('no_proxy')).toLowerCase();\n  if (!NO_PROXY) {\n    return true;  // Always proxy if NO_PROXY is not set.\n  }\n  if (NO_PROXY === '*') {\n    return false;  // Never proxy if wildcard is set.\n  }\n\n  return NO_PROXY.split(/[,\\s]/).every(function(proxy) {\n    if (!proxy) {\n      return true;  // Skip zero-length hosts.\n    }\n    var parsedProxy = proxy.match(/^(.+):(\\d+)$/);\n    var parsedProxyHostname = parsedProxy ? parsedProxy[1] : proxy;\n    var parsedProxyPort = parsedProxy ? parseInt(parsedProxy[2]) : 0;\n    if (parsedProxyPort && parsedProxyPort !== port) {\n      return true;  // Skip if ports don't match.\n    }\n\n    if (!/^[.*]/.test(parsedProxyHostname)) {\n      // No wildcards, so stop proxying if there is an exact match.\n      return hostname !== parsedProxyHostname;\n    }\n\n    if (parsedProxyHostname.charAt(0) === '*') {\n      // Remove leading wildcard.\n      parsedProxyHostname = parsedProxyHostname.slice(1);\n    }\n    // Stop proxying if the hostname ends with the no_proxy host.\n    return !stringEndsWith.call(hostname, parsedProxyHostname);\n  });\n}\n\n/**\n * Get the value for an environment variable.\n *\n * @param {string} key - The name of the environment variable.\n * @return {string} The value of the environment variable.\n * @private\n */\nfunction getEnv(key) {\n  return process.env[key.toLowerCase()] || process.env[key.toUpperCase()] || '';\n}\n\nexports.getProxyForUrl = getProxyForUrl;\n", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n", "'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n", "/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n", "/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n", "var debug;\n\nmodule.exports = function () {\n  if (!debug) {\n    try {\n      /* eslint global-require: off */\n      debug = require(\"debug\")(\"follow-redirects\");\n    }\n    catch (error) { /* */ }\n    if (typeof debug !== \"function\") {\n      debug = function () { /* */ };\n    }\n  }\n  debug.apply(null, arguments);\n};\n", "var url = require(\"url\");\nvar URL = url.URL;\nvar http = require(\"http\");\nvar https = require(\"https\");\nvar Writable = require(\"stream\").Writable;\nvar assert = require(\"assert\");\nvar debug = require(\"./debug\");\n\n// Preventive platform detection\n// istanbul ignore next\n(function detectUnsupportedEnvironment() {\n  var looksLikeNode = typeof process !== \"undefined\";\n  var looksLikeBrowser = typeof window !== \"undefined\" && typeof document !== \"undefined\";\n  var looksLikeV8 = isFunction(Error.captureStackTrace);\n  if (!looksLikeNode && (looksLikeBrowser || !looksLikeV8)) {\n    console.warn(\"The follow-redirects package should be excluded from browser builds.\");\n  }\n}());\n\n// Whether to use the native URL object or the legacy url module\nvar useNativeURL = false;\ntry {\n  assert(new URL(\"\"));\n}\ncatch (error) {\n  useNativeURL = error.code === \"ERR_INVALID_URL\";\n}\n\n// URL fields to preserve in copy operations\nvar preservedUrlFields = [\n  \"auth\",\n  \"host\",\n  \"hostname\",\n  \"href\",\n  \"path\",\n  \"pathname\",\n  \"port\",\n  \"protocol\",\n  \"query\",\n  \"search\",\n  \"hash\",\n];\n\n// Create handlers that pass events from native requests\nvar events = [\"abort\", \"aborted\", \"connect\", \"error\", \"socket\", \"timeout\"];\nvar eventHandlers = Object.create(null);\nevents.forEach(function (event) {\n  eventHandlers[event] = function (arg1, arg2, arg3) {\n    this._redirectable.emit(event, arg1, arg2, arg3);\n  };\n});\n\n// Error types with codes\nvar InvalidUrlError = createErrorType(\n  \"ERR_INVALID_URL\",\n  \"Invalid URL\",\n  TypeError\n);\nvar RedirectionError = createErrorType(\n  \"ERR_FR_REDIRECTION_FAILURE\",\n  \"Redirected request failed\"\n);\nvar TooManyRedirectsError = createErrorType(\n  \"ERR_FR_TOO_MANY_REDIRECTS\",\n  \"Maximum number of redirects exceeded\",\n  RedirectionError\n);\nvar MaxBodyLengthExceededError = createErrorType(\n  \"ERR_FR_MAX_BODY_LENGTH_EXCEEDED\",\n  \"Request body larger than maxBodyLength limit\"\n);\nvar WriteAfterEndError = createErrorType(\n  \"ERR_STREAM_WRITE_AFTER_END\",\n  \"write after end\"\n);\n\n// istanbul ignore next\nvar destroy = Writable.prototype.destroy || noop;\n\n// An HTTP(S) request that can be redirected\nfunction RedirectableRequest(options, responseCallback) {\n  // Initialize the request\n  Writable.call(this);\n  this._sanitizeOptions(options);\n  this._options = options;\n  this._ended = false;\n  this._ending = false;\n  this._redirectCount = 0;\n  this._redirects = [];\n  this._requestBodyLength = 0;\n  this._requestBodyBuffers = [];\n\n  // Attach a callback if passed\n  if (responseCallback) {\n    this.on(\"response\", responseCallback);\n  }\n\n  // React to responses of native requests\n  var self = this;\n  this._onNativeResponse = function (response) {\n    try {\n      self._processResponse(response);\n    }\n    catch (cause) {\n      self.emit(\"error\", cause instanceof RedirectionError ?\n        cause : new RedirectionError({ cause: cause }));\n    }\n  };\n\n  // Perform the first request\n  this._performRequest();\n}\nRedirectableRequest.prototype = Object.create(Writable.prototype);\n\nRedirectableRequest.prototype.abort = function () {\n  destroyRequest(this._currentRequest);\n  this._currentRequest.abort();\n  this.emit(\"abort\");\n};\n\nRedirectableRequest.prototype.destroy = function (error) {\n  destroyRequest(this._currentRequest, error);\n  destroy.call(this, error);\n  return this;\n};\n\n// Writes buffered data to the current native request\nRedirectableRequest.prototype.write = function (data, encoding, callback) {\n  // Writing is not allowed if end has been called\n  if (this._ending) {\n    throw new WriteAfterEndError();\n  }\n\n  // Validate input and shift parameters if necessary\n  if (!isString(data) && !isBuffer(data)) {\n    throw new TypeError(\"data should be a string, Buffer or Uint8Array\");\n  }\n  if (isFunction(encoding)) {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Ignore empty buffers, since writing them doesn't invoke the callback\n  // https://github.com/nodejs/node/issues/22066\n  if (data.length === 0) {\n    if (callback) {\n      callback();\n    }\n    return;\n  }\n  // Only write when we don't exceed the maximum body length\n  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {\n    this._requestBodyLength += data.length;\n    this._requestBodyBuffers.push({ data: data, encoding: encoding });\n    this._currentRequest.write(data, encoding, callback);\n  }\n  // Error when we exceed the maximum body length\n  else {\n    this.emit(\"error\", new MaxBodyLengthExceededError());\n    this.abort();\n  }\n};\n\n// Ends the current native request\nRedirectableRequest.prototype.end = function (data, encoding, callback) {\n  // Shift parameters if necessary\n  if (isFunction(data)) {\n    callback = data;\n    data = encoding = null;\n  }\n  else if (isFunction(encoding)) {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Write data if needed and end\n  if (!data) {\n    this._ended = this._ending = true;\n    this._currentRequest.end(null, null, callback);\n  }\n  else {\n    var self = this;\n    var currentRequest = this._currentRequest;\n    this.write(data, encoding, function () {\n      self._ended = true;\n      currentRequest.end(null, null, callback);\n    });\n    this._ending = true;\n  }\n};\n\n// Sets a header value on the current native request\nRedirectableRequest.prototype.setHeader = function (name, value) {\n  this._options.headers[name] = value;\n  this._currentRequest.setHeader(name, value);\n};\n\n// Clears a header value on the current native request\nRedirectableRequest.prototype.removeHeader = function (name) {\n  delete this._options.headers[name];\n  this._currentRequest.removeHeader(name);\n};\n\n// Global timeout for all underlying requests\nRedirectableRequest.prototype.setTimeout = function (msecs, callback) {\n  var self = this;\n\n  // Destroys the socket on timeout\n  function destroyOnTimeout(socket) {\n    socket.setTimeout(msecs);\n    socket.removeListener(\"timeout\", socket.destroy);\n    socket.addListener(\"timeout\", socket.destroy);\n  }\n\n  // Sets up a timer to trigger a timeout event\n  function startTimer(socket) {\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n    }\n    self._timeout = setTimeout(function () {\n      self.emit(\"timeout\");\n      clearTimer();\n    }, msecs);\n    destroyOnTimeout(socket);\n  }\n\n  // Stops a timeout from triggering\n  function clearTimer() {\n    // Clear the timeout\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n      self._timeout = null;\n    }\n\n    // Clean up all attached listeners\n    self.removeListener(\"abort\", clearTimer);\n    self.removeListener(\"error\", clearTimer);\n    self.removeListener(\"response\", clearTimer);\n    self.removeListener(\"close\", clearTimer);\n    if (callback) {\n      self.removeListener(\"timeout\", callback);\n    }\n    if (!self.socket) {\n      self._currentRequest.removeListener(\"socket\", startTimer);\n    }\n  }\n\n  // Attach callback if passed\n  if (callback) {\n    this.on(\"timeout\", callback);\n  }\n\n  // Start the timer if or when the socket is opened\n  if (this.socket) {\n    startTimer(this.socket);\n  }\n  else {\n    this._currentRequest.once(\"socket\", startTimer);\n  }\n\n  // Clean up on events\n  this.on(\"socket\", destroyOnTimeout);\n  this.on(\"abort\", clearTimer);\n  this.on(\"error\", clearTimer);\n  this.on(\"response\", clearTimer);\n  this.on(\"close\", clearTimer);\n\n  return this;\n};\n\n// Proxy all other public ClientRequest methods\n[\n  \"flushHeaders\", \"getHeader\",\n  \"setNoDelay\", \"setSocketKeepAlive\",\n].forEach(function (method) {\n  RedirectableRequest.prototype[method] = function (a, b) {\n    return this._currentRequest[method](a, b);\n  };\n});\n\n// Proxy all public ClientRequest properties\n[\"aborted\", \"connection\", \"socket\"].forEach(function (property) {\n  Object.defineProperty(RedirectableRequest.prototype, property, {\n    get: function () { return this._currentRequest[property]; },\n  });\n});\n\nRedirectableRequest.prototype._sanitizeOptions = function (options) {\n  // Ensure headers are always present\n  if (!options.headers) {\n    options.headers = {};\n  }\n\n  // Since http.request treats host as an alias of hostname,\n  // but the url module interprets host as hostname plus port,\n  // eliminate the host property to avoid confusion.\n  if (options.host) {\n    // Use hostname if set, because it has precedence\n    if (!options.hostname) {\n      options.hostname = options.host;\n    }\n    delete options.host;\n  }\n\n  // Complete the URL object when necessary\n  if (!options.pathname && options.path) {\n    var searchPos = options.path.indexOf(\"?\");\n    if (searchPos < 0) {\n      options.pathname = options.path;\n    }\n    else {\n      options.pathname = options.path.substring(0, searchPos);\n      options.search = options.path.substring(searchPos);\n    }\n  }\n};\n\n\n// Executes the next native request (initial or redirect)\nRedirectableRequest.prototype._performRequest = function () {\n  // Load the native protocol\n  var protocol = this._options.protocol;\n  var nativeProtocol = this._options.nativeProtocols[protocol];\n  if (!nativeProtocol) {\n    throw new TypeError(\"Unsupported protocol \" + protocol);\n  }\n\n  // If specified, use the agent corresponding to the protocol\n  // (HTTP and HTTPS use different types of agents)\n  if (this._options.agents) {\n    var scheme = protocol.slice(0, -1);\n    this._options.agent = this._options.agents[scheme];\n  }\n\n  // Create the native request and set up its event handlers\n  var request = this._currentRequest =\n        nativeProtocol.request(this._options, this._onNativeResponse);\n  request._redirectable = this;\n  for (var event of events) {\n    request.on(event, eventHandlers[event]);\n  }\n\n  // RFC7230\u00A75.3.1: When making a request directly to an origin server, [\u2026]\n  // a client MUST send only the absolute path [\u2026] as the request-target.\n  this._currentUrl = /^\\//.test(this._options.path) ?\n    url.format(this._options) :\n    // When making a request to a proxy, [\u2026]\n    // a client MUST send the target URI in absolute-form [\u2026].\n    this._options.path;\n\n  // End a redirected request\n  // (The first request must be ended explicitly with RedirectableRequest#end)\n  if (this._isRedirect) {\n    // Write the request entity and end\n    var i = 0;\n    var self = this;\n    var buffers = this._requestBodyBuffers;\n    (function writeNext(error) {\n      // Only write if this request has not been redirected yet\n      // istanbul ignore else\n      if (request === self._currentRequest) {\n        // Report any write errors\n        // istanbul ignore if\n        if (error) {\n          self.emit(\"error\", error);\n        }\n        // Write the next buffer if there are still left\n        else if (i < buffers.length) {\n          var buffer = buffers[i++];\n          // istanbul ignore else\n          if (!request.finished) {\n            request.write(buffer.data, buffer.encoding, writeNext);\n          }\n        }\n        // End the request if `end` has been called on us\n        else if (self._ended) {\n          request.end();\n        }\n      }\n    }());\n  }\n};\n\n// Processes a response from the current native request\nRedirectableRequest.prototype._processResponse = function (response) {\n  // Store the redirected response\n  var statusCode = response.statusCode;\n  if (this._options.trackRedirects) {\n    this._redirects.push({\n      url: this._currentUrl,\n      headers: response.headers,\n      statusCode: statusCode,\n    });\n  }\n\n  // RFC7231\u00A76.4: The 3xx (Redirection) class of status code indicates\n  // that further action needs to be taken by the user agent in order to\n  // fulfill the request. If a Location header field is provided,\n  // the user agent MAY automatically redirect its request to the URI\n  // referenced by the Location field value,\n  // even if the specific status code is not understood.\n\n  // If the response is not a redirect; return it as-is\n  var location = response.headers.location;\n  if (!location || this._options.followRedirects === false ||\n      statusCode < 300 || statusCode >= 400) {\n    response.responseUrl = this._currentUrl;\n    response.redirects = this._redirects;\n    this.emit(\"response\", response);\n\n    // Clean up\n    this._requestBodyBuffers = [];\n    return;\n  }\n\n  // The response is a redirect, so abort the current request\n  destroyRequest(this._currentRequest);\n  // Discard the remainder of the response to avoid waiting for data\n  response.destroy();\n\n  // RFC7231\u00A76.4: A client SHOULD detect and intervene\n  // in cyclical redirections (i.e., \"infinite\" redirection loops).\n  if (++this._redirectCount > this._options.maxRedirects) {\n    throw new TooManyRedirectsError();\n  }\n\n  // Store the request headers if applicable\n  var requestHeaders;\n  var beforeRedirect = this._options.beforeRedirect;\n  if (beforeRedirect) {\n    requestHeaders = Object.assign({\n      // The Host header was set by nativeProtocol.request\n      Host: response.req.getHeader(\"host\"),\n    }, this._options.headers);\n  }\n\n  // RFC7231\u00A76.4: Automatic redirection needs to done with\n  // care for methods not known to be safe, [\u2026]\n  // RFC7231\u00A76.4.2\u20133: For historical reasons, a user agent MAY change\n  // the request method from POST to GET for the subsequent request.\n  var method = this._options.method;\n  if ((statusCode === 301 || statusCode === 302) && this._options.method === \"POST\" ||\n      // RFC7231\u00A76.4.4: The 303 (See Other) status code indicates that\n      // the server is redirecting the user agent to a different resource [\u2026]\n      // A user agent can perform a retrieval request targeting that URI\n      // (a GET or HEAD request if using HTTP) [\u2026]\n      (statusCode === 303) && !/^(?:GET|HEAD)$/.test(this._options.method)) {\n    this._options.method = \"GET\";\n    // Drop a possible entity and headers related to it\n    this._requestBodyBuffers = [];\n    removeMatchingHeaders(/^content-/i, this._options.headers);\n  }\n\n  // Drop the Host header, as the redirect might lead to a different host\n  var currentHostHeader = removeMatchingHeaders(/^host$/i, this._options.headers);\n\n  // If the redirect is relative, carry over the host of the last request\n  var currentUrlParts = parseUrl(this._currentUrl);\n  var currentHost = currentHostHeader || currentUrlParts.host;\n  var currentUrl = /^\\w+:/.test(location) ? this._currentUrl :\n    url.format(Object.assign(currentUrlParts, { host: currentHost }));\n\n  // Create the redirected request\n  var redirectUrl = resolveUrl(location, currentUrl);\n  debug(\"redirecting to\", redirectUrl.href);\n  this._isRedirect = true;\n  spreadUrlObject(redirectUrl, this._options);\n\n  // Drop confidential headers when redirecting to a less secure protocol\n  // or to a different domain that is not a superdomain\n  if (redirectUrl.protocol !== currentUrlParts.protocol &&\n     redirectUrl.protocol !== \"https:\" ||\n     redirectUrl.host !== currentHost &&\n     !isSubdomain(redirectUrl.host, currentHost)) {\n    removeMatchingHeaders(/^(?:(?:proxy-)?authorization|cookie)$/i, this._options.headers);\n  }\n\n  // Evaluate the beforeRedirect callback\n  if (isFunction(beforeRedirect)) {\n    var responseDetails = {\n      headers: response.headers,\n      statusCode: statusCode,\n    };\n    var requestDetails = {\n      url: currentUrl,\n      method: method,\n      headers: requestHeaders,\n    };\n    beforeRedirect(this._options, responseDetails, requestDetails);\n    this._sanitizeOptions(this._options);\n  }\n\n  // Perform the redirected request\n  this._performRequest();\n};\n\n// Wraps the key/value object of protocols with redirect functionality\nfunction wrap(protocols) {\n  // Default settings\n  var exports = {\n    maxRedirects: 21,\n    maxBodyLength: 10 * 1024 * 1024,\n  };\n\n  // Wrap each protocol\n  var nativeProtocols = {};\n  Object.keys(protocols).forEach(function (scheme) {\n    var protocol = scheme + \":\";\n    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];\n    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);\n\n    // Executes a request, following redirects\n    function request(input, options, callback) {\n      // Parse parameters, ensuring that input is an object\n      if (isURL(input)) {\n        input = spreadUrlObject(input);\n      }\n      else if (isString(input)) {\n        input = spreadUrlObject(parseUrl(input));\n      }\n      else {\n        callback = options;\n        options = validateUrl(input);\n        input = { protocol: protocol };\n      }\n      if (isFunction(options)) {\n        callback = options;\n        options = null;\n      }\n\n      // Set defaults\n      options = Object.assign({\n        maxRedirects: exports.maxRedirects,\n        maxBodyLength: exports.maxBodyLength,\n      }, input, options);\n      options.nativeProtocols = nativeProtocols;\n      if (!isString(options.host) && !isString(options.hostname)) {\n        options.hostname = \"::1\";\n      }\n\n      assert.equal(options.protocol, protocol, \"protocol mismatch\");\n      debug(\"options\", options);\n      return new RedirectableRequest(options, callback);\n    }\n\n    // Executes a GET request, following redirects\n    function get(input, options, callback) {\n      var wrappedRequest = wrappedProtocol.request(input, options, callback);\n      wrappedRequest.end();\n      return wrappedRequest;\n    }\n\n    // Expose the properties on the wrapped protocol\n    Object.defineProperties(wrappedProtocol, {\n      request: { value: request, configurable: true, enumerable: true, writable: true },\n      get: { value: get, configurable: true, enumerable: true, writable: true },\n    });\n  });\n  return exports;\n}\n\nfunction noop() { /* empty */ }\n\nfunction parseUrl(input) {\n  var parsed;\n  // istanbul ignore else\n  if (useNativeURL) {\n    parsed = new URL(input);\n  }\n  else {\n    // Ensure the URL is valid and absolute\n    parsed = validateUrl(url.parse(input));\n    if (!isString(parsed.protocol)) {\n      throw new InvalidUrlError({ input });\n    }\n  }\n  return parsed;\n}\n\nfunction resolveUrl(relative, base) {\n  // istanbul ignore next\n  return useNativeURL ? new URL(relative, base) : parseUrl(url.resolve(base, relative));\n}\n\nfunction validateUrl(input) {\n  if (/^\\[/.test(input.hostname) && !/^\\[[:0-9a-f]+\\]$/i.test(input.hostname)) {\n    throw new InvalidUrlError({ input: input.href || input });\n  }\n  if (/^\\[/.test(input.host) && !/^\\[[:0-9a-f]+\\](:\\d+)?$/i.test(input.host)) {\n    throw new InvalidUrlError({ input: input.href || input });\n  }\n  return input;\n}\n\nfunction spreadUrlObject(urlObject, target) {\n  var spread = target || {};\n  for (var key of preservedUrlFields) {\n    spread[key] = urlObject[key];\n  }\n\n  // Fix IPv6 hostname\n  if (spread.hostname.startsWith(\"[\")) {\n    spread.hostname = spread.hostname.slice(1, -1);\n  }\n  // Ensure port is a number\n  if (spread.port !== \"\") {\n    spread.port = Number(spread.port);\n  }\n  // Concatenate path\n  spread.path = spread.search ? spread.pathname + spread.search : spread.pathname;\n\n  return spread;\n}\n\nfunction removeMatchingHeaders(regex, headers) {\n  var lastValue;\n  for (var header in headers) {\n    if (regex.test(header)) {\n      lastValue = headers[header];\n      delete headers[header];\n    }\n  }\n  return (lastValue === null || typeof lastValue === \"undefined\") ?\n    undefined : String(lastValue).trim();\n}\n\nfunction createErrorType(code, message, baseClass) {\n  // Create constructor\n  function CustomError(properties) {\n    // istanbul ignore else\n    if (isFunction(Error.captureStackTrace)) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n    Object.assign(this, properties || {});\n    this.code = code;\n    this.message = this.cause ? message + \": \" + this.cause.message : message;\n  }\n\n  // Attach constructor and set default properties\n  CustomError.prototype = new (baseClass || Error)();\n  Object.defineProperties(CustomError.prototype, {\n    constructor: {\n      value: CustomError,\n      enumerable: false,\n    },\n    name: {\n      value: \"Error [\" + code + \"]\",\n      enumerable: false,\n    },\n  });\n  return CustomError;\n}\n\nfunction destroyRequest(request, error) {\n  for (var event of events) {\n    request.removeListener(event, eventHandlers[event]);\n  }\n  request.on(\"error\", noop);\n  request.destroy(error);\n}\n\nfunction isSubdomain(subdomain, domain) {\n  assert(isString(subdomain) && isString(domain));\n  var dot = subdomain.length - domain.length - 1;\n  return dot > 0 && subdomain[dot] === \".\" && subdomain.endsWith(domain);\n}\n\nfunction isString(value) {\n  return typeof value === \"string\" || value instanceof String;\n}\n\nfunction isFunction(value) {\n  return typeof value === \"function\";\n}\n\nfunction isBuffer(value) {\n  return typeof value === \"object\" && (\"length\" in value);\n}\n\nfunction isURL(value) {\n  return URL && value instanceof URL;\n}\n\n// Exports\nmodule.exports = wrap({ http: http, https: https });\nmodule.exports.wrap = wrap;\n", "exports = module.exports = SemVer\n\nvar debug\n/* istanbul ignore next */\nif (typeof process === 'object' &&\n    process.env &&\n    process.env.NODE_DEBUG &&\n    /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\n  debug = function () {\n    var args = Array.prototype.slice.call(arguments, 0)\n    args.unshift('SEMVER')\n    console.log.apply(console, args)\n  }\n} else {\n  debug = function () {}\n}\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0'\n\nvar MAX_LENGTH = 256\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16\n\nvar MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\n// The actual regexps go on exports.re\nvar re = exports.re = []\nvar safeRe = exports.safeRe = []\nvar src = exports.src = []\nvar R = 0\n\nvar LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nvar safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nfunction makeSafeRe (value) {\n  for (var i = 0; i < safeRegexReplacements.length; i++) {\n    var token = safeRegexReplacements[i][0]\n    var max = safeRegexReplacements[i][1]\n    value = value\n      .split(token + '*').join(token + '{0,' + max + '}')\n      .split(token + '+').join(token + '{1,' + max + '}')\n  }\n  return value\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*'\nvar NUMERICIDENTIFIERLOOSE = R++\nsrc[NUMERICIDENTIFIERLOOSE] = '\\\\d+'\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-]' + LETTERDASHNUMBER + '*'\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')'\n\nvar MAINVERSIONLOOSE = R++\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')'\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')'\n\nvar PRERELEASEIDENTIFIERLOOSE = R++\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')'\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))'\n\nvar PRERELEASELOOSE = R++\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))'\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++\nsrc[BUILDIDENTIFIER] = LETTERDASHNUMBER + '+'\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))'\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?'\n\nsrc[FULL] = '^' + FULLPLAIN + '$'\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?'\n\nvar LOOSE = R++\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$'\n\nvar GTLT = R++\nsrc[GTLT] = '((?:<|>)?=?)'\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*'\nvar XRANGEIDENTIFIER = R++\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*'\n\nvar XRANGEPLAIN = R++\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?'\n\nvar XRANGEPLAINLOOSE = R++\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?'\n\nvar XRANGE = R++\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$'\nvar XRANGELOOSE = R++\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$'\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\nvar COERCE = R++\nsrc[COERCE] = '(?:^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])'\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++\nsrc[LONETILDE] = '(?:~>?)'\n\nvar TILDETRIM = R++\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+'\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g')\nsafeRe[TILDETRIM] = new RegExp(makeSafeRe(src[TILDETRIM]), 'g')\nvar tildeTrimReplace = '$1~'\n\nvar TILDE = R++\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$'\nvar TILDELOOSE = R++\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$'\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++\nsrc[LONECARET] = '(?:\\\\^)'\n\nvar CARETTRIM = R++\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+'\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g')\nsafeRe[CARETTRIM] = new RegExp(makeSafeRe(src[CARETTRIM]), 'g')\nvar caretTrimReplace = '$1^'\n\nvar CARET = R++\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$'\nvar CARETLOOSE = R++\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$'\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$'\nvar COMPARATOR = R++\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$'\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')'\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g')\nsafeRe[COMPARATORTRIM] = new RegExp(makeSafeRe(src[COMPARATORTRIM]), 'g')\nvar comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$'\n\nvar HYPHENRANGELOOSE = R++\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$'\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*'\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i])\n  if (!re[i]) {\n    re[i] = new RegExp(src[i])\n\n    // Replace all greedy whitespace to prevent regex dos issues. These regex are\n    // used internally via the safeRe object since all inputs in this library get\n    // normalized first to trim and collapse all extra whitespace. The original\n    // regexes are exported for userland consumption and lower level usage. A\n    // future breaking change could export the safer regex only with a note that\n    // all input should have extra whitespace removed.\n    safeRe[i] = new RegExp(makeSafeRe(src[i]))\n  }\n}\n\nexports.parse = parse\nfunction parse (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  var r = options.loose ? safeRe[LOOSE] : safeRe[FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nexports.valid = valid\nfunction valid (version, options) {\n  var v = parse(version, options)\n  return v ? v.version : null\n}\n\nexports.clean = clean\nfunction clean (version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\n\nexports.SemVer = SemVer\n\nfunction SemVer (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose) {\n      return version\n    } else {\n      version = version.version\n    }\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  if (version.length > MAX_LENGTH) {\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n  }\n\n  if (!(this instanceof SemVer)) {\n    return new SemVer(version, options)\n  }\n\n  debug('SemVer', version, options)\n  this.options = options\n  this.loose = !!options.loose\n\n  var m = version.trim().match(options.loose ? safeRe[LOOSE] : safeRe[FULL])\n\n  if (!m) {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  this.raw = version\n\n  // these are actually numbers\n  this.major = +m[1]\n  this.minor = +m[2]\n  this.patch = +m[3]\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n    throw new TypeError('Invalid major version')\n  }\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n    throw new TypeError('Invalid minor version')\n  }\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n    throw new TypeError('Invalid patch version')\n  }\n\n  // numberify any prerelease numeric ids\n  if (!m[4]) {\n    this.prerelease = []\n  } else {\n    this.prerelease = m[4].split('.').map(function (id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\n          return num\n        }\n      }\n      return id\n    })\n  }\n\n  this.build = m[5] ? m[5].split('.') : []\n  this.format()\n}\n\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch\n  if (this.prerelease.length) {\n    this.version += '-' + this.prerelease.join('.')\n  }\n  return this.version\n}\n\nSemVer.prototype.toString = function () {\n  return this.version\n}\n\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.options, other)\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return this.compareMain(other) || this.comparePre(other)\n}\n\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch)\n}\n\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length) {\n    return -1\n  } else if (!this.prerelease.length && other.prerelease.length) {\n    return 1\n  } else if (!this.prerelease.length && !other.prerelease.length) {\n    return 0\n  }\n\n  var i = 0\n  do {\n    var a = this.prerelease[i]\n    var b = other.prerelease[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor = 0\n      this.major++\n      this.inc('pre', identifier)\n      break\n    case 'preminor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor++\n      this.inc('pre', identifier)\n      break\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0\n      this.inc('patch', identifier)\n      this.inc('pre', identifier)\n      break\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0) {\n        this.inc('patch', identifier)\n      }\n      this.inc('pre', identifier)\n      break\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0) {\n        this.major++\n      }\n      this.minor = 0\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) {\n        this.minor++\n      }\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) {\n        this.patch++\n      }\n      this.prerelease = []\n      break\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0) {\n        this.prerelease = [0]\n      } else {\n        var i = this.prerelease.length\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++\n            i = -2\n          }\n        }\n        if (i === -1) {\n          // didn't increment anything\n          this.prerelease.push(0)\n        }\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) {\n            this.prerelease = [identifier, 0]\n          }\n        } else {\n          this.prerelease = [identifier, 0]\n        }\n      }\n      break\n\n    default:\n      throw new Error('invalid increment argument: ' + release)\n  }\n  this.format()\n  this.raw = this.version\n  return this\n}\n\nexports.inc = inc\nfunction inc (version, release, loose, identifier) {\n  if (typeof (loose) === 'string') {\n    identifier = loose\n    loose = undefined\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\n\nexports.diff = diff\nfunction diff (version1, version2) {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    var v1 = parse(version1)\n    var v2 = parse(version2)\n    var prefix = ''\n    if (v1.prerelease.length || v2.prerelease.length) {\n      prefix = 'pre'\n      var defaultResult = 'prerelease'\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers\n\nvar numeric = /^[0-9]+$/\nfunction compareIdentifiers (a, b) {\n  var anum = numeric.test(a)\n  var bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers\nfunction rcompareIdentifiers (a, b) {\n  return compareIdentifiers(b, a)\n}\n\nexports.major = major\nfunction major (a, loose) {\n  return new SemVer(a, loose).major\n}\n\nexports.minor = minor\nfunction minor (a, loose) {\n  return new SemVer(a, loose).minor\n}\n\nexports.patch = patch\nfunction patch (a, loose) {\n  return new SemVer(a, loose).patch\n}\n\nexports.compare = compare\nfunction compare (a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose))\n}\n\nexports.compareLoose = compareLoose\nfunction compareLoose (a, b) {\n  return compare(a, b, true)\n}\n\nexports.rcompare = rcompare\nfunction rcompare (a, b, loose) {\n  return compare(b, a, loose)\n}\n\nexports.sort = sort\nfunction sort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compare(a, b, loose)\n  })\n}\n\nexports.rsort = rsort\nfunction rsort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.rcompare(a, b, loose)\n  })\n}\n\nexports.gt = gt\nfunction gt (a, b, loose) {\n  return compare(a, b, loose) > 0\n}\n\nexports.lt = lt\nfunction lt (a, b, loose) {\n  return compare(a, b, loose) < 0\n}\n\nexports.eq = eq\nfunction eq (a, b, loose) {\n  return compare(a, b, loose) === 0\n}\n\nexports.neq = neq\nfunction neq (a, b, loose) {\n  return compare(a, b, loose) !== 0\n}\n\nexports.gte = gte\nfunction gte (a, b, loose) {\n  return compare(a, b, loose) >= 0\n}\n\nexports.lte = lte\nfunction lte (a, b, loose) {\n  return compare(a, b, loose) <= 0\n}\n\nexports.cmp = cmp\nfunction cmp (a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError('Invalid operator: ' + op)\n  }\n}\n\nexports.Comparator = Comparator\nfunction Comparator (comp, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose) {\n      return comp\n    } else {\n      comp = comp.value\n    }\n  }\n\n  if (!(this instanceof Comparator)) {\n    return new Comparator(comp, options)\n  }\n\n  comp = comp.trim().split(/\\s+/).join(' ')\n  debug('comparator', comp, options)\n  this.options = options\n  this.loose = !!options.loose\n  this.parse(comp)\n\n  if (this.semver === ANY) {\n    this.value = ''\n  } else {\n    this.value = this.operator + this.semver.version\n  }\n\n  debug('comp', this)\n}\n\nvar ANY = {}\nComparator.prototype.parse = function (comp) {\n  var r = this.options.loose ? safeRe[COMPARATORLOOSE] : safeRe[COMPARATOR]\n  var m = comp.match(r)\n\n  if (!m) {\n    throw new TypeError('Invalid comparator: ' + comp)\n  }\n\n  this.operator = m[1]\n  if (this.operator === '=') {\n    this.operator = ''\n  }\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2]) {\n    this.semver = ANY\n  } else {\n    this.semver = new SemVer(m[2], this.options.loose)\n  }\n}\n\nComparator.prototype.toString = function () {\n  return this.value\n}\n\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.options.loose)\n\n  if (this.semver === ANY) {\n    return true\n  }\n\n  if (typeof version === 'string') {\n    version = new SemVer(version, this.options)\n  }\n\n  return cmp(version, this.operator, this.semver, this.options)\n}\n\nComparator.prototype.intersects = function (comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required')\n  }\n\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  var rangeTmp\n\n  if (this.operator === '') {\n    rangeTmp = new Range(comp.value, options)\n    return satisfies(this.value, rangeTmp, options)\n  } else if (comp.operator === '') {\n    rangeTmp = new Range(this.value, options)\n    return satisfies(comp.semver, rangeTmp, options)\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>')\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<')\n  var sameSemVer = this.semver.version === comp.semver.version\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=')\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, options) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'))\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, options) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'))\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan\n}\n\nexports.Range = Range\nfunction Range (range, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease) {\n      return range\n    } else {\n      return new Range(range.raw, options)\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options)\n  }\n\n  if (!(this instanceof Range)) {\n    return new Range(range, options)\n  }\n\n  this.options = options\n  this.loose = !!options.loose\n  this.includePrerelease = !!options.includePrerelease\n\n  // First reduce all whitespace as much as possible so we do not have to rely\n  // on potentially slow regexes like \\s*. This is then stored and used for\n  // future error messages as well.\n  this.raw = range\n    .trim()\n    .split(/\\s+/)\n    .join(' ')\n\n  // First, split based on boolean or ||\n  this.set = this.raw.split('||').map(function (range) {\n    return this.parseRange(range.trim())\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length\n  })\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + this.raw)\n  }\n\n  this.format()\n}\n\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim()\n  }).join('||').trim()\n  return this.range\n}\n\nRange.prototype.toString = function () {\n  return this.range\n}\n\nRange.prototype.parseRange = function (range) {\n  var loose = this.options.loose\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? safeRe[HYPHENRANGELOOSE] : safeRe[HYPHENRANGE]\n  range = range.replace(hr, hyphenReplace)\n  debug('hyphen replace', range)\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(safeRe[COMPARATORTRIM], comparatorTrimReplace)\n  debug('comparator trim', range, safeRe[COMPARATORTRIM])\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(safeRe[TILDETRIM], tildeTrimReplace)\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(safeRe[CARETTRIM], caretTrimReplace)\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n  var compRe = loose ? safeRe[COMPARATORLOOSE] : safeRe[COMPARATOR]\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, this.options)\n  }, this).join(' ').split(/\\s+/)\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe)\n    })\n  }\n  set = set.map(function (comp) {\n    return new Comparator(comp, this.options)\n  }, this)\n\n  return set\n}\n\nRange.prototype.intersects = function (range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required')\n  }\n\n  return this.set.some(function (thisComparators) {\n    return thisComparators.every(function (thisComparator) {\n      return range.set.some(function (rangeComparators) {\n        return rangeComparators.every(function (rangeComparator) {\n          return thisComparator.intersects(rangeComparator, options)\n        })\n      })\n    })\n  })\n}\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators\nfunction toComparators (range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value\n    }).join(' ').trim().split(' ')\n  })\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator (comp, options) {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nfunction isX (id) {\n  return !id || id.toLowerCase() === 'x' || id === '*'\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options)\n  }).join(' ')\n}\n\nfunction replaceTilde (comp, options) {\n  var r = options.loose ? safeRe[TILDELOOSE] : safeRe[TILDE]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options)\n  }).join(' ')\n}\n\nfunction replaceCaret (comp, options) {\n  debug('caret', comp, options)\n  var r = options.loose ? safeRe[CARETLOOSE] : safeRe[CARET]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n      } else {\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nfunction replaceXRanges (comp, options) {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nfunction replaceXRange (comp, options) {\n  comp = comp.trim()\n  var r = options.loose ? safeRe[XRANGELOOSE] : safeRe[XRANGE]\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    var xM = isX(M)\n    var xm = xM || isX(m)\n    var xp = xm || isX(p)\n    var anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars (comp, options) {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(safeRe[STAR], '')\n}\n\n// This function is passed to string.replace(safeRe[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = '>=' + fM + '.0.0'\n  } else if (isX(fp)) {\n    from = '>=' + fM + '.' + fm + '.0'\n  } else {\n    from = '>=' + from\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = '<' + (+tM + 1) + '.0.0'\n  } else if (isX(tp)) {\n    to = '<' + tM + '.' + (+tm + 1) + '.0'\n  } else if (tpr) {\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr\n  } else {\n    to = '<=' + to\n  }\n\n  return (from + ' ' + to).trim()\n}\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function (version) {\n  if (!version) {\n    return false\n  }\n\n  if (typeof version === 'string') {\n    version = new SemVer(version, this.options)\n  }\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options)) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction testSet (set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n\nexports.satisfies = satisfies\nfunction satisfies (version, range, options) {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\n\nexports.maxSatisfying = maxSatisfying\nfunction maxSatisfying (versions, range, options) {\n  var max = null\n  var maxSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\n\nexports.minSatisfying = minSatisfying\nfunction minSatisfying (versions, range, options) {\n  var min = null\n  var minSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\n\nexports.minVersion = minVersion\nfunction minVersion (range, loose) {\n  range = new Range(range, loose)\n\n  var minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    comparators.forEach(function (comparator) {\n      // Clone to avoid manipulating the comparator's semver object.\n      var compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error('Unexpected operation: ' + comparator.operator)\n      }\n    })\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\n\nexports.validRange = validRange\nfunction validRange (range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr\nfunction ltr (version, range, options) {\n  return outside(version, range, '<', options)\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr\nfunction gtr (version, range, options) {\n  return outside(version, range, '>', options)\n}\n\nexports.outside = outside\nfunction outside (version, range, hilo, options) {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  var gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    var high = null\n    var low = null\n\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nexports.prerelease = prerelease\nfunction prerelease (version, options) {\n  var parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\n\nexports.intersects = intersects\nfunction intersects (r1, r2, options) {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce\nfunction coerce (version) {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  var match = version.match(safeRe[COERCE])\n\n  if (match == null) {\n    return null\n  }\n\n  return parse(match[1] +\n    '.' + (match[2] || '0') +\n    '.' + (match[3] || '0'))\n}\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return typeof value === 'number' || value instanceof Number;\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return value instanceof Error;\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return typeof value === 'function';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst is = require(\"./is\");\r\n/**\r\n * Predefined error codes.\r\n */\r\nvar ErrorCodes;\r\n(function (ErrorCodes) {\r\n    // Defined by JSON RPC\r\n    ErrorCodes.ParseError = -32700;\r\n    ErrorCodes.InvalidRequest = -32600;\r\n    ErrorCodes.MethodNotFound = -32601;\r\n    ErrorCodes.InvalidParams = -32602;\r\n    ErrorCodes.InternalError = -32603;\r\n    ErrorCodes.serverErrorStart = -32099;\r\n    ErrorCodes.serverErrorEnd = -32000;\r\n    ErrorCodes.ServerNotInitialized = -32002;\r\n    ErrorCodes.UnknownErrorCode = -32001;\r\n    // Defined by the protocol.\r\n    ErrorCodes.RequestCancelled = -32800;\r\n    // Defined by VSCode library.\r\n    ErrorCodes.MessageWriteError = 1;\r\n    ErrorCodes.MessageReadError = 2;\r\n})(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));\r\n/**\r\n * An error object return in a response in case a request\r\n * has failed.\r\n */\r\nclass ResponseError extends Error {\r\n    constructor(code, message, data) {\r\n        super(message);\r\n        this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;\r\n        this.data = data;\r\n        Object.setPrototypeOf(this, ResponseError.prototype);\r\n    }\r\n    toJson() {\r\n        return {\r\n            code: this.code,\r\n            message: this.message,\r\n            data: this.data,\r\n        };\r\n    }\r\n}\r\nexports.ResponseError = ResponseError;\r\n/**\r\n * An abstract implementation of a MessageType.\r\n */\r\nclass AbstractMessageType {\r\n    constructor(_method, _numberOfParams) {\r\n        this._method = _method;\r\n        this._numberOfParams = _numberOfParams;\r\n    }\r\n    get method() {\r\n        return this._method;\r\n    }\r\n    get numberOfParams() {\r\n        return this._numberOfParams;\r\n    }\r\n}\r\nexports.AbstractMessageType = AbstractMessageType;\r\n/**\r\n * Classes to type request response pairs\r\n */\r\nclass RequestType0 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 0);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType0 = RequestType0;\r\nclass RequestType extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType = RequestType;\r\nclass RequestType1 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType1 = RequestType1;\r\nclass RequestType2 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 2);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType2 = RequestType2;\r\nclass RequestType3 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 3);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType3 = RequestType3;\r\nclass RequestType4 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 4);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType4 = RequestType4;\r\nclass RequestType5 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 5);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType5 = RequestType5;\r\nclass RequestType6 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 6);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType6 = RequestType6;\r\nclass RequestType7 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 7);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType7 = RequestType7;\r\nclass RequestType8 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 8);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType8 = RequestType8;\r\nclass RequestType9 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 9);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType9 = RequestType9;\r\nclass NotificationType extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType = NotificationType;\r\nclass NotificationType0 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 0);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType0 = NotificationType0;\r\nclass NotificationType1 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType1 = NotificationType1;\r\nclass NotificationType2 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 2);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType2 = NotificationType2;\r\nclass NotificationType3 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 3);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType3 = NotificationType3;\r\nclass NotificationType4 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 4);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType4 = NotificationType4;\r\nclass NotificationType5 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 5);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType5 = NotificationType5;\r\nclass NotificationType6 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 6);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType6 = NotificationType6;\r\nclass NotificationType7 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 7);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType7 = NotificationType7;\r\nclass NotificationType8 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 8);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType8 = NotificationType8;\r\nclass NotificationType9 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 9);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType9 = NotificationType9;\r\n/**\r\n * Tests if the given message is a request message\r\n */\r\nfunction isRequestMessage(message) {\r\n    let candidate = message;\r\n    return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));\r\n}\r\nexports.isRequestMessage = isRequestMessage;\r\n/**\r\n * Tests if the given message is a notification message\r\n */\r\nfunction isNotificationMessage(message) {\r\n    let candidate = message;\r\n    return candidate && is.string(candidate.method) && message.id === void 0;\r\n}\r\nexports.isNotificationMessage = isNotificationMessage;\r\n/**\r\n * Tests if the given message is a response message\r\n */\r\nfunction isResponseMessage(message) {\r\n    let candidate = message;\r\n    return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);\r\n}\r\nexports.isResponseMessage = isResponseMessage;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Disposable;\r\n(function (Disposable) {\r\n    function create(func) {\r\n        return {\r\n            dispose: func\r\n        };\r\n    }\r\n    Disposable.create = create;\r\n})(Disposable = exports.Disposable || (exports.Disposable = {}));\r\nvar Event;\r\n(function (Event) {\r\n    const _disposable = { dispose() { } };\r\n    Event.None = function () { return _disposable; };\r\n})(Event = exports.Event || (exports.Event = {}));\r\nclass CallbackList {\r\n    add(callback, context = null, bucket) {\r\n        if (!this._callbacks) {\r\n            this._callbacks = [];\r\n            this._contexts = [];\r\n        }\r\n        this._callbacks.push(callback);\r\n        this._contexts.push(context);\r\n        if (Array.isArray(bucket)) {\r\n            bucket.push({ dispose: () => this.remove(callback, context) });\r\n        }\r\n    }\r\n    remove(callback, context = null) {\r\n        if (!this._callbacks) {\r\n            return;\r\n        }\r\n        var foundCallbackWithDifferentContext = false;\r\n        for (var i = 0, len = this._callbacks.length; i < len; i++) {\r\n            if (this._callbacks[i] === callback) {\r\n                if (this._contexts[i] === context) {\r\n                    // callback & context match => remove it\r\n                    this._callbacks.splice(i, 1);\r\n                    this._contexts.splice(i, 1);\r\n                    return;\r\n                }\r\n                else {\r\n                    foundCallbackWithDifferentContext = true;\r\n                }\r\n            }\r\n        }\r\n        if (foundCallbackWithDifferentContext) {\r\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\r\n        }\r\n    }\r\n    invoke(...args) {\r\n        if (!this._callbacks) {\r\n            return [];\r\n        }\r\n        var ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\r\n        for (var i = 0, len = callbacks.length; i < len; i++) {\r\n            try {\r\n                ret.push(callbacks[i].apply(contexts[i], args));\r\n            }\r\n            catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    isEmpty() {\r\n        return !this._callbacks || this._callbacks.length === 0;\r\n    }\r\n    dispose() {\r\n        this._callbacks = undefined;\r\n        this._contexts = undefined;\r\n    }\r\n}\r\nclass Emitter {\r\n    constructor(_options) {\r\n        this._options = _options;\r\n    }\r\n    /**\r\n     * For the public to allow to subscribe\r\n     * to events from this Emitter\r\n     */\r\n    get event() {\r\n        if (!this._event) {\r\n            this._event = (listener, thisArgs, disposables) => {\r\n                if (!this._callbacks) {\r\n                    this._callbacks = new CallbackList();\r\n                }\r\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\r\n                    this._options.onFirstListenerAdd(this);\r\n                }\r\n                this._callbacks.add(listener, thisArgs);\r\n                let result;\r\n                result = {\r\n                    dispose: () => {\r\n                        this._callbacks.remove(listener, thisArgs);\r\n                        result.dispose = Emitter._noop;\r\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\r\n                            this._options.onLastListenerRemove(this);\r\n                        }\r\n                    }\r\n                };\r\n                if (Array.isArray(disposables)) {\r\n                    disposables.push(result);\r\n                }\r\n                return result;\r\n            };\r\n        }\r\n        return this._event;\r\n    }\r\n    /**\r\n     * To be kept private to fire an event to\r\n     * subscribers\r\n     */\r\n    fire(event) {\r\n        if (this._callbacks) {\r\n            this._callbacks.invoke.call(this._callbacks, event);\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this._callbacks) {\r\n            this._callbacks.dispose();\r\n            this._callbacks = undefined;\r\n        }\r\n    }\r\n}\r\nEmitter._noop = function () { };\r\nexports.Emitter = Emitter;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nlet DefaultSize = 8192;\r\nlet CR = Buffer.from('\\r', 'ascii')[0];\r\nlet LF = Buffer.from('\\n', 'ascii')[0];\r\nlet CRLF = '\\r\\n';\r\nclass MessageBuffer {\r\n    constructor(encoding = 'utf8') {\r\n        this.encoding = encoding;\r\n        this.index = 0;\r\n        this.buffer = Buffer.allocUnsafe(DefaultSize);\r\n    }\r\n    append(chunk) {\r\n        var toAppend = chunk;\r\n        if (typeof (chunk) === 'string') {\r\n            var str = chunk;\r\n            var bufferLen = Buffer.byteLength(str, this.encoding);\r\n            toAppend = Buffer.allocUnsafe(bufferLen);\r\n            toAppend.write(str, 0, bufferLen, this.encoding);\r\n        }\r\n        if (this.buffer.length - this.index >= toAppend.length) {\r\n            toAppend.copy(this.buffer, this.index, 0, toAppend.length);\r\n        }\r\n        else {\r\n            var newSize = (Math.ceil((this.index + toAppend.length) / DefaultSize) + 1) * DefaultSize;\r\n            if (this.index === 0) {\r\n                this.buffer = Buffer.allocUnsafe(newSize);\r\n                toAppend.copy(this.buffer, 0, 0, toAppend.length);\r\n            }\r\n            else {\r\n                this.buffer = Buffer.concat([this.buffer.slice(0, this.index), toAppend], newSize);\r\n            }\r\n        }\r\n        this.index += toAppend.length;\r\n    }\r\n    tryReadHeaders() {\r\n        let result = undefined;\r\n        let current = 0;\r\n        while (current + 3 < this.index && (this.buffer[current] !== CR || this.buffer[current + 1] !== LF || this.buffer[current + 2] !== CR || this.buffer[current + 3] !== LF)) {\r\n            current++;\r\n        }\r\n        // No header / body separator found (e.g CRLFCRLF)\r\n        if (current + 3 >= this.index) {\r\n            return result;\r\n        }\r\n        result = Object.create(null);\r\n        let headers = this.buffer.toString('ascii', 0, current).split(CRLF);\r\n        headers.forEach((header) => {\r\n            let index = header.indexOf(':');\r\n            if (index === -1) {\r\n                throw new Error('Message header must separate key and value using :');\r\n            }\r\n            let key = header.substr(0, index);\r\n            let value = header.substr(index + 1).trim();\r\n            result[key] = value;\r\n        });\r\n        let nextStart = current + 4;\r\n        this.buffer = this.buffer.slice(nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    }\r\n    tryReadContent(length) {\r\n        if (this.index < length) {\r\n            return null;\r\n        }\r\n        let result = this.buffer.toString(this.encoding, 0, length);\r\n        let nextStart = length;\r\n        this.buffer.copy(this.buffer, 0, nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    }\r\n    get numberOfBytes() {\r\n        return this.index;\r\n    }\r\n}\r\nvar MessageReader;\r\n(function (MessageReader) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);\r\n    }\r\n    MessageReader.is = is;\r\n})(MessageReader = exports.MessageReader || (exports.MessageReader = {}));\r\nclass AbstractMessageReader {\r\n    constructor() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n        this.partialMessageEmitter = new events_1.Emitter();\r\n    }\r\n    dispose() {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    }\r\n    get onError() {\r\n        return this.errorEmitter.event;\r\n    }\r\n    fireError(error) {\r\n        this.errorEmitter.fire(this.asError(error));\r\n    }\r\n    get onClose() {\r\n        return this.closeEmitter.event;\r\n    }\r\n    fireClose() {\r\n        this.closeEmitter.fire(undefined);\r\n    }\r\n    get onPartialMessage() {\r\n        return this.partialMessageEmitter.event;\r\n    }\r\n    firePartialMessage(info) {\r\n        this.partialMessageEmitter.fire(info);\r\n    }\r\n    asError(error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(`Reader recevied error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\r\n        }\r\n    }\r\n}\r\nexports.AbstractMessageReader = AbstractMessageReader;\r\nclass StreamMessageReader extends AbstractMessageReader {\r\n    constructor(readable, encoding = 'utf8') {\r\n        super();\r\n        this.readable = readable;\r\n        this.buffer = new MessageBuffer(encoding);\r\n        this._partialMessageTimeout = 10000;\r\n    }\r\n    set partialMessageTimeout(timeout) {\r\n        this._partialMessageTimeout = timeout;\r\n    }\r\n    get partialMessageTimeout() {\r\n        return this._partialMessageTimeout;\r\n    }\r\n    listen(callback) {\r\n        this.nextMessageLength = -1;\r\n        this.messageToken = 0;\r\n        this.partialMessageTimer = undefined;\r\n        this.callback = callback;\r\n        this.readable.on('data', (data) => {\r\n            this.onData(data);\r\n        });\r\n        this.readable.on('error', (error) => this.fireError(error));\r\n        this.readable.on('close', () => this.fireClose());\r\n    }\r\n    onData(data) {\r\n        this.buffer.append(data);\r\n        while (true) {\r\n            if (this.nextMessageLength === -1) {\r\n                let headers = this.buffer.tryReadHeaders();\r\n                if (!headers) {\r\n                    return;\r\n                }\r\n                let contentLength = headers['Content-Length'];\r\n                if (!contentLength) {\r\n                    throw new Error('Header must provide a Content-Length property.');\r\n                }\r\n                let length = parseInt(contentLength);\r\n                if (isNaN(length)) {\r\n                    throw new Error('Content-Length value must be a number.');\r\n                }\r\n                this.nextMessageLength = length;\r\n                // Take the encoding form the header. For compatibility\r\n                // treat both utf-8 and utf8 as node utf8\r\n            }\r\n            var msg = this.buffer.tryReadContent(this.nextMessageLength);\r\n            if (msg === null) {\r\n                /** We haven't recevied the full message yet. */\r\n                this.setPartialMessageTimer();\r\n                return;\r\n            }\r\n            this.clearPartialMessageTimer();\r\n            this.nextMessageLength = -1;\r\n            this.messageToken++;\r\n            var json = JSON.parse(msg);\r\n            this.callback(json);\r\n        }\r\n    }\r\n    clearPartialMessageTimer() {\r\n        if (this.partialMessageTimer) {\r\n            clearTimeout(this.partialMessageTimer);\r\n            this.partialMessageTimer = undefined;\r\n        }\r\n    }\r\n    setPartialMessageTimer() {\r\n        this.clearPartialMessageTimer();\r\n        if (this._partialMessageTimeout <= 0) {\r\n            return;\r\n        }\r\n        this.partialMessageTimer = setTimeout((token, timeout) => {\r\n            this.partialMessageTimer = undefined;\r\n            if (token === this.messageToken) {\r\n                this.firePartialMessage({ messageToken: token, waitingTime: timeout });\r\n                this.setPartialMessageTimer();\r\n            }\r\n        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);\r\n    }\r\n}\r\nexports.StreamMessageReader = StreamMessageReader;\r\nclass IPCMessageReader extends AbstractMessageReader {\r\n    constructor(process) {\r\n        super();\r\n        this.process = process;\r\n        let eventEmitter = this.process;\r\n        eventEmitter.on('error', (error) => this.fireError(error));\r\n        eventEmitter.on('close', () => this.fireClose());\r\n    }\r\n    listen(callback) {\r\n        this.process.on('message', callback);\r\n    }\r\n}\r\nexports.IPCMessageReader = IPCMessageReader;\r\nclass SocketMessageReader extends StreamMessageReader {\r\n    constructor(socket, encoding = 'utf-8') {\r\n        super(socket, encoding);\r\n    }\r\n}\r\nexports.SocketMessageReader = SocketMessageReader;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nlet ContentLength = 'Content-Length: ';\r\nlet CRLF = '\\r\\n';\r\nvar MessageWriter;\r\n(function (MessageWriter) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.write);\r\n    }\r\n    MessageWriter.is = is;\r\n})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));\r\nclass AbstractMessageWriter {\r\n    constructor() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n    }\r\n    dispose() {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    }\r\n    get onError() {\r\n        return this.errorEmitter.event;\r\n    }\r\n    fireError(error, message, count) {\r\n        this.errorEmitter.fire([this.asError(error), message, count]);\r\n    }\r\n    get onClose() {\r\n        return this.closeEmitter.event;\r\n    }\r\n    fireClose() {\r\n        this.closeEmitter.fire(undefined);\r\n    }\r\n    asError(error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(`Writer recevied error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\r\n        }\r\n    }\r\n}\r\nexports.AbstractMessageWriter = AbstractMessageWriter;\r\nclass StreamMessageWriter extends AbstractMessageWriter {\r\n    constructor(writable, encoding = 'utf8') {\r\n        super();\r\n        this.writable = writable;\r\n        this.encoding = encoding;\r\n        this.errorCount = 0;\r\n        this.writable.on('error', (error) => this.fireError(error));\r\n        this.writable.on('close', () => this.fireClose());\r\n    }\r\n    write(msg) {\r\n        let json = JSON.stringify(msg);\r\n        let contentLength = Buffer.byteLength(json, this.encoding);\r\n        let headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.writable.write(headers.join(''), 'ascii');\r\n            // Now write the content. This can be written in any encoding\r\n            this.writable.write(json, this.encoding);\r\n            this.errorCount = 0;\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    }\r\n}\r\nexports.StreamMessageWriter = StreamMessageWriter;\r\nclass IPCMessageWriter extends AbstractMessageWriter {\r\n    constructor(process) {\r\n        super();\r\n        this.process = process;\r\n        this.errorCount = 0;\r\n        this.queue = [];\r\n        this.sending = false;\r\n        let eventEmitter = this.process;\r\n        eventEmitter.on('error', (error) => this.fireError(error));\r\n        eventEmitter.on('close', () => this.fireClose);\r\n    }\r\n    write(msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    }\r\n    doWriteMessage(msg) {\r\n        try {\r\n            if (this.process.send) {\r\n                this.sending = true;\r\n                this.process.send(msg, undefined, undefined, (error) => {\r\n                    this.sending = false;\r\n                    if (error) {\r\n                        this.errorCount++;\r\n                        this.fireError(error, msg, this.errorCount);\r\n                    }\r\n                    else {\r\n                        this.errorCount = 0;\r\n                    }\r\n                    if (this.queue.length > 0) {\r\n                        this.doWriteMessage(this.queue.shift());\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    }\r\n}\r\nexports.IPCMessageWriter = IPCMessageWriter;\r\nclass SocketMessageWriter extends AbstractMessageWriter {\r\n    constructor(socket, encoding = 'utf8') {\r\n        super();\r\n        this.socket = socket;\r\n        this.queue = [];\r\n        this.sending = false;\r\n        this.encoding = encoding;\r\n        this.errorCount = 0;\r\n        this.socket.on('error', (error) => this.fireError(error));\r\n        this.socket.on('close', () => this.fireClose());\r\n    }\r\n    write(msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    }\r\n    doWriteMessage(msg) {\r\n        let json = JSON.stringify(msg);\r\n        let contentLength = Buffer.byteLength(json, this.encoding);\r\n        let headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.sending = true;\r\n            this.socket.write(headers.join(''), 'ascii', (error) => {\r\n                if (error) {\r\n                    this.handleError(error, msg);\r\n                }\r\n                try {\r\n                    // Now write the content. This can be written in any encoding\r\n                    this.socket.write(json, this.encoding, (error) => {\r\n                        this.sending = false;\r\n                        if (error) {\r\n                            this.handleError(error, msg);\r\n                        }\r\n                        else {\r\n                            this.errorCount = 0;\r\n                        }\r\n                        if (this.queue.length > 0) {\r\n                            this.doWriteMessage(this.queue.shift());\r\n                        }\r\n                    });\r\n                }\r\n                catch (error) {\r\n                    this.handleError(error, msg);\r\n                }\r\n            });\r\n        }\r\n        catch (error) {\r\n            this.handleError(error, msg);\r\n        }\r\n    }\r\n    handleError(error, msg) {\r\n        this.errorCount++;\r\n        this.fireError(error, msg, this.errorCount);\r\n    }\r\n}\r\nexports.SocketMessageWriter = SocketMessageWriter;\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nvar CancellationToken;\r\n(function (CancellationToken) {\r\n    CancellationToken.None = Object.freeze({\r\n        isCancellationRequested: false,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    CancellationToken.Cancelled = Object.freeze({\r\n        isCancellationRequested: true,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && (candidate === CancellationToken.None\r\n            || candidate === CancellationToken.Cancelled\r\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\r\n    }\r\n    CancellationToken.is = is;\r\n})(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));\r\nconst shortcutEvent = Object.freeze(function (callback, context) {\r\n    let handle = setTimeout(callback.bind(context), 0);\r\n    return { dispose() { clearTimeout(handle); } };\r\n});\r\nclass MutableToken {\r\n    constructor() {\r\n        this._isCancelled = false;\r\n    }\r\n    cancel() {\r\n        if (!this._isCancelled) {\r\n            this._isCancelled = true;\r\n            if (this._emitter) {\r\n                this._emitter.fire(undefined);\r\n                this._emitter = undefined;\r\n            }\r\n        }\r\n    }\r\n    get isCancellationRequested() {\r\n        return this._isCancelled;\r\n    }\r\n    get onCancellationRequested() {\r\n        if (this._isCancelled) {\r\n            return shortcutEvent;\r\n        }\r\n        if (!this._emitter) {\r\n            this._emitter = new events_1.Emitter();\r\n        }\r\n        return this._emitter.event;\r\n    }\r\n}\r\nclass CancellationTokenSource {\r\n    get token() {\r\n        if (!this._token) {\r\n            // be lazy and create the token only when\r\n            // actually needed\r\n            this._token = new MutableToken();\r\n        }\r\n        return this._token;\r\n    }\r\n    cancel() {\r\n        if (!this._token) {\r\n            // save an object by returning the default\r\n            // cancelled token when cancellation happens\r\n            // before someone asks for the token\r\n            this._token = CancellationToken.Cancelled;\r\n        }\r\n        else {\r\n            this._token.cancel();\r\n        }\r\n    }\r\n    dispose() {\r\n        this.cancel();\r\n    }\r\n}\r\nexports.CancellationTokenSource = CancellationTokenSource;\r\n", "\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Touch;\r\n(function (Touch) {\r\n    Touch.None = 0;\r\n    Touch.First = 1;\r\n    Touch.Last = 2;\r\n})(Touch = exports.Touch || (exports.Touch = {}));\r\nclass LinkedMap {\r\n    constructor() {\r\n        this._map = new Map();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    clear() {\r\n        this._map.clear();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    isEmpty() {\r\n        return !this._head && !this._tail;\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    has(key) {\r\n        return this._map.has(key);\r\n    }\r\n    get(key) {\r\n        const item = this._map.get(key);\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return item.value;\r\n    }\r\n    set(key, value, touch = Touch.None) {\r\n        let item = this._map.get(key);\r\n        if (item) {\r\n            item.value = value;\r\n            if (touch !== Touch.None) {\r\n                this.touch(item, touch);\r\n            }\r\n        }\r\n        else {\r\n            item = { key, value, next: undefined, previous: undefined };\r\n            switch (touch) {\r\n                case Touch.None:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                case Touch.First:\r\n                    this.addItemFirst(item);\r\n                    break;\r\n                case Touch.Last:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                default:\r\n                    this.addItemLast(item);\r\n                    break;\r\n            }\r\n            this._map.set(key, item);\r\n            this._size++;\r\n        }\r\n    }\r\n    delete(key) {\r\n        const item = this._map.get(key);\r\n        if (!item) {\r\n            return false;\r\n        }\r\n        this._map.delete(key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return true;\r\n    }\r\n    shift() {\r\n        if (!this._head && !this._tail) {\r\n            return undefined;\r\n        }\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        const item = this._head;\r\n        this._map.delete(item.key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return item.value;\r\n    }\r\n    forEach(callbackfn, thisArg) {\r\n        let current = this._head;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.next;\r\n        }\r\n    }\r\n    forEachReverse(callbackfn, thisArg) {\r\n        let current = this._tail;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.previous;\r\n        }\r\n    }\r\n    values() {\r\n        let result = [];\r\n        let current = this._head;\r\n        while (current) {\r\n            result.push(current.value);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    }\r\n    keys() {\r\n        let result = [];\r\n        let current = this._head;\r\n        while (current) {\r\n            result.push(current.key);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    }\r\n    /* JSON RPC run on es5 which has no Symbol.iterator\r\n    public keys(): IterableIterator<K> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<K> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<K> {\r\n                if (current) {\r\n                    let result = { value: current.key, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n\r\n    public values(): IterableIterator<V> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<V> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<V> {\r\n                if (current) {\r\n                    let result = { value: current.value, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n    */\r\n    addItemFirst(item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._tail = item;\r\n        }\r\n        else if (!this._head) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n        }\r\n        this._head = item;\r\n    }\r\n    addItemLast(item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._head = item;\r\n        }\r\n        else if (!this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n        }\r\n        this._tail = item;\r\n    }\r\n    removeItem(item) {\r\n        if (item === this._head && item === this._tail) {\r\n            this._head = undefined;\r\n            this._tail = undefined;\r\n        }\r\n        else if (item === this._head) {\r\n            this._head = item.next;\r\n        }\r\n        else if (item === this._tail) {\r\n            this._tail = item.previous;\r\n        }\r\n        else {\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            if (!next || !previous) {\r\n                throw new Error('Invalid list');\r\n            }\r\n            next.previous = previous;\r\n            previous.next = next;\r\n        }\r\n    }\r\n    touch(item, touch) {\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        if ((touch !== Touch.First && touch !== Touch.Last)) {\r\n            return;\r\n        }\r\n        if (touch === Touch.First) {\r\n            if (item === this._head) {\r\n                return;\r\n            }\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            // Unlink the item\r\n            if (item === this._tail) {\r\n                // previous must be defined since item was not head but is tail\r\n                // So there are more than on item in the map\r\n                previous.next = undefined;\r\n                this._tail = previous;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            // Insert the node at head\r\n            item.previous = undefined;\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n            this._head = item;\r\n        }\r\n        else if (touch === Touch.Last) {\r\n            if (item === this._tail) {\r\n                return;\r\n            }\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            // Unlink the item.\r\n            if (item === this._head) {\r\n                // next must be defined since item was not tail but is head\r\n                // So there are more than on item in the map\r\n                next.previous = undefined;\r\n                this._head = next;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            item.next = undefined;\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n            this._tail = item;\r\n        }\r\n    }\r\n}\r\nexports.LinkedMap = LinkedMap;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst path_1 = require(\"path\");\r\nconst os_1 = require(\"os\");\r\nconst crypto_1 = require(\"crypto\");\r\nconst net_1 = require(\"net\");\r\nconst messageReader_1 = require(\"./messageReader\");\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nfunction generateRandomPipeName() {\r\n    const randomSuffix = crypto_1.randomBytes(21).toString('hex');\r\n    if (process.platform === 'win32') {\r\n        return `\\\\\\\\.\\\\pipe\\\\vscode-jsonrpc-${randomSuffix}-sock`;\r\n    }\r\n    else {\r\n        // Mac/Unix: use socket file\r\n        return path_1.join(os_1.tmpdir(), `vscode-${randomSuffix}.sock`);\r\n    }\r\n}\r\nexports.generateRandomPipeName = generateRandomPipeName;\r\nfunction createClientPipeTransport(pipeName, encoding = 'utf-8') {\r\n    let connectResolve;\r\n    let connected = new Promise((resolve, _reject) => {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n        let server = net_1.createServer((socket) => {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(pipeName, () => {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: () => { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientPipeTransport = createClientPipeTransport;\r\nfunction createServerPipeTransport(pipeName, encoding = 'utf-8') {\r\n    const socket = net_1.createConnection(pipeName);\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerPipeTransport = createServerPipeTransport;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst net_1 = require(\"net\");\r\nconst messageReader_1 = require(\"./messageReader\");\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nfunction createClientSocketTransport(port, encoding = 'utf-8') {\r\n    let connectResolve;\r\n    let connected = new Promise((resolve, _reject) => {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n        let server = net_1.createServer((socket) => {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(port, '127.0.0.1', () => {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: () => { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientSocketTransport = createClientSocketTransport;\r\nfunction createServerSocketTransport(port, encoding = 'utf-8') {\r\n    const socket = net_1.createConnection(port, '127.0.0.1');\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerSocketTransport = createServerSocketTransport;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n/// <reference path=\"./thenable.ts\" />\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Is = require(\"./is\");\r\nconst messages_1 = require(\"./messages\");\r\nexports.RequestType = messages_1.RequestType;\r\nexports.RequestType0 = messages_1.RequestType0;\r\nexports.RequestType1 = messages_1.RequestType1;\r\nexports.RequestType2 = messages_1.RequestType2;\r\nexports.RequestType3 = messages_1.RequestType3;\r\nexports.RequestType4 = messages_1.RequestType4;\r\nexports.RequestType5 = messages_1.RequestType5;\r\nexports.RequestType6 = messages_1.RequestType6;\r\nexports.RequestType7 = messages_1.RequestType7;\r\nexports.RequestType8 = messages_1.RequestType8;\r\nexports.RequestType9 = messages_1.RequestType9;\r\nexports.ResponseError = messages_1.ResponseError;\r\nexports.ErrorCodes = messages_1.ErrorCodes;\r\nexports.NotificationType = messages_1.NotificationType;\r\nexports.NotificationType0 = messages_1.NotificationType0;\r\nexports.NotificationType1 = messages_1.NotificationType1;\r\nexports.NotificationType2 = messages_1.NotificationType2;\r\nexports.NotificationType3 = messages_1.NotificationType3;\r\nexports.NotificationType4 = messages_1.NotificationType4;\r\nexports.NotificationType5 = messages_1.NotificationType5;\r\nexports.NotificationType6 = messages_1.NotificationType6;\r\nexports.NotificationType7 = messages_1.NotificationType7;\r\nexports.NotificationType8 = messages_1.NotificationType8;\r\nexports.NotificationType9 = messages_1.NotificationType9;\r\nconst messageReader_1 = require(\"./messageReader\");\r\nexports.MessageReader = messageReader_1.MessageReader;\r\nexports.StreamMessageReader = messageReader_1.StreamMessageReader;\r\nexports.IPCMessageReader = messageReader_1.IPCMessageReader;\r\nexports.SocketMessageReader = messageReader_1.SocketMessageReader;\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nexports.MessageWriter = messageWriter_1.MessageWriter;\r\nexports.StreamMessageWriter = messageWriter_1.StreamMessageWriter;\r\nexports.IPCMessageWriter = messageWriter_1.IPCMessageWriter;\r\nexports.SocketMessageWriter = messageWriter_1.SocketMessageWriter;\r\nconst events_1 = require(\"./events\");\r\nexports.Disposable = events_1.Disposable;\r\nexports.Event = events_1.Event;\r\nexports.Emitter = events_1.Emitter;\r\nconst cancellation_1 = require(\"./cancellation\");\r\nexports.CancellationTokenSource = cancellation_1.CancellationTokenSource;\r\nexports.CancellationToken = cancellation_1.CancellationToken;\r\nconst linkedMap_1 = require(\"./linkedMap\");\r\n__export(require(\"./pipeSupport\"));\r\n__export(require(\"./socketSupport\"));\r\nvar CancelNotification;\r\n(function (CancelNotification) {\r\n    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');\r\n})(CancelNotification || (CancelNotification = {}));\r\nexports.NullLogger = Object.freeze({\r\n    error: () => { },\r\n    warn: () => { },\r\n    info: () => { },\r\n    log: () => { }\r\n});\r\nvar Trace;\r\n(function (Trace) {\r\n    Trace[Trace[\"Off\"] = 0] = \"Off\";\r\n    Trace[Trace[\"Messages\"] = 1] = \"Messages\";\r\n    Trace[Trace[\"Verbose\"] = 2] = \"Verbose\";\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\n(function (Trace) {\r\n    function fromString(value) {\r\n        value = value.toLowerCase();\r\n        switch (value) {\r\n            case 'off':\r\n                return Trace.Off;\r\n            case 'messages':\r\n                return Trace.Messages;\r\n            case 'verbose':\r\n                return Trace.Verbose;\r\n            default:\r\n                return Trace.Off;\r\n        }\r\n    }\r\n    Trace.fromString = fromString;\r\n    function toString(value) {\r\n        switch (value) {\r\n            case Trace.Off:\r\n                return 'off';\r\n            case Trace.Messages:\r\n                return 'messages';\r\n            case Trace.Verbose:\r\n                return 'verbose';\r\n            default:\r\n                return 'off';\r\n        }\r\n    }\r\n    Trace.toString = toString;\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\nvar TraceFormat;\r\n(function (TraceFormat) {\r\n    TraceFormat[\"Text\"] = \"text\";\r\n    TraceFormat[\"JSON\"] = \"json\";\r\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\r\n(function (TraceFormat) {\r\n    function fromString(value) {\r\n        value = value.toLowerCase();\r\n        if (value === 'json') {\r\n            return TraceFormat.JSON;\r\n        }\r\n        else {\r\n            return TraceFormat.Text;\r\n        }\r\n    }\r\n    TraceFormat.fromString = fromString;\r\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\r\nvar SetTraceNotification;\r\n(function (SetTraceNotification) {\r\n    SetTraceNotification.type = new messages_1.NotificationType('$/setTraceNotification');\r\n})(SetTraceNotification = exports.SetTraceNotification || (exports.SetTraceNotification = {}));\r\nvar LogTraceNotification;\r\n(function (LogTraceNotification) {\r\n    LogTraceNotification.type = new messages_1.NotificationType('$/logTraceNotification');\r\n})(LogTraceNotification = exports.LogTraceNotification || (exports.LogTraceNotification = {}));\r\nvar ConnectionErrors;\r\n(function (ConnectionErrors) {\r\n    /**\r\n     * The connection is closed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Closed\"] = 1] = \"Closed\";\r\n    /**\r\n     * The connection got disposed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Disposed\"] = 2] = \"Disposed\";\r\n    /**\r\n     * The connection is already in listening mode.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"AlreadyListening\"] = 3] = \"AlreadyListening\";\r\n})(ConnectionErrors = exports.ConnectionErrors || (exports.ConnectionErrors = {}));\r\nclass ConnectionError extends Error {\r\n    constructor(code, message) {\r\n        super(message);\r\n        this.code = code;\r\n        Object.setPrototypeOf(this, ConnectionError.prototype);\r\n    }\r\n}\r\nexports.ConnectionError = ConnectionError;\r\nvar ConnectionStrategy;\r\n(function (ConnectionStrategy) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.cancelUndispatched);\r\n    }\r\n    ConnectionStrategy.is = is;\r\n})(ConnectionStrategy = exports.ConnectionStrategy || (exports.ConnectionStrategy = {}));\r\nvar ConnectionState;\r\n(function (ConnectionState) {\r\n    ConnectionState[ConnectionState[\"New\"] = 1] = \"New\";\r\n    ConnectionState[ConnectionState[\"Listening\"] = 2] = \"Listening\";\r\n    ConnectionState[ConnectionState[\"Closed\"] = 3] = \"Closed\";\r\n    ConnectionState[ConnectionState[\"Disposed\"] = 4] = \"Disposed\";\r\n})(ConnectionState || (ConnectionState = {}));\r\nfunction _createMessageConnection(messageReader, messageWriter, logger, strategy) {\r\n    let sequenceNumber = 0;\r\n    let notificationSquenceNumber = 0;\r\n    let unknownResponseSquenceNumber = 0;\r\n    const version = '2.0';\r\n    let starRequestHandler = undefined;\r\n    let requestHandlers = Object.create(null);\r\n    let starNotificationHandler = undefined;\r\n    let notificationHandlers = Object.create(null);\r\n    let timer;\r\n    let messageQueue = new linkedMap_1.LinkedMap();\r\n    let responsePromises = Object.create(null);\r\n    let requestTokens = Object.create(null);\r\n    let trace = Trace.Off;\r\n    let traceFormat = TraceFormat.Text;\r\n    let tracer;\r\n    let state = ConnectionState.New;\r\n    let errorEmitter = new events_1.Emitter();\r\n    let closeEmitter = new events_1.Emitter();\r\n    let unhandledNotificationEmitter = new events_1.Emitter();\r\n    let disposeEmitter = new events_1.Emitter();\r\n    function createRequestQueueKey(id) {\r\n        return 'req-' + id.toString();\r\n    }\r\n    function createResponseQueueKey(id) {\r\n        if (id === null) {\r\n            return 'res-unknown-' + (++unknownResponseSquenceNumber).toString();\r\n        }\r\n        else {\r\n            return 'res-' + id.toString();\r\n        }\r\n    }\r\n    function createNotificationQueueKey() {\r\n        return 'not-' + (++notificationSquenceNumber).toString();\r\n    }\r\n    function addMessageToQueue(queue, message) {\r\n        if (messages_1.isRequestMessage(message)) {\r\n            queue.set(createRequestQueueKey(message.id), message);\r\n        }\r\n        else if (messages_1.isResponseMessage(message)) {\r\n            queue.set(createResponseQueueKey(message.id), message);\r\n        }\r\n        else {\r\n            queue.set(createNotificationQueueKey(), message);\r\n        }\r\n    }\r\n    function cancelUndispatched(_message) {\r\n        return undefined;\r\n    }\r\n    function isListening() {\r\n        return state === ConnectionState.Listening;\r\n    }\r\n    function isClosed() {\r\n        return state === ConnectionState.Closed;\r\n    }\r\n    function isDisposed() {\r\n        return state === ConnectionState.Disposed;\r\n    }\r\n    function closeHandler() {\r\n        if (state === ConnectionState.New || state === ConnectionState.Listening) {\r\n            state = ConnectionState.Closed;\r\n            closeEmitter.fire(undefined);\r\n        }\r\n        // If the connection is disposed don't sent close events.\r\n    }\r\n    ;\r\n    function readErrorHandler(error) {\r\n        errorEmitter.fire([error, undefined, undefined]);\r\n    }\r\n    function writeErrorHandler(data) {\r\n        errorEmitter.fire(data);\r\n    }\r\n    messageReader.onClose(closeHandler);\r\n    messageReader.onError(readErrorHandler);\r\n    messageWriter.onClose(closeHandler);\r\n    messageWriter.onError(writeErrorHandler);\r\n    function triggerMessageQueue() {\r\n        if (timer || messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        timer = setImmediate(() => {\r\n            timer = undefined;\r\n            processMessageQueue();\r\n        });\r\n    }\r\n    function processMessageQueue() {\r\n        if (messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        let message = messageQueue.shift();\r\n        try {\r\n            if (messages_1.isRequestMessage(message)) {\r\n                handleRequest(message);\r\n            }\r\n            else if (messages_1.isNotificationMessage(message)) {\r\n                handleNotification(message);\r\n            }\r\n            else if (messages_1.isResponseMessage(message)) {\r\n                handleResponse(message);\r\n            }\r\n            else {\r\n                handleInvalidMessage(message);\r\n            }\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    }\r\n    let callback = (message) => {\r\n        try {\r\n            // We have received a cancellation message. Check if the message is still in the queue\r\n            // and cancel it if allowed to do so.\r\n            if (messages_1.isNotificationMessage(message) && message.method === CancelNotification.type.method) {\r\n                let key = createRequestQueueKey(message.params.id);\r\n                let toCancel = messageQueue.get(key);\r\n                if (messages_1.isRequestMessage(toCancel)) {\r\n                    let response = strategy && strategy.cancelUndispatched ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);\r\n                    if (response && (response.error !== void 0 || response.result !== void 0)) {\r\n                        messageQueue.delete(key);\r\n                        response.id = toCancel.id;\r\n                        traceSendingResponse(response, message.method, Date.now());\r\n                        messageWriter.write(response);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            addMessageToQueue(messageQueue, message);\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    };\r\n    function handleRequest(requestMessage) {\r\n        if (isDisposed()) {\r\n            // we return here silently since we fired an event when the\r\n            // connection got disposed.\r\n            return;\r\n        }\r\n        function reply(resultOrError, method, startTime) {\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id\r\n            };\r\n            if (resultOrError instanceof messages_1.ResponseError) {\r\n                message.error = resultOrError.toJson();\r\n            }\r\n            else {\r\n                message.result = resultOrError === void 0 ? null : resultOrError;\r\n            }\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replyError(error, method, startTime) {\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                error: error.toJson()\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replySuccess(result, method, startTime) {\r\n            // The JSON RPC defines that a response must either have a result or an error\r\n            // So we can't treat undefined as a valid response result.\r\n            if (result === void 0) {\r\n                result = null;\r\n            }\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                result: result\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        traceReceivedRequest(requestMessage);\r\n        let element = requestHandlers[requestMessage.method];\r\n        let type;\r\n        let requestHandler;\r\n        if (element) {\r\n            type = element.type;\r\n            requestHandler = element.handler;\r\n        }\r\n        let startTime = Date.now();\r\n        if (requestHandler || starRequestHandler) {\r\n            let cancellationSource = new cancellation_1.CancellationTokenSource();\r\n            let tokenKey = String(requestMessage.id);\r\n            requestTokens[tokenKey] = cancellationSource;\r\n            try {\r\n                let handlerResult;\r\n                if (requestMessage.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, cancellationSource.token);\r\n                }\r\n                else if (Is.array(requestMessage.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(...requestMessage.params, cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, ...requestMessage.params, cancellationSource.token);\r\n                }\r\n                else {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(requestMessage.params, cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);\r\n                }\r\n                let promise = handlerResult;\r\n                if (!handlerResult) {\r\n                    delete requestTokens[tokenKey];\r\n                    replySuccess(handlerResult, requestMessage.method, startTime);\r\n                }\r\n                else if (promise.then) {\r\n                    promise.then((resultOrError) => {\r\n                        delete requestTokens[tokenKey];\r\n                        reply(resultOrError, requestMessage.method, startTime);\r\n                    }, error => {\r\n                        delete requestTokens[tokenKey];\r\n                        if (error instanceof messages_1.ResponseError) {\r\n                            replyError(error, requestMessage.method, startTime);\r\n                        }\r\n                        else if (error && Is.string(error.message)) {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\r\n                        }\r\n                        else {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    delete requestTokens[tokenKey];\r\n                    reply(handlerResult, requestMessage.method, startTime);\r\n                }\r\n            }\r\n            catch (error) {\r\n                delete requestTokens[tokenKey];\r\n                if (error instanceof messages_1.ResponseError) {\r\n                    reply(error, requestMessage.method, startTime);\r\n                }\r\n                else if (error && Is.string(error.message)) {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\r\n                }\r\n                else {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, `Unhandled method ${requestMessage.method}`), requestMessage.method, startTime);\r\n        }\r\n    }\r\n    function handleResponse(responseMessage) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        if (responseMessage.id === null) {\r\n            if (responseMessage.error) {\r\n                logger.error(`Received response message without id: Error is: \\n${JSON.stringify(responseMessage.error, undefined, 4)}`);\r\n            }\r\n            else {\r\n                logger.error(`Received response message without id. No further error information provided.`);\r\n            }\r\n        }\r\n        else {\r\n            let key = String(responseMessage.id);\r\n            let responsePromise = responsePromises[key];\r\n            traceReceivedResponse(responseMessage, responsePromise);\r\n            if (responsePromise) {\r\n                delete responsePromises[key];\r\n                try {\r\n                    if (responseMessage.error) {\r\n                        let error = responseMessage.error;\r\n                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));\r\n                    }\r\n                    else if (responseMessage.result !== void 0) {\r\n                        responsePromise.resolve(responseMessage.result);\r\n                    }\r\n                    else {\r\n                        throw new Error('Should never happen.');\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    if (error.message) {\r\n                        logger.error(`Response handler '${responsePromise.method}' failed with message: ${error.message}`);\r\n                    }\r\n                    else {\r\n                        logger.error(`Response handler '${responsePromise.method}' failed unexpectedly.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function handleNotification(message) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        let type = undefined;\r\n        let notificationHandler;\r\n        if (message.method === CancelNotification.type.method) {\r\n            notificationHandler = (params) => {\r\n                let id = params.id;\r\n                let source = requestTokens[String(id)];\r\n                if (source) {\r\n                    source.cancel();\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            let element = notificationHandlers[message.method];\r\n            if (element) {\r\n                notificationHandler = element.handler;\r\n                type = element.type;\r\n            }\r\n        }\r\n        if (notificationHandler || starNotificationHandler) {\r\n            try {\r\n                traceReceivedNotification(message);\r\n                if (message.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    notificationHandler ? notificationHandler() : starNotificationHandler(message.method);\r\n                }\r\n                else if (Is.array(message.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    notificationHandler ? notificationHandler(...message.params) : starNotificationHandler(message.method, ...message.params);\r\n                }\r\n                else {\r\n                    notificationHandler ? notificationHandler(message.params) : starNotificationHandler(message.method, message.params);\r\n                }\r\n            }\r\n            catch (error) {\r\n                if (error.message) {\r\n                    logger.error(`Notification handler '${message.method}' failed with message: ${error.message}`);\r\n                }\r\n                else {\r\n                    logger.error(`Notification handler '${message.method}' failed unexpectedly.`);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            unhandledNotificationEmitter.fire(message);\r\n        }\r\n    }\r\n    function handleInvalidMessage(message) {\r\n        if (!message) {\r\n            logger.error('Received empty message.');\r\n            return;\r\n        }\r\n        logger.error(`Received message which is neither a response nor a notification message:\\n${JSON.stringify(message, null, 4)}`);\r\n        // Test whether we find an id to reject the promise\r\n        let responseMessage = message;\r\n        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {\r\n            let key = String(responseMessage.id);\r\n            let responseHandler = responsePromises[key];\r\n            if (responseHandler) {\r\n                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));\r\n            }\r\n        }\r\n    }\r\n    function traceSendingRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose && message.params) {\r\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n            }\r\n            tracer.log(`Sending request '${message.method} - (${message.id})'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-request', message);\r\n        }\r\n    }\r\n    function traceSendingNotification(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.params) {\r\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    data = 'No parameters provided.\\n\\n';\r\n                }\r\n            }\r\n            tracer.log(`Sending notification '${message.method}'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-notification', message);\r\n        }\r\n    }\r\n    function traceSendingResponse(message, method, startTime) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.error && message.error.data) {\r\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    if (message.result) {\r\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\r\n                    }\r\n                    else if (message.error === void 0) {\r\n                        data = 'No result returned.\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n            tracer.log(`Sending response '${method} - (${message.id})'. Processing request took ${Date.now() - startTime}ms`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-response', message);\r\n        }\r\n    }\r\n    function traceReceivedRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose && message.params) {\r\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n            }\r\n            tracer.log(`Received request '${message.method} - (${message.id})'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('receive-request', message);\r\n        }\r\n    }\r\n    function traceReceivedNotification(message) {\r\n        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.params) {\r\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    data = 'No parameters provided.\\n\\n';\r\n                }\r\n            }\r\n            tracer.log(`Received notification '${message.method}'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('receive-notification', message);\r\n        }\r\n    }\r\n    function traceReceivedResponse(message, responsePromise) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.error && message.error.data) {\r\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    if (message.result) {\r\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\r\n                    }\r\n                    else if (message.error === void 0) {\r\n                        data = 'No result returned.\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n            if (responsePromise) {\r\n                let error = message.error ? ` Request failed: ${message.error.message} (${message.error.code}).` : '';\r\n                tracer.log(`Received response '${responsePromise.method} - (${message.id})' in ${Date.now() - responsePromise.timerStart}ms.${error}`, data);\r\n            }\r\n            else {\r\n                tracer.log(`Received response ${message.id} without active response promise.`, data);\r\n            }\r\n        }\r\n        else {\r\n            logLSPMessage('receive-response', message);\r\n        }\r\n    }\r\n    function logLSPMessage(type, message) {\r\n        if (!tracer || trace === Trace.Off) {\r\n            return;\r\n        }\r\n        const lspMessage = {\r\n            isLSPMessage: true,\r\n            type,\r\n            message,\r\n            timestamp: Date.now()\r\n        };\r\n        tracer.log(lspMessage);\r\n    }\r\n    function throwIfClosedOrDisposed() {\r\n        if (isClosed()) {\r\n            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');\r\n        }\r\n        if (isDisposed()) {\r\n            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');\r\n        }\r\n    }\r\n    function throwIfListening() {\r\n        if (isListening()) {\r\n            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');\r\n        }\r\n    }\r\n    function throwIfNotListening() {\r\n        if (!isListening()) {\r\n            throw new Error('Call listen() first.');\r\n        }\r\n    }\r\n    function undefinedToNull(param) {\r\n        if (param === void 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return param;\r\n        }\r\n    }\r\n    function computeMessageParams(type, params) {\r\n        let result;\r\n        let numberOfParams = type.numberOfParams;\r\n        switch (numberOfParams) {\r\n            case 0:\r\n                result = null;\r\n                break;\r\n            case 1:\r\n                result = undefinedToNull(params[0]);\r\n                break;\r\n            default:\r\n                result = [];\r\n                for (let i = 0; i < params.length && i < numberOfParams; i++) {\r\n                    result.push(undefinedToNull(params[i]));\r\n                }\r\n                if (params.length < numberOfParams) {\r\n                    for (let i = params.length; i < numberOfParams; i++) {\r\n                        result.push(null);\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        return result;\r\n    }\r\n    let connection = {\r\n        sendNotification: (type, ...params) => {\r\n            throwIfClosedOrDisposed();\r\n            let method;\r\n            let messageParams;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        messageParams = params[0];\r\n                        break;\r\n                    default:\r\n                        messageParams = params;\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n            }\r\n            let notificationMessage = {\r\n                jsonrpc: version,\r\n                method: method,\r\n                params: messageParams\r\n            };\r\n            traceSendingNotification(notificationMessage);\r\n            messageWriter.write(notificationMessage);\r\n        },\r\n        onNotification: (type, handler) => {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starNotificationHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    notificationHandlers[type] = { type: undefined, handler };\r\n                }\r\n                else {\r\n                    notificationHandlers[type.method] = { type, handler };\r\n                }\r\n            }\r\n        },\r\n        sendRequest: (type, ...params) => {\r\n            throwIfClosedOrDisposed();\r\n            throwIfNotListening();\r\n            let method;\r\n            let messageParams;\r\n            let token = undefined;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        // The cancellation token is optional so it can also be undefined.\r\n                        if (cancellation_1.CancellationToken.is(params[0])) {\r\n                            messageParams = null;\r\n                            token = params[0];\r\n                        }\r\n                        else {\r\n                            messageParams = undefinedToNull(params[0]);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        const last = params.length - 1;\r\n                        if (cancellation_1.CancellationToken.is(params[last])) {\r\n                            token = params[last];\r\n                            if (params.length === 2) {\r\n                                messageParams = undefinedToNull(params[0]);\r\n                            }\r\n                            else {\r\n                                messageParams = params.slice(0, last).map(value => undefinedToNull(value));\r\n                            }\r\n                        }\r\n                        else {\r\n                            messageParams = params.map(value => undefinedToNull(value));\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n                let numberOfParams = type.numberOfParams;\r\n                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;\r\n            }\r\n            let id = sequenceNumber++;\r\n            let result = new Promise((resolve, reject) => {\r\n                let requestMessage = {\r\n                    jsonrpc: version,\r\n                    id: id,\r\n                    method: method,\r\n                    params: messageParams\r\n                };\r\n                let responsePromise = { method: method, timerStart: Date.now(), resolve, reject };\r\n                traceSendingRequest(requestMessage);\r\n                try {\r\n                    messageWriter.write(requestMessage);\r\n                }\r\n                catch (e) {\r\n                    // Writing the message failed. So we need to reject the promise.\r\n                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, e.message ? e.message : 'Unknown reason'));\r\n                    responsePromise = null;\r\n                }\r\n                if (responsePromise) {\r\n                    responsePromises[String(id)] = responsePromise;\r\n                }\r\n            });\r\n            if (token) {\r\n                token.onCancellationRequested(() => {\r\n                    connection.sendNotification(CancelNotification.type, { id });\r\n                });\r\n            }\r\n            return result;\r\n        },\r\n        onRequest: (type, handler) => {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starRequestHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    requestHandlers[type] = { type: undefined, handler };\r\n                }\r\n                else {\r\n                    requestHandlers[type.method] = { type, handler };\r\n                }\r\n            }\r\n        },\r\n        trace: (_value, _tracer, sendNotificationOrTraceOptions) => {\r\n            let _sendNotification = false;\r\n            let _traceFormat = TraceFormat.Text;\r\n            if (sendNotificationOrTraceOptions !== void 0) {\r\n                if (Is.boolean(sendNotificationOrTraceOptions)) {\r\n                    _sendNotification = sendNotificationOrTraceOptions;\r\n                }\r\n                else {\r\n                    _sendNotification = sendNotificationOrTraceOptions.sendNotification || false;\r\n                    _traceFormat = sendNotificationOrTraceOptions.traceFormat || TraceFormat.Text;\r\n                }\r\n            }\r\n            trace = _value;\r\n            traceFormat = _traceFormat;\r\n            if (trace === Trace.Off) {\r\n                tracer = undefined;\r\n            }\r\n            else {\r\n                tracer = _tracer;\r\n            }\r\n            if (_sendNotification && !isClosed() && !isDisposed()) {\r\n                connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });\r\n            }\r\n        },\r\n        onError: errorEmitter.event,\r\n        onClose: closeEmitter.event,\r\n        onUnhandledNotification: unhandledNotificationEmitter.event,\r\n        onDispose: disposeEmitter.event,\r\n        dispose: () => {\r\n            if (isDisposed()) {\r\n                return;\r\n            }\r\n            state = ConnectionState.Disposed;\r\n            disposeEmitter.fire(undefined);\r\n            let error = new Error('Connection got disposed.');\r\n            Object.keys(responsePromises).forEach((key) => {\r\n                responsePromises[key].reject(error);\r\n            });\r\n            responsePromises = Object.create(null);\r\n            requestTokens = Object.create(null);\r\n            messageQueue = new linkedMap_1.LinkedMap();\r\n            // Test for backwards compatibility\r\n            if (Is.func(messageWriter.dispose)) {\r\n                messageWriter.dispose();\r\n            }\r\n            if (Is.func(messageReader.dispose)) {\r\n                messageReader.dispose();\r\n            }\r\n        },\r\n        listen: () => {\r\n            throwIfClosedOrDisposed();\r\n            throwIfListening();\r\n            state = ConnectionState.Listening;\r\n            messageReader.listen(callback);\r\n        },\r\n        inspect: () => {\r\n            console.log(\"inspect\");\r\n        }\r\n    };\r\n    connection.onNotification(LogTraceNotification.type, (params) => {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        tracer.log(params.message, trace === Trace.Verbose ? params.verbose : undefined);\r\n    });\r\n    return connection;\r\n}\r\nfunction isMessageReader(value) {\r\n    return value.listen !== void 0 && value.read === void 0;\r\n}\r\nfunction isMessageWriter(value) {\r\n    return value.write !== void 0 && value.end === void 0;\r\n}\r\nfunction createMessageConnection(input, output, logger, strategy) {\r\n    if (!logger) {\r\n        logger = exports.NullLogger;\r\n    }\r\n    let reader = isMessageReader(input) ? input : new messageReader_1.StreamMessageReader(input);\r\n    let writer = isMessageWriter(output) ? output : new messageWriter_1.StreamMessageWriter(output);\r\n    return _createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createMessageConnection = createMessageConnection;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The LocationLink namespace provides helper functions to work with\r\n * [LocationLink](#LocationLink) literals.\r\n */\r\nexport var LocationLink;\r\n(function (LocationLink) {\r\n    /**\r\n     * Creates a LocationLink literal.\r\n     * @param targetUri The definition's uri.\r\n     * @param targetRange The full range of the definition.\r\n     * @param targetSelectionRange The span of the symbol definition at the target.\r\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\r\n     */\r\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\r\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\r\n    }\r\n    LocationLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\r\n            && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\r\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\r\n    }\r\n    LocationLink.is = is;\r\n})(LocationLink || (LocationLink = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var CreateFile;\r\n(function (CreateFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'create',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    CreateFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    CreateFile.is = is;\r\n})(CreateFile || (CreateFile = {}));\r\nexport var RenameFile;\r\n(function (RenameFile) {\r\n    function create(oldUri, newUri, options) {\r\n        var result = {\r\n            kind: 'rename',\r\n            oldUri: oldUri,\r\n            newUri: newUri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    RenameFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    RenameFile.is = is;\r\n})(RenameFile || (RenameFile = {}));\r\nexport var DeleteFile;\r\n(function (DeleteFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'delete',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    DeleteFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))));\r\n    }\r\n    DeleteFile.is = is;\r\n})(DeleteFile || (DeleteFile = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || candidate.documentChanges.every(function (change) {\r\n                if (Is.string(change.kind)) {\r\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\r\n                }\r\n                else {\r\n                    return TextDocumentEdit.is(change);\r\n                }\r\n            }));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (change) {\r\n                    if (TextDocumentEdit.is(change)) {\r\n                        var textEditChange = new TextEditChangeImpl(change.edits);\r\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\r\n                    }\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    WorkspaceChange.prototype.createFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(CreateFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(RenameFile.create(oldUri, newUri, options));\r\n    };\r\n    WorkspaceChange.prototype.deleteFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(DeleteFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.checkDocumentChanges = function () {\r\n        if (!this._workspaceEdit || !this._workspaceEdit.documentChanges) {\r\n            throw new Error('Workspace edit is not configured for document changes.');\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.number(candidate.version));\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\nexport { DocumentSymbol };\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.detail === void 0 || Is.string(candidate.detail)) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\nexport { DocumentLink };\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Overlapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nexport var TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return typeof value === 'number' || value instanceof Number;\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return value instanceof Error;\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return typeof value === 'function';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\nfunction typedArray(value, check) {\r\n    return Array.isArray(value) && value.every(check);\r\n}\r\nexports.typedArray = typedArray;\r\nfunction thenable(value) {\r\n    return value && func(value.then);\r\n}\r\nexports.thenable = thenable;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * A request to resolve the implementation locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\r\n * Thenable that resolves to such.\r\n */\r\nvar ImplementationRequest;\r\n(function (ImplementationRequest) {\r\n    ImplementationRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/implementation');\r\n})(ImplementationRequest = exports.ImplementationRequest || (exports.ImplementationRequest = {}));\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * A request to resolve the type definition locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\r\n * Thenable that resolves to such.\r\n */\r\nvar TypeDefinitionRequest;\r\n(function (TypeDefinitionRequest) {\r\n    TypeDefinitionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/typeDefinition');\r\n})(TypeDefinitionRequest = exports.TypeDefinitionRequest || (exports.TypeDefinitionRequest = {}));\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * The `workspace/workspaceFolders` is sent from the server to the client to fetch the open workspace folders.\r\n */\r\nvar WorkspaceFoldersRequest;\r\n(function (WorkspaceFoldersRequest) {\r\n    WorkspaceFoldersRequest.type = new vscode_jsonrpc_1.RequestType0('workspace/workspaceFolders');\r\n})(WorkspaceFoldersRequest = exports.WorkspaceFoldersRequest || (exports.WorkspaceFoldersRequest = {}));\r\n/**\r\n * The `workspace/didChangeWorkspaceFolders` notification is sent from the client to the server when the workspace\r\n * folder configuration changes.\r\n */\r\nvar DidChangeWorkspaceFoldersNotification;\r\n(function (DidChangeWorkspaceFoldersNotification) {\r\n    DidChangeWorkspaceFoldersNotification.type = new vscode_jsonrpc_1.NotificationType('workspace/didChangeWorkspaceFolders');\r\n})(DidChangeWorkspaceFoldersNotification = exports.DidChangeWorkspaceFoldersNotification || (exports.DidChangeWorkspaceFoldersNotification = {}));\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * The 'workspace/configuration' request is sent from the server to the client to fetch a certain\r\n * configuration setting.\r\n *\r\n * This pull model replaces the old push model were the client signaled configuration change via an\r\n * event. If the server still needs to react to configuration changes (since the server caches the\r\n * result of `workspace/configuration` requests) the server should register for an empty configuration\r\n * change event and empty the cache if such an event is received.\r\n */\r\nvar ConfigurationRequest;\r\n(function (ConfigurationRequest) {\r\n    ConfigurationRequest.type = new vscode_jsonrpc_1.RequestType('workspace/configuration');\r\n})(ConfigurationRequest = exports.ConfigurationRequest || (exports.ConfigurationRequest = {}));\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * A request to list all color symbols found in a given text document. The request's\r\n * parameter is of type [DocumentColorParams](#DocumentColorParams) the\r\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar DocumentColorRequest;\r\n(function (DocumentColorRequest) {\r\n    DocumentColorRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentColor');\r\n})(DocumentColorRequest = exports.DocumentColorRequest || (exports.DocumentColorRequest = {}));\r\n/**\r\n * A request to list all presentation for a color. The request's\r\n * parameter is of type [ColorPresentationParams](#ColorPresentationParams) the\r\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar ColorPresentationRequest;\r\n(function (ColorPresentationRequest) {\r\n    ColorPresentationRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/colorPresentation');\r\n})(ColorPresentationRequest = exports.ColorPresentationRequest || (exports.ColorPresentationRequest = {}));\r\n", "\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * Enum of known range kinds\r\n */\r\nvar FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind = exports.FoldingRangeKind || (exports.FoldingRangeKind = {}));\r\n/**\r\n * A request to provide folding ranges in a document. The request's\r\n * parameter is of type [FoldingRangeParams](#FoldingRangeParams), the\r\n * response is of type [FoldingRangeList](#FoldingRangeList) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar FoldingRangeRequest;\r\n(function (FoldingRangeRequest) {\r\n    FoldingRangeRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/foldingRange');\r\n})(FoldingRangeRequest = exports.FoldingRangeRequest || (exports.FoldingRangeRequest = {}));\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * A request to resolve the type definition locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Declaration](#Declaration)\r\n * or a typed array of [DeclarationLink](#DeclarationLink) or a Thenable that resolves\r\n * to such.\r\n */\r\nvar DeclarationRequest;\r\n(function (DeclarationRequest) {\r\n    DeclarationRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/declaration');\r\n})(DeclarationRequest = exports.DeclarationRequest || (exports.DeclarationRequest = {}));\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst protocol_implementation_1 = require(\"./protocol.implementation\");\r\nexports.ImplementationRequest = protocol_implementation_1.ImplementationRequest;\r\nconst protocol_typeDefinition_1 = require(\"./protocol.typeDefinition\");\r\nexports.TypeDefinitionRequest = protocol_typeDefinition_1.TypeDefinitionRequest;\r\nconst protocol_workspaceFolders_1 = require(\"./protocol.workspaceFolders\");\r\nexports.WorkspaceFoldersRequest = protocol_workspaceFolders_1.WorkspaceFoldersRequest;\r\nexports.DidChangeWorkspaceFoldersNotification = protocol_workspaceFolders_1.DidChangeWorkspaceFoldersNotification;\r\nconst protocol_configuration_1 = require(\"./protocol.configuration\");\r\nexports.ConfigurationRequest = protocol_configuration_1.ConfigurationRequest;\r\nconst protocol_colorProvider_1 = require(\"./protocol.colorProvider\");\r\nexports.DocumentColorRequest = protocol_colorProvider_1.DocumentColorRequest;\r\nexports.ColorPresentationRequest = protocol_colorProvider_1.ColorPresentationRequest;\r\nconst protocol_foldingRange_1 = require(\"./protocol.foldingRange\");\r\nexports.FoldingRangeRequest = protocol_foldingRange_1.FoldingRangeRequest;\r\nconst protocol_declaration_1 = require(\"./protocol.declaration\");\r\nexports.DeclarationRequest = protocol_declaration_1.DeclarationRequest;\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\nvar DocumentFilter;\r\n(function (DocumentFilter) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return Is.string(candidate.language) || Is.string(candidate.scheme) || Is.string(candidate.pattern);\r\n    }\r\n    DocumentFilter.is = is;\r\n})(DocumentFilter = exports.DocumentFilter || (exports.DocumentFilter = {}));\r\n/**\r\n * The `client/registerCapability` request is sent from the server to the client to register a new capability\r\n * handler on the client side.\r\n */\r\nvar RegistrationRequest;\r\n(function (RegistrationRequest) {\r\n    RegistrationRequest.type = new vscode_jsonrpc_1.RequestType('client/registerCapability');\r\n})(RegistrationRequest = exports.RegistrationRequest || (exports.RegistrationRequest = {}));\r\n/**\r\n * The `client/unregisterCapability` request is sent from the server to the client to unregister a previously registered capability\r\n * handler on the client side.\r\n */\r\nvar UnregistrationRequest;\r\n(function (UnregistrationRequest) {\r\n    UnregistrationRequest.type = new vscode_jsonrpc_1.RequestType('client/unregisterCapability');\r\n})(UnregistrationRequest = exports.UnregistrationRequest || (exports.UnregistrationRequest = {}));\r\nvar ResourceOperationKind;\r\n(function (ResourceOperationKind) {\r\n    /**\r\n     * Supports creating new files and folders.\r\n     */\r\n    ResourceOperationKind.Create = 'create';\r\n    /**\r\n     * Supports renaming existing files and folders.\r\n     */\r\n    ResourceOperationKind.Rename = 'rename';\r\n    /**\r\n     * Supports deleting existing files and folders.\r\n     */\r\n    ResourceOperationKind.Delete = 'delete';\r\n})(ResourceOperationKind = exports.ResourceOperationKind || (exports.ResourceOperationKind = {}));\r\nvar FailureHandlingKind;\r\n(function (FailureHandlingKind) {\r\n    /**\r\n     * Applying the workspace change is simply aborted if one of the changes provided\r\n     * fails. All operations executed before the failing operation stay executed.\r\n     */\r\n    FailureHandlingKind.Abort = 'abort';\r\n    /**\r\n     * All operations are executed transactional. That means they either all\r\n     * succeed or no changes at all are applied to the workspace.\r\n     */\r\n    FailureHandlingKind.Transactional = 'transactional';\r\n    /**\r\n     * If the workspace edit contains only textual file changes they are executed transactional.\r\n     * If resource changes (create, rename or delete file) are part of the change the failure\r\n     * handling startegy is abort.\r\n     */\r\n    FailureHandlingKind.TextOnlyTransactional = 'textOnlyTransactional';\r\n    /**\r\n     * The client tries to undo the operations already executed. But there is no\r\n     * guaruntee that this is succeeding.\r\n     */\r\n    FailureHandlingKind.Undo = 'undo';\r\n})(FailureHandlingKind = exports.FailureHandlingKind || (exports.FailureHandlingKind = {}));\r\n/**\r\n * Defines how the host (editor) should sync\r\n * document changes to the language server.\r\n */\r\nvar TextDocumentSyncKind;\r\n(function (TextDocumentSyncKind) {\r\n    /**\r\n     * Documents should not be synced at all.\r\n     */\r\n    TextDocumentSyncKind.None = 0;\r\n    /**\r\n     * Documents are synced by always sending the full content\r\n     * of the document.\r\n     */\r\n    TextDocumentSyncKind.Full = 1;\r\n    /**\r\n     * Documents are synced by sending the full content on open.\r\n     * After that only incremental updates to the document are\r\n     * send.\r\n     */\r\n    TextDocumentSyncKind.Incremental = 2;\r\n})(TextDocumentSyncKind = exports.TextDocumentSyncKind || (exports.TextDocumentSyncKind = {}));\r\n/**\r\n * The initialize request is sent from the client to the server.\r\n * It is sent once as the request after starting up the server.\r\n * The requests parameter is of type [InitializeParams](#InitializeParams)\r\n * the response if of type [InitializeResult](#InitializeResult) of a Thenable that\r\n * resolves to such.\r\n */\r\nvar InitializeRequest;\r\n(function (InitializeRequest) {\r\n    InitializeRequest.type = new vscode_jsonrpc_1.RequestType('initialize');\r\n})(InitializeRequest = exports.InitializeRequest || (exports.InitializeRequest = {}));\r\n/**\r\n * Known error codes for an `InitializeError`;\r\n */\r\nvar InitializeError;\r\n(function (InitializeError) {\r\n    /**\r\n     * If the protocol version provided by the client can't be handled by the server.\r\n     * @deprecated This initialize error got replaced by client capabilities. There is\r\n     * no version handshake in version 3.0x\r\n     */\r\n    InitializeError.unknownProtocolVersion = 1;\r\n})(InitializeError = exports.InitializeError || (exports.InitializeError = {}));\r\n/**\r\n * The intialized notification is sent from the client to the\r\n * server after the client is fully initialized and the server\r\n * is allowed to send requests from the server to the client.\r\n */\r\nvar InitializedNotification;\r\n(function (InitializedNotification) {\r\n    InitializedNotification.type = new vscode_jsonrpc_1.NotificationType('initialized');\r\n})(InitializedNotification = exports.InitializedNotification || (exports.InitializedNotification = {}));\r\n//---- Shutdown Method ----\r\n/**\r\n * A shutdown request is sent from the client to the server.\r\n * It is sent once when the client decides to shutdown the\r\n * server. The only notification that is sent after a shutdown request\r\n * is the exit event.\r\n */\r\nvar ShutdownRequest;\r\n(function (ShutdownRequest) {\r\n    ShutdownRequest.type = new vscode_jsonrpc_1.RequestType0('shutdown');\r\n})(ShutdownRequest = exports.ShutdownRequest || (exports.ShutdownRequest = {}));\r\n//---- Exit Notification ----\r\n/**\r\n * The exit event is sent from the client to the server to\r\n * ask the server to exit its process.\r\n */\r\nvar ExitNotification;\r\n(function (ExitNotification) {\r\n    ExitNotification.type = new vscode_jsonrpc_1.NotificationType0('exit');\r\n})(ExitNotification = exports.ExitNotification || (exports.ExitNotification = {}));\r\n//---- Configuration notification ----\r\n/**\r\n * The configuration change notification is sent from the client to the server\r\n * when the client's configuration has changed. The notification contains\r\n * the changed configuration as defined by the language client.\r\n */\r\nvar DidChangeConfigurationNotification;\r\n(function (DidChangeConfigurationNotification) {\r\n    DidChangeConfigurationNotification.type = new vscode_jsonrpc_1.NotificationType('workspace/didChangeConfiguration');\r\n})(DidChangeConfigurationNotification = exports.DidChangeConfigurationNotification || (exports.DidChangeConfigurationNotification = {}));\r\n//---- Message show and log notifications ----\r\n/**\r\n * The message type\r\n */\r\nvar MessageType;\r\n(function (MessageType) {\r\n    /**\r\n     * An error message.\r\n     */\r\n    MessageType.Error = 1;\r\n    /**\r\n     * A warning message.\r\n     */\r\n    MessageType.Warning = 2;\r\n    /**\r\n     * An information message.\r\n     */\r\n    MessageType.Info = 3;\r\n    /**\r\n     * A log message.\r\n     */\r\n    MessageType.Log = 4;\r\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\r\n/**\r\n * The show message notification is sent from a server to a client to ask\r\n * the client to display a particular message in the user interface.\r\n */\r\nvar ShowMessageNotification;\r\n(function (ShowMessageNotification) {\r\n    ShowMessageNotification.type = new vscode_jsonrpc_1.NotificationType('window/showMessage');\r\n})(ShowMessageNotification = exports.ShowMessageNotification || (exports.ShowMessageNotification = {}));\r\n/**\r\n * The show message request is sent from the server to the client to show a message\r\n * and a set of options actions to the user.\r\n */\r\nvar ShowMessageRequest;\r\n(function (ShowMessageRequest) {\r\n    ShowMessageRequest.type = new vscode_jsonrpc_1.RequestType('window/showMessageRequest');\r\n})(ShowMessageRequest = exports.ShowMessageRequest || (exports.ShowMessageRequest = {}));\r\n/**\r\n * The log message notification is sent from the server to the client to ask\r\n * the client to log a particular message.\r\n */\r\nvar LogMessageNotification;\r\n(function (LogMessageNotification) {\r\n    LogMessageNotification.type = new vscode_jsonrpc_1.NotificationType('window/logMessage');\r\n})(LogMessageNotification = exports.LogMessageNotification || (exports.LogMessageNotification = {}));\r\n//---- Telemetry notification\r\n/**\r\n * The telemetry event notification is sent from the server to the client to ask\r\n * the client to log telemetry data.\r\n */\r\nvar TelemetryEventNotification;\r\n(function (TelemetryEventNotification) {\r\n    TelemetryEventNotification.type = new vscode_jsonrpc_1.NotificationType('telemetry/event');\r\n})(TelemetryEventNotification = exports.TelemetryEventNotification || (exports.TelemetryEventNotification = {}));\r\n/**\r\n * The document open notification is sent from the client to the server to signal\r\n * newly opened text documents. The document's truth is now managed by the client\r\n * and the server must not try to read the document's truth using the document's\r\n * uri. Open in this sense means it is managed by the client. It doesn't necessarily\r\n * mean that its content is presented in an editor. An open notification must not\r\n * be sent more than once without a corresponding close notification send before.\r\n * This means open and close notification must be balanced and the max open count\r\n * is one.\r\n */\r\nvar DidOpenTextDocumentNotification;\r\n(function (DidOpenTextDocumentNotification) {\r\n    DidOpenTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didOpen');\r\n})(DidOpenTextDocumentNotification = exports.DidOpenTextDocumentNotification || (exports.DidOpenTextDocumentNotification = {}));\r\n/**\r\n * The document change notification is sent from the client to the server to signal\r\n * changes to a text document.\r\n */\r\nvar DidChangeTextDocumentNotification;\r\n(function (DidChangeTextDocumentNotification) {\r\n    DidChangeTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didChange');\r\n})(DidChangeTextDocumentNotification = exports.DidChangeTextDocumentNotification || (exports.DidChangeTextDocumentNotification = {}));\r\n/**\r\n * The document close notification is sent from the client to the server when\r\n * the document got closed in the client. The document's truth now exists where\r\n * the document's uri points to (e.g. if the document's uri is a file uri the\r\n * truth now exists on disk). As with the open notification the close notification\r\n * is about managing the document's content. Receiving a close notification\r\n * doesn't mean that the document was open in an editor before. A close\r\n * notification requires a previous open notification to be sent.\r\n */\r\nvar DidCloseTextDocumentNotification;\r\n(function (DidCloseTextDocumentNotification) {\r\n    DidCloseTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didClose');\r\n})(DidCloseTextDocumentNotification = exports.DidCloseTextDocumentNotification || (exports.DidCloseTextDocumentNotification = {}));\r\n/**\r\n * The document save notification is sent from the client to the server when\r\n * the document got saved in the client.\r\n */\r\nvar DidSaveTextDocumentNotification;\r\n(function (DidSaveTextDocumentNotification) {\r\n    DidSaveTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didSave');\r\n})(DidSaveTextDocumentNotification = exports.DidSaveTextDocumentNotification || (exports.DidSaveTextDocumentNotification = {}));\r\n/**\r\n * A document will save notification is sent from the client to the server before\r\n * the document is actually saved.\r\n */\r\nvar WillSaveTextDocumentNotification;\r\n(function (WillSaveTextDocumentNotification) {\r\n    WillSaveTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/willSave');\r\n})(WillSaveTextDocumentNotification = exports.WillSaveTextDocumentNotification || (exports.WillSaveTextDocumentNotification = {}));\r\n/**\r\n * A document will save request is sent from the client to the server before\r\n * the document is actually saved. The request can return an array of TextEdits\r\n * which will be applied to the text document before it is saved. Please note that\r\n * clients might drop results if computing the text edits took too long or if a\r\n * server constantly fails on this request. This is done to keep the save fast and\r\n * reliable.\r\n */\r\nvar WillSaveTextDocumentWaitUntilRequest;\r\n(function (WillSaveTextDocumentWaitUntilRequest) {\r\n    WillSaveTextDocumentWaitUntilRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/willSaveWaitUntil');\r\n})(WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentWaitUntilRequest || (exports.WillSaveTextDocumentWaitUntilRequest = {}));\r\n//---- File eventing ----\r\n/**\r\n * The watched files notification is sent from the client to the server when\r\n * the client detects changes to file watched by the language client.\r\n */\r\nvar DidChangeWatchedFilesNotification;\r\n(function (DidChangeWatchedFilesNotification) {\r\n    DidChangeWatchedFilesNotification.type = new vscode_jsonrpc_1.NotificationType('workspace/didChangeWatchedFiles');\r\n})(DidChangeWatchedFilesNotification = exports.DidChangeWatchedFilesNotification || (exports.DidChangeWatchedFilesNotification = {}));\r\n/**\r\n * The file event type\r\n */\r\nvar FileChangeType;\r\n(function (FileChangeType) {\r\n    /**\r\n     * The file got created.\r\n     */\r\n    FileChangeType.Created = 1;\r\n    /**\r\n     * The file got changed.\r\n     */\r\n    FileChangeType.Changed = 2;\r\n    /**\r\n     * The file got deleted.\r\n     */\r\n    FileChangeType.Deleted = 3;\r\n})(FileChangeType = exports.FileChangeType || (exports.FileChangeType = {}));\r\nvar WatchKind;\r\n(function (WatchKind) {\r\n    /**\r\n     * Interested in create events.\r\n     */\r\n    WatchKind.Create = 1;\r\n    /**\r\n     * Interested in change events\r\n     */\r\n    WatchKind.Change = 2;\r\n    /**\r\n     * Interested in delete events\r\n     */\r\n    WatchKind.Delete = 4;\r\n})(WatchKind = exports.WatchKind || (exports.WatchKind = {}));\r\n//---- Diagnostic notification ----\r\n/**\r\n * Diagnostics notification are sent from the server to the client to signal\r\n * results of validation runs.\r\n */\r\nvar PublishDiagnosticsNotification;\r\n(function (PublishDiagnosticsNotification) {\r\n    PublishDiagnosticsNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/publishDiagnostics');\r\n})(PublishDiagnosticsNotification = exports.PublishDiagnosticsNotification || (exports.PublishDiagnosticsNotification = {}));\r\n/**\r\n * How a completion was triggered\r\n */\r\nvar CompletionTriggerKind;\r\n(function (CompletionTriggerKind) {\r\n    /**\r\n     * Completion was triggered by typing an identifier (24x7 code\r\n     * complete), manual invocation (e.g Ctrl+Space) or via API.\r\n     */\r\n    CompletionTriggerKind.Invoked = 1;\r\n    /**\r\n     * Completion was triggered by a trigger character specified by\r\n     * the `triggerCharacters` properties of the `CompletionRegistrationOptions`.\r\n     */\r\n    CompletionTriggerKind.TriggerCharacter = 2;\r\n    /**\r\n     * Completion was re-triggered as current completion list is incomplete\r\n     */\r\n    CompletionTriggerKind.TriggerForIncompleteCompletions = 3;\r\n})(CompletionTriggerKind = exports.CompletionTriggerKind || (exports.CompletionTriggerKind = {}));\r\n/**\r\n * Request to request completion at a given text document position. The request's\r\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response\r\n * is of type [CompletionItem[]](#CompletionItem) or [CompletionList](#CompletionList)\r\n * or a Thenable that resolves to such.\r\n *\r\n * The request can delay the computation of the [`detail`](#CompletionItem.detail)\r\n * and [`documentation`](#CompletionItem.documentation) properties to the `completionItem/resolve`\r\n * request. However, properties that are needed for the initial sorting and filtering, like `sortText`,\r\n * `filterText`, `insertText`, and `textEdit`, must not be changed during resolve.\r\n */\r\nvar CompletionRequest;\r\n(function (CompletionRequest) {\r\n    CompletionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/completion');\r\n})(CompletionRequest = exports.CompletionRequest || (exports.CompletionRequest = {}));\r\n/**\r\n * Request to resolve additional information for a given completion item.The request's\r\n * parameter is of type [CompletionItem](#CompletionItem) the response\r\n * is of type [CompletionItem](#CompletionItem) or a Thenable that resolves to such.\r\n */\r\nvar CompletionResolveRequest;\r\n(function (CompletionResolveRequest) {\r\n    CompletionResolveRequest.type = new vscode_jsonrpc_1.RequestType('completionItem/resolve');\r\n})(CompletionResolveRequest = exports.CompletionResolveRequest || (exports.CompletionResolveRequest = {}));\r\n//---- Hover Support -------------------------------\r\n/**\r\n * Request to request hover information at a given text document position. The request's\r\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response is of\r\n * type [Hover](#Hover) or a Thenable that resolves to such.\r\n */\r\nvar HoverRequest;\r\n(function (HoverRequest) {\r\n    HoverRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/hover');\r\n})(HoverRequest = exports.HoverRequest || (exports.HoverRequest = {}));\r\nvar SignatureHelpRequest;\r\n(function (SignatureHelpRequest) {\r\n    SignatureHelpRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/signatureHelp');\r\n})(SignatureHelpRequest = exports.SignatureHelpRequest || (exports.SignatureHelpRequest = {}));\r\n//---- Goto Definition -------------------------------------\r\n/**\r\n * A request to resolve the definition location of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPosition]\r\n * (#TextDocumentPosition) the response is of either type [Definition](#Definition)\r\n * or a typed array of [DefinitionLink](#DefinitionLink) or a Thenable that resolves\r\n * to such.\r\n */\r\nvar DefinitionRequest;\r\n(function (DefinitionRequest) {\r\n    DefinitionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/definition');\r\n})(DefinitionRequest = exports.DefinitionRequest || (exports.DefinitionRequest = {}));\r\n/**\r\n * A request to resolve project-wide references for the symbol denoted\r\n * by the given text document position. The request's parameter is of\r\n * type [ReferenceParams](#ReferenceParams) the response is of type\r\n * [Location[]](#Location) or a Thenable that resolves to such.\r\n */\r\nvar ReferencesRequest;\r\n(function (ReferencesRequest) {\r\n    ReferencesRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/references');\r\n})(ReferencesRequest = exports.ReferencesRequest || (exports.ReferencesRequest = {}));\r\n//---- Document Highlight ----------------------------------\r\n/**\r\n * Request to resolve a [DocumentHighlight](#DocumentHighlight) for a given\r\n * text document position. The request's parameter is of type [TextDocumentPosition]\r\n * (#TextDocumentPosition) the request response is of type [DocumentHighlight[]]\r\n * (#DocumentHighlight) or a Thenable that resolves to such.\r\n */\r\nvar DocumentHighlightRequest;\r\n(function (DocumentHighlightRequest) {\r\n    DocumentHighlightRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentHighlight');\r\n})(DocumentHighlightRequest = exports.DocumentHighlightRequest || (exports.DocumentHighlightRequest = {}));\r\n//---- Document Symbol Provider ---------------------------\r\n/**\r\n * A request to list all symbols found in a given text document. The request's\r\n * parameter is of type [TextDocumentIdentifier](#TextDocumentIdentifier) the\r\n * response is of type [SymbolInformation[]](#SymbolInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar DocumentSymbolRequest;\r\n(function (DocumentSymbolRequest) {\r\n    DocumentSymbolRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentSymbol');\r\n})(DocumentSymbolRequest = exports.DocumentSymbolRequest || (exports.DocumentSymbolRequest = {}));\r\n//---- Workspace Symbol Provider ---------------------------\r\n/**\r\n * A request to list project-wide symbols matching the query string given\r\n * by the [WorkspaceSymbolParams](#WorkspaceSymbolParams). The response is\r\n * of type [SymbolInformation[]](#SymbolInformation) or a Thenable that\r\n * resolves to such.\r\n */\r\nvar WorkspaceSymbolRequest;\r\n(function (WorkspaceSymbolRequest) {\r\n    WorkspaceSymbolRequest.type = new vscode_jsonrpc_1.RequestType('workspace/symbol');\r\n})(WorkspaceSymbolRequest = exports.WorkspaceSymbolRequest || (exports.WorkspaceSymbolRequest = {}));\r\n/**\r\n * A request to provide commands for the given text document and range.\r\n */\r\nvar CodeActionRequest;\r\n(function (CodeActionRequest) {\r\n    CodeActionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/codeAction');\r\n})(CodeActionRequest = exports.CodeActionRequest || (exports.CodeActionRequest = {}));\r\n/**\r\n * A request to provide code lens for the given text document.\r\n */\r\nvar CodeLensRequest;\r\n(function (CodeLensRequest) {\r\n    CodeLensRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/codeLens');\r\n})(CodeLensRequest = exports.CodeLensRequest || (exports.CodeLensRequest = {}));\r\n/**\r\n * A request to resolve a command for a given code lens.\r\n */\r\nvar CodeLensResolveRequest;\r\n(function (CodeLensResolveRequest) {\r\n    CodeLensResolveRequest.type = new vscode_jsonrpc_1.RequestType('codeLens/resolve');\r\n})(CodeLensResolveRequest = exports.CodeLensResolveRequest || (exports.CodeLensResolveRequest = {}));\r\n/**\r\n * A request to to format a whole document.\r\n */\r\nvar DocumentFormattingRequest;\r\n(function (DocumentFormattingRequest) {\r\n    DocumentFormattingRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/formatting');\r\n})(DocumentFormattingRequest = exports.DocumentFormattingRequest || (exports.DocumentFormattingRequest = {}));\r\n/**\r\n * A request to to format a range in a document.\r\n */\r\nvar DocumentRangeFormattingRequest;\r\n(function (DocumentRangeFormattingRequest) {\r\n    DocumentRangeFormattingRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/rangeFormatting');\r\n})(DocumentRangeFormattingRequest = exports.DocumentRangeFormattingRequest || (exports.DocumentRangeFormattingRequest = {}));\r\n/**\r\n * A request to format a document on type.\r\n */\r\nvar DocumentOnTypeFormattingRequest;\r\n(function (DocumentOnTypeFormattingRequest) {\r\n    DocumentOnTypeFormattingRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/onTypeFormatting');\r\n})(DocumentOnTypeFormattingRequest = exports.DocumentOnTypeFormattingRequest || (exports.DocumentOnTypeFormattingRequest = {}));\r\n/**\r\n * A request to rename a symbol.\r\n */\r\nvar RenameRequest;\r\n(function (RenameRequest) {\r\n    RenameRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/rename');\r\n})(RenameRequest = exports.RenameRequest || (exports.RenameRequest = {}));\r\n/**\r\n * A request to test and perform the setup necessary for a rename.\r\n */\r\nvar PrepareRenameRequest;\r\n(function (PrepareRenameRequest) {\r\n    PrepareRenameRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/prepareRename');\r\n})(PrepareRenameRequest = exports.PrepareRenameRequest || (exports.PrepareRenameRequest = {}));\r\n/**\r\n * A request to provide document links\r\n */\r\nvar DocumentLinkRequest;\r\n(function (DocumentLinkRequest) {\r\n    DocumentLinkRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentLink');\r\n})(DocumentLinkRequest = exports.DocumentLinkRequest || (exports.DocumentLinkRequest = {}));\r\n/**\r\n * Request to resolve additional information for a given document link. The request's\r\n * parameter is of type [DocumentLink](#DocumentLink) the response\r\n * is of type [DocumentLink](#DocumentLink) or a Thenable that resolves to such.\r\n */\r\nvar DocumentLinkResolveRequest;\r\n(function (DocumentLinkResolveRequest) {\r\n    DocumentLinkResolveRequest.type = new vscode_jsonrpc_1.RequestType('documentLink/resolve');\r\n})(DocumentLinkResolveRequest = exports.DocumentLinkResolveRequest || (exports.DocumentLinkResolveRequest = {}));\r\n/**\r\n * A request send from the client to the server to execute a command. The request might return\r\n * a workspace edit which the client will apply to the workspace.\r\n */\r\nvar ExecuteCommandRequest;\r\n(function (ExecuteCommandRequest) {\r\n    ExecuteCommandRequest.type = new vscode_jsonrpc_1.RequestType('workspace/executeCommand');\r\n})(ExecuteCommandRequest = exports.ExecuteCommandRequest || (exports.ExecuteCommandRequest = {}));\r\n/**\r\n * A request sent from the server to the client to modified certain resources.\r\n */\r\nvar ApplyWorkspaceEditRequest;\r\n(function (ApplyWorkspaceEditRequest) {\r\n    ApplyWorkspaceEditRequest.type = new vscode_jsonrpc_1.RequestType('workspace/applyEdit');\r\n})(ApplyWorkspaceEditRequest = exports.ApplyWorkspaceEditRequest || (exports.ApplyWorkspaceEditRequest = {}));\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nexports.ErrorCodes = vscode_jsonrpc_1.ErrorCodes;\r\nexports.ResponseError = vscode_jsonrpc_1.ResponseError;\r\nexports.CancellationToken = vscode_jsonrpc_1.CancellationToken;\r\nexports.CancellationTokenSource = vscode_jsonrpc_1.CancellationTokenSource;\r\nexports.Disposable = vscode_jsonrpc_1.Disposable;\r\nexports.Event = vscode_jsonrpc_1.Event;\r\nexports.Emitter = vscode_jsonrpc_1.Emitter;\r\nexports.Trace = vscode_jsonrpc_1.Trace;\r\nexports.TraceFormat = vscode_jsonrpc_1.TraceFormat;\r\nexports.SetTraceNotification = vscode_jsonrpc_1.SetTraceNotification;\r\nexports.LogTraceNotification = vscode_jsonrpc_1.LogTraceNotification;\r\nexports.RequestType = vscode_jsonrpc_1.RequestType;\r\nexports.RequestType0 = vscode_jsonrpc_1.RequestType0;\r\nexports.NotificationType = vscode_jsonrpc_1.NotificationType;\r\nexports.NotificationType0 = vscode_jsonrpc_1.NotificationType0;\r\nexports.MessageReader = vscode_jsonrpc_1.MessageReader;\r\nexports.MessageWriter = vscode_jsonrpc_1.MessageWriter;\r\nexports.ConnectionStrategy = vscode_jsonrpc_1.ConnectionStrategy;\r\nexports.StreamMessageReader = vscode_jsonrpc_1.StreamMessageReader;\r\nexports.StreamMessageWriter = vscode_jsonrpc_1.StreamMessageWriter;\r\nexports.IPCMessageReader = vscode_jsonrpc_1.IPCMessageReader;\r\nexports.IPCMessageWriter = vscode_jsonrpc_1.IPCMessageWriter;\r\nexports.createClientPipeTransport = vscode_jsonrpc_1.createClientPipeTransport;\r\nexports.createServerPipeTransport = vscode_jsonrpc_1.createServerPipeTransport;\r\nexports.generateRandomPipeName = vscode_jsonrpc_1.generateRandomPipeName;\r\nexports.createClientSocketTransport = vscode_jsonrpc_1.createClientSocketTransport;\r\nexports.createServerSocketTransport = vscode_jsonrpc_1.createServerSocketTransport;\r\n__export(require(\"vscode-languageserver-types\"));\r\n__export(require(\"./protocol\"));\r\nfunction createProtocolConnection(reader, writer, logger, strategy) {\r\n    return vscode_jsonrpc_1.createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createProtocolConnection = createProtocolConnection;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return typeof value === 'number' || value instanceof Number;\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return value instanceof Error;\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return typeof value === 'function';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\nfunction typedArray(value, check) {\r\n    return Array.isArray(value) && value.every(check);\r\n}\r\nexports.typedArray = typedArray;\r\nfunction thenable(value) {\r\n    return value && func(value.then);\r\n}\r\nexports.thenable = thenable;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nclass ProtocolCompletionItem extends code.CompletionItem {\r\n    constructor(label) {\r\n        super(label);\r\n    }\r\n}\r\nexports.default = ProtocolCompletionItem;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nclass ProtocolCodeLens extends code.CodeLens {\r\n    constructor(range) {\r\n        super(range);\r\n    }\r\n}\r\nexports.default = ProtocolCodeLens;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nclass ProtocolDocumentLink extends code.DocumentLink {\r\n    constructor(range, target) {\r\n        super(range, target);\r\n    }\r\n}\r\nexports.default = ProtocolDocumentLink;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nconst proto = require(\"vscode-languageserver-protocol\");\r\nconst Is = require(\"./utils/is\");\r\nconst protocolCompletionItem_1 = require(\"./protocolCompletionItem\");\r\nconst protocolCodeLens_1 = require(\"./protocolCodeLens\");\r\nconst protocolDocumentLink_1 = require(\"./protocolDocumentLink\");\r\nfunction createConverter(uriConverter) {\r\n    const nullConverter = (value) => value.toString();\r\n    const _uriConverter = uriConverter || nullConverter;\r\n    function asUri(value) {\r\n        return _uriConverter(value);\r\n    }\r\n    function asTextDocumentIdentifier(textDocument) {\r\n        return {\r\n            uri: _uriConverter(textDocument.uri)\r\n        };\r\n    }\r\n    function asVersionedTextDocumentIdentifier(textDocument) {\r\n        return {\r\n            uri: _uriConverter(textDocument.uri),\r\n            version: textDocument.version\r\n        };\r\n    }\r\n    function asOpenTextDocumentParams(textDocument) {\r\n        return {\r\n            textDocument: {\r\n                uri: _uriConverter(textDocument.uri),\r\n                languageId: textDocument.languageId,\r\n                version: textDocument.version,\r\n                text: textDocument.getText()\r\n            }\r\n        };\r\n    }\r\n    function isTextDocumentChangeEvent(value) {\r\n        let candidate = value;\r\n        return !!candidate.document && !!candidate.contentChanges;\r\n    }\r\n    function isTextDocument(value) {\r\n        let candidate = value;\r\n        return !!candidate.uri && !!candidate.version;\r\n    }\r\n    function asChangeTextDocumentParams(arg) {\r\n        if (isTextDocument(arg)) {\r\n            let result = {\r\n                textDocument: {\r\n                    uri: _uriConverter(arg.uri),\r\n                    version: arg.version\r\n                },\r\n                contentChanges: [{ text: arg.getText() }]\r\n            };\r\n            return result;\r\n        }\r\n        else if (isTextDocumentChangeEvent(arg)) {\r\n            let document = arg.document;\r\n            let result = {\r\n                textDocument: {\r\n                    uri: _uriConverter(document.uri),\r\n                    version: document.version\r\n                },\r\n                contentChanges: arg.contentChanges.map((change) => {\r\n                    let range = change.range;\r\n                    return {\r\n                        range: {\r\n                            start: { line: range.start.line, character: range.start.character },\r\n                            end: { line: range.end.line, character: range.end.character }\r\n                        },\r\n                        rangeLength: change.rangeLength,\r\n                        text: change.text\r\n                    };\r\n                })\r\n            };\r\n            return result;\r\n        }\r\n        else {\r\n            throw Error('Unsupported text document change parameter');\r\n        }\r\n    }\r\n    function asCloseTextDocumentParams(textDocument) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument)\r\n        };\r\n    }\r\n    function asSaveTextDocumentParams(textDocument, includeContent = false) {\r\n        let result = {\r\n            textDocument: asVersionedTextDocumentIdentifier(textDocument)\r\n        };\r\n        if (includeContent) {\r\n            result.text = textDocument.getText();\r\n        }\r\n        return result;\r\n    }\r\n    function asTextDocumentSaveReason(reason) {\r\n        switch (reason) {\r\n            case code.TextDocumentSaveReason.Manual:\r\n                return proto.TextDocumentSaveReason.Manual;\r\n            case code.TextDocumentSaveReason.AfterDelay:\r\n                return proto.TextDocumentSaveReason.AfterDelay;\r\n            case code.TextDocumentSaveReason.FocusOut:\r\n                return proto.TextDocumentSaveReason.FocusOut;\r\n        }\r\n        return proto.TextDocumentSaveReason.Manual;\r\n    }\r\n    function asWillSaveTextDocumentParams(event) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(event.document),\r\n            reason: asTextDocumentSaveReason(event.reason)\r\n        };\r\n    }\r\n    function asTextDocumentPositionParams(textDocument, position) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument),\r\n            position: asWorkerPosition(position)\r\n        };\r\n    }\r\n    function asTriggerKind(triggerKind) {\r\n        switch (triggerKind) {\r\n            case code.CompletionTriggerKind.TriggerCharacter:\r\n                return proto.CompletionTriggerKind.TriggerCharacter;\r\n            case code.CompletionTriggerKind.TriggerForIncompleteCompletions:\r\n                return proto.CompletionTriggerKind.TriggerForIncompleteCompletions;\r\n            default:\r\n                return proto.CompletionTriggerKind.Invoked;\r\n        }\r\n    }\r\n    function asCompletionParams(textDocument, position, context) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument),\r\n            position: asWorkerPosition(position),\r\n            context: {\r\n                triggerKind: asTriggerKind(context.triggerKind),\r\n                triggerCharacter: context.triggerCharacter\r\n            }\r\n        };\r\n    }\r\n    function asWorkerPosition(position) {\r\n        return { line: position.line, character: position.character };\r\n    }\r\n    function asPosition(value) {\r\n        if (value === void 0) {\r\n            return undefined;\r\n        }\r\n        else if (value === null) {\r\n            return null;\r\n        }\r\n        return { line: value.line, character: value.character };\r\n    }\r\n    function asRange(value) {\r\n        if (value === void 0 || value === null) {\r\n            return value;\r\n        }\r\n        return { start: asPosition(value.start), end: asPosition(value.end) };\r\n    }\r\n    function asDiagnosticSeverity(value) {\r\n        switch (value) {\r\n            case code.DiagnosticSeverity.Error:\r\n                return proto.DiagnosticSeverity.Error;\r\n            case code.DiagnosticSeverity.Warning:\r\n                return proto.DiagnosticSeverity.Warning;\r\n            case code.DiagnosticSeverity.Information:\r\n                return proto.DiagnosticSeverity.Information;\r\n            case code.DiagnosticSeverity.Hint:\r\n                return proto.DiagnosticSeverity.Hint;\r\n        }\r\n    }\r\n    function asDiagnostic(item) {\r\n        let result = proto.Diagnostic.create(asRange(item.range), item.message);\r\n        if (Is.number(item.severity)) {\r\n            result.severity = asDiagnosticSeverity(item.severity);\r\n        }\r\n        if (Is.number(item.code) || Is.string(item.code)) {\r\n            result.code = item.code;\r\n        }\r\n        if (item.source) {\r\n            result.source = item.source;\r\n        }\r\n        return result;\r\n    }\r\n    function asDiagnostics(items) {\r\n        if (items === void 0 || items === null) {\r\n            return items;\r\n        }\r\n        return items.map(asDiagnostic);\r\n    }\r\n    function asDocumentation(format, documentation) {\r\n        switch (format) {\r\n            case '$string':\r\n                return documentation;\r\n            case proto.MarkupKind.PlainText:\r\n                return { kind: format, value: documentation };\r\n            case proto.MarkupKind.Markdown:\r\n                return { kind: format, value: documentation.value };\r\n            default:\r\n                return `Unsupported Markup content received. Kind is: ${format}`;\r\n        }\r\n    }\r\n    function asCompletionItemKind(value, original) {\r\n        if (original !== void 0) {\r\n            return original;\r\n        }\r\n        return value + 1;\r\n    }\r\n    function asCompletionItem(item) {\r\n        let result = { label: item.label };\r\n        let protocolItem = item instanceof protocolCompletionItem_1.default ? item : undefined;\r\n        if (item.detail) {\r\n            result.detail = item.detail;\r\n        }\r\n        // We only send items back we created. So this can't be something else than\r\n        // a string right now.\r\n        if (item.documentation) {\r\n            if (!protocolItem || protocolItem.documentationFormat === '$string') {\r\n                result.documentation = item.documentation;\r\n            }\r\n            else {\r\n                result.documentation = asDocumentation(protocolItem.documentationFormat, item.documentation);\r\n            }\r\n        }\r\n        if (item.filterText) {\r\n            result.filterText = item.filterText;\r\n        }\r\n        fillPrimaryInsertText(result, item);\r\n        if (Is.number(item.kind)) {\r\n            result.kind = asCompletionItemKind(item.kind, protocolItem && protocolItem.originalItemKind);\r\n        }\r\n        if (item.sortText) {\r\n            result.sortText = item.sortText;\r\n        }\r\n        if (item.additionalTextEdits) {\r\n            result.additionalTextEdits = asTextEdits(item.additionalTextEdits);\r\n        }\r\n        if (item.commitCharacters) {\r\n            result.commitCharacters = item.commitCharacters.slice();\r\n        }\r\n        if (item.command) {\r\n            result.command = asCommand(item.command);\r\n        }\r\n        if (item.preselect === true || item.preselect === false) {\r\n            result.preselect = item.preselect;\r\n        }\r\n        if (protocolItem) {\r\n            if (protocolItem.data !== void 0) {\r\n                result.data = protocolItem.data;\r\n            }\r\n            if (protocolItem.deprecated === true || protocolItem.deprecated === false) {\r\n                result.deprecated = protocolItem.deprecated;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    function fillPrimaryInsertText(target, source) {\r\n        let format = proto.InsertTextFormat.PlainText;\r\n        let text;\r\n        let range = undefined;\r\n        if (source.textEdit) {\r\n            text = source.textEdit.newText;\r\n            range = asRange(source.textEdit.range);\r\n        }\r\n        else if (source.insertText instanceof code.SnippetString) {\r\n            format = proto.InsertTextFormat.Snippet;\r\n            text = source.insertText.value;\r\n        }\r\n        else {\r\n            text = source.insertText;\r\n        }\r\n        if (source.range) {\r\n            range = asRange(source.range);\r\n        }\r\n        target.insertTextFormat = format;\r\n        if (source.fromEdit && text && range) {\r\n            target.textEdit = { newText: text, range: range };\r\n        }\r\n        else {\r\n            target.insertText = text;\r\n        }\r\n    }\r\n    function asTextEdit(edit) {\r\n        return { range: asRange(edit.range), newText: edit.newText };\r\n    }\r\n    function asTextEdits(edits) {\r\n        if (edits === void 0 || edits === null) {\r\n            return edits;\r\n        }\r\n        return edits.map(asTextEdit);\r\n    }\r\n    function asReferenceParams(textDocument, position, options) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument),\r\n            position: asWorkerPosition(position),\r\n            context: { includeDeclaration: options.includeDeclaration }\r\n        };\r\n    }\r\n    function asCodeActionContext(context) {\r\n        if (context === void 0 || context === null) {\r\n            return context;\r\n        }\r\n        return proto.CodeActionContext.create(asDiagnostics(context.diagnostics), Is.string(context.only) ? [context.only] : undefined);\r\n    }\r\n    function asCommand(item) {\r\n        let result = proto.Command.create(item.title, item.command);\r\n        if (item.arguments) {\r\n            result.arguments = item.arguments;\r\n        }\r\n        return result;\r\n    }\r\n    function asCodeLens(item) {\r\n        let result = proto.CodeLens.create(asRange(item.range));\r\n        if (item.command) {\r\n            result.command = asCommand(item.command);\r\n        }\r\n        if (item instanceof protocolCodeLens_1.default) {\r\n            if (item.data) {\r\n                result.data = item.data;\r\n            }\r\n            ;\r\n        }\r\n        return result;\r\n    }\r\n    function asFormattingOptions(item) {\r\n        return { tabSize: item.tabSize, insertSpaces: item.insertSpaces };\r\n    }\r\n    function asDocumentSymbolParams(textDocument) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument)\r\n        };\r\n    }\r\n    function asCodeLensParams(textDocument) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument)\r\n        };\r\n    }\r\n    function asDocumentLink(item) {\r\n        let result = proto.DocumentLink.create(asRange(item.range));\r\n        if (item.target) {\r\n            result.target = asUri(item.target);\r\n        }\r\n        let protocolItem = item instanceof protocolDocumentLink_1.default ? item : undefined;\r\n        if (protocolItem && protocolItem.data) {\r\n            result.data = protocolItem.data;\r\n        }\r\n        return result;\r\n    }\r\n    function asDocumentLinkParams(textDocument) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument)\r\n        };\r\n    }\r\n    return {\r\n        asUri,\r\n        asTextDocumentIdentifier,\r\n        asVersionedTextDocumentIdentifier,\r\n        asOpenTextDocumentParams,\r\n        asChangeTextDocumentParams,\r\n        asCloseTextDocumentParams,\r\n        asSaveTextDocumentParams,\r\n        asWillSaveTextDocumentParams,\r\n        asTextDocumentPositionParams,\r\n        asCompletionParams,\r\n        asWorkerPosition,\r\n        asRange,\r\n        asPosition,\r\n        asDiagnosticSeverity,\r\n        asDiagnostic,\r\n        asDiagnostics,\r\n        asCompletionItem,\r\n        asTextEdit,\r\n        asReferenceParams,\r\n        asCodeActionContext,\r\n        asCommand,\r\n        asCodeLens,\r\n        asFormattingOptions,\r\n        asDocumentSymbolParams,\r\n        asCodeLensParams,\r\n        asDocumentLink,\r\n        asDocumentLinkParams\r\n    };\r\n}\r\nexports.createConverter = createConverter;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nconst ls = require(\"vscode-languageserver-protocol\");\r\nconst Is = require(\"./utils/is\");\r\nconst protocolCompletionItem_1 = require(\"./protocolCompletionItem\");\r\nconst protocolCodeLens_1 = require(\"./protocolCodeLens\");\r\nconst protocolDocumentLink_1 = require(\"./protocolDocumentLink\");\r\nvar CodeBlock;\r\n(function (CodeBlock) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.string(candidate.language) && Is.string(candidate.value);\r\n    }\r\n    CodeBlock.is = is;\r\n})(CodeBlock || (CodeBlock = {}));\r\nfunction createConverter(uriConverter) {\r\n    const nullConverter = (value) => code.Uri.parse(value);\r\n    const _uriConverter = uriConverter || nullConverter;\r\n    function asUri(value) {\r\n        return _uriConverter(value);\r\n    }\r\n    function asDiagnostics(diagnostics) {\r\n        return diagnostics.map(asDiagnostic);\r\n    }\r\n    function asDiagnostic(diagnostic) {\r\n        let result = new code.Diagnostic(asRange(diagnostic.range), diagnostic.message, asDiagnosticSeverity(diagnostic.severity));\r\n        if (Is.number(diagnostic.code) || Is.string(diagnostic.code)) {\r\n            result.code = diagnostic.code;\r\n        }\r\n        if (diagnostic.source) {\r\n            result.source = diagnostic.source;\r\n        }\r\n        if (diagnostic.relatedInformation) {\r\n            result.relatedInformation = asRelatedInformation(diagnostic.relatedInformation);\r\n        }\r\n        return result;\r\n    }\r\n    function asRelatedInformation(relatedInformation) {\r\n        return relatedInformation.map(asDiagnosticRelatedInformation);\r\n    }\r\n    function asDiagnosticRelatedInformation(information) {\r\n        return new code.DiagnosticRelatedInformation(asLocation(information.location), information.message);\r\n    }\r\n    function asPosition(value) {\r\n        if (!value) {\r\n            return undefined;\r\n        }\r\n        return new code.Position(value.line, value.character);\r\n    }\r\n    function asRange(value) {\r\n        if (!value) {\r\n            return undefined;\r\n        }\r\n        return new code.Range(asPosition(value.start), asPosition(value.end));\r\n    }\r\n    function asDiagnosticSeverity(value) {\r\n        if (value === void 0 || value === null) {\r\n            return code.DiagnosticSeverity.Error;\r\n        }\r\n        switch (value) {\r\n            case ls.DiagnosticSeverity.Error:\r\n                return code.DiagnosticSeverity.Error;\r\n            case ls.DiagnosticSeverity.Warning:\r\n                return code.DiagnosticSeverity.Warning;\r\n            case ls.DiagnosticSeverity.Information:\r\n                return code.DiagnosticSeverity.Information;\r\n            case ls.DiagnosticSeverity.Hint:\r\n                return code.DiagnosticSeverity.Hint;\r\n        }\r\n        return code.DiagnosticSeverity.Error;\r\n    }\r\n    function asHoverContent(value) {\r\n        if (Is.string(value)) {\r\n            return new code.MarkdownString(value);\r\n        }\r\n        else if (CodeBlock.is(value)) {\r\n            let result = new code.MarkdownString();\r\n            return result.appendCodeblock(value.value, value.language);\r\n        }\r\n        else if (Array.isArray(value)) {\r\n            let result = [];\r\n            for (let element of value) {\r\n                let item = new code.MarkdownString();\r\n                if (CodeBlock.is(element)) {\r\n                    item.appendCodeblock(element.value, element.language);\r\n                }\r\n                else {\r\n                    item.appendMarkdown(element);\r\n                }\r\n                result.push(item);\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            let result;\r\n            switch (value.kind) {\r\n                case ls.MarkupKind.Markdown:\r\n                    return new code.MarkdownString(value.value);\r\n                case ls.MarkupKind.PlainText:\r\n                    result = new code.MarkdownString();\r\n                    result.appendText(value.value);\r\n                    return result;\r\n                default:\r\n                    result = new code.MarkdownString();\r\n                    result.appendText(`Unsupported Markup content received. Kind is: ${value.kind}`);\r\n                    return result;\r\n            }\r\n        }\r\n    }\r\n    function asDocumentation(value) {\r\n        if (Is.string(value)) {\r\n            return value;\r\n        }\r\n        else {\r\n            switch (value.kind) {\r\n                case ls.MarkupKind.Markdown:\r\n                    return new code.MarkdownString(value.value);\r\n                case ls.MarkupKind.PlainText:\r\n                    return value.value;\r\n                default:\r\n                    return `Unsupported Markup content received. Kind is: ${value.kind}`;\r\n            }\r\n        }\r\n    }\r\n    function asHover(hover) {\r\n        if (!hover) {\r\n            return undefined;\r\n        }\r\n        return new code.Hover(asHoverContent(hover.contents), asRange(hover.range));\r\n    }\r\n    function asCompletionResult(result) {\r\n        if (!result) {\r\n            return undefined;\r\n        }\r\n        if (Array.isArray(result)) {\r\n            let items = result;\r\n            return items.map(asCompletionItem);\r\n        }\r\n        let list = result;\r\n        return new code.CompletionList(list.items.map(asCompletionItem), list.isIncomplete);\r\n    }\r\n    function asCompletionItemKind(value) {\r\n        // Protocol item kind is 1 based, codes item kind is zero based.\r\n        if (ls.CompletionItemKind.Text <= value && value <= ls.CompletionItemKind.TypeParameter) {\r\n            return [value - 1, undefined];\r\n        }\r\n        ;\r\n        return [code.CompletionItemKind.Text, value];\r\n    }\r\n    function asCompletionItem(item) {\r\n        let result = new protocolCompletionItem_1.default(item.label);\r\n        if (item.detail) {\r\n            result.detail = item.detail;\r\n        }\r\n        if (item.documentation) {\r\n            result.documentation = asDocumentation(item.documentation);\r\n            result.documentationFormat = Is.string(item.documentation) ? '$string' : item.documentation.kind;\r\n        }\r\n        ;\r\n        if (item.filterText) {\r\n            result.filterText = item.filterText;\r\n        }\r\n        let insertText = asCompletionInsertText(item);\r\n        if (insertText) {\r\n            result.insertText = insertText.text;\r\n            result.range = insertText.range;\r\n            result.fromEdit = insertText.fromEdit;\r\n        }\r\n        if (Is.number(item.kind)) {\r\n            let [itemKind, original] = asCompletionItemKind(item.kind);\r\n            result.kind = itemKind;\r\n            if (original) {\r\n                result.originalItemKind = original;\r\n            }\r\n        }\r\n        if (item.sortText) {\r\n            result.sortText = item.sortText;\r\n        }\r\n        if (item.additionalTextEdits) {\r\n            result.additionalTextEdits = asTextEdits(item.additionalTextEdits);\r\n        }\r\n        if (Is.stringArray(item.commitCharacters)) {\r\n            result.commitCharacters = item.commitCharacters.slice();\r\n        }\r\n        if (item.command) {\r\n            result.command = asCommand(item.command);\r\n        }\r\n        if (item.deprecated === true || item.deprecated === false) {\r\n            result.deprecated = item.deprecated;\r\n        }\r\n        if (item.preselect === true || item.preselect === false) {\r\n            result.preselect = item.preselect;\r\n        }\r\n        if (item.data !== void 0) {\r\n            result.data = item.data;\r\n        }\r\n        return result;\r\n    }\r\n    function asCompletionInsertText(item) {\r\n        if (item.textEdit) {\r\n            if (item.insertTextFormat === ls.InsertTextFormat.Snippet) {\r\n                return { text: new code.SnippetString(item.textEdit.newText), range: asRange(item.textEdit.range), fromEdit: true };\r\n            }\r\n            else {\r\n                return { text: item.textEdit.newText, range: asRange(item.textEdit.range), fromEdit: true };\r\n            }\r\n        }\r\n        else if (item.insertText) {\r\n            if (item.insertTextFormat === ls.InsertTextFormat.Snippet) {\r\n                return { text: new code.SnippetString(item.insertText), fromEdit: false };\r\n            }\r\n            else {\r\n                return { text: item.insertText, fromEdit: false };\r\n            }\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    function asTextEdit(edit) {\r\n        if (!edit) {\r\n            return undefined;\r\n        }\r\n        return new code.TextEdit(asRange(edit.range), edit.newText);\r\n    }\r\n    function asTextEdits(items) {\r\n        if (!items) {\r\n            return undefined;\r\n        }\r\n        return items.map(asTextEdit);\r\n    }\r\n    function asSignatureHelp(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        let result = new code.SignatureHelp();\r\n        if (Is.number(item.activeSignature)) {\r\n            result.activeSignature = item.activeSignature;\r\n        }\r\n        else {\r\n            // activeSignature was optional in the past\r\n            result.activeSignature = 0;\r\n        }\r\n        if (Is.number(item.activeParameter)) {\r\n            result.activeParameter = item.activeParameter;\r\n        }\r\n        else {\r\n            // activeParameter was optional in the past\r\n            result.activeParameter = 0;\r\n        }\r\n        if (item.signatures) {\r\n            result.signatures = asSignatureInformations(item.signatures);\r\n        }\r\n        return result;\r\n    }\r\n    function asSignatureInformations(items) {\r\n        return items.map(asSignatureInformation);\r\n    }\r\n    function asSignatureInformation(item) {\r\n        let result = new code.SignatureInformation(item.label);\r\n        if (item.documentation) {\r\n            result.documentation = asDocumentation(item.documentation);\r\n        }\r\n        if (item.parameters) {\r\n            result.parameters = asParameterInformations(item.parameters);\r\n        }\r\n        return result;\r\n    }\r\n    function asParameterInformations(item) {\r\n        return item.map(asParameterInformation);\r\n    }\r\n    function asParameterInformation(item) {\r\n        let result = new code.ParameterInformation(item.label);\r\n        if (item.documentation) {\r\n            result.documentation = asDocumentation(item.documentation);\r\n        }\r\n        ;\r\n        return result;\r\n    }\r\n    function asLocation(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return new code.Location(_uriConverter(item.uri), asRange(item.range));\r\n    }\r\n    function asDeclarationResult(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return asLocationResult(item);\r\n    }\r\n    function asDefinitionResult(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return asLocationResult(item);\r\n    }\r\n    function asLocationLink(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return {\r\n            targetUri: _uriConverter(item.targetUri),\r\n            targetRange: asRange(item.targetSelectionRange),\r\n            originSelectionRange: asRange(item.originSelectionRange),\r\n            targetSelectionRange: asRange(item.targetSelectionRange)\r\n        };\r\n    }\r\n    function asLocationResult(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        if (Is.array(item)) {\r\n            if (item.length === 0) {\r\n                return [];\r\n            }\r\n            else if (ls.LocationLink.is(item[0])) {\r\n                let links = item;\r\n                return links.map((link) => asLocationLink(link));\r\n            }\r\n            else {\r\n                let locations = item;\r\n                return locations.map((location) => asLocation(location));\r\n            }\r\n        }\r\n        else if (ls.LocationLink.is(item)) {\r\n            return [asLocationLink(item)];\r\n        }\r\n        else {\r\n            return asLocation(item);\r\n        }\r\n    }\r\n    function asReferences(values) {\r\n        if (!values) {\r\n            return undefined;\r\n        }\r\n        return values.map(location => asLocation(location));\r\n    }\r\n    function asDocumentHighlights(values) {\r\n        if (!values) {\r\n            return undefined;\r\n        }\r\n        return values.map(asDocumentHighlight);\r\n    }\r\n    function asDocumentHighlight(item) {\r\n        let result = new code.DocumentHighlight(asRange(item.range));\r\n        if (Is.number(item.kind)) {\r\n            result.kind = asDocumentHighlightKind(item.kind);\r\n        }\r\n        return result;\r\n    }\r\n    function asDocumentHighlightKind(item) {\r\n        switch (item) {\r\n            case ls.DocumentHighlightKind.Text:\r\n                return code.DocumentHighlightKind.Text;\r\n            case ls.DocumentHighlightKind.Read:\r\n                return code.DocumentHighlightKind.Read;\r\n            case ls.DocumentHighlightKind.Write:\r\n                return code.DocumentHighlightKind.Write;\r\n        }\r\n        return code.DocumentHighlightKind.Text;\r\n    }\r\n    function asSymbolInformations(values, uri) {\r\n        if (!values) {\r\n            return undefined;\r\n        }\r\n        return values.map(information => asSymbolInformation(information, uri));\r\n    }\r\n    function asSymbolKind(item) {\r\n        if (item <= ls.SymbolKind.TypeParameter) {\r\n            // Symbol kind is one based in the protocol and zero based in code.\r\n            return item - 1;\r\n        }\r\n        return code.SymbolKind.Property;\r\n    }\r\n    function asSymbolInformation(item, uri) {\r\n        // Symbol kind is one based in the protocol and zero based in code.\r\n        let result = new code.SymbolInformation(item.name, asSymbolKind(item.kind), asRange(item.location.range), item.location.uri ? _uriConverter(item.location.uri) : uri);\r\n        if (item.containerName) {\r\n            result.containerName = item.containerName;\r\n        }\r\n        return result;\r\n    }\r\n    function asDocumentSymbols(values) {\r\n        if (values === void 0 || values === null) {\r\n            return undefined;\r\n        }\r\n        return values.map(asDocumentSymbol);\r\n    }\r\n    function asDocumentSymbol(value) {\r\n        let result = new code.DocumentSymbol(value.name, value.detail || '', asSymbolKind(value.kind), asRange(value.range), asRange(value.selectionRange));\r\n        if (value.children !== void 0 && value.children.length > 0) {\r\n            let children = [];\r\n            for (let child of value.children) {\r\n                children.push(asDocumentSymbol(child));\r\n            }\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    function asCommand(item) {\r\n        let result = { title: item.title, command: item.command };\r\n        if (item.arguments) {\r\n            result.arguments = item.arguments;\r\n        }\r\n        return result;\r\n    }\r\n    function asCommands(items) {\r\n        if (!items) {\r\n            return undefined;\r\n        }\r\n        return items.map(asCommand);\r\n    }\r\n    const kindMapping = new Map();\r\n    kindMapping.set('', code.CodeActionKind.Empty);\r\n    kindMapping.set(ls.CodeActionKind.QuickFix, code.CodeActionKind.QuickFix);\r\n    kindMapping.set(ls.CodeActionKind.Refactor, code.CodeActionKind.Refactor);\r\n    kindMapping.set(ls.CodeActionKind.RefactorExtract, code.CodeActionKind.RefactorExtract);\r\n    kindMapping.set(ls.CodeActionKind.RefactorInline, code.CodeActionKind.RefactorInline);\r\n    kindMapping.set(ls.CodeActionKind.RefactorRewrite, code.CodeActionKind.RefactorRewrite);\r\n    kindMapping.set(ls.CodeActionKind.Source, code.CodeActionKind.Source);\r\n    kindMapping.set(ls.CodeActionKind.SourceOrganizeImports, code.CodeActionKind.SourceOrganizeImports);\r\n    function asCodeActionKind(item) {\r\n        if (item === void 0 || item === null) {\r\n            return undefined;\r\n        }\r\n        let result = kindMapping.get(item);\r\n        if (result) {\r\n            return result;\r\n        }\r\n        let parts = item.split('.');\r\n        result = code.CodeActionKind.Empty;\r\n        for (let part of parts) {\r\n            result = result.append(part);\r\n        }\r\n        return result;\r\n    }\r\n    function asCodeActionKinds(items) {\r\n        if (items === void 0 || items === null) {\r\n            return undefined;\r\n        }\r\n        return items.map(kind => asCodeActionKind(kind));\r\n    }\r\n    function asCodeAction(item) {\r\n        if (item === void 0 || item === null) {\r\n            return undefined;\r\n        }\r\n        let result = new code.CodeAction(item.title);\r\n        if (item.kind !== void 0) {\r\n            result.kind = asCodeActionKind(item.kind);\r\n        }\r\n        if (item.diagnostics) {\r\n            result.diagnostics = asDiagnostics(item.diagnostics);\r\n        }\r\n        if (item.edit) {\r\n            result.edit = asWorkspaceEdit(item.edit);\r\n        }\r\n        if (item.command) {\r\n            result.command = asCommand(item.command);\r\n        }\r\n        return result;\r\n    }\r\n    function asCodeLens(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        let result = new protocolCodeLens_1.default(asRange(item.range));\r\n        if (item.command) {\r\n            result.command = asCommand(item.command);\r\n        }\r\n        if (item.data !== void 0 && item.data !== null) {\r\n            result.data = item.data;\r\n        }\r\n        return result;\r\n    }\r\n    function asCodeLenses(items) {\r\n        if (!items) {\r\n            return undefined;\r\n        }\r\n        return items.map((codeLens) => asCodeLens(codeLens));\r\n    }\r\n    function asWorkspaceEdit(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        let result = new code.WorkspaceEdit();\r\n        if (item.documentChanges) {\r\n            item.documentChanges.forEach(change => {\r\n                if (ls.CreateFile.is(change)) {\r\n                    result.createFile(_uriConverter(change.uri), change.options);\r\n                }\r\n                else if (ls.RenameFile.is(change)) {\r\n                    result.renameFile(_uriConverter(change.oldUri), _uriConverter(change.newUri), change.options);\r\n                }\r\n                else if (ls.DeleteFile.is(change)) {\r\n                    result.deleteFile(_uriConverter(change.uri), change.options);\r\n                }\r\n                else if (ls.TextDocumentEdit.is(change)) {\r\n                    result.set(_uriConverter(change.textDocument.uri), asTextEdits(change.edits));\r\n                }\r\n                else {\r\n                    console.error(`Unknown workspace edit change received:\\n${JSON.stringify(change, undefined, 4)}`);\r\n                }\r\n            });\r\n        }\r\n        else if (item.changes) {\r\n            Object.keys(item.changes).forEach(key => {\r\n                result.set(_uriConverter(key), asTextEdits(item.changes[key]));\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n    function asDocumentLink(item) {\r\n        let range = asRange(item.range);\r\n        let target = item.target ? asUri(item.target) : undefined;\r\n        // target must be optional in DocumentLink\r\n        let link = new protocolDocumentLink_1.default(range, target);\r\n        if (item.data !== void 0 && item.data !== null) {\r\n            link.data = item.data;\r\n        }\r\n        return link;\r\n    }\r\n    function asDocumentLinks(items) {\r\n        if (!items) {\r\n            return undefined;\r\n        }\r\n        return items.map(asDocumentLink);\r\n    }\r\n    function asColor(color) {\r\n        return new code.Color(color.red, color.green, color.blue, color.alpha);\r\n    }\r\n    function asColorInformation(ci) {\r\n        return new code.ColorInformation(asRange(ci.range), asColor(ci.color));\r\n    }\r\n    function asColorInformations(colorInformation) {\r\n        if (Array.isArray(colorInformation)) {\r\n            return colorInformation.map(asColorInformation);\r\n        }\r\n        return undefined;\r\n    }\r\n    function asColorPresentation(cp) {\r\n        let presentation = new code.ColorPresentation(cp.label);\r\n        presentation.additionalTextEdits = asTextEdits(cp.additionalTextEdits);\r\n        if (cp.textEdit) {\r\n            presentation.textEdit = asTextEdit(cp.textEdit);\r\n        }\r\n        return presentation;\r\n    }\r\n    function asColorPresentations(colorPresentations) {\r\n        if (Array.isArray(colorPresentations)) {\r\n            return colorPresentations.map(asColorPresentation);\r\n        }\r\n        return undefined;\r\n    }\r\n    function asFoldingRangeKind(kind) {\r\n        if (kind) {\r\n            switch (kind) {\r\n                case ls.FoldingRangeKind.Comment:\r\n                    return code.FoldingRangeKind.Comment;\r\n                case ls.FoldingRangeKind.Imports:\r\n                    return code.FoldingRangeKind.Imports;\r\n                case ls.FoldingRangeKind.Region:\r\n                    return code.FoldingRangeKind.Region;\r\n            }\r\n        }\r\n        return void 0;\r\n    }\r\n    function asFoldingRange(r) {\r\n        return new code.FoldingRange(r.startLine, r.endLine, asFoldingRangeKind(r.kind));\r\n    }\r\n    function asFoldingRanges(foldingRanges) {\r\n        if (Array.isArray(foldingRanges)) {\r\n            return foldingRanges.map(asFoldingRange);\r\n        }\r\n        return void 0;\r\n    }\r\n    return {\r\n        asUri,\r\n        asDiagnostics,\r\n        asDiagnostic,\r\n        asRange,\r\n        asPosition,\r\n        asDiagnosticSeverity,\r\n        asHover,\r\n        asCompletionResult,\r\n        asCompletionItem,\r\n        asTextEdit,\r\n        asTextEdits,\r\n        asSignatureHelp,\r\n        asSignatureInformations,\r\n        asSignatureInformation,\r\n        asParameterInformations,\r\n        asParameterInformation,\r\n        asDeclarationResult,\r\n        asDefinitionResult,\r\n        asLocation,\r\n        asReferences,\r\n        asDocumentHighlights,\r\n        asDocumentHighlight,\r\n        asDocumentHighlightKind,\r\n        asSymbolInformations,\r\n        asSymbolInformation,\r\n        asDocumentSymbols,\r\n        asDocumentSymbol,\r\n        asCommand,\r\n        asCommands,\r\n        asCodeAction,\r\n        asCodeActionKind,\r\n        asCodeActionKinds,\r\n        asCodeLens,\r\n        asCodeLenses,\r\n        asWorkspaceEdit,\r\n        asDocumentLink,\r\n        asDocumentLinks,\r\n        asFoldingRangeKind,\r\n        asFoldingRange,\r\n        asFoldingRanges,\r\n        asColor,\r\n        asColorInformation,\r\n        asColorInformations,\r\n        asColorPresentation,\r\n        asColorPresentations\r\n    };\r\n}\r\nexports.createConverter = createConverter;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Delayer {\r\n    constructor(defaultDelay) {\r\n        this.defaultDelay = defaultDelay;\r\n        this.timeout = undefined;\r\n        this.completionPromise = undefined;\r\n        this.onSuccess = undefined;\r\n        this.task = undefined;\r\n    }\r\n    trigger(task, delay = this.defaultDelay) {\r\n        this.task = task;\r\n        if (delay >= 0) {\r\n            this.cancelTimeout();\r\n        }\r\n        if (!this.completionPromise) {\r\n            this.completionPromise = new Promise((resolve) => {\r\n                this.onSuccess = resolve;\r\n            }).then(() => {\r\n                this.completionPromise = undefined;\r\n                this.onSuccess = undefined;\r\n                var result = this.task();\r\n                this.task = undefined;\r\n                return result;\r\n            });\r\n        }\r\n        if (delay >= 0 || this.timeout === void 0) {\r\n            this.timeout = setTimeout(() => {\r\n                this.timeout = undefined;\r\n                this.onSuccess(undefined);\r\n            }, delay >= 0 ? delay : this.defaultDelay);\r\n        }\r\n        return this.completionPromise;\r\n    }\r\n    forceDelivery() {\r\n        if (!this.completionPromise) {\r\n            return undefined;\r\n        }\r\n        this.cancelTimeout();\r\n        let result = this.task();\r\n        this.completionPromise = undefined;\r\n        this.onSuccess = undefined;\r\n        this.task = undefined;\r\n        return result;\r\n    }\r\n    isTriggered() {\r\n        return this.timeout !== void 0;\r\n    }\r\n    cancel() {\r\n        this.cancelTimeout();\r\n        this.completionPromise = undefined;\r\n    }\r\n    cancelTimeout() {\r\n        if (this.timeout !== void 0) {\r\n            clearTimeout(this.timeout);\r\n            this.timeout = undefined;\r\n        }\r\n    }\r\n}\r\nexports.Delayer = Delayer;\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass ValueUUID {\r\n    constructor(_value) {\r\n        this._value = _value;\r\n        // empty\r\n    }\r\n    asHex() {\r\n        return this._value;\r\n    }\r\n    equals(other) {\r\n        return this.asHex() === other.asHex();\r\n    }\r\n}\r\nclass V4UUID extends ValueUUID {\r\n    constructor() {\r\n        super([\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            '4',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._oneOf(V4UUID._timeHighBits),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n        ].join(''));\r\n    }\r\n    static _oneOf(array) {\r\n        return array[Math.floor(array.length * Math.random())];\r\n    }\r\n    static _randomHex() {\r\n        return V4UUID._oneOf(V4UUID._chars);\r\n    }\r\n}\r\nV4UUID._chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\r\nV4UUID._timeHighBits = ['8', '9', 'a', 'b'];\r\n/**\r\n * An empty UUID that contains only zeros.\r\n */\r\nexports.empty = new ValueUUID('00000000-0000-0000-0000-000000000000');\r\nfunction v4() {\r\n    return new V4UUID();\r\n}\r\nexports.v4 = v4;\r\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\r\nfunction isUUID(value) {\r\n    return _UUIDPattern.test(value);\r\n}\r\nexports.isUUID = isUUID;\r\n/**\r\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\r\n * @param value A uuid string.\r\n */\r\nfunction parse(value) {\r\n    if (!isUUID(value)) {\r\n        throw new Error('invalid uuid');\r\n    }\r\n    return new ValueUUID(value);\r\n}\r\nexports.parse = parse;\r\nfunction generateUuid() {\r\n    return v4().asHex();\r\n}\r\nexports.generateUuid = generateUuid;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst c2p = require(\"./codeConverter\");\r\nconst p2c = require(\"./protocolConverter\");\r\nconst Is = require(\"./utils/is\");\r\nconst async_1 = require(\"./utils/async\");\r\nconst UUID = require(\"./utils/uuid\");\r\n__export(require(\"vscode-languageserver-protocol\"));\r\nclass ConsoleLogger {\r\n    error(message) {\r\n        console.error(message);\r\n    }\r\n    warn(message) {\r\n        console.warn(message);\r\n    }\r\n    info(message) {\r\n        console.info(message);\r\n    }\r\n    log(message) {\r\n        console.log(message);\r\n    }\r\n}\r\nfunction createConnection(input, output, errorHandler, closeHandler) {\r\n    let logger = new ConsoleLogger();\r\n    let connection = vscode_languageserver_protocol_1.createProtocolConnection(input, output, logger);\r\n    connection.onError((data) => { errorHandler(data[0], data[1], data[2]); });\r\n    connection.onClose(closeHandler);\r\n    let result = {\r\n        listen: () => connection.listen(),\r\n        sendRequest: (type, ...params) => connection.sendRequest(Is.string(type) ? type : type.method, ...params),\r\n        onRequest: (type, handler) => connection.onRequest(Is.string(type) ? type : type.method, handler),\r\n        sendNotification: (type, params) => connection.sendNotification(Is.string(type) ? type : type.method, params),\r\n        onNotification: (type, handler) => connection.onNotification(Is.string(type) ? type : type.method, handler),\r\n        trace: (value, tracer, sendNotificationOrTraceOptions) => {\r\n            const defaultTraceOptions = {\r\n                sendNotification: false,\r\n                traceFormat: vscode_languageserver_protocol_1.TraceFormat.Text\r\n            };\r\n            if (sendNotificationOrTraceOptions === void 0) {\r\n                connection.trace(value, tracer, defaultTraceOptions);\r\n            }\r\n            else if (Is.boolean(sendNotificationOrTraceOptions)) {\r\n                connection.trace(value, tracer, sendNotificationOrTraceOptions);\r\n            }\r\n            else {\r\n                connection.trace(value, tracer, sendNotificationOrTraceOptions);\r\n            }\r\n        },\r\n        initialize: (params) => connection.sendRequest(vscode_languageserver_protocol_1.InitializeRequest.type, params),\r\n        shutdown: () => connection.sendRequest(vscode_languageserver_protocol_1.ShutdownRequest.type, undefined),\r\n        exit: () => connection.sendNotification(vscode_languageserver_protocol_1.ExitNotification.type),\r\n        onLogMessage: (handler) => connection.onNotification(vscode_languageserver_protocol_1.LogMessageNotification.type, handler),\r\n        onShowMessage: (handler) => connection.onNotification(vscode_languageserver_protocol_1.ShowMessageNotification.type, handler),\r\n        onTelemetry: (handler) => connection.onNotification(vscode_languageserver_protocol_1.TelemetryEventNotification.type, handler),\r\n        didChangeConfiguration: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, params),\r\n        didChangeWatchedFiles: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type, params),\r\n        didOpenTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, params),\r\n        didChangeTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params),\r\n        didCloseTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, params),\r\n        didSaveTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, params),\r\n        onDiagnostics: (handler) => connection.onNotification(vscode_languageserver_protocol_1.PublishDiagnosticsNotification.type, handler),\r\n        dispose: () => connection.dispose()\r\n    };\r\n    return result;\r\n}\r\n/**\r\n * An action to be performed when the connection is producing errors.\r\n */\r\nvar ErrorAction;\r\n(function (ErrorAction) {\r\n    /**\r\n     * Continue running the server.\r\n     */\r\n    ErrorAction[ErrorAction[\"Continue\"] = 1] = \"Continue\";\r\n    /**\r\n     * Shutdown the server.\r\n     */\r\n    ErrorAction[ErrorAction[\"Shutdown\"] = 2] = \"Shutdown\";\r\n})(ErrorAction = exports.ErrorAction || (exports.ErrorAction = {}));\r\n/**\r\n * An action to be performed when the connection to a server got closed.\r\n */\r\nvar CloseAction;\r\n(function (CloseAction) {\r\n    /**\r\n     * Don't restart the server. The connection stays closed.\r\n     */\r\n    CloseAction[CloseAction[\"DoNotRestart\"] = 1] = \"DoNotRestart\";\r\n    /**\r\n     * Restart the server.\r\n     */\r\n    CloseAction[CloseAction[\"Restart\"] = 2] = \"Restart\";\r\n})(CloseAction = exports.CloseAction || (exports.CloseAction = {}));\r\nclass DefaultErrorHandler {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.restarts = [];\r\n    }\r\n    error(_error, _message, count) {\r\n        if (count && count <= 3) {\r\n            return ErrorAction.Continue;\r\n        }\r\n        return ErrorAction.Shutdown;\r\n    }\r\n    closed() {\r\n        this.restarts.push(Date.now());\r\n        if (this.restarts.length < 5) {\r\n            return CloseAction.Restart;\r\n        }\r\n        else {\r\n            let diff = this.restarts[this.restarts.length - 1] - this.restarts[0];\r\n            if (diff <= 3 * 60 * 1000) {\r\n                vscode_1.window.showErrorMessage(`The ${this.name} server crashed 5 times in the last 3 minutes. The server will not be restarted.`);\r\n                return CloseAction.DoNotRestart;\r\n            }\r\n            else {\r\n                this.restarts.shift();\r\n                return CloseAction.Restart;\r\n            }\r\n        }\r\n    }\r\n}\r\nvar RevealOutputChannelOn;\r\n(function (RevealOutputChannelOn) {\r\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Info\"] = 1] = \"Info\";\r\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Warn\"] = 2] = \"Warn\";\r\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Error\"] = 3] = \"Error\";\r\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Never\"] = 4] = \"Never\";\r\n})(RevealOutputChannelOn = exports.RevealOutputChannelOn || (exports.RevealOutputChannelOn = {}));\r\nvar State;\r\n(function (State) {\r\n    State[State[\"Stopped\"] = 1] = \"Stopped\";\r\n    State[State[\"Starting\"] = 3] = \"Starting\";\r\n    State[State[\"Running\"] = 2] = \"Running\";\r\n})(State = exports.State || (exports.State = {}));\r\nvar ClientState;\r\n(function (ClientState) {\r\n    ClientState[ClientState[\"Initial\"] = 0] = \"Initial\";\r\n    ClientState[ClientState[\"Starting\"] = 1] = \"Starting\";\r\n    ClientState[ClientState[\"StartFailed\"] = 2] = \"StartFailed\";\r\n    ClientState[ClientState[\"Running\"] = 3] = \"Running\";\r\n    ClientState[ClientState[\"Stopping\"] = 4] = \"Stopping\";\r\n    ClientState[ClientState[\"Stopped\"] = 5] = \"Stopped\";\r\n})(ClientState || (ClientState = {}));\r\nconst SupportedSymbolKinds = [\r\n    vscode_languageserver_protocol_1.SymbolKind.File,\r\n    vscode_languageserver_protocol_1.SymbolKind.Module,\r\n    vscode_languageserver_protocol_1.SymbolKind.Namespace,\r\n    vscode_languageserver_protocol_1.SymbolKind.Package,\r\n    vscode_languageserver_protocol_1.SymbolKind.Class,\r\n    vscode_languageserver_protocol_1.SymbolKind.Method,\r\n    vscode_languageserver_protocol_1.SymbolKind.Property,\r\n    vscode_languageserver_protocol_1.SymbolKind.Field,\r\n    vscode_languageserver_protocol_1.SymbolKind.Constructor,\r\n    vscode_languageserver_protocol_1.SymbolKind.Enum,\r\n    vscode_languageserver_protocol_1.SymbolKind.Interface,\r\n    vscode_languageserver_protocol_1.SymbolKind.Function,\r\n    vscode_languageserver_protocol_1.SymbolKind.Variable,\r\n    vscode_languageserver_protocol_1.SymbolKind.Constant,\r\n    vscode_languageserver_protocol_1.SymbolKind.String,\r\n    vscode_languageserver_protocol_1.SymbolKind.Number,\r\n    vscode_languageserver_protocol_1.SymbolKind.Boolean,\r\n    vscode_languageserver_protocol_1.SymbolKind.Array,\r\n    vscode_languageserver_protocol_1.SymbolKind.Object,\r\n    vscode_languageserver_protocol_1.SymbolKind.Key,\r\n    vscode_languageserver_protocol_1.SymbolKind.Null,\r\n    vscode_languageserver_protocol_1.SymbolKind.EnumMember,\r\n    vscode_languageserver_protocol_1.SymbolKind.Struct,\r\n    vscode_languageserver_protocol_1.SymbolKind.Event,\r\n    vscode_languageserver_protocol_1.SymbolKind.Operator,\r\n    vscode_languageserver_protocol_1.SymbolKind.TypeParameter\r\n];\r\nconst SupportedCompletionItemKinds = [\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Text,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Method,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Function,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Constructor,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Field,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Variable,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Class,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Interface,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Module,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Property,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Unit,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Value,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Enum,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Keyword,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Snippet,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Color,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.File,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Reference,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Folder,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.EnumMember,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Constant,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Struct,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Event,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Operator,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.TypeParameter\r\n];\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nvar DynamicFeature;\r\n(function (DynamicFeature) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.register) && Is.func(candidate.unregister) && Is.func(candidate.dispose) && candidate.messages !== void 0;\r\n    }\r\n    DynamicFeature.is = is;\r\n})(DynamicFeature || (DynamicFeature = {}));\r\nclass DocumentNotifiactions {\r\n    constructor(_client, _event, _type, _middleware, _createParams, _selectorFilter) {\r\n        this._client = _client;\r\n        this._event = _event;\r\n        this._type = _type;\r\n        this._middleware = _middleware;\r\n        this._createParams = _createParams;\r\n        this._selectorFilter = _selectorFilter;\r\n        this._selectors = new Map();\r\n    }\r\n    static textDocumentFilter(selectors, textDocument) {\r\n        for (const selector of selectors) {\r\n            if (vscode_1.languages.match(selector, textDocument)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    register(_message, data) {\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        if (!this._listener) {\r\n            this._listener = this._event(this.callback, this);\r\n        }\r\n        this._selectors.set(data.id, data.registerOptions.documentSelector);\r\n    }\r\n    callback(data) {\r\n        if (!this._selectorFilter || this._selectorFilter(this._selectors.values(), data)) {\r\n            if (this._middleware) {\r\n                this._middleware(data, (data) => this._client.sendNotification(this._type, this._createParams(data)));\r\n            }\r\n            else {\r\n                this._client.sendNotification(this._type, this._createParams(data));\r\n            }\r\n            this.notificationSent(data);\r\n        }\r\n    }\r\n    notificationSent(_data) {\r\n    }\r\n    unregister(id) {\r\n        this._selectors.delete(id);\r\n        if (this._selectors.size === 0 && this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n    dispose() {\r\n        this._selectors.clear();\r\n        if (this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n}\r\nclass DidOpenTextDocumentFeature extends DocumentNotifiactions {\r\n    constructor(client, _syncedDocuments) {\r\n        super(client, vscode_1.workspace.onDidOpenTextDocument, vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, client.clientOptions.middleware.didOpen, (textDocument) => client.code2ProtocolConverter.asOpenTextDocumentParams(textDocument), DocumentNotifiactions.textDocumentFilter);\r\n        this._syncedDocuments = _syncedDocuments;\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.openClose) {\r\n            this.register(this.messages, { id: UUID.generateUuid(), registerOptions: { documentSelector: documentSelector } });\r\n        }\r\n    }\r\n    register(message, data) {\r\n        super.register(message, data);\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        let documentSelector = data.registerOptions.documentSelector;\r\n        vscode_1.workspace.textDocuments.forEach((textDocument) => {\r\n            let uri = textDocument.uri.toString();\r\n            if (this._syncedDocuments.has(uri)) {\r\n                return;\r\n            }\r\n            if (vscode_1.languages.match(documentSelector, textDocument)) {\r\n                let middleware = this._client.clientOptions.middleware;\r\n                let didOpen = (textDocument) => {\r\n                    this._client.sendNotification(this._type, this._createParams(textDocument));\r\n                };\r\n                if (middleware.didOpen) {\r\n                    middleware.didOpen(textDocument, didOpen);\r\n                }\r\n                else {\r\n                    didOpen(textDocument);\r\n                }\r\n                this._syncedDocuments.set(uri, textDocument);\r\n            }\r\n        });\r\n    }\r\n    notificationSent(textDocument) {\r\n        super.notificationSent(textDocument);\r\n        this._syncedDocuments.set(textDocument.uri.toString(), textDocument);\r\n    }\r\n}\r\nclass DidCloseTextDocumentFeature extends DocumentNotifiactions {\r\n    constructor(client, _syncedDocuments) {\r\n        super(client, vscode_1.workspace.onDidCloseTextDocument, vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, client.clientOptions.middleware.didClose, (textDocument) => client.code2ProtocolConverter.asCloseTextDocumentParams(textDocument), DocumentNotifiactions.textDocumentFilter);\r\n        this._syncedDocuments = _syncedDocuments;\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.openClose) {\r\n            this.register(this.messages, { id: UUID.generateUuid(), registerOptions: { documentSelector: documentSelector } });\r\n        }\r\n    }\r\n    notificationSent(textDocument) {\r\n        super.notificationSent(textDocument);\r\n        this._syncedDocuments.delete(textDocument.uri.toString());\r\n    }\r\n    unregister(id) {\r\n        let selector = this._selectors.get(id);\r\n        // The super call removed the selector from the map\r\n        // of selectors.\r\n        super.unregister(id);\r\n        let selectors = this._selectors.values();\r\n        this._syncedDocuments.forEach((textDocument) => {\r\n            if (vscode_1.languages.match(selector, textDocument) && !this._selectorFilter(selectors, textDocument)) {\r\n                let middleware = this._client.clientOptions.middleware;\r\n                let didClose = (textDocument) => {\r\n                    this._client.sendNotification(this._type, this._createParams(textDocument));\r\n                };\r\n                this._syncedDocuments.delete(textDocument.uri.toString());\r\n                if (middleware.didClose) {\r\n                    middleware.didClose(textDocument, didClose);\r\n                }\r\n                else {\r\n                    didClose(textDocument);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nclass DidChangeTextDocumentFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._changeData = new Map();\r\n        this._forcingDelivery = false;\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.change !== void 0 && textDocumentSyncOptions.change !== vscode_languageserver_protocol_1.TextDocumentSyncKind.None) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: Object.assign({}, { documentSelector: documentSelector }, { syncKind: textDocumentSyncOptions.change })\r\n            });\r\n        }\r\n    }\r\n    register(_message, data) {\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        if (!this._listener) {\r\n            this._listener = vscode_1.workspace.onDidChangeTextDocument(this.callback, this);\r\n        }\r\n        this._changeData.set(data.id, {\r\n            documentSelector: data.registerOptions.documentSelector,\r\n            syncKind: data.registerOptions.syncKind\r\n        });\r\n    }\r\n    callback(event) {\r\n        // Text document changes are send for dirty changes as well. We don't\r\n        // have dirty / undirty events in the LSP so we ignore content changes\r\n        // with length zero.\r\n        if (event.contentChanges.length === 0) {\r\n            return;\r\n        }\r\n        for (const changeData of this._changeData.values()) {\r\n            if (vscode_1.languages.match(changeData.documentSelector, event.document)) {\r\n                let middleware = this._client.clientOptions.middleware;\r\n                if (changeData.syncKind === vscode_languageserver_protocol_1.TextDocumentSyncKind.Incremental) {\r\n                    let params = this._client.code2ProtocolConverter.asChangeTextDocumentParams(event);\r\n                    if (middleware.didChange) {\r\n                        middleware.didChange(event, () => this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params));\r\n                    }\r\n                    else {\r\n                        this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params);\r\n                    }\r\n                }\r\n                else if (changeData.syncKind === vscode_languageserver_protocol_1.TextDocumentSyncKind.Full) {\r\n                    let didChange = (event) => {\r\n                        if (this._changeDelayer) {\r\n                            if (this._changeDelayer.uri !== event.document.uri.toString()) {\r\n                                // Use this force delivery to track boolean state. Otherwise we might call two times.\r\n                                this.forceDelivery();\r\n                                this._changeDelayer.uri = event.document.uri.toString();\r\n                            }\r\n                            this._changeDelayer.delayer.trigger(() => {\r\n                                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, this._client.code2ProtocolConverter.asChangeTextDocumentParams(event.document));\r\n                            });\r\n                        }\r\n                        else {\r\n                            this._changeDelayer = {\r\n                                uri: event.document.uri.toString(),\r\n                                delayer: new async_1.Delayer(200)\r\n                            };\r\n                            this._changeDelayer.delayer.trigger(() => {\r\n                                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, this._client.code2ProtocolConverter.asChangeTextDocumentParams(event.document));\r\n                            }, -1);\r\n                        }\r\n                    };\r\n                    if (middleware.didChange) {\r\n                        middleware.didChange(event, didChange);\r\n                    }\r\n                    else {\r\n                        didChange(event);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    unregister(id) {\r\n        this._changeData.delete(id);\r\n        if (this._changeData.size === 0 && this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n    dispose() {\r\n        this._changeDelayer = undefined;\r\n        this._forcingDelivery = false;\r\n        this._changeData.clear();\r\n        if (this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n    forceDelivery() {\r\n        if (this._forcingDelivery || !this._changeDelayer) {\r\n            return;\r\n        }\r\n        try {\r\n            this._forcingDelivery = true;\r\n            this._changeDelayer.delayer.forceDelivery();\r\n        }\r\n        finally {\r\n            this._forcingDelivery = false;\r\n        }\r\n    }\r\n}\r\nclass WillSaveFeature extends DocumentNotifiactions {\r\n    constructor(client) {\r\n        super(client, vscode_1.workspace.onWillSaveTextDocument, vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type, client.clientOptions.middleware.willSave, (willSaveEvent) => client.code2ProtocolConverter.asWillSaveTextDocumentParams(willSaveEvent), (selectors, willSaveEvent) => DocumentNotifiactions.textDocumentFilter(selectors, willSaveEvent.document));\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        let value = ensure(ensure(capabilities, 'textDocument'), 'synchronization');\r\n        value.willSave = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.willSave) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: { documentSelector: documentSelector }\r\n            });\r\n        }\r\n    }\r\n}\r\nclass WillSaveWaitUntilFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._selectors = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        let value = ensure(ensure(capabilities, 'textDocument'), 'synchronization');\r\n        value.willSaveWaitUntil = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.willSaveWaitUntil) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: { documentSelector: documentSelector }\r\n            });\r\n        }\r\n    }\r\n    register(_message, data) {\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        if (!this._listener) {\r\n            this._listener = vscode_1.workspace.onWillSaveTextDocument(this.callback, this);\r\n        }\r\n        this._selectors.set(data.id, data.registerOptions.documentSelector);\r\n    }\r\n    callback(event) {\r\n        if (DocumentNotifiactions.textDocumentFilter(this._selectors.values(), event.document)) {\r\n            let middleware = this._client.clientOptions.middleware;\r\n            let willSaveWaitUntil = (event) => {\r\n                return this._client.sendRequest(vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type, this._client.code2ProtocolConverter.asWillSaveTextDocumentParams(event)).then((edits) => {\r\n                    let vEdits = this._client.protocol2CodeConverter.asTextEdits(edits);\r\n                    return vEdits === void 0 ? [] : vEdits;\r\n                });\r\n            };\r\n            event.waitUntil(middleware.willSaveWaitUntil\r\n                ? middleware.willSaveWaitUntil(event, willSaveWaitUntil)\r\n                : willSaveWaitUntil(event));\r\n        }\r\n    }\r\n    unregister(id) {\r\n        this._selectors.delete(id);\r\n        if (this._selectors.size === 0 && this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n    dispose() {\r\n        this._selectors.clear();\r\n        if (this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n}\r\nclass DidSaveTextDocumentFeature extends DocumentNotifiactions {\r\n    constructor(client) {\r\n        super(client, vscode_1.workspace.onDidSaveTextDocument, vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, client.clientOptions.middleware.didSave, (textDocument) => client.code2ProtocolConverter.asSaveTextDocumentParams(textDocument, this._includeText), DocumentNotifiactions.textDocumentFilter);\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').didSave = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.save) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: Object.assign({}, { documentSelector: documentSelector }, { includeText: !!textDocumentSyncOptions.save.includeText })\r\n            });\r\n        }\r\n    }\r\n    register(method, data) {\r\n        this._includeText = !!data.registerOptions.includeText;\r\n        super.register(method, data);\r\n    }\r\n}\r\nclass FileSystemWatcherFeature {\r\n    constructor(_client, _notifyFileEvent) {\r\n        this._client = _client;\r\n        this._notifyFileEvent = _notifyFileEvent;\r\n        this._watchers = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'workspace'), 'didChangeWatchedFiles').dynamicRegistration = true;\r\n    }\r\n    initialize(_capabilities, _documentSelector) {\r\n    }\r\n    register(_method, data) {\r\n        if (!Array.isArray(data.registerOptions.watchers)) {\r\n            return;\r\n        }\r\n        let disposeables = [];\r\n        for (let watcher of data.registerOptions.watchers) {\r\n            if (!Is.string(watcher.globPattern)) {\r\n                continue;\r\n            }\r\n            let watchCreate = true, watchChange = true, watchDelete = true;\r\n            if (watcher.kind !== void 0 && watcher.kind !== null) {\r\n                watchCreate = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Create) !== 0;\r\n                watchChange = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Change) != 0;\r\n                watchDelete = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Delete) != 0;\r\n            }\r\n            let fileSystemWatcher = vscode_1.workspace.createFileSystemWatcher(watcher.globPattern, !watchCreate, !watchChange, !watchDelete);\r\n            this.hookListeners(fileSystemWatcher, watchCreate, watchChange, watchDelete);\r\n            disposeables.push(fileSystemWatcher);\r\n        }\r\n        this._watchers.set(data.id, disposeables);\r\n    }\r\n    registerRaw(id, fileSystemWatchers) {\r\n        let disposeables = [];\r\n        for (let fileSystemWatcher of fileSystemWatchers) {\r\n            this.hookListeners(fileSystemWatcher, true, true, true, disposeables);\r\n        }\r\n        this._watchers.set(id, disposeables);\r\n    }\r\n    hookListeners(fileSystemWatcher, watchCreate, watchChange, watchDelete, listeners) {\r\n        if (watchCreate) {\r\n            fileSystemWatcher.onDidCreate((resource) => this._notifyFileEvent({\r\n                uri: this._client.code2ProtocolConverter.asUri(resource),\r\n                type: vscode_languageserver_protocol_1.FileChangeType.Created\r\n            }), null, listeners);\r\n        }\r\n        if (watchChange) {\r\n            fileSystemWatcher.onDidChange((resource) => this._notifyFileEvent({\r\n                uri: this._client.code2ProtocolConverter.asUri(resource),\r\n                type: vscode_languageserver_protocol_1.FileChangeType.Changed\r\n            }), null, listeners);\r\n        }\r\n        if (watchDelete) {\r\n            fileSystemWatcher.onDidDelete((resource) => this._notifyFileEvent({\r\n                uri: this._client.code2ProtocolConverter.asUri(resource),\r\n                type: vscode_languageserver_protocol_1.FileChangeType.Deleted\r\n            }), null, listeners);\r\n        }\r\n    }\r\n    unregister(id) {\r\n        let disposeables = this._watchers.get(id);\r\n        if (disposeables) {\r\n            for (let disposable of disposeables) {\r\n                disposable.dispose();\r\n            }\r\n        }\r\n    }\r\n    dispose() {\r\n        this._watchers.forEach((disposeables) => {\r\n            for (let disposable of disposeables) {\r\n                disposable.dispose();\r\n            }\r\n        });\r\n        this._watchers.clear();\r\n    }\r\n}\r\nclass TextDocumentFeature {\r\n    constructor(_client, _message) {\r\n        this._client = _client;\r\n        this._message = _message;\r\n        this._providers = new Map();\r\n    }\r\n    get messages() {\r\n        return this._message;\r\n    }\r\n    register(message, data) {\r\n        if (message.method !== this.messages.method) {\r\n            throw new Error(`Register called on wrong feature. Requested ${message.method} but reached feature ${this.messages.method}`);\r\n        }\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        let provider = this.registerLanguageProvider(data.registerOptions);\r\n        if (provider) {\r\n            this._providers.set(data.id, provider);\r\n        }\r\n    }\r\n    unregister(id) {\r\n        let provider = this._providers.get(id);\r\n        if (provider) {\r\n            provider.dispose();\r\n        }\r\n    }\r\n    dispose() {\r\n        this._providers.forEach((value) => {\r\n            value.dispose();\r\n        });\r\n        this._providers.clear();\r\n    }\r\n}\r\nexports.TextDocumentFeature = TextDocumentFeature;\r\nclass WorkspaceFeature {\r\n    constructor(_client, _message) {\r\n        this._client = _client;\r\n        this._message = _message;\r\n        this._providers = new Map();\r\n    }\r\n    get messages() {\r\n        return this._message;\r\n    }\r\n    register(message, data) {\r\n        if (message.method !== this.messages.method) {\r\n            throw new Error(`Register called on wron feature. Requested ${message.method} but reached feature ${this.messages.method}`);\r\n        }\r\n        let provider = this.registerLanguageProvider(data.registerOptions);\r\n        if (provider) {\r\n            this._providers.set(data.id, provider);\r\n        }\r\n    }\r\n    unregister(id) {\r\n        let provider = this._providers.get(id);\r\n        if (provider) {\r\n            provider.dispose();\r\n        }\r\n    }\r\n    dispose() {\r\n        this._providers.forEach((value) => {\r\n            value.dispose();\r\n        });\r\n        this._providers.clear();\r\n    }\r\n}\r\nclass CompletionItemFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.CompletionRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let completion = ensure(ensure(capabilites, 'textDocument'), 'completion');\r\n        completion.dynamicRegistration = true;\r\n        completion.contextSupport = true;\r\n        completion.completionItem = {\r\n            snippetSupport: true,\r\n            commitCharactersSupport: true,\r\n            documentationFormat: [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText],\r\n            deprecatedSupport: true,\r\n            preselectSupport: true\r\n        };\r\n        completion.completionItemKind = { valueSet: SupportedCompletionItemKinds };\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.completionProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.completionProvider)\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let triggerCharacters = options.triggerCharacters || [];\r\n        let client = this._client;\r\n        let provideCompletionItems = (document, position, context, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.CompletionRequest.type, client.code2ProtocolConverter.asCompletionParams(document, position, context), token).then(client.protocol2CodeConverter.asCompletionResult, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.CompletionRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let resolveCompletionItem = (item, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, client.code2ProtocolConverter.asCompletionItem(item), token).then(client.protocol2CodeConverter.asCompletionItem, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, error);\r\n                return Promise.resolve(item);\r\n            });\r\n        };\r\n        let middleware = this._client.clientOptions.middleware;\r\n        return vscode_1.languages.registerCompletionItemProvider(options.documentSelector, {\r\n            provideCompletionItems: (document, position, token, context) => {\r\n                return middleware.provideCompletionItem\r\n                    ? middleware.provideCompletionItem(document, position, context, token, provideCompletionItems)\r\n                    : provideCompletionItems(document, position, context, token);\r\n            },\r\n            resolveCompletionItem: options.resolveProvider\r\n                ? (item, token) => {\r\n                    return middleware.resolveCompletionItem\r\n                        ? middleware.resolveCompletionItem(item, token, resolveCompletionItem)\r\n                        : resolveCompletionItem(item, token);\r\n                }\r\n                : undefined\r\n        }, ...triggerCharacters);\r\n    }\r\n}\r\nclass HoverFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.HoverRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        const hoverCapability = (ensure(ensure(capabilites, 'textDocument'), 'hover'));\r\n        hoverCapability.dynamicRegistration = true;\r\n        hoverCapability.contentFormat = [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText];\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.hoverProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideHover = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.HoverRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asHover, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.HoverRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerHoverProvider(options.documentSelector, {\r\n            provideHover: (document, position, token) => {\r\n                return middleware.provideHover\r\n                    ? middleware.provideHover(document, position, token, provideHover)\r\n                    : provideHover(document, position, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass SignatureHelpFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.SignatureHelpRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let config = ensure(ensure(capabilites, 'textDocument'), 'signatureHelp');\r\n        config.dynamicRegistration = true;\r\n        config.signatureInformation = { documentationFormat: [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText] };\r\n        config.signatureInformation.parameterInformation = { labelOffsetSupport: true };\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.signatureHelpProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.signatureHelpProvider)\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let providerSignatureHelp = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asSignatureHelp, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        let triggerCharacters = options.triggerCharacters || [];\r\n        return vscode_1.languages.registerSignatureHelpProvider(options.documentSelector, {\r\n            provideSignatureHelp: (document, position, token) => {\r\n                return middleware.provideSignatureHelp\r\n                    ? middleware.provideSignatureHelp(document, position, token, providerSignatureHelp)\r\n                    : providerSignatureHelp(document, position, token);\r\n            }\r\n        }, ...triggerCharacters);\r\n    }\r\n}\r\nclass DefinitionFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DefinitionRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let definitionSupport = ensure(ensure(capabilites, 'textDocument'), 'definition');\r\n        definitionSupport.dynamicRegistration = true;\r\n        definitionSupport.linkSupport = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.definitionProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDefinition = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDefinitionProvider(options.documentSelector, {\r\n            provideDefinition: (document, position, token) => {\r\n                return middleware.provideDefinition\r\n                    ? middleware.provideDefinition(document, position, token, provideDefinition)\r\n                    : provideDefinition(document, position, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass ReferencesFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.ReferencesRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'references').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.referencesProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let providerReferences = (document, position, options, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, client.code2ProtocolConverter.asReferenceParams(document, position, options), token).then(client.protocol2CodeConverter.asReferences, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerReferenceProvider(options.documentSelector, {\r\n            provideReferences: (document, position, options, token) => {\r\n                return middleware.provideReferences\r\n                    ? middleware.provideReferences(document, position, options, token, providerReferences)\r\n                    : providerReferences(document, position, options, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass DocumentHighlightFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentHighlightRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'documentHighlight').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentHighlightProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDocumentHighlights = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDocumentHighlights, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDocumentHighlightProvider(options.documentSelector, {\r\n            provideDocumentHighlights: (document, position, token) => {\r\n                return middleware.provideDocumentHighlights\r\n                    ? middleware.provideDocumentHighlights(document, position, token, provideDocumentHighlights)\r\n                    : provideDocumentHighlights(document, position, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass DocumentSymbolFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentSymbolRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let symbolCapabilities = ensure(ensure(capabilites, 'textDocument'), 'documentSymbol');\r\n        symbolCapabilities.dynamicRegistration = true;\r\n        symbolCapabilities.symbolKind = {\r\n            valueSet: SupportedSymbolKinds\r\n        };\r\n        symbolCapabilities.hierarchicalDocumentSymbolSupport = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentSymbolProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDocumentSymbols = (document, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, client.code2ProtocolConverter.asDocumentSymbolParams(document), token).then((data) => {\r\n                if (data === null) {\r\n                    return undefined;\r\n                }\r\n                if (data.length === 0) {\r\n                    return [];\r\n                }\r\n                else {\r\n                    let element = data[0];\r\n                    if (vscode_languageserver_protocol_1.DocumentSymbol.is(element)) {\r\n                        return client.protocol2CodeConverter.asDocumentSymbols(data);\r\n                    }\r\n                    else {\r\n                        return client.protocol2CodeConverter.asSymbolInformations(data);\r\n                    }\r\n                }\r\n            }, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDocumentSymbolProvider(options.documentSelector, {\r\n            provideDocumentSymbols: (document, token) => {\r\n                return middleware.provideDocumentSymbols\r\n                    ? middleware.provideDocumentSymbols(document, token, provideDocumentSymbols)\r\n                    : provideDocumentSymbols(document, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass WorkspaceSymbolFeature extends WorkspaceFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let symbolCapabilities = ensure(ensure(capabilites, 'workspace'), 'symbol');\r\n        symbolCapabilities.dynamicRegistration = true;\r\n        symbolCapabilities.symbolKind = {\r\n            valueSet: SupportedSymbolKinds\r\n        };\r\n    }\r\n    initialize(capabilities) {\r\n        if (!capabilities.workspaceSymbolProvider) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: undefined\r\n        });\r\n    }\r\n    registerLanguageProvider(_options) {\r\n        let client = this._client;\r\n        let provideWorkspaceSymbols = (query, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, { query }, token).then(client.protocol2CodeConverter.asSymbolInformations, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerWorkspaceSymbolProvider({\r\n            provideWorkspaceSymbols: (query, token) => {\r\n                return middleware.provideWorkspaceSymbols\r\n                    ? middleware.provideWorkspaceSymbols(query, token, provideWorkspaceSymbols)\r\n                    : provideWorkspaceSymbols(query, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass CodeActionFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.CodeActionRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        const cap = ensure(ensure(capabilites, 'textDocument'), 'codeAction');\r\n        cap.dynamicRegistration = true;\r\n        cap.codeActionLiteralSupport = {\r\n            codeActionKind: {\r\n                valueSet: [\r\n                    '',\r\n                    vscode_languageserver_protocol_1.CodeActionKind.QuickFix,\r\n                    vscode_languageserver_protocol_1.CodeActionKind.Refactor,\r\n                    vscode_languageserver_protocol_1.CodeActionKind.RefactorExtract,\r\n                    vscode_languageserver_protocol_1.CodeActionKind.RefactorInline,\r\n                    vscode_languageserver_protocol_1.CodeActionKind.RefactorRewrite,\r\n                    vscode_languageserver_protocol_1.CodeActionKind.Source,\r\n                    vscode_languageserver_protocol_1.CodeActionKind.SourceOrganizeImports\r\n                ]\r\n            }\r\n        };\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.codeActionProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        let codeActionKinds = undefined;\r\n        if (!Is.boolean(capabilities.codeActionProvider)) {\r\n            codeActionKinds = capabilities.codeActionProvider.codeActionKinds;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: { documentSelector: documentSelector, codeActionKinds }\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideCodeActions = (document, range, context, token) => {\r\n            let params = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                range: client.code2ProtocolConverter.asRange(range),\r\n                context: client.code2ProtocolConverter.asCodeActionContext(context)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, params, token).then((values) => {\r\n                if (values === null) {\r\n                    return undefined;\r\n                }\r\n                let result = [];\r\n                for (let item of values) {\r\n                    if (vscode_languageserver_protocol_1.Command.is(item)) {\r\n                        result.push(client.protocol2CodeConverter.asCommand(item));\r\n                    }\r\n                    else {\r\n                        result.push(client.protocol2CodeConverter.asCodeAction(item));\r\n                    }\r\n                    ;\r\n                }\r\n                return result;\r\n            }, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerCodeActionsProvider(options.documentSelector, {\r\n            provideCodeActions: (document, range, context, token) => {\r\n                return middleware.provideCodeActions\r\n                    ? middleware.provideCodeActions(document, range, context, token, provideCodeActions)\r\n                    : provideCodeActions(document, range, context, token);\r\n            }\r\n        }, options.codeActionKinds\r\n            ? { providedCodeActionKinds: client.protocol2CodeConverter.asCodeActionKinds(options.codeActionKinds) }\r\n            : undefined);\r\n    }\r\n}\r\nclass CodeLensFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.CodeLensRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'codeLens').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.codeLensProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.codeLensProvider)\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideCodeLenses = (document, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, client.code2ProtocolConverter.asCodeLensParams(document), token).then(client.protocol2CodeConverter.asCodeLenses, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let resolveCodeLens = (codeLens, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, client.code2ProtocolConverter.asCodeLens(codeLens), token).then(client.protocol2CodeConverter.asCodeLens, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, error);\r\n                return codeLens;\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerCodeLensProvider(options.documentSelector, {\r\n            provideCodeLenses: (document, token) => {\r\n                return middleware.provideCodeLenses\r\n                    ? middleware.provideCodeLenses(document, token, provideCodeLenses)\r\n                    : provideCodeLenses(document, token);\r\n            },\r\n            resolveCodeLens: (options.resolveProvider)\r\n                ? (codeLens, token) => {\r\n                    return middleware.resolveCodeLens\r\n                        ? middleware.resolveCodeLens(codeLens, token, resolveCodeLens)\r\n                        : resolveCodeLens(codeLens, token);\r\n                }\r\n                : undefined\r\n        });\r\n    }\r\n}\r\nclass DocumentFormattingFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentFormattingRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'formatting').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentFormattingProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDocumentFormattingEdits = (document, options, token) => {\r\n            let params = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                options: client.code2ProtocolConverter.asFormattingOptions(options)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDocumentFormattingEditProvider(options.documentSelector, {\r\n            provideDocumentFormattingEdits: (document, options, token) => {\r\n                return middleware.provideDocumentFormattingEdits\r\n                    ? middleware.provideDocumentFormattingEdits(document, options, token, provideDocumentFormattingEdits)\r\n                    : provideDocumentFormattingEdits(document, options, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass DocumentRangeFormattingFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'rangeFormatting').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentRangeFormattingProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDocumentRangeFormattingEdits = (document, range, options, token) => {\r\n            let params = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                range: client.code2ProtocolConverter.asRange(range),\r\n                options: client.code2ProtocolConverter.asFormattingOptions(options)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDocumentRangeFormattingEditProvider(options.documentSelector, {\r\n            provideDocumentRangeFormattingEdits: (document, range, options, token) => {\r\n                return middleware.provideDocumentRangeFormattingEdits\r\n                    ? middleware.provideDocumentRangeFormattingEdits(document, range, options, token, provideDocumentRangeFormattingEdits)\r\n                    : provideDocumentRangeFormattingEdits(document, range, options, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass DocumentOnTypeFormattingFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'onTypeFormatting').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentOnTypeFormattingProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.documentOnTypeFormattingProvider)\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let moreTriggerCharacter = options.moreTriggerCharacter || [];\r\n        let provideOnTypeFormattingEdits = (document, position, ch, options, token) => {\r\n            let params = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                position: client.code2ProtocolConverter.asPosition(position),\r\n                ch: ch,\r\n                options: client.code2ProtocolConverter.asFormattingOptions(options)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerOnTypeFormattingEditProvider(options.documentSelector, {\r\n            provideOnTypeFormattingEdits: (document, position, ch, options, token) => {\r\n                return middleware.provideOnTypeFormattingEdits\r\n                    ? middleware.provideOnTypeFormattingEdits(document, position, ch, options, token, provideOnTypeFormattingEdits)\r\n                    : provideOnTypeFormattingEdits(document, position, ch, options, token);\r\n            }\r\n        }, options.firstTriggerCharacter, ...moreTriggerCharacter);\r\n    }\r\n}\r\nclass RenameFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.RenameRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let rename = ensure(ensure(capabilites, 'textDocument'), 'rename');\r\n        rename.dynamicRegistration = true;\r\n        rename.prepareSupport = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.renameProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        let options = Object.assign({}, { documentSelector: documentSelector });\r\n        if (Is.boolean(capabilities.renameProvider)) {\r\n            options.prepareProvider = false;\r\n        }\r\n        else {\r\n            options.prepareProvider = capabilities.renameProvider.prepareProvider;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: options\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideRenameEdits = (document, position, newName, token) => {\r\n            let params = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                position: client.code2ProtocolConverter.asPosition(position),\r\n                newName: newName\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.RenameRequest.type, params, token).then(client.protocol2CodeConverter.asWorkspaceEdit, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.RenameRequest.type, error);\r\n                return Promise.reject(new Error(error.message));\r\n            });\r\n        };\r\n        let prepareRename = (document, position, token) => {\r\n            let params = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                position: client.code2ProtocolConverter.asPosition(position),\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.PrepareRenameRequest.type, params, token).then((result) => {\r\n                if (vscode_languageserver_protocol_1.Range.is(result)) {\r\n                    return client.protocol2CodeConverter.asRange(result);\r\n                }\r\n                else if (result && result.range) {\r\n                    return {\r\n                        range: client.protocol2CodeConverter.asRange(result.range),\r\n                        placeholder: result.placeholder\r\n                    };\r\n                }\r\n                return null;\r\n            }, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.PrepareRenameRequest.type, error);\r\n                return Promise.reject(new Error(error.message));\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerRenameProvider(options.documentSelector, {\r\n            provideRenameEdits: (document, position, newName, token) => {\r\n                return middleware.provideRenameEdits\r\n                    ? middleware.provideRenameEdits(document, position, newName, token, provideRenameEdits)\r\n                    : provideRenameEdits(document, position, newName, token);\r\n            },\r\n            prepareRename: options.prepareProvider\r\n                ? (document, position, token) => {\r\n                    return middleware.prepareRename\r\n                        ? middleware.prepareRename(document, position, token, prepareRename)\r\n                        : prepareRename(document, position, token);\r\n                }\r\n                : undefined\r\n        });\r\n    }\r\n}\r\nclass DocumentLinkFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentLinkRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'documentLink').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentLinkProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.documentLinkProvider)\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDocumentLinks = (document, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, client.code2ProtocolConverter.asDocumentLinkParams(document), token).then(client.protocol2CodeConverter.asDocumentLinks, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, error);\r\n                Promise.resolve(new Error(error.message));\r\n            });\r\n        };\r\n        let resolveDocumentLink = (link, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, client.code2ProtocolConverter.asDocumentLink(link), token).then(client.protocol2CodeConverter.asDocumentLink, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, error);\r\n                Promise.resolve(new Error(error.message));\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDocumentLinkProvider(options.documentSelector, {\r\n            provideDocumentLinks: (document, token) => {\r\n                return middleware.provideDocumentLinks\r\n                    ? middleware.provideDocumentLinks(document, token, provideDocumentLinks)\r\n                    : provideDocumentLinks(document, token);\r\n            },\r\n            resolveDocumentLink: options.resolveProvider\r\n                ? (link, token) => {\r\n                    return middleware.resolveDocumentLink\r\n                        ? middleware.resolveDocumentLink(link, token, resolveDocumentLink)\r\n                        : resolveDocumentLink(link, token);\r\n                }\r\n                : undefined\r\n        });\r\n    }\r\n}\r\nclass ConfigurationFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._listeners = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'workspace'), 'didChangeConfiguration').dynamicRegistration = true;\r\n    }\r\n    initialize() {\r\n        let section = this._client.clientOptions.synchronize.configurationSection;\r\n        if (section !== void 0) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: {\r\n                    section: section\r\n                }\r\n            });\r\n        }\r\n    }\r\n    register(_message, data) {\r\n        let disposable = vscode_1.workspace.onDidChangeConfiguration((event) => {\r\n            this.onDidChangeConfiguration(data.registerOptions.section, event);\r\n        });\r\n        this._listeners.set(data.id, disposable);\r\n        if (data.registerOptions.section !== void 0) {\r\n            this.onDidChangeConfiguration(data.registerOptions.section, undefined);\r\n        }\r\n    }\r\n    unregister(id) {\r\n        let disposable = this._listeners.get(id);\r\n        if (disposable) {\r\n            this._listeners.delete(id);\r\n            disposable.dispose();\r\n        }\r\n    }\r\n    dispose() {\r\n        for (let disposable of this._listeners.values()) {\r\n            disposable.dispose();\r\n        }\r\n        this._listeners.clear();\r\n    }\r\n    onDidChangeConfiguration(configurationSection, event) {\r\n        let sections;\r\n        if (Is.string(configurationSection)) {\r\n            sections = [configurationSection];\r\n        }\r\n        else {\r\n            sections = configurationSection;\r\n        }\r\n        if (sections !== void 0 && event !== void 0) {\r\n            let affected = sections.some((section) => event.affectsConfiguration(section));\r\n            if (!affected) {\r\n                return;\r\n            }\r\n        }\r\n        let didChangeConfiguration = (sections) => {\r\n            if (sections === void 0) {\r\n                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, { settings: null });\r\n                return;\r\n            }\r\n            this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, { settings: this.extractSettingsInformation(sections) });\r\n        };\r\n        let middleware = this.getMiddleware();\r\n        middleware\r\n            ? middleware(sections, didChangeConfiguration)\r\n            : didChangeConfiguration(sections);\r\n    }\r\n    extractSettingsInformation(keys) {\r\n        function ensurePath(config, path) {\r\n            let current = config;\r\n            for (let i = 0; i < path.length - 1; i++) {\r\n                let obj = current[path[i]];\r\n                if (!obj) {\r\n                    obj = Object.create(null);\r\n                    current[path[i]] = obj;\r\n                }\r\n                current = obj;\r\n            }\r\n            return current;\r\n        }\r\n        let resource = this._client.clientOptions.workspaceFolder\r\n            ? this._client.clientOptions.workspaceFolder.uri\r\n            : undefined;\r\n        let result = Object.create(null);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            let key = keys[i];\r\n            let index = key.indexOf('.');\r\n            let config = null;\r\n            if (index >= 0) {\r\n                config = vscode_1.workspace.getConfiguration(key.substr(0, index), resource).get(key.substr(index + 1));\r\n            }\r\n            else {\r\n                config = vscode_1.workspace.getConfiguration(key, resource);\r\n            }\r\n            if (config) {\r\n                let path = keys[i].split('.');\r\n                ensurePath(result, path)[path[path.length - 1]] = config;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    getMiddleware() {\r\n        let middleware = this._client.clientOptions.middleware;\r\n        if (middleware.workspace && middleware.workspace.didChangeConfiguration) {\r\n            return middleware.workspace.didChangeConfiguration;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n}\r\nclass ExecuteCommandFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._commands = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.ExecuteCommandRequest.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'workspace'), 'executeCommand').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities) {\r\n        if (!capabilities.executeCommandProvider) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, capabilities.executeCommandProvider)\r\n        });\r\n    }\r\n    register(_message, data) {\r\n        let client = this._client;\r\n        if (data.registerOptions.commands) {\r\n            let disposeables = [];\r\n            for (const command of data.registerOptions.commands) {\r\n                disposeables.push(vscode_1.commands.registerCommand(command, (...args) => {\r\n                    let params = {\r\n                        command,\r\n                        arguments: args\r\n                    };\r\n                    return client.sendRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, params).then(undefined, (error) => {\r\n                        client.logFailedRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, error);\r\n                    });\r\n                }));\r\n            }\r\n            this._commands.set(data.id, disposeables);\r\n        }\r\n    }\r\n    unregister(id) {\r\n        let disposeables = this._commands.get(id);\r\n        if (disposeables) {\r\n            disposeables.forEach(disposable => disposable.dispose());\r\n        }\r\n    }\r\n    dispose() {\r\n        this._commands.forEach((value) => {\r\n            value.forEach(disposable => disposable.dispose());\r\n        });\r\n        this._commands.clear();\r\n    }\r\n}\r\nvar MessageTransports;\r\n(function (MessageTransports) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && vscode_languageserver_protocol_1.MessageReader.is(value.reader) && vscode_languageserver_protocol_1.MessageWriter.is(value.writer);\r\n    }\r\n    MessageTransports.is = is;\r\n})(MessageTransports = exports.MessageTransports || (exports.MessageTransports = {}));\r\nclass OnReady {\r\n    constructor(_resolve, _reject) {\r\n        this._resolve = _resolve;\r\n        this._reject = _reject;\r\n        this._used = false;\r\n    }\r\n    get isUsed() {\r\n        return this._used;\r\n    }\r\n    resolve() {\r\n        this._used = true;\r\n        this._resolve();\r\n    }\r\n    reject(error) {\r\n        this._used = true;\r\n        this._reject(error);\r\n    }\r\n}\r\nclass BaseLanguageClient {\r\n    constructor(id, name, clientOptions) {\r\n        this._traceFormat = vscode_languageserver_protocol_1.TraceFormat.Text;\r\n        this._features = [];\r\n        this._method2Message = new Map();\r\n        this._dynamicFeatures = new Map();\r\n        this._id = id;\r\n        this._name = name;\r\n        clientOptions = clientOptions || {};\r\n        this._clientOptions = {\r\n            documentSelector: clientOptions.documentSelector || [],\r\n            synchronize: clientOptions.synchronize || {},\r\n            diagnosticCollectionName: clientOptions.diagnosticCollectionName,\r\n            outputChannelName: clientOptions.outputChannelName || this._name,\r\n            revealOutputChannelOn: clientOptions.revealOutputChannelOn || RevealOutputChannelOn.Error,\r\n            stdioEncoding: clientOptions.stdioEncoding || 'utf8',\r\n            initializationOptions: clientOptions.initializationOptions,\r\n            initializationFailedHandler: clientOptions.initializationFailedHandler,\r\n            errorHandler: clientOptions.errorHandler || new DefaultErrorHandler(this._name),\r\n            middleware: clientOptions.middleware || {},\r\n            uriConverters: clientOptions.uriConverters,\r\n            workspaceFolder: clientOptions.workspaceFolder\r\n        };\r\n        this._clientOptions.synchronize = this._clientOptions.synchronize || {};\r\n        this.state = ClientState.Initial;\r\n        this._connectionPromise = undefined;\r\n        this._resolvedConnection = undefined;\r\n        this._initializeResult = undefined;\r\n        if (clientOptions.outputChannel) {\r\n            this._outputChannel = clientOptions.outputChannel;\r\n            this._disposeOutputChannel = false;\r\n        }\r\n        else {\r\n            this._outputChannel = undefined;\r\n            this._disposeOutputChannel = true;\r\n        }\r\n        this._listeners = undefined;\r\n        this._providers = undefined;\r\n        this._diagnostics = undefined;\r\n        this._fileEvents = [];\r\n        this._fileEventDelayer = new async_1.Delayer(250);\r\n        this._onReady = new Promise((resolve, reject) => {\r\n            this._onReadyCallbacks = new OnReady(resolve, reject);\r\n        });\r\n        this._onStop = undefined;\r\n        this._telemetryEmitter = new vscode_languageserver_protocol_1.Emitter();\r\n        this._stateChangeEmitter = new vscode_languageserver_protocol_1.Emitter();\r\n        this._tracer = {\r\n            log: (messageOrDataObject, data) => {\r\n                if (Is.string(messageOrDataObject)) {\r\n                    this.logTrace(messageOrDataObject, data);\r\n                }\r\n                else {\r\n                    this.logObjectTrace(messageOrDataObject);\r\n                }\r\n            },\r\n        };\r\n        this._c2p = c2p.createConverter(clientOptions.uriConverters ? clientOptions.uriConverters.code2Protocol : undefined);\r\n        this._p2c = p2c.createConverter(clientOptions.uriConverters ? clientOptions.uriConverters.protocol2Code : undefined);\r\n        this._syncedDocuments = new Map();\r\n        this.registerBuiltinFeatures();\r\n    }\r\n    get state() {\r\n        return this._state;\r\n    }\r\n    set state(value) {\r\n        let oldState = this.getPublicState();\r\n        this._state = value;\r\n        let newState = this.getPublicState();\r\n        if (newState !== oldState) {\r\n            this._stateChangeEmitter.fire({ oldState, newState });\r\n        }\r\n    }\r\n    getPublicState() {\r\n        if (this.state === ClientState.Running) {\r\n            return State.Running;\r\n        }\r\n        else if (this.state === ClientState.Starting) {\r\n            return State.Starting;\r\n        }\r\n        else {\r\n            return State.Stopped;\r\n        }\r\n    }\r\n    get initializeResult() {\r\n        return this._initializeResult;\r\n    }\r\n    sendRequest(type, ...params) {\r\n        if (!this.isConnectionActive()) {\r\n            throw new Error('Language client is not ready yet');\r\n        }\r\n        this.forceDocumentSync();\r\n        try {\r\n            return this._resolvedConnection.sendRequest(type, ...params);\r\n        }\r\n        catch (error) {\r\n            this.error(`Sending request ${Is.string(type) ? type : type.method} failed.`, error);\r\n            throw error;\r\n        }\r\n    }\r\n    onRequest(type, handler) {\r\n        if (!this.isConnectionActive()) {\r\n            throw new Error('Language client is not ready yet');\r\n        }\r\n        try {\r\n            this._resolvedConnection.onRequest(type, handler);\r\n        }\r\n        catch (error) {\r\n            this.error(`Registering request handler ${Is.string(type) ? type : type.method} failed.`, error);\r\n            throw error;\r\n        }\r\n    }\r\n    sendNotification(type, params) {\r\n        if (!this.isConnectionActive()) {\r\n            throw new Error('Language client is not ready yet');\r\n        }\r\n        this.forceDocumentSync();\r\n        try {\r\n            this._resolvedConnection.sendNotification(type, params);\r\n        }\r\n        catch (error) {\r\n            this.error(`Sending notification ${Is.string(type) ? type : type.method} failed.`, error);\r\n            throw error;\r\n        }\r\n    }\r\n    onNotification(type, handler) {\r\n        if (!this.isConnectionActive()) {\r\n            throw new Error('Language client is not ready yet');\r\n        }\r\n        try {\r\n            this._resolvedConnection.onNotification(type, handler);\r\n        }\r\n        catch (error) {\r\n            this.error(`Registering notification handler ${Is.string(type) ? type : type.method} failed.`, error);\r\n            throw error;\r\n        }\r\n    }\r\n    get clientOptions() {\r\n        return this._clientOptions;\r\n    }\r\n    get protocol2CodeConverter() {\r\n        return this._p2c;\r\n    }\r\n    get code2ProtocolConverter() {\r\n        return this._c2p;\r\n    }\r\n    get onTelemetry() {\r\n        return this._telemetryEmitter.event;\r\n    }\r\n    get onDidChangeState() {\r\n        return this._stateChangeEmitter.event;\r\n    }\r\n    get outputChannel() {\r\n        if (!this._outputChannel) {\r\n            this._outputChannel = vscode_1.window.createOutputChannel(this._clientOptions.outputChannelName ? this._clientOptions.outputChannelName : this._name);\r\n        }\r\n        return this._outputChannel;\r\n    }\r\n    get diagnostics() {\r\n        return this._diagnostics;\r\n    }\r\n    createDefaultErrorHandler() {\r\n        return new DefaultErrorHandler(this._name);\r\n    }\r\n    set trace(value) {\r\n        this._trace = value;\r\n        this.onReady().then(() => {\r\n            this.resolveConnection().then((connection) => {\r\n                connection.trace(this._trace, this._tracer, {\r\n                    sendNotification: false,\r\n                    traceFormat: this._traceFormat\r\n                });\r\n            });\r\n        }, () => {\r\n        });\r\n    }\r\n    data2String(data) {\r\n        if (data instanceof vscode_languageserver_protocol_1.ResponseError) {\r\n            const responseError = data;\r\n            return `  Message: ${responseError.message}\\n  Code: ${responseError.code} ${responseError.data ? '\\n' + responseError.data.toString() : ''}`;\r\n        }\r\n        if (data instanceof Error) {\r\n            if (Is.string(data.stack)) {\r\n                return data.stack;\r\n            }\r\n            return data.message;\r\n        }\r\n        if (Is.string(data)) {\r\n            return data;\r\n        }\r\n        return data.toString();\r\n    }\r\n    info(message, data) {\r\n        this.outputChannel.appendLine(`[Info  - ${(new Date().toLocaleTimeString())}] ${message}`);\r\n        if (data) {\r\n            this.outputChannel.appendLine(this.data2String(data));\r\n        }\r\n        if (this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Info) {\r\n            this.outputChannel.show(true);\r\n        }\r\n    }\r\n    warn(message, data) {\r\n        this.outputChannel.appendLine(`[Warn  - ${(new Date().toLocaleTimeString())}] ${message}`);\r\n        if (data) {\r\n            this.outputChannel.appendLine(this.data2String(data));\r\n        }\r\n        if (this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Warn) {\r\n            this.outputChannel.show(true);\r\n        }\r\n    }\r\n    error(message, data) {\r\n        this.outputChannel.appendLine(`[Error - ${(new Date().toLocaleTimeString())}] ${message}`);\r\n        if (data) {\r\n            this.outputChannel.appendLine(this.data2String(data));\r\n        }\r\n        if (this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Error) {\r\n            this.outputChannel.show(true);\r\n        }\r\n    }\r\n    logTrace(message, data) {\r\n        this.outputChannel.appendLine(`[Trace - ${(new Date().toLocaleTimeString())}] ${message}`);\r\n        if (data) {\r\n            this.outputChannel.appendLine(this.data2String(data));\r\n        }\r\n    }\r\n    logObjectTrace(data) {\r\n        if (data.isLSPMessage && data.type) {\r\n            this.outputChannel.append(`[LSP   - ${(new Date().toLocaleTimeString())}] `);\r\n        }\r\n        else {\r\n            this.outputChannel.append(`[Trace - ${(new Date().toLocaleTimeString())}] `);\r\n        }\r\n        if (data) {\r\n            this.outputChannel.appendLine(`${JSON.stringify(data)}`);\r\n        }\r\n    }\r\n    needsStart() {\r\n        return this.state === ClientState.Initial || this.state === ClientState.Stopping || this.state === ClientState.Stopped;\r\n    }\r\n    needsStop() {\r\n        return this.state === ClientState.Starting || this.state === ClientState.Running;\r\n    }\r\n    onReady() {\r\n        return this._onReady;\r\n    }\r\n    isConnectionActive() {\r\n        return this.state === ClientState.Running && !!this._resolvedConnection;\r\n    }\r\n    start() {\r\n        if (this._onReadyCallbacks.isUsed) {\r\n            this._onReady = new Promise((resolve, reject) => {\r\n                this._onReadyCallbacks = new OnReady(resolve, reject);\r\n            });\r\n        }\r\n        this._listeners = [];\r\n        this._providers = [];\r\n        // If we restart then the diagnostics collection is reused.\r\n        if (!this._diagnostics) {\r\n            this._diagnostics = this._clientOptions.diagnosticCollectionName\r\n                ? vscode_1.languages.createDiagnosticCollection(this._clientOptions.diagnosticCollectionName)\r\n                : vscode_1.languages.createDiagnosticCollection();\r\n        }\r\n        this.state = ClientState.Starting;\r\n        this.resolveConnection().then((connection) => {\r\n            connection.onLogMessage((message) => {\r\n                switch (message.type) {\r\n                    case vscode_languageserver_protocol_1.MessageType.Error:\r\n                        this.error(message.message);\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\r\n                        this.warn(message.message);\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Info:\r\n                        this.info(message.message);\r\n                        break;\r\n                    default:\r\n                        this.outputChannel.appendLine(message.message);\r\n                }\r\n            });\r\n            connection.onShowMessage((message) => {\r\n                switch (message.type) {\r\n                    case vscode_languageserver_protocol_1.MessageType.Error:\r\n                        vscode_1.window.showErrorMessage(message.message);\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\r\n                        vscode_1.window.showWarningMessage(message.message);\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Info:\r\n                        vscode_1.window.showInformationMessage(message.message);\r\n                        break;\r\n                    default:\r\n                        vscode_1.window.showInformationMessage(message.message);\r\n                }\r\n            });\r\n            connection.onRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, (params) => {\r\n                let messageFunc;\r\n                switch (params.type) {\r\n                    case vscode_languageserver_protocol_1.MessageType.Error:\r\n                        messageFunc = vscode_1.window.showErrorMessage;\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\r\n                        messageFunc = vscode_1.window.showWarningMessage;\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Info:\r\n                        messageFunc = vscode_1.window.showInformationMessage;\r\n                        break;\r\n                    default:\r\n                        messageFunc = vscode_1.window.showInformationMessage;\r\n                }\r\n                let actions = params.actions || [];\r\n                return messageFunc(params.message, ...actions);\r\n            });\r\n            connection.onTelemetry((data) => {\r\n                this._telemetryEmitter.fire(data);\r\n            });\r\n            connection.listen();\r\n            // Error is handled in the initialize call.\r\n            return this.initialize(connection);\r\n        }).then(undefined, (error) => {\r\n            this.state = ClientState.StartFailed;\r\n            this._onReadyCallbacks.reject(error);\r\n            this.error('Starting client failed', error);\r\n            vscode_1.window.showErrorMessage(`Couldn't start client ${this._name}`);\r\n        });\r\n        return new vscode_1.Disposable(() => {\r\n            if (this.needsStop()) {\r\n                this.stop();\r\n            }\r\n        });\r\n    }\r\n    resolveConnection() {\r\n        if (!this._connectionPromise) {\r\n            this._connectionPromise = this.createConnection();\r\n        }\r\n        return this._connectionPromise;\r\n    }\r\n    initialize(connection) {\r\n        this.refreshTrace(connection, false);\r\n        let initOption = this._clientOptions.initializationOptions;\r\n        let rootPath = this._clientOptions.workspaceFolder\r\n            ? this._clientOptions.workspaceFolder.uri.fsPath\r\n            : this._clientGetRootPath();\r\n        let initParams = {\r\n            processId: process.pid,\r\n            rootPath: rootPath ? rootPath : null,\r\n            rootUri: rootPath ? this._c2p.asUri(vscode_1.Uri.file(rootPath)) : null,\r\n            capabilities: this.computeClientCapabilities(),\r\n            initializationOptions: Is.func(initOption) ? initOption() : initOption,\r\n            trace: vscode_languageserver_protocol_1.Trace.toString(this._trace),\r\n            workspaceFolders: null\r\n        };\r\n        this.fillInitializeParams(initParams);\r\n        return connection.initialize(initParams).then((result) => {\r\n            this._resolvedConnection = connection;\r\n            this._initializeResult = result;\r\n            this.state = ClientState.Running;\r\n            let textDocumentSyncOptions = undefined;\r\n            if (Is.number(result.capabilities.textDocumentSync)) {\r\n                if (result.capabilities.textDocumentSync === vscode_languageserver_protocol_1.TextDocumentSyncKind.None) {\r\n                    textDocumentSyncOptions = {\r\n                        openClose: false,\r\n                        change: vscode_languageserver_protocol_1.TextDocumentSyncKind.None,\r\n                        save: undefined\r\n                    };\r\n                }\r\n                else {\r\n                    textDocumentSyncOptions = {\r\n                        openClose: true,\r\n                        change: result.capabilities.textDocumentSync,\r\n                        save: {\r\n                            includeText: false\r\n                        }\r\n                    };\r\n                }\r\n            }\r\n            else if (result.capabilities.textDocumentSync !== void 0 && result.capabilities.textDocumentSync !== null) {\r\n                textDocumentSyncOptions = result.capabilities.textDocumentSync;\r\n            }\r\n            this._capabilities = Object.assign({}, result.capabilities, { resolvedTextDocumentSync: textDocumentSyncOptions });\r\n            connection.onDiagnostics(params => this.handleDiagnostics(params));\r\n            connection.onRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params => this.handleRegistrationRequest(params));\r\n            // See https://github.com/Microsoft/vscode-languageserver-node/issues/199\r\n            connection.onRequest('client/registerFeature', params => this.handleRegistrationRequest(params));\r\n            connection.onRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params => this.handleUnregistrationRequest(params));\r\n            // See https://github.com/Microsoft/vscode-languageserver-node/issues/199\r\n            connection.onRequest('client/unregisterFeature', params => this.handleUnregistrationRequest(params));\r\n            connection.onRequest(vscode_languageserver_protocol_1.ApplyWorkspaceEditRequest.type, params => this.handleApplyWorkspaceEdit(params));\r\n            connection.sendNotification(vscode_languageserver_protocol_1.InitializedNotification.type, {});\r\n            this.hookFileEvents(connection);\r\n            this.hookConfigurationChanged(connection);\r\n            this.initializeFeatures(connection);\r\n            this._onReadyCallbacks.resolve();\r\n            return result;\r\n        }).then(undefined, (error) => {\r\n            if (this._clientOptions.initializationFailedHandler) {\r\n                if (this._clientOptions.initializationFailedHandler(error)) {\r\n                    this.initialize(connection);\r\n                }\r\n                else {\r\n                    this.stop();\r\n                    this._onReadyCallbacks.reject(error);\r\n                }\r\n            }\r\n            else if (error instanceof vscode_languageserver_protocol_1.ResponseError && error.data && error.data.retry) {\r\n                vscode_1.window.showErrorMessage(error.message, { title: 'Retry', id: \"retry\" }).then(item => {\r\n                    if (item && item.id === 'retry') {\r\n                        this.initialize(connection);\r\n                    }\r\n                    else {\r\n                        this.stop();\r\n                        this._onReadyCallbacks.reject(error);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (error && error.message) {\r\n                    vscode_1.window.showErrorMessage(error.message);\r\n                }\r\n                this.error('Server initialization failed.', error);\r\n                this.stop();\r\n                this._onReadyCallbacks.reject(error);\r\n            }\r\n        });\r\n    }\r\n    _clientGetRootPath() {\r\n        let folders = vscode_1.workspace.workspaceFolders;\r\n        if (!folders || folders.length === 0) {\r\n            return undefined;\r\n        }\r\n        let folder = folders[0];\r\n        if (folder.uri.scheme === 'file') {\r\n            return folder.uri.fsPath;\r\n        }\r\n        return undefined;\r\n    }\r\n    stop() {\r\n        this._initializeResult = undefined;\r\n        if (!this._connectionPromise) {\r\n            this.state = ClientState.Stopped;\r\n            return Promise.resolve();\r\n        }\r\n        if (this.state === ClientState.Stopping && this._onStop) {\r\n            return this._onStop;\r\n        }\r\n        this.state = ClientState.Stopping;\r\n        this.cleanUp();\r\n        // unhook listeners\r\n        return this._onStop = this.resolveConnection().then(connection => {\r\n            return connection.shutdown().then(() => {\r\n                connection.exit();\r\n                connection.dispose();\r\n                this.state = ClientState.Stopped;\r\n                this._onStop = undefined;\r\n                this._connectionPromise = undefined;\r\n                this._resolvedConnection = undefined;\r\n            });\r\n        });\r\n    }\r\n    cleanUp(channel = true, diagnostics = true) {\r\n        if (this._listeners) {\r\n            this._listeners.forEach(listener => listener.dispose());\r\n            this._listeners = undefined;\r\n        }\r\n        if (this._providers) {\r\n            this._providers.forEach(provider => provider.dispose());\r\n            this._providers = undefined;\r\n        }\r\n        if (this._syncedDocuments) {\r\n            this._syncedDocuments.clear();\r\n        }\r\n        for (let handler of this._dynamicFeatures.values()) {\r\n            handler.dispose();\r\n        }\r\n        if (channel && this._outputChannel && this._disposeOutputChannel) {\r\n            this._outputChannel.dispose();\r\n            this._outputChannel = undefined;\r\n        }\r\n        if (diagnostics && this._diagnostics) {\r\n            this._diagnostics.dispose();\r\n            this._diagnostics = undefined;\r\n        }\r\n    }\r\n    notifyFileEvent(event) {\r\n        this._fileEvents.push(event);\r\n        this._fileEventDelayer.trigger(() => {\r\n            this.onReady().then(() => {\r\n                this.resolveConnection().then(connection => {\r\n                    if (this.isConnectionActive()) {\r\n                        connection.didChangeWatchedFiles({ changes: this._fileEvents });\r\n                    }\r\n                    this._fileEvents = [];\r\n                });\r\n            }, (error) => {\r\n                this.error(`Notify file events failed.`, error);\r\n            });\r\n        });\r\n    }\r\n    forceDocumentSync() {\r\n        this._dynamicFeatures.get(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type.method).forceDelivery();\r\n    }\r\n    handleDiagnostics(params) {\r\n        if (!this._diagnostics) {\r\n            return;\r\n        }\r\n        let uri = this._p2c.asUri(params.uri);\r\n        let diagnostics = this._p2c.asDiagnostics(params.diagnostics);\r\n        let middleware = this.clientOptions.middleware.handleDiagnostics;\r\n        if (middleware) {\r\n            middleware(uri, diagnostics, (uri, diagnostics) => this.setDiagnostics(uri, diagnostics));\r\n        }\r\n        else {\r\n            this.setDiagnostics(uri, diagnostics);\r\n        }\r\n    }\r\n    setDiagnostics(uri, diagnostics) {\r\n        if (!this._diagnostics) {\r\n            return;\r\n        }\r\n        this._diagnostics.set(uri, diagnostics);\r\n    }\r\n    createConnection() {\r\n        let errorHandler = (error, message, count) => {\r\n            this.handleConnectionError(error, message, count);\r\n        };\r\n        let closeHandler = () => {\r\n            this.handleConnectionClosed();\r\n        };\r\n        return this.createMessageTransports(this._clientOptions.stdioEncoding || 'utf8').then((transports) => {\r\n            return createConnection(transports.reader, transports.writer, errorHandler, closeHandler);\r\n        });\r\n    }\r\n    handleConnectionClosed() {\r\n        // Check whether this is a normal shutdown in progress or the client stopped normally.\r\n        if (this.state === ClientState.Stopping || this.state === ClientState.Stopped) {\r\n            return;\r\n        }\r\n        try {\r\n            if (this._resolvedConnection) {\r\n                this._resolvedConnection.dispose();\r\n            }\r\n        }\r\n        catch (error) {\r\n            // Disposing a connection could fail if error cases.\r\n        }\r\n        let action = CloseAction.DoNotRestart;\r\n        try {\r\n            action = this._clientOptions.errorHandler.closed();\r\n        }\r\n        catch (error) {\r\n            // Ignore errors coming from the error handler.\r\n        }\r\n        this._connectionPromise = undefined;\r\n        this._resolvedConnection = undefined;\r\n        if (action === CloseAction.DoNotRestart) {\r\n            this.error('Connection to server got closed. Server will not be restarted.');\r\n            this.state = ClientState.Stopped;\r\n            this.cleanUp(false, true);\r\n        }\r\n        else if (action === CloseAction.Restart) {\r\n            this.info('Connection to server got closed. Server will restart.');\r\n            this.cleanUp(false, false);\r\n            this.state = ClientState.Initial;\r\n            this.start();\r\n        }\r\n    }\r\n    handleConnectionError(error, message, count) {\r\n        let action = this._clientOptions.errorHandler.error(error, message, count);\r\n        if (action === ErrorAction.Shutdown) {\r\n            this.error('Connection to server is erroring. Shutting down server.');\r\n            this.stop();\r\n        }\r\n    }\r\n    hookConfigurationChanged(connection) {\r\n        vscode_1.workspace.onDidChangeConfiguration(() => {\r\n            this.refreshTrace(connection, true);\r\n        });\r\n    }\r\n    refreshTrace(connection, sendNotification = false) {\r\n        let config = vscode_1.workspace.getConfiguration(this._id);\r\n        let trace = vscode_languageserver_protocol_1.Trace.Off;\r\n        let traceFormat = vscode_languageserver_protocol_1.TraceFormat.Text;\r\n        if (config) {\r\n            const traceConfig = config.get('trace.server', 'off');\r\n            if (typeof traceConfig === 'string') {\r\n                trace = vscode_languageserver_protocol_1.Trace.fromString(traceConfig);\r\n            }\r\n            else {\r\n                trace = vscode_languageserver_protocol_1.Trace.fromString(config.get('trace.server.verbosity', 'off'));\r\n                traceFormat = vscode_languageserver_protocol_1.TraceFormat.fromString(config.get('trace.server.format', 'text'));\r\n            }\r\n        }\r\n        this._trace = trace;\r\n        this._traceFormat = traceFormat;\r\n        connection.trace(this._trace, this._tracer, {\r\n            sendNotification,\r\n            traceFormat: this._traceFormat\r\n        });\r\n    }\r\n    hookFileEvents(_connection) {\r\n        let fileEvents = this._clientOptions.synchronize.fileEvents;\r\n        if (!fileEvents) {\r\n            return;\r\n        }\r\n        let watchers;\r\n        if (Is.array(fileEvents)) {\r\n            watchers = fileEvents;\r\n        }\r\n        else {\r\n            watchers = [fileEvents];\r\n        }\r\n        if (!watchers) {\r\n            return;\r\n        }\r\n        this._dynamicFeatures.get(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type.method).registerRaw(UUID.generateUuid(), watchers);\r\n    }\r\n    registerFeatures(features) {\r\n        for (let feature of features) {\r\n            this.registerFeature(feature);\r\n        }\r\n    }\r\n    registerFeature(feature) {\r\n        this._features.push(feature);\r\n        if (DynamicFeature.is(feature)) {\r\n            let messages = feature.messages;\r\n            if (Array.isArray(messages)) {\r\n                for (let message of messages) {\r\n                    this._method2Message.set(message.method, message);\r\n                    this._dynamicFeatures.set(message.method, feature);\r\n                }\r\n            }\r\n            else {\r\n                this._method2Message.set(messages.method, messages);\r\n                this._dynamicFeatures.set(messages.method, feature);\r\n            }\r\n        }\r\n    }\r\n    registerBuiltinFeatures() {\r\n        this.registerFeature(new ConfigurationFeature(this));\r\n        this.registerFeature(new DidOpenTextDocumentFeature(this, this._syncedDocuments));\r\n        this.registerFeature(new DidChangeTextDocumentFeature(this));\r\n        this.registerFeature(new WillSaveFeature(this));\r\n        this.registerFeature(new WillSaveWaitUntilFeature(this));\r\n        this.registerFeature(new DidSaveTextDocumentFeature(this));\r\n        this.registerFeature(new DidCloseTextDocumentFeature(this, this._syncedDocuments));\r\n        this.registerFeature(new FileSystemWatcherFeature(this, (event) => this.notifyFileEvent(event)));\r\n        this.registerFeature(new CompletionItemFeature(this));\r\n        this.registerFeature(new HoverFeature(this));\r\n        this.registerFeature(new SignatureHelpFeature(this));\r\n        this.registerFeature(new DefinitionFeature(this));\r\n        this.registerFeature(new ReferencesFeature(this));\r\n        this.registerFeature(new DocumentHighlightFeature(this));\r\n        this.registerFeature(new DocumentSymbolFeature(this));\r\n        this.registerFeature(new WorkspaceSymbolFeature(this));\r\n        this.registerFeature(new CodeActionFeature(this));\r\n        this.registerFeature(new CodeLensFeature(this));\r\n        this.registerFeature(new DocumentFormattingFeature(this));\r\n        this.registerFeature(new DocumentRangeFormattingFeature(this));\r\n        this.registerFeature(new DocumentOnTypeFormattingFeature(this));\r\n        this.registerFeature(new RenameFeature(this));\r\n        this.registerFeature(new DocumentLinkFeature(this));\r\n        this.registerFeature(new ExecuteCommandFeature(this));\r\n    }\r\n    fillInitializeParams(params) {\r\n        for (let feature of this._features) {\r\n            if (Is.func(feature.fillInitializeParams)) {\r\n                feature.fillInitializeParams(params);\r\n            }\r\n        }\r\n    }\r\n    computeClientCapabilities() {\r\n        let result = {};\r\n        ensure(result, 'workspace').applyEdit = true;\r\n        let workspaceEdit = ensure(ensure(result, 'workspace'), 'workspaceEdit');\r\n        workspaceEdit.documentChanges = true;\r\n        workspaceEdit.resourceOperations = [vscode_languageserver_protocol_1.ResourceOperationKind.Create, vscode_languageserver_protocol_1.ResourceOperationKind.Rename, vscode_languageserver_protocol_1.ResourceOperationKind.Delete];\r\n        workspaceEdit.failureHandling = vscode_languageserver_protocol_1.FailureHandlingKind.TextOnlyTransactional;\r\n        ensure(ensure(result, 'textDocument'), 'publishDiagnostics').relatedInformation = true;\r\n        for (let feature of this._features) {\r\n            feature.fillClientCapabilities(result);\r\n        }\r\n        return result;\r\n    }\r\n    initializeFeatures(_connection) {\r\n        let documentSelector = this._clientOptions.documentSelector;\r\n        for (let feature of this._features) {\r\n            feature.initialize(this._capabilities, documentSelector);\r\n        }\r\n    }\r\n    handleRegistrationRequest(params) {\r\n        return new Promise((resolve, reject) => {\r\n            for (let registration of params.registrations) {\r\n                const feature = this._dynamicFeatures.get(registration.method);\r\n                if (!feature) {\r\n                    reject(new Error(`No feature implementation for ${registration.method} found. Registration failed.`));\r\n                    return;\r\n                }\r\n                const options = registration.registerOptions || {};\r\n                options.documentSelector = options.documentSelector || this._clientOptions.documentSelector;\r\n                const data = {\r\n                    id: registration.id,\r\n                    registerOptions: options\r\n                };\r\n                feature.register(this._method2Message.get(registration.method), data);\r\n            }\r\n            resolve();\r\n        });\r\n    }\r\n    handleUnregistrationRequest(params) {\r\n        return new Promise((resolve, reject) => {\r\n            for (let unregistration of params.unregisterations) {\r\n                const feature = this._dynamicFeatures.get(unregistration.method);\r\n                if (!feature) {\r\n                    reject(new Error(`No feature implementation for ${unregistration.method} found. Unregistration failed.`));\r\n                    return;\r\n                }\r\n                feature.unregister(unregistration.id);\r\n            }\r\n            ;\r\n            resolve();\r\n        });\r\n    }\r\n    handleApplyWorkspaceEdit(params) {\r\n        // This is some sort of workaround since the version check should be done by VS Code in the Workspace.applyEdit.\r\n        // However doing it here adds some safety since the server can lag more behind then an extension.\r\n        let workspaceEdit = params.edit;\r\n        let openTextDocuments = new Map();\r\n        vscode_1.workspace.textDocuments.forEach((document) => openTextDocuments.set(document.uri.toString(), document));\r\n        let versionMismatch = false;\r\n        if (workspaceEdit.documentChanges) {\r\n            for (const change of workspaceEdit.documentChanges) {\r\n                if (vscode_languageserver_protocol_1.TextDocumentEdit.is(change) && change.textDocument.version && change.textDocument.version >= 0) {\r\n                    let textDocument = openTextDocuments.get(change.textDocument.uri);\r\n                    if (textDocument && textDocument.version !== change.textDocument.version) {\r\n                        versionMismatch = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (versionMismatch) {\r\n            return Promise.resolve({ applied: false });\r\n        }\r\n        return vscode_1.workspace.applyEdit(this._p2c.asWorkspaceEdit(params.edit)).then((value) => { return { applied: value }; });\r\n    }\r\n    ;\r\n    logFailedRequest(type, error) {\r\n        // If we get a request cancel don't log anything.\r\n        if (error instanceof vscode_languageserver_protocol_1.ResponseError && error.code === vscode_languageserver_protocol_1.ErrorCodes.RequestCancelled) {\r\n            return;\r\n        }\r\n        this.error(`Request ${type.method} failed.`, error);\r\n    }\r\n}\r\nexports.BaseLanguageClient = BaseLanguageClient;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst UUID = require(\"./utils/uuid\");\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst client_1 = require(\"./client\");\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nclass ColorProviderFeature extends client_1.TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentColorRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'colorProvider').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.colorProvider) {\r\n            return;\r\n        }\r\n        const implCapabilities = capabilities.colorProvider;\r\n        const id = Is.string(implCapabilities.id) && implCapabilities.id.length > 0 ? implCapabilities.id : UUID.generateUuid();\r\n        const selector = implCapabilities.documentSelector || documentSelector;\r\n        if (selector) {\r\n            this.register(this.messages, {\r\n                id,\r\n                registerOptions: Object.assign({}, { documentSelector: selector })\r\n            });\r\n        }\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideColorPresentations = (color, context, token) => {\r\n            const requestParams = {\r\n                color,\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(context.document),\r\n                range: client.code2ProtocolConverter.asRange(context.range)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, requestParams, token).then(this.asColorPresentations.bind(this), (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let provideDocumentColors = (document, token) => {\r\n            const requestParams = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentColorRequest.type, requestParams, token).then(this.asColorInformations.bind(this), (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerColorProvider(options.documentSelector, {\r\n            provideColorPresentations: (color, context, token) => {\r\n                return middleware.provideColorPresentations\r\n                    ? middleware.provideColorPresentations(color, context, token, provideColorPresentations)\r\n                    : provideColorPresentations(color, context, token);\r\n            },\r\n            provideDocumentColors: (document, token) => {\r\n                return middleware.provideDocumentColors\r\n                    ? middleware.provideDocumentColors(document, token, provideDocumentColors)\r\n                    : provideDocumentColors(document, token);\r\n            }\r\n        });\r\n    }\r\n    asColor(color) {\r\n        return new vscode_1.Color(color.red, color.green, color.blue, color.alpha);\r\n    }\r\n    asColorInformations(colorInformation) {\r\n        if (Array.isArray(colorInformation)) {\r\n            return colorInformation.map(ci => {\r\n                return new vscode_1.ColorInformation(this._client.protocol2CodeConverter.asRange(ci.range), this.asColor(ci.color));\r\n            });\r\n        }\r\n        return [];\r\n    }\r\n    asColorPresentations(colorPresentations) {\r\n        if (Array.isArray(colorPresentations)) {\r\n            return colorPresentations.map(cp => {\r\n                let presentation = new vscode_1.ColorPresentation(cp.label);\r\n                presentation.additionalTextEdits = this._client.protocol2CodeConverter.asTextEdits(cp.additionalTextEdits);\r\n                presentation.textEdit = this._client.protocol2CodeConverter.asTextEdit(cp.textEdit);\r\n                return presentation;\r\n            });\r\n        }\r\n        return [];\r\n    }\r\n}\r\nexports.ColorProviderFeature = ColorProviderFeature;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nclass ConfigurationFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        capabilities.workspace = capabilities.workspace || {};\r\n        capabilities.workspace.configuration = true;\r\n    }\r\n    initialize() {\r\n        let client = this._client;\r\n        client.onRequest(vscode_languageserver_protocol_1.ConfigurationRequest.type, (params, token) => {\r\n            let configuration = (params) => {\r\n                let result = [];\r\n                for (let item of params.items) {\r\n                    let resource = item.scopeUri !== void 0 && item.scopeUri !== null ? this._client.protocol2CodeConverter.asUri(item.scopeUri) : undefined;\r\n                    result.push(this.getConfiguration(resource, item.section !== null ? item.section : undefined));\r\n                }\r\n                return result;\r\n            };\r\n            let middleware = client.clientOptions.middleware.workspace;\r\n            return middleware && middleware.configuration\r\n                ? middleware.configuration(params, token, configuration)\r\n                : configuration(params, token);\r\n        });\r\n    }\r\n    getConfiguration(resource, section) {\r\n        let result = null;\r\n        if (section) {\r\n            let index = section.lastIndexOf('.');\r\n            if (index === -1) {\r\n                result = vscode_1.workspace.getConfiguration(undefined, resource).get(section);\r\n            }\r\n            else {\r\n                let config = vscode_1.workspace.getConfiguration(section.substr(0, index));\r\n                if (config) {\r\n                    result = config.get(section.substr(index + 1));\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            let config = vscode_1.workspace.getConfiguration(undefined, resource);\r\n            result = {};\r\n            for (let key of Object.keys(config)) {\r\n                if (config.has(key)) {\r\n                    result[key] = config.get(key);\r\n                }\r\n            }\r\n        }\r\n        if (!result) {\r\n            return null;\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexports.ConfigurationFeature = ConfigurationFeature;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst UUID = require(\"./utils/uuid\");\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst client_1 = require(\"./client\");\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nclass ImplementationFeature extends client_1.TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.ImplementationRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let implementationSupport = ensure(ensure(capabilites, 'textDocument'), 'implementation');\r\n        implementationSupport.dynamicRegistration = true;\r\n        implementationSupport.linkSupport = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.implementationProvider) {\r\n            return;\r\n        }\r\n        if (capabilities.implementationProvider === true) {\r\n            if (!documentSelector) {\r\n                return;\r\n            }\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n            });\r\n        }\r\n        else {\r\n            const implCapabilities = capabilities.implementationProvider;\r\n            const id = Is.string(implCapabilities.id) && implCapabilities.id.length > 0 ? implCapabilities.id : UUID.generateUuid();\r\n            const selector = implCapabilities.documentSelector || documentSelector;\r\n            if (selector) {\r\n                this.register(this.messages, {\r\n                    id,\r\n                    registerOptions: Object.assign({}, { documentSelector: selector })\r\n                });\r\n            }\r\n        }\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideImplementation = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerImplementationProvider(options.documentSelector, {\r\n            provideImplementation: (document, position, token) => {\r\n                return middleware.provideImplementation\r\n                    ? middleware.provideImplementation(document, position, token, provideImplementation)\r\n                    : provideImplementation(document, position, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.ImplementationFeature = ImplementationFeature;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst UUID = require(\"./utils/uuid\");\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst client_1 = require(\"./client\");\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nclass TypeDefinitionFeature extends client_1.TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.TypeDefinitionRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'typeDefinition').dynamicRegistration = true;\r\n        let typeDefinitionSupport = ensure(ensure(capabilites, 'textDocument'), 'typeDefinition');\r\n        typeDefinitionSupport.dynamicRegistration = true;\r\n        typeDefinitionSupport.linkSupport = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.typeDefinitionProvider) {\r\n            return;\r\n        }\r\n        if (capabilities.typeDefinitionProvider === true) {\r\n            if (!documentSelector) {\r\n                return;\r\n            }\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n            });\r\n        }\r\n        else {\r\n            const implCapabilities = capabilities.typeDefinitionProvider;\r\n            const id = Is.string(implCapabilities.id) && implCapabilities.id.length > 0 ? implCapabilities.id : UUID.generateUuid();\r\n            const selector = implCapabilities.documentSelector || documentSelector;\r\n            if (selector) {\r\n                this.register(this.messages, {\r\n                    id,\r\n                    registerOptions: Object.assign({}, { documentSelector: selector })\r\n                });\r\n            }\r\n        }\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideTypeDefinition = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerTypeDefinitionProvider(options.documentSelector, {\r\n            provideTypeDefinition: (document, position, token) => {\r\n                return middleware.provideTypeDefinition\r\n                    ? middleware.provideTypeDefinition(document, position, token, provideTypeDefinition)\r\n                    : provideTypeDefinition(document, position, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.TypeDefinitionFeature = TypeDefinitionFeature;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst UUID = require(\"./utils/uuid\");\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nfunction access(target, key) {\r\n    if (target === void 0) {\r\n        return undefined;\r\n    }\r\n    return target[key];\r\n}\r\nclass WorkspaceFoldersFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._listeners = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type;\r\n    }\r\n    fillInitializeParams(params) {\r\n        let folders = vscode_1.workspace.workspaceFolders;\r\n        if (folders === void 0) {\r\n            params.workspaceFolders = null;\r\n        }\r\n        else {\r\n            params.workspaceFolders = folders.map(folder => this.asProtocol(folder));\r\n        }\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        capabilities.workspace = capabilities.workspace || {};\r\n        capabilities.workspace.workspaceFolders = true;\r\n    }\r\n    initialize(capabilities) {\r\n        let client = this._client;\r\n        client.onRequest(vscode_languageserver_protocol_1.WorkspaceFoldersRequest.type, (token) => {\r\n            let workspaceFolders = () => {\r\n                let folders = vscode_1.workspace.workspaceFolders;\r\n                if (folders === void 0) {\r\n                    return null;\r\n                }\r\n                let result = folders.map((folder) => {\r\n                    return this.asProtocol(folder);\r\n                });\r\n                return result;\r\n            };\r\n            let middleware = client.clientOptions.middleware.workspace;\r\n            return middleware && middleware.workspaceFolders\r\n                ? middleware.workspaceFolders(token, workspaceFolders)\r\n                : workspaceFolders(token);\r\n        });\r\n        let value = access(access(access(capabilities, 'workspace'), 'workspaceFolders'), 'changeNotifications');\r\n        let id;\r\n        if (typeof value === 'string') {\r\n            id = value;\r\n        }\r\n        else if (value === true) {\r\n            id = UUID.generateUuid();\r\n        }\r\n        if (id) {\r\n            this.register(this.messages, {\r\n                id: id,\r\n                registerOptions: undefined\r\n            });\r\n        }\r\n    }\r\n    register(_message, data) {\r\n        let id = data.id;\r\n        let client = this._client;\r\n        let disposable = vscode_1.workspace.onDidChangeWorkspaceFolders((event) => {\r\n            let didChangeWorkspaceFolders = (event) => {\r\n                let params = {\r\n                    event: {\r\n                        added: event.added.map(folder => this.asProtocol(folder)),\r\n                        removed: event.removed.map(folder => this.asProtocol(folder))\r\n                    }\r\n                };\r\n                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type, params);\r\n            };\r\n            let middleware = client.clientOptions.middleware.workspace;\r\n            middleware && middleware.didChangeWorkspaceFolders\r\n                ? middleware.didChangeWorkspaceFolders(event, didChangeWorkspaceFolders)\r\n                : didChangeWorkspaceFolders(event);\r\n        });\r\n        this._listeners.set(id, disposable);\r\n    }\r\n    unregister(id) {\r\n        let disposable = this._listeners.get(id);\r\n        if (disposable === void 0) {\r\n            return;\r\n        }\r\n        this._listeners.delete(id);\r\n        disposable.dispose();\r\n    }\r\n    dispose() {\r\n        for (let disposable of this._listeners.values()) {\r\n            disposable.dispose();\r\n        }\r\n        this._listeners.clear();\r\n    }\r\n    asProtocol(workspaceFolder) {\r\n        if (workspaceFolder === void 0) {\r\n            return null;\r\n        }\r\n        return { uri: this._client.code2ProtocolConverter.asUri(workspaceFolder.uri), name: workspaceFolder.name };\r\n    }\r\n}\r\nexports.WorkspaceFoldersFeature = WorkspaceFoldersFeature;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst UUID = require(\"./utils/uuid\");\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst client_1 = require(\"./client\");\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nclass FoldingRangeFeature extends client_1.TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.FoldingRangeRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let capability = ensure(ensure(capabilites, 'textDocument'), 'foldingRange');\r\n        capability.dynamicRegistration = true;\r\n        capability.rangeLimit = 5000;\r\n        capability.lineFoldingOnly = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.foldingRangeProvider) {\r\n            return;\r\n        }\r\n        const implCapabilities = capabilities.foldingRangeProvider;\r\n        const id = Is.string(implCapabilities.id) && implCapabilities.id.length > 0 ? implCapabilities.id : UUID.generateUuid();\r\n        const selector = implCapabilities.documentSelector || documentSelector;\r\n        if (selector) {\r\n            this.register(this.messages, {\r\n                id,\r\n                registerOptions: Object.assign({}, { documentSelector: selector })\r\n            });\r\n        }\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideFoldingRanges = (document, _, token) => {\r\n            const requestParams = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.FoldingRangeRequest.type, requestParams, token).then(this.asFoldingRanges.bind(this), (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.FoldingRangeRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerFoldingRangeProvider(options.documentSelector, {\r\n            provideFoldingRanges(document, context, token) {\r\n                return middleware.provideFoldingRanges\r\n                    ? middleware.provideFoldingRanges(document, context, token, provideFoldingRanges)\r\n                    : provideFoldingRanges(document, context, token);\r\n            }\r\n        });\r\n    }\r\n    asFoldingRangeKind(kind) {\r\n        if (kind) {\r\n            switch (kind) {\r\n                case vscode_languageserver_protocol_1.FoldingRangeKind.Comment:\r\n                    return vscode_1.FoldingRangeKind.Comment;\r\n                case vscode_languageserver_protocol_1.FoldingRangeKind.Imports:\r\n                    return vscode_1.FoldingRangeKind.Imports;\r\n                case vscode_languageserver_protocol_1.FoldingRangeKind.Region:\r\n                    return vscode_1.FoldingRangeKind.Region;\r\n            }\r\n        }\r\n        return void 0;\r\n    }\r\n    asFoldingRanges(foldingRanges) {\r\n        if (Array.isArray(foldingRanges)) {\r\n            return foldingRanges.map(r => {\r\n                return new vscode_1.FoldingRange(r.startLine, r.endLine, this.asFoldingRangeKind(r.kind));\r\n            });\r\n        }\r\n        return [];\r\n    }\r\n}\r\nexports.FoldingRangeFeature = FoldingRangeFeature;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst UUID = require(\"./utils/uuid\");\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst client_1 = require(\"./client\");\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nclass DeclarationFeature extends client_1.TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DeclarationRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let declarationSupport = ensure(ensure(capabilites, 'textDocument'), 'declaration');\r\n        declarationSupport.dynamicRegistration = true;\r\n        declarationSupport.linkSupport = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.declarationProvider) {\r\n            return;\r\n        }\r\n        if (capabilities.declarationProvider === true) {\r\n            if (!documentSelector) {\r\n                return;\r\n            }\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n            });\r\n        }\r\n        else {\r\n            const declCapabilities = capabilities.declarationProvider;\r\n            const id = Is.string(declCapabilities.id) && declCapabilities.id.length > 0 ? declCapabilities.id : UUID.generateUuid();\r\n            const selector = declCapabilities.documentSelector || documentSelector;\r\n            if (selector) {\r\n                this.register(this.messages, {\r\n                    id,\r\n                    registerOptions: Object.assign({}, { documentSelector: selector })\r\n                });\r\n            }\r\n        }\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDeclaration = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DeclarationRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDeclarationResult, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DeclarationRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDeclarationProvider(options.documentSelector, {\r\n            provideDeclaration: (document, position, token) => {\r\n                return middleware.provideDeclaration\r\n                    ? middleware.provideDeclaration(document, position, token, provideDeclaration)\r\n                    : provideDeclaration(document, position, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.DeclarationFeature = DeclarationFeature;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst cp = require(\"child_process\");\r\nconst path_1 = require(\"path\");\r\nconst isWindows = (process.platform === 'win32');\r\nconst isMacintosh = (process.platform === 'darwin');\r\nconst isLinux = (process.platform === 'linux');\r\nfunction terminate(process, cwd) {\r\n    if (isWindows) {\r\n        try {\r\n            // This we run in Atom execFileSync is available.\r\n            // Ignore stderr since this is otherwise piped to parent.stderr\r\n            // which might be already closed.\r\n            let options = {\r\n                stdio: ['pipe', 'pipe', 'ignore']\r\n            };\r\n            if (cwd) {\r\n                options.cwd = cwd;\r\n            }\r\n            cp.execFileSync('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n    else if (isLinux || isMacintosh) {\r\n        try {\r\n            var cmd = path_1.join(__dirname, 'terminateProcess.sh');\r\n            var result = cp.spawnSync(cmd, [process.pid.toString()]);\r\n            return result.error ? false : true;\r\n        }\r\n        catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        process.kill('SIGKILL');\r\n        return true;\r\n    }\r\n}\r\nexports.terminate = terminate;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst cp = require(\"child_process\");\r\nconst fs = require(\"fs\");\r\nconst SemVer = require(\"semver\");\r\nconst client_1 = require(\"./client\");\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst colorProvider_1 = require(\"./colorProvider\");\r\nconst configuration_1 = require(\"./configuration\");\r\nconst implementation_1 = require(\"./implementation\");\r\nconst typeDefinition_1 = require(\"./typeDefinition\");\r\nconst workspaceFolders_1 = require(\"./workspaceFolders\");\r\nconst foldingRange_1 = require(\"./foldingRange\");\r\nconst declaration_1 = require(\"./declaration\");\r\nconst Is = require(\"./utils/is\");\r\nconst processes_1 = require(\"./utils/processes\");\r\n__export(require(\"./client\"));\r\nconst REQUIRED_VSCODE_VERSION = '^1.30'; // do not change format, updated by `updateVSCode` script\r\nvar Executable;\r\n(function (Executable) {\r\n    function is(value) {\r\n        return Is.string(value.command);\r\n    }\r\n    Executable.is = is;\r\n})(Executable || (Executable = {}));\r\nvar TransportKind;\r\n(function (TransportKind) {\r\n    TransportKind[TransportKind[\"stdio\"] = 0] = \"stdio\";\r\n    TransportKind[TransportKind[\"ipc\"] = 1] = \"ipc\";\r\n    TransportKind[TransportKind[\"pipe\"] = 2] = \"pipe\";\r\n    TransportKind[TransportKind[\"socket\"] = 3] = \"socket\";\r\n})(TransportKind = exports.TransportKind || (exports.TransportKind = {}));\r\nvar Transport;\r\n(function (Transport) {\r\n    function isSocket(value) {\r\n        let candidate = value;\r\n        return candidate && candidate.kind === TransportKind.socket && Is.number(candidate.port);\r\n    }\r\n    Transport.isSocket = isSocket;\r\n})(Transport || (Transport = {}));\r\nvar NodeModule;\r\n(function (NodeModule) {\r\n    function is(value) {\r\n        return Is.string(value.module);\r\n    }\r\n    NodeModule.is = is;\r\n})(NodeModule || (NodeModule = {}));\r\nvar StreamInfo;\r\n(function (StreamInfo) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && candidate.writer !== void 0 && candidate.reader !== void 0;\r\n    }\r\n    StreamInfo.is = is;\r\n})(StreamInfo || (StreamInfo = {}));\r\nvar ChildProcessInfo;\r\n(function (ChildProcessInfo) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && candidate.process !== void 0 && typeof candidate.detached === 'boolean';\r\n    }\r\n    ChildProcessInfo.is = is;\r\n})(ChildProcessInfo || (ChildProcessInfo = {}));\r\nclass LanguageClient extends client_1.BaseLanguageClient {\r\n    constructor(arg1, arg2, arg3, arg4, arg5) {\r\n        let id;\r\n        let name;\r\n        let serverOptions;\r\n        let clientOptions;\r\n        let forceDebug;\r\n        if (Is.string(arg2)) {\r\n            id = arg1;\r\n            name = arg2;\r\n            serverOptions = arg3;\r\n            clientOptions = arg4;\r\n            forceDebug = !!arg5;\r\n        }\r\n        else {\r\n            id = arg1.toLowerCase();\r\n            name = arg1;\r\n            serverOptions = arg2;\r\n            clientOptions = arg3;\r\n            forceDebug = arg4;\r\n        }\r\n        if (forceDebug === void 0) {\r\n            forceDebug = false;\r\n        }\r\n        super(id, name, clientOptions);\r\n        this._serverOptions = serverOptions;\r\n        this._forceDebug = forceDebug;\r\n        try {\r\n            this.checkVersion();\r\n        }\r\n        catch (error) {\r\n            if (Is.string(error.message)) {\r\n                this.outputChannel.appendLine(error.message);\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    checkVersion() {\r\n        let codeVersion = SemVer.parse(vscode_1.version);\r\n        if (!codeVersion) {\r\n            throw new Error(`No valid VS Code version detected. Version string is: ${vscode_1.version}`);\r\n        }\r\n        // Remove the insider pre-release since we stay API compatible.\r\n        if (codeVersion.prerelease && codeVersion.prerelease.length > 0) {\r\n            codeVersion.prerelease = [];\r\n        }\r\n        if (!SemVer.satisfies(codeVersion, REQUIRED_VSCODE_VERSION)) {\r\n            throw new Error(`The language client requires VS Code version ${REQUIRED_VSCODE_VERSION} but received version ${vscode_1.version}`);\r\n        }\r\n    }\r\n    stop() {\r\n        return super.stop().then(() => {\r\n            if (this._serverProcess) {\r\n                let toCheck = this._serverProcess;\r\n                this._serverProcess = undefined;\r\n                if (this._isDetached === void 0 || !this._isDetached) {\r\n                    this.checkProcessDied(toCheck);\r\n                }\r\n                this._isDetached = undefined;\r\n            }\r\n        });\r\n    }\r\n    checkProcessDied(childProcess) {\r\n        if (!childProcess) {\r\n            return;\r\n        }\r\n        setTimeout(() => {\r\n            // Test if the process is still alive. Throws an exception if not\r\n            try {\r\n                process.kill(childProcess.pid, 0);\r\n                processes_1.terminate(childProcess);\r\n            }\r\n            catch (error) {\r\n                // All is fine.\r\n            }\r\n        }, 2000);\r\n    }\r\n    handleConnectionClosed() {\r\n        this._serverProcess = undefined;\r\n        super.handleConnectionClosed();\r\n    }\r\n    createMessageTransports(encoding) {\r\n        function getEnvironment(env) {\r\n            if (!env) {\r\n                return process.env;\r\n            }\r\n            let result = Object.create(null);\r\n            Object.keys(process.env).forEach(key => result[key] = process.env[key]);\r\n            Object.keys(env).forEach(key => result[key] = env[key]);\r\n            return result;\r\n        }\r\n        function startedInDebugMode() {\r\n            let args = process.execArgv;\r\n            if (args) {\r\n                return args.some((arg) => /^--debug=?/.test(arg) || /^--debug-brk=?/.test(arg) || /^--inspect=?/.test(arg) || /^--inspect-brk=?/.test(arg));\r\n            }\r\n            ;\r\n            return false;\r\n        }\r\n        let server = this._serverOptions;\r\n        // We got a function.\r\n        if (Is.func(server)) {\r\n            return server().then((result) => {\r\n                if (client_1.MessageTransports.is(result)) {\r\n                    this._isDetached = !!result.detached;\r\n                    return result;\r\n                }\r\n                else if (StreamInfo.is(result)) {\r\n                    this._isDetached = !!result.detached;\r\n                    return { reader: new vscode_languageserver_protocol_1.StreamMessageReader(result.reader), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(result.writer) };\r\n                }\r\n                else {\r\n                    let cp;\r\n                    if (ChildProcessInfo.is(result)) {\r\n                        cp = result.process;\r\n                        this._isDetached = result.detached;\r\n                    }\r\n                    else {\r\n                        cp = result;\r\n                        this._isDetached = false;\r\n                    }\r\n                    cp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                    return { reader: new vscode_languageserver_protocol_1.StreamMessageReader(cp.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(cp.stdin) };\r\n                }\r\n            });\r\n        }\r\n        let json;\r\n        let runDebug = server;\r\n        if (runDebug.run || runDebug.debug) {\r\n            // We are under debugging. So use debug as well.\r\n            if (typeof v8debug === 'object' || this._forceDebug || startedInDebugMode()) {\r\n                json = runDebug.debug;\r\n            }\r\n            else {\r\n                json = runDebug.run;\r\n            }\r\n        }\r\n        else {\r\n            json = server;\r\n        }\r\n        return this._getServerWorkingDir(json.options).then(serverWorkingDir => {\r\n            if (NodeModule.is(json) && json.module) {\r\n                let node = json;\r\n                let transport = node.transport || TransportKind.stdio;\r\n                if (node.runtime) {\r\n                    let args = [];\r\n                    let options = node.options || Object.create(null);\r\n                    if (options.execArgv) {\r\n                        options.execArgv.forEach(element => args.push(element));\r\n                    }\r\n                    args.push(node.module);\r\n                    if (node.args) {\r\n                        node.args.forEach(element => args.push(element));\r\n                    }\r\n                    let execOptions = Object.create(null);\r\n                    execOptions.cwd = serverWorkingDir;\r\n                    execOptions.env = getEnvironment(options.env);\r\n                    let pipeName = undefined;\r\n                    if (transport === TransportKind.ipc) {\r\n                        // exec options not correctly typed in lib\r\n                        execOptions.stdio = [null, null, null, 'ipc'];\r\n                        args.push('--node-ipc');\r\n                    }\r\n                    else if (transport === TransportKind.stdio) {\r\n                        args.push('--stdio');\r\n                    }\r\n                    else if (transport === TransportKind.pipe) {\r\n                        pipeName = vscode_languageserver_protocol_1.generateRandomPipeName();\r\n                        args.push(`--pipe=${pipeName}`);\r\n                    }\r\n                    else if (Transport.isSocket(transport)) {\r\n                        args.push(`--socket=${transport.port}`);\r\n                    }\r\n                    args.push(`--clientProcessId=${process.pid.toString()}`);\r\n                    if (transport === TransportKind.ipc || transport === TransportKind.stdio) {\r\n                        let serverProcess = cp.spawn(node.runtime, args, execOptions);\r\n                        if (!serverProcess || !serverProcess.pid) {\r\n                            return Promise.reject(`Launching server using runtime ${node.runtime} failed.`);\r\n                        }\r\n                        this._serverProcess = serverProcess;\r\n                        serverProcess.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                        if (transport === TransportKind.ipc) {\r\n                            serverProcess.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            return Promise.resolve({ reader: new vscode_languageserver_protocol_1.IPCMessageReader(serverProcess), writer: new vscode_languageserver_protocol_1.IPCMessageWriter(serverProcess) });\r\n                        }\r\n                        else {\r\n                            return Promise.resolve({ reader: new vscode_languageserver_protocol_1.StreamMessageReader(serverProcess.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(serverProcess.stdin) });\r\n                        }\r\n                    }\r\n                    else if (transport == TransportKind.pipe) {\r\n                        return vscode_languageserver_protocol_1.createClientPipeTransport(pipeName).then((transport) => {\r\n                            let process = cp.spawn(node.runtime, args, execOptions);\r\n                            if (!process || !process.pid) {\r\n                                return Promise.reject(`Launching server using runtime ${node.runtime} failed.`);\r\n                            }\r\n                            this._serverProcess = process;\r\n                            process.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            process.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            return transport.onConnected().then((protocol) => {\r\n                                return { reader: protocol[0], writer: protocol[1] };\r\n                            });\r\n                        });\r\n                    }\r\n                    else if (Transport.isSocket(transport)) {\r\n                        return vscode_languageserver_protocol_1.createClientSocketTransport(transport.port).then((transport) => {\r\n                            let process = cp.spawn(node.runtime, args, execOptions);\r\n                            if (!process || !process.pid) {\r\n                                return Promise.reject(`Launching server using runtime ${node.runtime} failed.`);\r\n                            }\r\n                            this._serverProcess = process;\r\n                            process.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            process.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            return transport.onConnected().then((protocol) => {\r\n                                return { reader: protocol[0], writer: protocol[1] };\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    let pipeName = undefined;\r\n                    return new Promise((resolve, _reject) => {\r\n                        let args = node.args && node.args.slice() || [];\r\n                        if (transport === TransportKind.ipc) {\r\n                            args.push('--node-ipc');\r\n                        }\r\n                        else if (transport === TransportKind.stdio) {\r\n                            args.push('--stdio');\r\n                        }\r\n                        else if (transport === TransportKind.pipe) {\r\n                            pipeName = vscode_languageserver_protocol_1.generateRandomPipeName();\r\n                            args.push(`--pipe=${pipeName}`);\r\n                        }\r\n                        else if (Transport.isSocket(transport)) {\r\n                            args.push(`--socket=${transport.port}`);\r\n                        }\r\n                        args.push(`--clientProcessId=${process.pid.toString()}`);\r\n                        let options = node.options || Object.create(null);\r\n                        options.execArgv = options.execArgv || [];\r\n                        options.cwd = serverWorkingDir;\r\n                        options.silent = true;\r\n                        if (transport === TransportKind.ipc || transport === TransportKind.stdio) {\r\n                            let sp = cp.fork(node.module, args || [], options);\r\n                            this._serverProcess = sp;\r\n                            sp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            if (transport === TransportKind.ipc) {\r\n                                sp.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                resolve({ reader: new vscode_languageserver_protocol_1.IPCMessageReader(this._serverProcess), writer: new vscode_languageserver_protocol_1.IPCMessageWriter(this._serverProcess) });\r\n                            }\r\n                            else {\r\n                                resolve({ reader: new vscode_languageserver_protocol_1.StreamMessageReader(sp.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(sp.stdin) });\r\n                            }\r\n                        }\r\n                        else if (transport === TransportKind.pipe) {\r\n                            vscode_languageserver_protocol_1.createClientPipeTransport(pipeName).then((transport) => {\r\n                                let sp = cp.fork(node.module, args || [], options);\r\n                                this._serverProcess = sp;\r\n                                sp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                sp.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                transport.onConnected().then((protocol) => {\r\n                                    resolve({ reader: protocol[0], writer: protocol[1] });\r\n                                });\r\n                            });\r\n                        }\r\n                        else if (Transport.isSocket(transport)) {\r\n                            vscode_languageserver_protocol_1.createClientSocketTransport(transport.port).then((transport) => {\r\n                                let sp = cp.fork(node.module, args || [], options);\r\n                                this._serverProcess = sp;\r\n                                sp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                sp.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                transport.onConnected().then((protocol) => {\r\n                                    resolve({ reader: protocol[0], writer: protocol[1] });\r\n                                });\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            else if (Executable.is(json) && json.command) {\r\n                let command = json;\r\n                let args = command.args || [];\r\n                let options = Object.assign({}, command.options);\r\n                options.cwd = options.cwd || serverWorkingDir;\r\n                let serverProcess = cp.spawn(command.command, args, options);\r\n                if (!serverProcess || !serverProcess.pid) {\r\n                    return Promise.reject(`Launching server using command ${command.command} failed.`);\r\n                }\r\n                serverProcess.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                this._serverProcess = serverProcess;\r\n                this._isDetached = !!options.detached;\r\n                return Promise.resolve({ reader: new vscode_languageserver_protocol_1.StreamMessageReader(serverProcess.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(serverProcess.stdin) });\r\n            }\r\n            return Promise.reject(new Error(`Unsupported server configuration ` + JSON.stringify(server, null, 4)));\r\n        });\r\n    }\r\n    registerProposedFeatures() {\r\n        this.registerFeatures(ProposedFeatures.createAll(this));\r\n    }\r\n    registerBuiltinFeatures() {\r\n        super.registerBuiltinFeatures();\r\n        this.registerFeature(new configuration_1.ConfigurationFeature(this));\r\n        this.registerFeature(new typeDefinition_1.TypeDefinitionFeature(this));\r\n        this.registerFeature(new implementation_1.ImplementationFeature(this));\r\n        this.registerFeature(new colorProvider_1.ColorProviderFeature(this));\r\n        this.registerFeature(new workspaceFolders_1.WorkspaceFoldersFeature(this));\r\n        this.registerFeature(new foldingRange_1.FoldingRangeFeature(this));\r\n        this.registerFeature(new declaration_1.DeclarationFeature(this));\r\n    }\r\n    _mainGetRootPath() {\r\n        let folders = vscode_1.workspace.workspaceFolders;\r\n        if (!folders || folders.length === 0) {\r\n            return undefined;\r\n        }\r\n        let folder = folders[0];\r\n        if (folder.uri.scheme === 'file') {\r\n            return folder.uri.fsPath;\r\n        }\r\n        return undefined;\r\n    }\r\n    _getServerWorkingDir(options) {\r\n        let cwd = options && options.cwd;\r\n        if (!cwd) {\r\n            cwd = this.clientOptions.workspaceFolder\r\n                ? this.clientOptions.workspaceFolder.uri.fsPath\r\n                : this._mainGetRootPath();\r\n        }\r\n        if (cwd) {\r\n            // make sure the folder exists otherwise creating the process will fail\r\n            return new Promise(s => {\r\n                fs.lstat(cwd, (err, stats) => {\r\n                    s(!err && stats.isDirectory() ? cwd : undefined);\r\n                });\r\n            });\r\n        }\r\n        return Promise.resolve(undefined);\r\n    }\r\n}\r\nexports.LanguageClient = LanguageClient;\r\nclass SettingMonitor {\r\n    constructor(_client, _setting) {\r\n        this._client = _client;\r\n        this._setting = _setting;\r\n        this._listeners = [];\r\n    }\r\n    start() {\r\n        vscode_1.workspace.onDidChangeConfiguration(this.onDidChangeConfiguration, this, this._listeners);\r\n        this.onDidChangeConfiguration();\r\n        return new vscode_1.Disposable(() => {\r\n            if (this._client.needsStop()) {\r\n                this._client.stop();\r\n            }\r\n        });\r\n    }\r\n    onDidChangeConfiguration() {\r\n        let index = this._setting.indexOf('.');\r\n        let primary = index >= 0 ? this._setting.substr(0, index) : this._setting;\r\n        let rest = index >= 0 ? this._setting.substr(index + 1) : undefined;\r\n        let enabled = rest ? vscode_1.workspace.getConfiguration(primary).get(rest, false) : vscode_1.workspace.getConfiguration(primary);\r\n        if (enabled && this._client.needsStart()) {\r\n            this._client.start();\r\n        }\r\n        else if (!enabled && this._client.needsStop()) {\r\n            this._client.stop();\r\n        }\r\n    }\r\n}\r\nexports.SettingMonitor = SettingMonitor;\r\n// Exporting proposed protocol.\r\nvar ProposedFeatures;\r\n(function (ProposedFeatures) {\r\n    function createAll(_client) {\r\n        let result = [];\r\n        return result;\r\n    }\r\n    ProposedFeatures.createAll = createAll;\r\n})(ProposedFeatures = exports.ProposedFeatures || (exports.ProposedFeatures = {}));\r\n", "module.exports = isexe\nisexe.sync = sync\n\nvar fs = require('fs')\n\nfunction checkPathExt (path, options) {\n  var pathext = options.pathExt !== undefined ?\n    options.pathExt : process.env.PATHEXT\n\n  if (!pathext) {\n    return true\n  }\n\n  pathext = pathext.split(';')\n  if (pathext.indexOf('') !== -1) {\n    return true\n  }\n  for (var i = 0; i < pathext.length; i++) {\n    var p = pathext[i].toLowerCase()\n    if (p && path.substr(-p.length).toLowerCase() === p) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction checkStat (stat, path, options) {\n  if (!stat.isSymbolicLink() && !stat.isFile()) {\n    return false\n  }\n  return checkPathExt(path, options)\n}\n\nfunction isexe (path, options, cb) {\n  fs.stat(path, function (er, stat) {\n    cb(er, er ? false : checkStat(stat, path, options))\n  })\n}\n\nfunction sync (path, options) {\n  return checkStat(fs.statSync(path), path, options)\n}\n", "module.exports = isexe\nisexe.sync = sync\n\nvar fs = require('fs')\n\nfunction isexe (path, options, cb) {\n  fs.stat(path, function (er, stat) {\n    cb(er, er ? false : checkStat(stat, options))\n  })\n}\n\nfunction sync (path, options) {\n  return checkStat(fs.statSync(path), options)\n}\n\nfunction checkStat (stat, options) {\n  return stat.isFile() && checkMode(stat, options)\n}\n\nfunction checkMode (stat, options) {\n  var mod = stat.mode\n  var uid = stat.uid\n  var gid = stat.gid\n\n  var myUid = options.uid !== undefined ?\n    options.uid : process.getuid && process.getuid()\n  var myGid = options.gid !== undefined ?\n    options.gid : process.getgid && process.getgid()\n\n  var u = parseInt('100', 8)\n  var g = parseInt('010', 8)\n  var o = parseInt('001', 8)\n  var ug = u | g\n\n  var ret = (mod & o) ||\n    (mod & g) && gid === myGid ||\n    (mod & u) && uid === myUid ||\n    (mod & ug) && myUid === 0\n\n  return ret\n}\n", "var fs = require('fs')\nvar core\nif (process.platform === 'win32' || global.TESTING_WINDOWS) {\n  core = require('./windows.js')\n} else {\n  core = require('./mode.js')\n}\n\nmodule.exports = isexe\nisexe.sync = sync\n\nfunction isexe (path, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = {}\n  }\n\n  if (!cb) {\n    if (typeof Promise !== 'function') {\n      throw new TypeError('callback not provided')\n    }\n\n    return new Promise(function (resolve, reject) {\n      isexe(path, options || {}, function (er, is) {\n        if (er) {\n          reject(er)\n        } else {\n          resolve(is)\n        }\n      })\n    })\n  }\n\n  core(path, options || {}, function (er, is) {\n    // ignore EACCES because that just means we aren't allowed to run it\n    if (er) {\n      if (er.code === 'EACCES' || options && options.ignoreErrors) {\n        er = null\n        is = false\n      }\n    }\n    cb(er, is)\n  })\n}\n\nfunction sync (path, options) {\n  // my kingdom for a filtered catch\n  try {\n    return core.sync(path, options || {})\n  } catch (er) {\n    if (options && options.ignoreErrors || er.code === 'EACCES') {\n      return false\n    } else {\n      throw er\n    }\n  }\n}\n", "const isWindows = process.platform === 'win32' ||\n    process.env.OSTYPE === 'cygwin' ||\n    process.env.OSTYPE === 'msys'\n\nconst path = require('path')\nconst COLON = isWindows ? ';' : ':'\nconst isexe = require('isexe')\n\nconst getNotFoundError = (cmd) =>\n  Object.assign(new Error(`not found: ${cmd}`), { code: 'ENOENT' })\n\nconst getPathInfo = (cmd, opt) => {\n  const colon = opt.colon || COLON\n\n  // If it has a slash, then we don't bother searching the pathenv.\n  // just check the file itself, and that's it.\n  const pathEnv = cmd.match(/\\//) || isWindows && cmd.match(/\\\\/) ? ['']\n    : (\n      [\n        // windows always checks the cwd first\n        ...(isWindows ? [process.cwd()] : []),\n        ...(opt.path || process.env.PATH ||\n          /* istanbul ignore next: very unusual */ '').split(colon),\n      ]\n    )\n  const pathExtExe = isWindows\n    ? opt.pathExt || process.env.PATHEXT || '.EXE;.CMD;.BAT;.COM'\n    : ''\n  const pathExt = isWindows ? pathExtExe.split(colon) : ['']\n\n  if (isWindows) {\n    if (cmd.indexOf('.') !== -1 && pathExt[0] !== '')\n      pathExt.unshift('')\n  }\n\n  return {\n    pathEnv,\n    pathExt,\n    pathExtExe,\n  }\n}\n\nconst which = (cmd, opt, cb) => {\n  if (typeof opt === 'function') {\n    cb = opt\n    opt = {}\n  }\n  if (!opt)\n    opt = {}\n\n  const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt)\n  const found = []\n\n  const step = i => new Promise((resolve, reject) => {\n    if (i === pathEnv.length)\n      return opt.all && found.length ? resolve(found)\n        : reject(getNotFoundError(cmd))\n\n    const ppRaw = pathEnv[i]\n    const pathPart = /^\".*\"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw\n\n    const pCmd = path.join(pathPart, cmd)\n    const p = !pathPart && /^\\.[\\\\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd\n      : pCmd\n\n    resolve(subStep(p, i, 0))\n  })\n\n  const subStep = (p, i, ii) => new Promise((resolve, reject) => {\n    if (ii === pathExt.length)\n      return resolve(step(i + 1))\n    const ext = pathExt[ii]\n    isexe(p + ext, { pathExt: pathExtExe }, (er, is) => {\n      if (!er && is) {\n        if (opt.all)\n          found.push(p + ext)\n        else\n          return resolve(p + ext)\n      }\n      return resolve(subStep(p, i, ii + 1))\n    })\n  })\n\n  return cb ? step(0).then(res => cb(null, res), cb) : step(0)\n}\n\nconst whichSync = (cmd, opt) => {\n  opt = opt || {}\n\n  const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt)\n  const found = []\n\n  for (let i = 0; i < pathEnv.length; i ++) {\n    const ppRaw = pathEnv[i]\n    const pathPart = /^\".*\"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw\n\n    const pCmd = path.join(pathPart, cmd)\n    const p = !pathPart && /^\\.[\\\\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd\n      : pCmd\n\n    for (let j = 0; j < pathExt.length; j ++) {\n      const cur = p + pathExt[j]\n      try {\n        const is = isexe.sync(cur, { pathExt: pathExtExe })\n        if (is) {\n          if (opt.all)\n            found.push(cur)\n          else\n            return cur\n        }\n      } catch (ex) {}\n    }\n  }\n\n  if (opt.all && found.length)\n    return found\n\n  if (opt.nothrow)\n    return null\n\n  throw getNotFoundError(cmd)\n}\n\nmodule.exports = which\nwhich.sync = whichSync\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar pathModule = require('path');\nvar isWindows = process.platform === 'win32';\nvar fs = require('fs');\n\n// JavaScript implementation of realpath, ported from node pre-v6\n\nvar DEBUG = process.env.NODE_DEBUG && /fs/.test(process.env.NODE_DEBUG);\n\nfunction rethrow() {\n  // Only enable in debug mode. A backtrace uses ~1000 bytes of heap space and\n  // is fairly slow to generate.\n  var callback;\n  if (DEBUG) {\n    var backtrace = new Error;\n    callback = debugCallback;\n  } else\n    callback = missingCallback;\n\n  return callback;\n\n  function debugCallback(err) {\n    if (err) {\n      backtrace.message = err.message;\n      err = backtrace;\n      missingCallback(err);\n    }\n  }\n\n  function missingCallback(err) {\n    if (err) {\n      if (process.throwDeprecation)\n        throw err;  // Forgot a callback but don't know where? Use NODE_DEBUG=fs\n      else if (!process.noDeprecation) {\n        var msg = 'fs: missing callback ' + (err.stack || err.message);\n        if (process.traceDeprecation)\n          console.trace(msg);\n        else\n          console.error(msg);\n      }\n    }\n  }\n}\n\nfunction maybeCallback(cb) {\n  return typeof cb === 'function' ? cb : rethrow();\n}\n\nvar normalize = pathModule.normalize;\n\n// Regexp that finds the next partion of a (partial) path\n// result is [base_with_slash, base], e.g. ['somedir/', 'somedir']\nif (isWindows) {\n  var nextPartRe = /(.*?)(?:[\\/\\\\]+|$)/g;\n} else {\n  var nextPartRe = /(.*?)(?:[\\/]+|$)/g;\n}\n\n// Regex to find the device root, including trailing slash. E.g. 'c:\\\\'.\nif (isWindows) {\n  var splitRootRe = /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/][^\\\\\\/]+)?[\\\\\\/]*/;\n} else {\n  var splitRootRe = /^[\\/]*/;\n}\n\nexports.realpathSync = function realpathSync(p, cache) {\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return cache[p];\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstatSync(base);\n      knownHard[base] = true;\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      continue;\n    }\n\n    var resolvedLink;\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // some known symbolic link.  no need to stat again.\n      resolvedLink = cache[base];\n    } else {\n      var stat = fs.lstatSync(base);\n      if (!stat.isSymbolicLink()) {\n        knownHard[base] = true;\n        if (cache) cache[base] = base;\n        continue;\n      }\n\n      // read the link if it wasn't read before\n      // dev/ino always return 0 on windows, so skip the check.\n      var linkTarget = null;\n      if (!isWindows) {\n        var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n        if (seenLinks.hasOwnProperty(id)) {\n          linkTarget = seenLinks[id];\n        }\n      }\n      if (linkTarget === null) {\n        fs.statSync(base);\n        linkTarget = fs.readlinkSync(base);\n      }\n      resolvedLink = pathModule.resolve(previous, linkTarget);\n      // track this, if given a cache.\n      if (cache) cache[base] = resolvedLink;\n      if (!isWindows) seenLinks[id] = linkTarget;\n    }\n\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n\n  if (cache) cache[original] = p;\n\n  return p;\n};\n\n\nexports.realpath = function realpath(p, cache, cb) {\n  if (typeof cb !== 'function') {\n    cb = maybeCallback(cache);\n    cache = null;\n  }\n\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return process.nextTick(cb.bind(null, null, cache[p]));\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstat(base, function(err) {\n        if (err) return cb(err);\n        knownHard[base] = true;\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  function LOOP() {\n    // stop if scanned past end of path\n    if (pos >= p.length) {\n      if (cache) cache[original] = p;\n      return cb(null, p);\n    }\n\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      return process.nextTick(LOOP);\n    }\n\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // known symbolic link.  no need to stat again.\n      return gotResolvedLink(cache[base]);\n    }\n\n    return fs.lstat(base, gotStat);\n  }\n\n  function gotStat(err, stat) {\n    if (err) return cb(err);\n\n    // if not a symlink, skip to the next path part\n    if (!stat.isSymbolicLink()) {\n      knownHard[base] = true;\n      if (cache) cache[base] = base;\n      return process.nextTick(LOOP);\n    }\n\n    // stat & read the link if not read before\n    // call gotTarget as soon as the link target is known\n    // dev/ino always return 0 on windows, so skip the check.\n    if (!isWindows) {\n      var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n      if (seenLinks.hasOwnProperty(id)) {\n        return gotTarget(null, seenLinks[id], base);\n      }\n    }\n    fs.stat(base, function(err) {\n      if (err) return cb(err);\n\n      fs.readlink(base, function(err, target) {\n        if (!isWindows) seenLinks[id] = target;\n        gotTarget(err, target);\n      });\n    });\n  }\n\n  function gotTarget(err, target, base) {\n    if (err) return cb(err);\n\n    var resolvedLink = pathModule.resolve(previous, target);\n    if (cache) cache[base] = resolvedLink;\n    gotResolvedLink(resolvedLink);\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n};\n", "module.exports = realpath\nrealpath.realpath = realpath\nrealpath.sync = realpathSync\nrealpath.realpathSync = realpathSync\nrealpath.monkeypatch = monkeypatch\nrealpath.unmonkeypatch = unmonkeypatch\n\nvar fs = require('fs')\nvar origRealpath = fs.realpath\nvar origRealpathSync = fs.realpathSync\n\nvar version = process.version\nvar ok = /^v[0-5]\\./.test(version)\nvar old = require('./old.js')\n\nfunction newError (er) {\n  return er && er.syscall === 'realpath' && (\n    er.code === 'ELOOP' ||\n    er.code === 'ENOMEM' ||\n    er.code === 'ENAMETOOLONG'\n  )\n}\n\nfunction realpath (p, cache, cb) {\n  if (ok) {\n    return origRealpath(p, cache, cb)\n  }\n\n  if (typeof cache === 'function') {\n    cb = cache\n    cache = null\n  }\n  origRealpath(p, cache, function (er, result) {\n    if (newError(er)) {\n      old.realpath(p, cache, cb)\n    } else {\n      cb(er, result)\n    }\n  })\n}\n\nfunction realpathSync (p, cache) {\n  if (ok) {\n    return origRealpathSync(p, cache)\n  }\n\n  try {\n    return origRealpathSync(p, cache)\n  } catch (er) {\n    if (newError(er)) {\n      return old.realpathSync(p, cache)\n    } else {\n      throw er\n    }\n  }\n}\n\nfunction monkeypatch () {\n  fs.realpath = realpath\n  fs.realpathSync = realpathSync\n}\n\nfunction unmonkeypatch () {\n  fs.realpath = origRealpath\n  fs.realpathSync = origRealpathSync\n}\n", "module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n", "'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    if(a===b) {\n      return [ai, bi];\n    }\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n", "var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n", "module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = (function () { try { return require('path') } catch (e) {}}()) || {\n  sep: '/'\n}\nminimatch.sep = path.sep\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  b = b || {}\n  var t = {}\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n    return minimatch\n  }\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n  m.Minimatch.defaults = function defaults (options) {\n    return orig.defaults(ext(def, options)).Minimatch\n  }\n\n  m.filter = function filter (pattern, options) {\n    return orig.filter(pattern, ext(def, options))\n  }\n\n  m.defaults = function defaults (options) {\n    return orig.defaults(ext(def, options))\n  }\n\n  m.makeRe = function makeRe (pattern, options) {\n    return orig.makeRe(pattern, ext(def, options))\n  }\n\n  m.braceExpand = function braceExpand (pattern, options) {\n    return orig.braceExpand(pattern, ext(def, options))\n  }\n\n  m.match = function (list, pattern, options) {\n    return orig.match(list, pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  assertValidPattern(pattern)\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  assertValidPattern(pattern)\n\n  if (!options) options = {}\n\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (!options.allowWindowsEscape && path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n  this.partial = !!options.partial\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = function debug() { console.error.apply(console, arguments) }\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  assertValidPattern(pattern)\n\n  // Thanks to Yeting Li <https://github.com/yetingli> for\n  // improving this regexp to avoid a ReDOS vulnerability.\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\nvar MAX_PATTERN_LENGTH = 1024 * 64\nvar assertValidPattern = function (pattern) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern')\n  }\n\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long')\n  }\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  assertValidPattern(pattern)\n\n  var options = this.options\n\n  // shortcuts\n  if (pattern === '**') {\n    if (!options.noglobstar)\n      return GLOBSTAR\n    else\n      pattern = '*'\n  }\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      /* istanbul ignore next */\n      case '/': {\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n      }\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        // split where the last [ was, make sure we don't have\n        // an invalid re. if so, re-walk the contents of the\n        // would-be class to re-translate any characters that\n        // were passed through as-is\n        // TODO: It would probably be faster to determine this\n        // without a try/catch and a new RegExp, but it's tricky\n        // to do safely.  For now, this is safe and works.\n        var cs = pattern.substring(classStart + 1, i)\n        try {\n          RegExp('[' + cs + ']')\n        } catch (er) {\n          // not a valid class!\n          var sp = this.parse(cs, SUBPARSE)\n          re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n          hasMagic = hasMagic || sp[1]\n          inClass = false\n          continue\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '[': case '.': case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) /* istanbul ignore next - should be impossible */ {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) /* istanbul ignore next - should be impossible */ {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = function match (f, partial) {\n  if (typeof partial === 'undefined') partial = this.partial\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    /* istanbul ignore if */\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      /* istanbul ignore if */\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      hit = f === p\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else /* istanbul ignore else */ if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    return (fi === fl - 1) && (file[fi] === '')\n  }\n\n  // should be unreachable.\n  /* istanbul ignore next */\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n", "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n", "try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n", "'use strict';\n\nfunction posix(path) {\n\treturn path.charAt(0) === '/';\n}\n\nfunction win32(path) {\n\t// https://github.com/nodejs/node/blob/b3fcc245fb25539909ef1d5eaa01dbf92e168633/lib/path.js#L56\n\tvar splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n\tvar result = splitDeviceRe.exec(path);\n\tvar device = result[1] || '';\n\tvar isUnc = Boolean(device && device.charAt(1) !== ':');\n\n\t// UNC paths are always absolute\n\treturn Boolean(result[2] || isUnc);\n}\n\nmodule.exports = process.platform === 'win32' ? win32 : posix;\nmodule.exports.posix = posix;\nmodule.exports.win32 = win32;\n", "exports.setopts = setopts\nexports.ownProp = ownProp\nexports.makeAbs = makeAbs\nexports.finish = finish\nexports.mark = mark\nexports.isIgnored = isIgnored\nexports.childrenIgnored = childrenIgnored\n\nfunction ownProp (obj, field) {\n  return Object.prototype.hasOwnProperty.call(obj, field)\n}\n\nvar fs = require(\"fs\")\nvar path = require(\"path\")\nvar minimatch = require(\"minimatch\")\nvar isAbsolute = require(\"path-is-absolute\")\nvar Minimatch = minimatch.Minimatch\n\nfunction alphasort (a, b) {\n  return a.localeCompare(b, 'en')\n}\n\nfunction setupIgnores (self, options) {\n  self.ignore = options.ignore || []\n\n  if (!Array.isArray(self.ignore))\n    self.ignore = [self.ignore]\n\n  if (self.ignore.length) {\n    self.ignore = self.ignore.map(ignoreMap)\n  }\n}\n\n// ignore patterns are always in dot:true mode.\nfunction ignoreMap (pattern) {\n  var gmatcher = null\n  if (pattern.slice(-3) === '/**') {\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '')\n    gmatcher = new Minimatch(gpattern, { dot: true })\n  }\n\n  return {\n    matcher: new Minimatch(pattern, { dot: true }),\n    gmatcher: gmatcher\n  }\n}\n\nfunction setopts (self, pattern, options) {\n  if (!options)\n    options = {}\n\n  // base-matching: just use globstar for that.\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\")\n    }\n    pattern = \"**/\" + pattern\n  }\n\n  self.silent = !!options.silent\n  self.pattern = pattern\n  self.strict = options.strict !== false\n  self.realpath = !!options.realpath\n  self.realpathCache = options.realpathCache || Object.create(null)\n  self.follow = !!options.follow\n  self.dot = !!options.dot\n  self.mark = !!options.mark\n  self.nodir = !!options.nodir\n  if (self.nodir)\n    self.mark = true\n  self.sync = !!options.sync\n  self.nounique = !!options.nounique\n  self.nonull = !!options.nonull\n  self.nosort = !!options.nosort\n  self.nocase = !!options.nocase\n  self.stat = !!options.stat\n  self.noprocess = !!options.noprocess\n  self.absolute = !!options.absolute\n  self.fs = options.fs || fs\n\n  self.maxLength = options.maxLength || Infinity\n  self.cache = options.cache || Object.create(null)\n  self.statCache = options.statCache || Object.create(null)\n  self.symlinks = options.symlinks || Object.create(null)\n\n  setupIgnores(self, options)\n\n  self.changedCwd = false\n  var cwd = process.cwd()\n  if (!ownProp(options, \"cwd\"))\n    self.cwd = cwd\n  else {\n    self.cwd = path.resolve(options.cwd)\n    self.changedCwd = self.cwd !== cwd\n  }\n\n  self.root = options.root || path.resolve(self.cwd, \"/\")\n  self.root = path.resolve(self.root)\n  if (process.platform === \"win32\")\n    self.root = self.root.replace(/\\\\/g, \"/\")\n\n  // TODO: is an absolute `cwd` supposed to be resolved against `root`?\n  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')\n  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd)\n  if (process.platform === \"win32\")\n    self.cwdAbs = self.cwdAbs.replace(/\\\\/g, \"/\")\n  self.nomount = !!options.nomount\n\n  // disable comments and negation in Minimatch.\n  // Note that they are not supported in Glob itself anyway.\n  options.nonegate = true\n  options.nocomment = true\n  // always treat \\ in patterns as escapes, not path separators\n  options.allowWindowsEscape = false\n\n  self.minimatch = new Minimatch(pattern, options)\n  self.options = self.minimatch.options\n}\n\nfunction finish (self) {\n  var nou = self.nounique\n  var all = nou ? [] : Object.create(null)\n\n  for (var i = 0, l = self.matches.length; i < l; i ++) {\n    var matches = self.matches[i]\n    if (!matches || Object.keys(matches).length === 0) {\n      if (self.nonull) {\n        // do like the shell, and spit out the literal glob\n        var literal = self.minimatch.globSet[i]\n        if (nou)\n          all.push(literal)\n        else\n          all[literal] = true\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches)\n      if (nou)\n        all.push.apply(all, m)\n      else\n        m.forEach(function (m) {\n          all[m] = true\n        })\n    }\n  }\n\n  if (!nou)\n    all = Object.keys(all)\n\n  if (!self.nosort)\n    all = all.sort(alphasort)\n\n  // at *some* point we statted all of these\n  if (self.mark) {\n    for (var i = 0; i < all.length; i++) {\n      all[i] = self._mark(all[i])\n    }\n    if (self.nodir) {\n      all = all.filter(function (e) {\n        var notDir = !(/\\/$/.test(e))\n        var c = self.cache[e] || self.cache[makeAbs(self, e)]\n        if (notDir && c)\n          notDir = c !== 'DIR' && !Array.isArray(c)\n        return notDir\n      })\n    }\n  }\n\n  if (self.ignore.length)\n    all = all.filter(function(m) {\n      return !isIgnored(self, m)\n    })\n\n  self.found = all\n}\n\nfunction mark (self, p) {\n  var abs = makeAbs(self, p)\n  var c = self.cache[abs]\n  var m = p\n  if (c) {\n    var isDir = c === 'DIR' || Array.isArray(c)\n    var slash = p.slice(-1) === '/'\n\n    if (isDir && !slash)\n      m += '/'\n    else if (!isDir && slash)\n      m = m.slice(0, -1)\n\n    if (m !== p) {\n      var mabs = makeAbs(self, m)\n      self.statCache[mabs] = self.statCache[abs]\n      self.cache[mabs] = self.cache[abs]\n    }\n  }\n\n  return m\n}\n\n// lotta situps...\nfunction makeAbs (self, f) {\n  var abs = f\n  if (f.charAt(0) === '/') {\n    abs = path.join(self.root, f)\n  } else if (isAbsolute(f) || f === '') {\n    abs = f\n  } else if (self.changedCwd) {\n    abs = path.resolve(self.cwd, f)\n  } else {\n    abs = path.resolve(f)\n  }\n\n  if (process.platform === 'win32')\n    abs = abs.replace(/\\\\/g, '/')\n\n  return abs\n}\n\n\n// Return true, if pattern ends with globstar '**', for the accompanying parent directory.\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\nfunction isIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n\nfunction childrenIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n", "module.exports = globSync\nglobSync.GlobSync = GlobSync\n\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar Glob = require('./glob.js').Glob\nvar util = require('util')\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar common = require('./common.js')\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nfunction globSync (pattern, options) {\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  return new GlobSync(pattern, options).found\n}\n\nfunction GlobSync (pattern, options) {\n  if (!pattern)\n    throw new Error('must provide pattern')\n\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  if (!(this instanceof GlobSync))\n    return new GlobSync(pattern, options)\n\n  setopts(this, pattern, options)\n\n  if (this.noprocess)\n    return this\n\n  var n = this.minimatch.set.length\n  this.matches = new Array(n)\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false)\n  }\n  this._finish()\n}\n\nGlobSync.prototype._finish = function () {\n  assert.ok(this instanceof GlobSync)\n  if (this.realpath) {\n    var self = this\n    this.matches.forEach(function (matchset, index) {\n      var set = self.matches[index] = Object.create(null)\n      for (var p in matchset) {\n        try {\n          p = self._makeAbs(p)\n          var real = rp.realpathSync(p, self.realpathCache)\n          set[real] = true\n        } catch (er) {\n          if (er.syscall === 'stat')\n            set[self._makeAbs(p)] = true\n          else\n            throw er\n        }\n      }\n    })\n  }\n  common.finish(this)\n}\n\n\nGlobSync.prototype._process = function (pattern, index, inGlobStar) {\n  assert.ok(this instanceof GlobSync)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // See if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) ||\n      isAbsolute(pattern.map(function (p) {\n        return typeof p === 'string' ? p : '[*]'\n      }).join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip processing\n  if (childrenIgnored(this, read))\n    return\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)\n}\n\n\nGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\n  var entries = this._readdir(abs, inGlobStar)\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix.slice(-1) !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix)\n      newPattern = [prefix, e]\n    else\n      newPattern = [e]\n    this._process(newPattern.concat(remain), index, inGlobStar)\n  }\n}\n\n\nGlobSync.prototype._emitMatch = function (index, e) {\n  if (isIgnored(this, e))\n    return\n\n  var abs = this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute) {\n    e = abs\n  }\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  if (this.stat)\n    this._stat(e)\n}\n\n\nGlobSync.prototype._readdirInGlobStar = function (abs) {\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false)\n\n  var entries\n  var lstat\n  var stat\n  try {\n    lstat = this.fs.lstatSync(abs)\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      // lstat failed, doesn't exist\n      return null\n    }\n  }\n\n  var isSym = lstat && lstat.isSymbolicLink()\n  this.symlinks[abs] = isSym\n\n  // If it's not a symlink or a dir, then it's definitely a regular file.\n  // don't bother doing a readdir in that case.\n  if (!isSym && lstat && !lstat.isDirectory())\n    this.cache[abs] = 'FILE'\n  else\n    entries = this._readdir(abs, false)\n\n  return entries\n}\n\nGlobSync.prototype._readdir = function (abs, inGlobStar) {\n  var entries\n\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return null\n\n    if (Array.isArray(c))\n      return c\n  }\n\n  try {\n    return this._readdirEntries(abs, this.fs.readdirSync(abs))\n  } catch (er) {\n    this._readdirError(abs, er)\n    return null\n  }\n}\n\nGlobSync.prototype._readdirEntries = function (abs, entries) {\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n\n  // mark and cache dir-ness\n  return entries\n}\n\nGlobSync.prototype._readdirError = function (f, er) {\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        throw error\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict)\n        throw er\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n}\n\nGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\n\n  var entries = this._readdir(abs, inGlobStar)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false)\n\n  var len = entries.length\n  var isSym = this.symlinks[abs]\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true)\n  }\n}\n\nGlobSync.prototype._processSimple = function (prefix, index) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var exists = this._stat(prefix)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlobSync.prototype._stat = function (f) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return false\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return c\n\n    if (needDir && c === 'FILE')\n      return false\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (!stat) {\n    var lstat\n    try {\n      lstat = this.fs.lstatSync(abs)\n    } catch (er) {\n      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n        this.statCache[abs] = false\n        return false\n      }\n    }\n\n    if (lstat && lstat.isSymbolicLink()) {\n      try {\n        stat = this.fs.statSync(abs)\n      } catch (er) {\n        stat = lstat\n      }\n    } else {\n      stat = lstat\n    }\n  }\n\n  this.statCache[abs] = stat\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return false\n\n  return c\n}\n\nGlobSync.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlobSync.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n", "// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n", "var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n", "var wrappy = require('wrappy')\nvar reqs = Object.create(null)\nvar once = require('once')\n\nmodule.exports = wrappy(inflight)\n\nfunction inflight (key, cb) {\n  if (reqs[key]) {\n    reqs[key].push(cb)\n    return null\n  } else {\n    reqs[key] = [cb]\n    return makeres(key)\n  }\n}\n\nfunction makeres (key) {\n  return once(function RES () {\n    var cbs = reqs[key]\n    var len = cbs.length\n    var args = slice(arguments)\n\n    // XXX It's somewhat ambiguous whether a new callback added in this\n    // pass should be queued for later execution if something in the\n    // list of callbacks throws, or if it should just be discarded.\n    // However, it's such an edge case that it hardly matters, and either\n    // choice is likely as surprising as the other.\n    // As it happens, we do go ahead and schedule it for later execution.\n    try {\n      for (var i = 0; i < len; i++) {\n        cbs[i].apply(null, args)\n      }\n    } finally {\n      if (cbs.length > len) {\n        // added more in the interim.\n        // de-zalgo, just in case, but don't call again.\n        cbs.splice(0, len)\n        process.nextTick(function () {\n          RES.apply(null, args)\n        })\n      } else {\n        delete reqs[key]\n      }\n    }\n  })\n}\n\nfunction slice (args) {\n  var length = args.length\n  var array = []\n\n  for (var i = 0; i < length; i++) array[i] = args[i]\n  return array\n}\n", "// Approach:\n//\n// 1. Get the minimatch set\n// 2. For each pattern in the set, PROCESS(pattern, false)\n// 3. Store matches per-set, then uniq them\n//\n// PROCESS(pattern, inGlobStar)\n// Get the first [n] items from pattern that are all strings\n// Join these together.  This is PREFIX.\n//   If there is no more remaining, then stat(PREFIX) and\n//   add to matches if it succeeds.  END.\n//\n// If inGlobStar and PREFIX is symlink and points to dir\n//   set ENTRIES = []\n// else readdir(PREFIX) as ENTRIES\n//   If fail, END\n//\n// with ENTRIES\n//   If pattern[n] is GLOBSTAR\n//     // handle the case where the globstar match is empty\n//     // by pruning it out, and testing the resulting pattern\n//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)\n//     // handle other cases.\n//     for ENTRY in ENTRIES (not dotfiles)\n//       // attach globstar + tail onto the entry\n//       // Mark that this entry is a globstar match\n//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)\n//\n//   else // not globstar\n//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\n//       Test ENTRY against pattern[n]\n//       If fails, continue\n//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\n//\n// Caveat:\n//   Cache all stats and readdirs results to minimize syscall.  Since all\n//   we ever care about is existence and directory-ness, we can just keep\n//   `true` for files, and [children,...] for directories, or `false` for\n//   things that don't exist.\n\nmodule.exports = glob\n\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar inherits = require('inherits')\nvar EE = require('events').EventEmitter\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar globSync = require('./sync.js')\nvar common = require('./common.js')\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar inflight = require('inflight')\nvar util = require('util')\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nvar once = require('once')\n\nfunction glob (pattern, options, cb) {\n  if (typeof options === 'function') cb = options, options = {}\n  if (!options) options = {}\n\n  if (options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return globSync(pattern, options)\n  }\n\n  return new Glob(pattern, options, cb)\n}\n\nglob.sync = globSync\nvar GlobSync = glob.GlobSync = globSync.GlobSync\n\n// old api surface\nglob.glob = glob\n\nfunction extend (origin, add) {\n  if (add === null || typeof add !== 'object') {\n    return origin\n  }\n\n  var keys = Object.keys(add)\n  var i = keys.length\n  while (i--) {\n    origin[keys[i]] = add[keys[i]]\n  }\n  return origin\n}\n\nglob.hasMagic = function (pattern, options_) {\n  var options = extend({}, options_)\n  options.noprocess = true\n\n  var g = new Glob(pattern, options)\n  var set = g.minimatch.set\n\n  if (!pattern)\n    return false\n\n  if (set.length > 1)\n    return true\n\n  for (var j = 0; j < set[0].length; j++) {\n    if (typeof set[0][j] !== 'string')\n      return true\n  }\n\n  return false\n}\n\nglob.Glob = Glob\ninherits(Glob, EE)\nfunction Glob (pattern, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = null\n  }\n\n  if (options && options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return new GlobSync(pattern, options)\n  }\n\n  if (!(this instanceof Glob))\n    return new Glob(pattern, options, cb)\n\n  setopts(this, pattern, options)\n  this._didRealPath = false\n\n  // process each pattern in the minimatch set\n  var n = this.minimatch.set.length\n\n  // The matches are stored as {<filename>: true,...} so that\n  // duplicates are automagically pruned.\n  // Later, we do an Object.keys() on these.\n  // Keep them as a list so we can fill in when nonull is set.\n  this.matches = new Array(n)\n\n  if (typeof cb === 'function') {\n    cb = once(cb)\n    this.on('error', cb)\n    this.on('end', function (matches) {\n      cb(null, matches)\n    })\n  }\n\n  var self = this\n  this._processing = 0\n\n  this._emitQueue = []\n  this._processQueue = []\n  this.paused = false\n\n  if (this.noprocess)\n    return this\n\n  if (n === 0)\n    return done()\n\n  var sync = true\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false, done)\n  }\n  sync = false\n\n  function done () {\n    --self._processing\n    if (self._processing <= 0) {\n      if (sync) {\n        process.nextTick(function () {\n          self._finish()\n        })\n      } else {\n        self._finish()\n      }\n    }\n  }\n}\n\nGlob.prototype._finish = function () {\n  assert(this instanceof Glob)\n  if (this.aborted)\n    return\n\n  if (this.realpath && !this._didRealpath)\n    return this._realpath()\n\n  common.finish(this)\n  this.emit('end', this.found)\n}\n\nGlob.prototype._realpath = function () {\n  if (this._didRealpath)\n    return\n\n  this._didRealpath = true\n\n  var n = this.matches.length\n  if (n === 0)\n    return this._finish()\n\n  var self = this\n  for (var i = 0; i < this.matches.length; i++)\n    this._realpathSet(i, next)\n\n  function next () {\n    if (--n === 0)\n      self._finish()\n  }\n}\n\nGlob.prototype._realpathSet = function (index, cb) {\n  var matchset = this.matches[index]\n  if (!matchset)\n    return cb()\n\n  var found = Object.keys(matchset)\n  var self = this\n  var n = found.length\n\n  if (n === 0)\n    return cb()\n\n  var set = this.matches[index] = Object.create(null)\n  found.forEach(function (p, i) {\n    // If there's a problem with the stat, then it means that\n    // one or more of the links in the realpath couldn't be\n    // resolved.  just return the abs value in that case.\n    p = self._makeAbs(p)\n    rp.realpath(p, self.realpathCache, function (er, real) {\n      if (!er)\n        set[real] = true\n      else if (er.syscall === 'stat')\n        set[p] = true\n      else\n        self.emit('error', er) // srsly wtf right here\n\n      if (--n === 0) {\n        self.matches[index] = set\n        cb()\n      }\n    })\n  })\n}\n\nGlob.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlob.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n\nGlob.prototype.abort = function () {\n  this.aborted = true\n  this.emit('abort')\n}\n\nGlob.prototype.pause = function () {\n  if (!this.paused) {\n    this.paused = true\n    this.emit('pause')\n  }\n}\n\nGlob.prototype.resume = function () {\n  if (this.paused) {\n    this.emit('resume')\n    this.paused = false\n    if (this._emitQueue.length) {\n      var eq = this._emitQueue.slice(0)\n      this._emitQueue.length = 0\n      for (var i = 0; i < eq.length; i ++) {\n        var e = eq[i]\n        this._emitMatch(e[0], e[1])\n      }\n    }\n    if (this._processQueue.length) {\n      var pq = this._processQueue.slice(0)\n      this._processQueue.length = 0\n      for (var i = 0; i < pq.length; i ++) {\n        var p = pq[i]\n        this._processing--\n        this._process(p[0], p[1], p[2], p[3])\n      }\n    }\n  }\n}\n\nGlob.prototype._process = function (pattern, index, inGlobStar, cb) {\n  assert(this instanceof Glob)\n  assert(typeof cb === 'function')\n\n  if (this.aborted)\n    return\n\n  this._processing++\n  if (this.paused) {\n    this._processQueue.push([pattern, index, inGlobStar, cb])\n    return\n  }\n\n  //console.error('PROCESS %d', this._processing, pattern)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // see if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index, cb)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) ||\n      isAbsolute(pattern.map(function (p) {\n        return typeof p === 'string' ? p : '[*]'\n      }).join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip _processing\n  if (childrenIgnored(this, read))\n    return cb()\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)\n}\n\nGlob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\nGlob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return cb()\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return cb()\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return cb()\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix) {\n      if (prefix !== '/')\n        e = prefix + '/' + e\n      else\n        e = prefix + e\n    }\n    this._process([e].concat(remain), index, inGlobStar, cb)\n  }\n  cb()\n}\n\nGlob.prototype._emitMatch = function (index, e) {\n  if (this.aborted)\n    return\n\n  if (isIgnored(this, e))\n    return\n\n  if (this.paused) {\n    this._emitQueue.push([index, e])\n    return\n  }\n\n  var abs = isAbsolute(e) ? e : this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute)\n    e = abs\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  var st = this.statCache[abs]\n  if (st)\n    this.emit('stat', e, st)\n\n  this.emit('match', e)\n}\n\nGlob.prototype._readdirInGlobStar = function (abs, cb) {\n  if (this.aborted)\n    return\n\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false, cb)\n\n  var lstatkey = 'lstat\\0' + abs\n  var self = this\n  var lstatcb = inflight(lstatkey, lstatcb_)\n\n  if (lstatcb)\n    self.fs.lstat(abs, lstatcb)\n\n  function lstatcb_ (er, lstat) {\n    if (er && er.code === 'ENOENT')\n      return cb()\n\n    var isSym = lstat && lstat.isSymbolicLink()\n    self.symlinks[abs] = isSym\n\n    // If it's not a symlink or a dir, then it's definitely a regular file.\n    // don't bother doing a readdir in that case.\n    if (!isSym && lstat && !lstat.isDirectory()) {\n      self.cache[abs] = 'FILE'\n      cb()\n    } else\n      self._readdir(abs, false, cb)\n  }\n}\n\nGlob.prototype._readdir = function (abs, inGlobStar, cb) {\n  if (this.aborted)\n    return\n\n  cb = inflight('readdir\\0'+abs+'\\0'+inGlobStar, cb)\n  if (!cb)\n    return\n\n  //console.error('RD %j %j', +inGlobStar, abs)\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs, cb)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return cb()\n\n    if (Array.isArray(c))\n      return cb(null, c)\n  }\n\n  var self = this\n  self.fs.readdir(abs, readdirCb(this, abs, cb))\n}\n\nfunction readdirCb (self, abs, cb) {\n  return function (er, entries) {\n    if (er)\n      self._readdirError(abs, er, cb)\n    else\n      self._readdirEntries(abs, entries, cb)\n  }\n}\n\nGlob.prototype._readdirEntries = function (abs, entries, cb) {\n  if (this.aborted)\n    return\n\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n  return cb(null, entries)\n}\n\nGlob.prototype._readdirError = function (f, er, cb) {\n  if (this.aborted)\n    return\n\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        this.emit('error', error)\n        this.abort()\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict) {\n        this.emit('error', er)\n        // If the error is handled, then we abort\n        // if not, we threw out of here\n        this.abort()\n      }\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n\n  return cb()\n}\n\nGlob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\n\nGlob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n  //console.error('pgs2', prefix, remain[0], entries)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return cb()\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false, cb)\n\n  var isSym = this.symlinks[abs]\n  var len = entries.length\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return cb()\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true, cb)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true, cb)\n  }\n\n  cb()\n}\n\nGlob.prototype._processSimple = function (prefix, index, cb) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var self = this\n  this._stat(prefix, function (er, exists) {\n    self._processSimple2(prefix, index, er, exists, cb)\n  })\n}\nGlob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {\n\n  //console.error('ps2', prefix, exists)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return cb()\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n  cb()\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlob.prototype._stat = function (f, cb) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return cb()\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return cb(null, c)\n\n    if (needDir && c === 'FILE')\n      return cb()\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (stat !== undefined) {\n    if (stat === false)\n      return cb(null, stat)\n    else {\n      var type = stat.isDirectory() ? 'DIR' : 'FILE'\n      if (needDir && type === 'FILE')\n        return cb()\n      else\n        return cb(null, type, stat)\n    }\n  }\n\n  var self = this\n  var statcb = inflight('stat\\0' + abs, lstatcb_)\n  if (statcb)\n    self.fs.lstat(abs, statcb)\n\n  function lstatcb_ (er, lstat) {\n    if (lstat && lstat.isSymbolicLink()) {\n      // If it's a symlink, then treat it as the target, unless\n      // the target does not exist, then treat it as a file.\n      return self.fs.stat(abs, function (er, stat) {\n        if (er)\n          self._stat2(f, abs, null, lstat, cb)\n        else\n          self._stat2(f, abs, er, stat, cb)\n      })\n    } else {\n      self._stat2(f, abs, er, lstat, cb)\n    }\n  }\n}\n\nGlob.prototype._stat2 = function (f, abs, er, stat, cb) {\n  if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n    this.statCache[abs] = false\n    return cb()\n  }\n\n  var needDir = f.slice(-1) === '/'\n  this.statCache[abs] = stat\n\n  if (abs.slice(-1) === '/' && stat && !stat.isDirectory())\n    return cb(null, false, stat)\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return cb()\n\n  return cb(null, c, stat)\n}\n", "import * as vscode from \"vscode\";\nimport { Uri } from \"vscode\";\n\nimport { rebuildEnvironmentCallback } from \"./callbacks\";\n\nimport {\n  activateLanguageServerClient,\n  deactivateLanguageServerClient,\n} from \"./client\";\n\nimport {\n  updateConfigurationOption,\n  updateUnitTestLocationOption,\n} from \"./configuration\";\n\nimport {\n  createCoverageStatusBar,\n  hideStatusBarCoverage,\n  initializeCodeCoverageFeatures,\n  toggleCoverageAction,\n  updateDisplayedCoverage,\n  updateCOVdecorations,\n} from \"./coverage\";\n\nimport {\n  buildTestNodeForFunction,\n  initializeTestDecorator,\n  updateTestDecorator,\n} from \"./editorDecorator\";\n\nimport { updateExploreDecorations } from \"./fileDecorator\";\n\nimport {\n  openMessagePane,\n  toggleMessageLog,\n  adjustVerboseSetting,\n  vectorMessage,\n} from \"./messagePane\";\n\nimport { viewMCDCReport, viewResultsReport } from \"./reporting\";\n\nimport {\n  environmentDataCache,\n  environmentNodeDataType,\n  getEnviroNodeData,\n  getEnviroPathFromID,\n  getTestNode,\n  testNodeType,\n} from \"./testData\";\n\nimport {\n  activateTestPane,\n  deleteTests,\n  insertBasisPathTests,\n  insertATGTests,\n  loadTestScript,\n  pathToEnviroBeingDebugged,\n  pathToProgramBeingDebugged,\n  refreshAllExtensionData,\n  updateCodedTestCases,\n  updateDataForEnvironment,\n  vcastUnbuiltEnviroList,\n  globalProjectWebviewComboboxItems,\n  setGlobalProjectIsOpenedChecker,\n  setGlobalCompilerAndTestsuites,\n  loadTestScriptButton,\n} from \"./testPane\";\n\nimport {\n  addLaunchConfiguration,\n  addSettingsFileFilter,\n  getEnvPathForFilePath,\n  showSettings,\n  updateCoverageAndRebuildEnv,\n  forceLowerCaseDriveLetter,\n  decodeVar,\n} from \"./utilities\";\n\nimport {\n  buildEnvironmentFromScript,\n  deleteEnvironment,\n  openVcastFromEnviroNode,\n  openVcastFromVCEfile,\n  rebuildEnvironment,\n  openProjectInVcast,\n  deleteLevel,\n} from \"./vcastAdapter\";\n\nimport {\n  buildProjectEnvironment,\n  removeTestsuiteFromProject,\n  importEnvToTestsuite,\n  createTestsuiteInCompiler,\n  addCompilerToProject,\n  updateProjectData,\n  buildExecuteIncremental,\n  cleanProjectEnvironment,\n  addEnvToTestsuite,\n  deleteEnvironmentFromProject,\n  createNewCompilerInProject,\n  createNewProject,\n} from \"./manage/manageSrc/manageCommands\";\n\nimport {\n  deleteServerLog,\n  displayServerLog,\n  initializeVcastDataServer,\n  initializeServerState,\n  serverProcessController,\n  serverStateType,\n  toggleDataServerState,\n} from \"./vcastDataServer\";\n\nimport {\n  checkIfInstallationIsOK,\n  configurationFile,\n  launchFile,\n  globalPathToSupportFiles,\n  initializeInstallerFiles,\n} from \"./vcastInstallation\";\n\nimport {\n  generateNewCodedTestFile,\n  addExistingCodedTestFile,\n  newEnvironment,\n  newTestScript,\n  openCodedTest,\n  ProjectEnvParameters,\n} from \"./vcastTestInterface\";\n\nimport {\n  addIncludePath,\n  envIsEmbeddedInProject,\n  getEnviroNameFromFile,\n  getLevelFromNodeId,\n  getVcmRoot,\n  openProjectFromEnviroPath,\n  openTestScript,\n} from \"./vcastUtilities\";\n\nimport fs = require(\"fs\");\nimport {\n  compilerTagList,\n  getNonce,\n  resolveWebviewBase,\n  setCompilerList,\n} from \"./manage/manageSrc/manageUtils\";\n\nconst path = require(\"path\");\nlet messagePane: vscode.OutputChannel = vscode.window.createOutputChannel(\n  \"VectorCAST Test Explorer\"\n);\n\n/**\n * Decodes a Base64-encoded variable name.\n */\nfunction decodeAndRemoveDeveloperEnvs() {\n  // Base64-encoded variable names\n  const encodedVars: string[] = [\n    \"VkNBU1RfVVNJTkdfSEVBRExFU1NfTU9ERQ\",\n    \"VkNBU1RfVVNFX0NJX0xJQ0VOU0VT\",\n  ];\n\n  for (const encoded of encodedVars) {\n    const varName = decodeVar(encoded);\n    delete process.env[varName];\n  }\n}\n\nexport function getMessagePane(): vscode.OutputChannel {\n  return messagePane;\n}\nexport async function activate(context: vscode.ExtensionContext) {\n  // activation gets called when:\n  //  -- VectorCAST environment exists in the workspace\n  //  -- \"Create VectorCAST Environment\" is selected from the Explorer context menu\n  //  -- \"VectorCAST Test Explorer: Configure\" is selected from the command palette (ctrl-shift-p)\n\n  // Handler for \"VectorCAST Test Explorer: Configure\"\n  // The first use of configure will trigger this activate function\n  // subsequent uses will trigger configureCommandCalled()\n  vscode.commands.registerCommand(\"vectorcastTestExplorer.configure\", () => {\n    configureCommandCalled(context);\n  });\n  vscode.commands.registerCommand(\"vectorcastTestExplorer.toggleLog\", () =>\n    toggleMessageLog()\n  );\n\n  // we need to install some event handlers so that the user can \"fix\"\n  // a \"bad\" vcast installation by providing a valid path see logic\n  // and comments in this function\n  await installPreActivationEventHandlers(context);\n\n  // this checks the vcast installation,\n  // and if its ok will proceed with full activation\n  await checkPrerequisites(context);\n}\n\nexport function configureCommandCalled(context: vscode.ExtensionContext) {\n  // open the extension settings if the user has explicitly called configure\n  showSettings();\n}\n\nlet alreadyConfigured: boolean = false;\nlet installationFilesInitialized: boolean = false;\nasync function checkPrerequisites(context: vscode.ExtensionContext) {\n  // this function is called from the activate function, and also from the\n  // event handler for changes to the vcast installation location.  So in the\n  // case that the VectorCAST installation is not found initially, we will get\n  // here multiple times\n\n  if (!alreadyConfigured) {\n    // setup the location of vTestInterface.py and other utilities\n    if (!installationFilesInitialized) {\n      initializeInstallerFiles(context);\n      installationFilesInitialized = true;\n    }\n\n    if (await checkIfInstallationIsOK()) {\n      activationLogic(context);\n      alreadyConfigured = true;\n      vscode.commands.executeCommand(\n        \"setContext\",\n        \"vectorcastTestExplorer.configured\",\n        true\n      );\n      // default to coverage ON\n      await toggleCoverageAction();\n      // initialize the verbose setting\n      adjustVerboseSetting();\n\n      // Sets the list for all available compilers\n      await setCompilerList();\n    } else {\n      openMessagePane();\n    }\n  }\n}\n\nasync function activationLogic(context: vscode.ExtensionContext) {\n  // remove developer env variables\n  decodeAndRemoveDeveloperEnvs();\n\n  // adds all of the command handlers\n  configureExtension(context);\n\n  // setup the decorations for coverage\n  initializeCodeCoverageFeatures(context);\n\n  // initialize the gutter decorator for testable functions\n  initializeTestDecorator(context);\n\n  await initializeVcastDataServer();\n\n  // initialize the test pane\n  activateTestPane(context);\n\n  // start the language server\n  activateLanguageServerClient(context);\n}\n\nfunction configureExtension(context: vscode.ExtensionContext) {\n  // this sets up the file explorer decorations for code coverage\n  updateExploreDecorations();\n\n  // Command: vectorcastTestExplorer.coverage /////////////////////////////////////////////////////////\n  // We create the status bar here, but the showing and updating is done in updateCOVdecorations\n  const coverStatusBar: vscode.StatusBarItem = createCoverageStatusBar();\n  context.subscriptions.push(coverStatusBar);\n  let toggleCoverageCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.coverage\",\n    async () => {\n      await toggleCoverageAction();\n    }\n  );\n  context.subscriptions.push(toggleCoverageCommand);\n\n  // Command: vectorcastTestExplorer.toggleVcastServerState ////////////////////////////////////////////////\n  let toggleDataServerCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.toggleVcastServerState\",\n    async () => {\n      await toggleDataServerState();\n    }\n  );\n  context.subscriptions.push(toggleDataServerCommand);\n\n  // Command: vectorcastTestExplorer.displayServerLog ////////////////////////////////////////////////\n  let displayServerLogCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.displayServerLog\",\n    () => {\n      displayServerLog();\n    }\n  );\n  context.subscriptions.push(displayServerLogCommand);\n\n  // Command: vectorcastTestExplorer.viewResults////////////////////////////////////////////////////////\n  let viewResultsCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.viewResults\",\n    (args: any) => {\n      if (args) {\n        viewResultsReport(args.id);\n      }\n    }\n  );\n  context.subscriptions.push(viewResultsCommand);\n\n  // Command: vectorcastTestExplorer.createTestScript////////////////////////////////////////////////////////\n  // This is the callback for the right clicks in the test explorer tree\n  let createTestScriptCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.createTestScript\",\n    (args: any) => {\n      if (args) {\n        const testNode: testNodeType = getTestNode(args.id);\n        newTestScript(testNode);\n      }\n    }\n  );\n  context.subscriptions.push(createTestScriptCommand);\n\n  // Command: vectorcastTestExplorer.addCodedTests////////////////////////////////////////////////////////\n  // This is the callback for the right clicks in the test explorer tree\n  let addCodedTestsCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.addCodedTests\",\n    (args: any) => {\n      if (args) {\n        addExistingCodedTestFile(args.id);\n      }\n    }\n  );\n  context.subscriptions.push(addCodedTestsCommand);\n\n  // Command: vectorcastTestExplorer.generateCodedTests////////////////////////////////////////////////////////\n  // This is the callback for the right clicks in the test explorer tree\n  let generateCodedTestsCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.generateCodedTests\",\n    (args: any) => {\n      if (args) {\n        generateNewCodedTestFile(args.id);\n      }\n    }\n  );\n  context.subscriptions.push(generateCodedTestsCommand);\n\n  // Command: vectorcastTestExplorer.removeCodedTests////////////////////////////////////////////////////////\n  // This is the callback for the right clicks in the test explorer tree\n\n  // adding the ... to nodeList, results in us getting a list of selected tests!\n  let removeCodedTestsCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.removeCodedTests\",\n    (...nodeList: any) => {\n      if (nodeList) {\n        deleteTests(nodeList);\n      }\n    }\n  );\n  context.subscriptions.push(removeCodedTestsCommand);\n\n  // Command: vectorcastTestExplorer.insertBasisPathTests////////////////////////////////////////////////////////\n  let insertBasisPathTestsCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.insertBasisPathTests\",\n    (args: any) => {\n      if (args) {\n        const testNode: testNodeType = getTestNode(args.id);\n        insertBasisPathTests(testNode);\n      }\n    }\n  );\n  context.subscriptions.push(insertBasisPathTestsCommand);\n\n  // Command: vectorcastTestExplorer.insertBasisPathTestsFromEditor////////////////////////////////////////////////////////\n  let insertBasisPathTestsFromEditorCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.insertBasisPathTestsFromEditor\",\n    (args: any) => {\n      if (args) {\n        const testNode = buildTestNodeForFunction(args);\n        if (testNode) insertBasisPathTests(testNode);\n        else\n          vscode.window.showErrorMessage(\n            `Unable to create Basis Path Tests for function at line ${args.lineNumber}`\n          );\n      }\n    }\n  );\n  context.subscriptions.push(insertBasisPathTestsFromEditorCommand);\n\n  // Command: vectorcastTestExplorer.insertATGTests////////////////////////////////////////////////////////\n  let insertATGTestsCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.insertATGTests\",\n    (args: any) => {\n      if (args) {\n        const testNode: testNodeType = getTestNode(args.id);\n        insertATGTests(testNode);\n      }\n    }\n  );\n  context.subscriptions.push(insertATGTestsCommand);\n\n  // Command: vectorcastTestExplorer.insertATGTestsFromEditor////////////////////////////////////////////////////////\n  let insertATGTestsFromEditorCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.insertATGTestsFromEditor\",\n    (args: any) => {\n      if (args) {\n        const testNode = buildTestNodeForFunction(args);\n        if (testNode) insertATGTests(testNode);\n        else\n          vscode.window.showErrorMessage(\n            `Unable to create ATG Tests for function at line ${args.lineNumber}`\n          );\n      }\n    }\n  );\n  context.subscriptions.push(insertATGTestsFromEditorCommand);\n\n  // Command: vectorcastTestExplorer.createTestScriptFromEditor////////////////////////////////////////////////////////\n  // This is the callback for right clicks of the source editor flask+ icon\n  let createTestScriptFromEditorCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.createTestScriptFromEditor\",\n    (args: any) => {\n      if (args) {\n        const testNode = buildTestNodeForFunction(args);\n        if (testNode) newTestScript(testNode);\n        else\n          vscode.window.showErrorMessage(\n            `Unable to create test script for function at line ${args.lineNumber}`\n          );\n      }\n    }\n  );\n  context.subscriptions.push(createTestScriptFromEditorCommand);\n\n  // Command: vectorcastTestExplorer.deleteTest ////////////////////////////////////////////////////////\n  let deleteTestCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.deleteTest\",\n    async (...nodeList: any) => {\n      if (nodeList) {\n        if (nodeList.length > 1 || nodeList[0].children.size > 0) {\n          const message =\n            \"The selected tests will be deleted, and this action cannot be undone.\";\n          const answer = await vscode.window.showWarningMessage(\n            message,\n            \"Delete\",\n            \"Cancel\"\n          );\n\n          if (answer === \"Delete\") {\n            await deleteTests(nodeList);\n          }\n        } else {\n          await deleteTests(nodeList);\n        }\n      }\n    }\n  );\n  context.subscriptions.push(deleteTestCommand);\n\n  // Command: vectorcastTestExplorer.editTestScript////////////////////////////////////////////////////////\n  let editTestScriptCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.editTestScript\",\n    (args: any) => {\n      if (args) {\n        openTestScript(args.id);\n      }\n    }\n  );\n  context.subscriptions.push(editTestScriptCommand);\n\n  // Command: vectorcastTestExplorer.editCodedTest////////////////////////////////////////////////////////\n  let editCodedTestCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.editCodedTest\",\n    (args: any) => {\n      if (args) {\n        const testNode: testNodeType = getTestNode(args.id);\n        openCodedTest(testNode);\n      }\n    }\n  );\n  context.subscriptions.push(editCodedTestCommand);\n\n  // Command: vectorcastTestExplorer.loadTestScript////////////////////////////////////////////////////////\n  let loadTestScriptCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.loadTestScript\",\n    async () => {\n      await loadTestScriptButton();\n    }\n  );\n  context.subscriptions.push(loadTestScriptCommand);\n\n  // Command: vectorcastTestExplorer.debugEnviroPath ////////////////////////////////////////////////////////\n  // this command is used to return the path to the environment being debugged via\n  // the variable: vectorcastTestExplorer.debugEnviroPath that is used in launch.json\n  let debugEnviroPathCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.debugEnviroPath\",\n    () => {\n      return pathToEnviroBeingDebugged;\n    }\n  );\n  context.subscriptions.push(debugEnviroPathCommand);\n\n  // Command: vectorcastTestExplorer.debugProgramPath ////////////////////////////////////////////////////////\n  // this command is used to return the path to the environment being debugged via\n  // the variable: vectorcastTestExplorer.debugProgramPath that is used in launch.json\n  let debugProgramPathCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.debugProgramPath\",\n    () => {\n      return pathToProgramBeingDebugged;\n    }\n  );\n  context.subscriptions.push(debugProgramPathCommand);\n\n  // Command: vectorcastTestExplorer.showSettings\n  vscode.commands.registerCommand(\"vectorcastTestExplorer.showSettings\", () =>\n    showSettings()\n  );\n\n  // Command: vectorcastTestExplorer.addLaunchConfiguration ////////////////////////////////////////////////////////\n  let addLaunchConfigurationCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.addLaunchConfiguration\",\n    (args: Uri, argList: Uri[]) => {\n      // arg is the actual item that the right click happened on, argList is the list\n      // of all items if this is a multi-select.  Since argList is always valid, even for a single\n      // selection, we just use this here.\n      if (argList) {\n        // find the list item that contains launch.json\n        for (let i = 0; i < argList.length; i++) {\n          if (argList[i].fsPath.includes(launchFile)) {\n            addLaunchConfiguration(argList[i], globalPathToSupportFiles);\n          }\n        }\n      } else {\n        // if the arglist is undefined, this might be a right click action in the editor\n        let activeEditor = vscode.window.activeTextEditor;\n        if (activeEditor) {\n          const filePath = activeEditor.document.uri.toString();\n          if (filePath.endsWith(launchFile)) {\n            addLaunchConfiguration(\n              activeEditor.document.uri,\n              globalPathToSupportFiles\n            );\n          }\n        }\n      }\n    }\n  );\n  context.subscriptions.push(addLaunchConfigurationCommand);\n\n  // Command: vectorcastTestExplorer.addIncludePath ////////////////////////////////////////////////////////\n  let addIncludePathCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.addIncludePath\",\n    (args: Uri, argList: Uri[]) => {\n      // arg is the actual item that the right click happened on, argList is the list\n      // of all items if this is a multi-select.  Since argList is always valid, even for a single\n      // selection, we just use this here.\n      if (argList) {\n        // find the list item that contains c_cpp_properties.json\n        for (let i = 0; i < argList.length; i++) {\n          if (argList[i].fsPath.includes(configurationFile)) {\n            addIncludePath(argList[i]);\n          }\n        }\n      } else {\n        // if the arglist is undefined, this might be a right click action in the editor\n        let activeEditor = vscode.window.activeTextEditor;\n        if (activeEditor) {\n          const filePath = activeEditor.document.uri.toString();\n          if (filePath.endsWith(configurationFile)) {\n            addIncludePath(activeEditor.document.uri);\n          }\n        }\n      }\n    }\n  );\n  context.subscriptions.push(addIncludePathCommand);\n\n  // Command: vectorcastTestExplorer.addSettingsFileFilter ////////////////////////////////////////////////////////\n  let addSettingsTFileFilterCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.addSettingsFileFilter\",\n    (args: Uri, argList: Uri[]) => {\n      // arg is the actual item that the right click happened on, argList is the list\n      // of all items if this is a multi-select.  Since argList is always valid, even for a single\n      // selection, we just use this here.\n      if (argList) {\n        addSettingsFileFilter(argList[0], globalPathToSupportFiles);\n      }\n    }\n  );\n  context.subscriptions.push(addSettingsTFileFilterCommand);\n\n  // Command: vectorcastTestExplorer.openVCAST  ////////////////////////////////////////////////////////\n  let openVCAST = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.openVCAST\",\n    async (enviroNode: any) => {\n      vectorMessage(\"Starting VectorCAST ...\");\n      // If the Env is embedded in a project, we want to open the whole project\n      const enviroPath = enviroNode.id.split(\"vcast:\")[1];\n      if (envIsEmbeddedInProject(enviroPath)) {\n        await openProjectFromEnviroPath(enviroPath);\n      } else {\n        openVcastFromEnviroNode(enviroNode.id, updateDataForEnvironment);\n      }\n    }\n  );\n  context.subscriptions.push(openVCAST);\n\n  // Command: vectorcastTestExplorer.openVCASTFromVce  ////////////////////////////////////////////////////////\n  let openVCASTFromVce = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.openVCASTFromVce\",\n    async (arg: any) => {\n      vectorMessage(\"Starting VectorCAST ...\");\n      const dotIndex = arg.fsPath.lastIndexOf(\".\");\n      const enviroPath = arg.fsPath.slice(0, dotIndex);\n      if (envIsEmbeddedInProject(enviroPath)) {\n        await openProjectFromEnviroPath(enviroPath);\n      } else {\n        openVcastFromVCEfile(arg.fsPath, updateDataForEnvironment);\n      }\n    }\n  );\n  context.subscriptions.push(openVCASTFromVce);\n\n  // Command: vectorcastTestExplorer.buildEnviroFromEnv ////////////////////////////////////////////////////////\n  let buildEnviroVCASTCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.buildEnviroFromEnv\",\n    (arg: Uri) => {\n      // arg is the URI of the .env file that was clicked\n      if (arg) {\n        const envFilepath = arg.fsPath;\n        const buildDirectory = path.dirname(envFilepath);\n        const enviroFilename = path.basename(envFilepath);\n        const enviroName = getEnviroNameFromFile(envFilepath);\n        if (enviroName) {\n          if (!fs.existsSync(path.join(buildDirectory, enviroName))) {\n            buildEnvironmentFromScript(\n              buildDirectory,\n              enviroFilename.split(\".\")[0]\n            );\n          } else {\n            vscode.window.showErrorMessage(\n              `Environment: ${enviroName} already exists`\n            );\n          }\n        } else {\n          vscode.window.showErrorMessage(\n            `Unable to determine environment name from file: ${envFilepath}`\n          );\n        }\n      }\n    }\n  );\n  context.subscriptions.push(buildEnviroVCASTCommand);\n\n  // Command: vectorcastTestExplorer.rebuildEnviro  ////////////////////////////////////////////////////////\n  let rebuildEnviro = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.rebuildEnviro\",\n    (enviroNode: any) => {\n      // this returns the full path to the environment directory\n      const enviroPath = getEnviroPathFromID(enviroNode.id);\n      rebuildEnvironment(enviroPath, rebuildEnvironmentCallback);\n    }\n  );\n  context.subscriptions.push(rebuildEnviro);\n\n  let updateProjectLevelCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.updateProjectEnvironment\",\n    async (enviroNode: any) => {\n      const enviroPath = getEnviroPathFromID(enviroNode.id);\n      // Check if the result is valid\n      if (enviroPath) {\n        await updateProjectData(enviroPath, true);\n      } else {\n        vectorMessage(`Unable to find Environment ${enviroNode.id}`);\n      }\n    }\n  );\n  context.subscriptions.push(updateProjectLevelCommand);\n\n  // Command: vectorcastTestExplorer.buildExecuteIncremental  ////////////////////////////////////////////////////////\n  let buildExecuteIncrementalCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.buildExecuteIncremental\",\n    async (enviroNode: any) => {\n      const enviroPathList: string[] = [];\n      let projectPath = \"\";\n      let displayName = \"\";\n\n      // In case the Node id starts with vcast:, it is an environment node and the id is the build path\n      if (enviroNode.id.includes(\"vcast:\")) {\n        const enviroPath = enviroNode.id.split(\"vcast:\")[1];\n        enviroPathList.push(enviroPath);\n        const enviroData = getEnviroNodeData(enviroPath);\n        ({ displayName, projectPath } = enviroData);\n      } else {\n        // Otherwise it's either a project, compiler or testsuite node\n        projectPath = enviroNode.id.split(\".vcm\")[0] + \".vcm\";\n        const projectData = getLevelFromNodeId(enviroNode.id);\n        displayName = projectData.level;\n\n        // Collect all relevant environment paths\n        for (const [envPath, envValue] of environmentDataCache) {\n          // If projectPath == enviroNode.id -> Project Node, otherwise we have to check\n          // if the current displayName is part of the envValue.displayName (compiler, testsuite)\n          if (\n            envValue.projectPath === projectPath &&\n            (projectPath === enviroNode.id ||\n              envValue.displayName.includes(displayName))\n          ) {\n            enviroPathList.push(envPath);\n          }\n        }\n      }\n\n      await buildExecuteIncremental(\n        projectPath,\n        displayName,\n        enviroPathList,\n        enviroNode.id\n      );\n      await refreshAllExtensionData();\n    }\n  );\n\n  context.subscriptions.push(buildExecuteIncrementalCommand);\n\n  let openProjectInVectorCAST = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.openProjectInVectorCAST\",\n    async (node: any) => {\n      // this returns the full path to the environment directory\n      const result = getVcmRoot(node.id);\n\n      // Check if the result is valid\n      if (result) {\n        const { rootPath, vcmName } = result;\n        vectorMessage(`Opening ${vcmName} in VectorCAST...`);\n        await openProjectInVcast(rootPath, vcmName);\n      } else {\n        vectorMessage(`Unable to open project ${node.id}`);\n      }\n    }\n  );\n  context.subscriptions.push(openProjectInVectorCAST);\n\n  let addCompilerToProjectCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.addCompilerToProject\",\n    async (args: any) => {\n      // Verify that the command was invoked from a node with an 'id' property.\n      if (!args?.id) {\n        vscode.window.showErrorMessage(\"No project node provided.\");\n        return;\n      }\n      //project file path\n      const projectFilePath = args.id;\n\n      // Open a file dialog so the user can select a .CFG file.\n      const cfgFiles = await vscode.window.showOpenDialog({\n        canSelectMany: false,\n        openLabel: \"Select VectorCAST Configuration (.CFG) file\",\n        filters: {\n          \"CFG Files\": [\"cfg\"],\n          \"All Files\": [\"*\"],\n        },\n      });\n\n      if (!cfgFiles || cfgFiles.length === 0) {\n        vscode.window.showInformationMessage(\"No CFG file selected.\");\n        return;\n      }\n\n      // Get the first selected file's path.\n      const pathToCFG = cfgFiles[0].fsPath;\n\n      await addCompilerToProject(projectFilePath, pathToCFG);\n    }\n  );\n  context.subscriptions.push(addCompilerToProjectCommand);\n\n  const addTestsuiteToCompiler = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.addTestsuiteToCompiler\",\n    async (node: any) => {\n      const manageWebviewSrcDir = resolveWebviewBase(context);\n      const panel = vscode.window.createWebviewPanel(\n        \"addTestsuiteToCompiler\",\n        \"Add Testsuite to Compiler\",\n        vscode.ViewColumn.Active,\n        {\n          enableScripts: true,\n          retainContextWhenHidden: true,\n          localResourceRoots: [vscode.Uri.file(manageWebviewSrcDir)],\n        }\n      );\n\n      panel.webview.html = await getTestsuiteWebviewContent(context, panel);\n\n      // --- Dispatch Table ---\n      const dispatch: Record<string, (msg?: any) => Promise<void> | void> = {\n        submit: handleSubmit,\n        cancel: () => panel.dispose(),\n      };\n\n      panel.webview.onDidReceiveMessage(\n        (message) => dispatch[message.command]?.(message),\n        undefined,\n        context.subscriptions\n      );\n\n      // --- Handlers ---\n      function handleSubmit(message: { testsuiteName?: string }): void {\n        const { testsuiteName } = message;\n\n        if (!testsuiteName) {\n          vscode.window.showErrorMessage(\"Testsuite name is required.\");\n          return;\n        }\n\n        const projectPath = path.dirname(node.id);\n        const compilerName = path.basename(node.id);\n\n        createTestsuiteInCompiler(projectPath, compilerName, testsuiteName);\n        panel.dispose();\n      }\n    }\n  );\n\n  context.subscriptions.push(addTestsuiteToCompiler);\n\n  // Webview HTML content.\n  async function getTestsuiteWebviewContent(\n    context: vscode.ExtensionContext,\n    panel: vscode.WebviewPanel\n  ): Promise<string> {\n    const base = resolveWebviewBase(context);\n\n    // on-disk locations\n    const cssOnDisk = vscode.Uri.file(\n      path.join(base, \"css\", \"addTestsuite.css\")\n    );\n    const scriptOnDisk = vscode.Uri.file(\n      path.join(base, \"webviewScripts\", \"addTestsuite.js\")\n    );\n    const htmlPath = path.join(base, \"html\", \"addTestsuite.html\");\n\n    // webview URIs\n    const cssUri = panel.webview.asWebviewUri(cssOnDisk);\n    const scriptUri = panel.webview.asWebviewUri(scriptOnDisk);\n\n    // read template\n    let html = fs.readFileSync(htmlPath, \"utf8\");\n\n    // build CSP + nonce\n    const nonce = getNonce();\n    const cspMeta = `\n      <meta http-equiv=\"Content-Security-Policy\"\n            content=\"default-src 'none';\n                     style-src ${panel.webview.cspSource};\n                     script-src 'nonce-${nonce}' ${panel.webview.cspSource};\">\n    `;\n\n    // inject CSP\n    html = html.replace(/<head>/, `<head>${cspMeta}`);\n\n    // replace placeholders and add nonce to script tag\n    html = html\n      .replace(/{{\\s*cssUri\\s*}}/g, cssUri.toString())\n      .replace(\n        /<script src=\"{{\\s*scriptUri\\s*}}\"><\\/script>/,\n        `<script nonce=\"${nonce}\" src=\"${scriptUri}\"></script>`\n      );\n\n    return html;\n  }\n\n  // Command: vectorcastTestExplorer.buildProjectEnviro  ////////////////////////////////////////////////////////\n  let buildProjectEnviro = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.buildProjectEnviro\",\n    async (enviroNode: any) => {\n      // displayName is the what will be passed as the --level arg value\n      const enviroPath = enviroNode.id.split(\"vcast:\")[1];\n      const enviroData: environmentNodeDataType = getEnviroNodeData(enviroPath);\n      const displayName = enviroData.displayName;\n      console.log(\"Building project environment: \" + displayName);\n\n      await buildProjectEnvironment(\n        enviroData.projectPath,\n        displayName,\n        enviroPath\n      );\n    }\n  );\n  context.subscriptions.push(buildProjectEnviro);\n\n  let deleteTestsuiteCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.deleteTestsuite\",\n    async (node: any) => {\n      const nodeParts = node.id.split(\"/\");\n      // compiler/testsuite\n      // Can't do path.join because on windows the level would be with the wrong \"\\\"\n      const testsuiteLevel =\n        nodeParts[nodeParts.length - 2] + \"/\" + nodeParts[nodeParts.length - 1];\n      // Join the path without the testsuite level\n      const joinedPath = path.join(...nodeParts.slice(0, nodeParts.length - 2));\n      // Add a leading slash for non-Windows platforms\n      const projectPath =\n        process.platform === \"win32\" ? joinedPath : \"/\" + joinedPath;\n      await deleteLevel(projectPath, testsuiteLevel);\n    }\n  );\n  context.subscriptions.push(deleteTestsuiteCommand);\n\n  // Command: vectorcastTestExplorer.deleteCompiler ////////////////////////////////////////////////////////\n  let deleteCompilerCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.deleteCompiler\",\n    async (node: any) => {\n      const compiler = node.id;\n      const projectPath = path.dirname(compiler);\n      const compilerLevel = path.basename(compiler);\n      await deleteLevel(projectPath, compilerLevel);\n    }\n  );\n  context.subscriptions.push(deleteCompilerCommand);\n\n  // Command: vectorcastTestExplorer.deleteEnviroFromProject  ////////////////////////////////////////////////////////\n  let deleteEnviroFromProject = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.deleteEnviroFromProject\",\n    async (enviroNode: any) => {\n      const enviroPath = enviroNode.id.split(\"vcast:\")[1];\n      const enviroName = path.basename(enviroPath);\n      const enviroData: environmentNodeDataType = getEnviroNodeData(enviroPath);\n      // always ask for confirmation before deleting an environment\n      const message =\n        \"Environment: \" +\n        enviroName +\n        \" will be deleted from the project, and this action cannot be undone.\";\n      vscode.window\n        .showInformationMessage(message, \"Delete\", \"Cancel\")\n        .then(async (answer) => {\n          if (answer === \"Delete\") {\n            // Delete the env completely from the project\n            await deleteEnvironmentFromProject(\n              enviroData.projectPath,\n              enviroName\n            );\n          }\n        });\n    }\n  );\n  context.subscriptions.push(deleteEnviroFromProject);\n\n  // Command: vectorcastTestExplorer.removeTestsuite  ////////////////////////////////////////////////////////\n  let removeTestsuite = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.removeTestsuite\",\n    async (enviroNode: any) => {\n      // this returns the full path to the environment directory\n      let enviroPath = getEnviroPathFromID(enviroNode.id);\n      // In case the env is not built, it will be not present in the cache\n      if (!enviroPath) {\n        // So we check if it is present in the unbuilt list\n        // If so, we take the id and split it after \"vcast:\" to get the path\n        // In case that is not possible, we throw an error message\n        if (vcastUnbuiltEnviroList.includes(enviroNode.id)) {\n          const parts = enviroNode.id.split(\":\");\n          enviroPath = parts.slice(1).join(\":\");\n        } else {\n          vscode.window.showErrorMessage(\n            `Unable to determine environment path from node: ${enviroNode.id}`\n          );\n          return;\n        }\n      }\n      await removeTestsuiteFromProject(enviroPath, enviroNode.id);\n    }\n  );\n  context.subscriptions.push(removeTestsuite);\n\n  // Command: vectorcastTestExplorer.deleteEnviro  ////////////////////////////////////////////////////////\n  let deleteEnviro = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.deleteEnviro\",\n    (enviroNode: any) => {\n      // this returns the full path to the environment directory\n      const enviroPath = getEnviroPathFromID(enviroNode.id);\n\n      // always ask for confirmation before deleting an environment\n      const message =\n        \"Environment: \" +\n        enviroPath +\n        \" will be deleted, and this action cannot be undone.\";\n      vscode.window\n        .showInformationMessage(message, \"Delete\", \"Cancel\")\n        .then((answer) => {\n          if (answer === \"Delete\") {\n            // execute a clicast call to delete the test\n            deleteEnvironment(enviroPath, enviroNode.id);\n          }\n        });\n    }\n  );\n  context.subscriptions.push(deleteEnviro);\n\n  // Command: vectorcastTestExplorer.cleanEnviro  ////////////////////////////////////////////////////////\n  let cleanEnviro = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.cleanEnviro\",\n    (enviroNode: any) => {\n      // this returns the full path to the environment directory\n      const enviroPath = getEnviroPathFromID(enviroNode.id);\n      const enviroData: environmentNodeDataType = getEnviroNodeData(enviroPath);\n      const displayName = enviroData.displayName;\n      const projectPath = enviroData.projectPath;\n\n      // always ask for confirmation before deleting an environment\n      const message =\n        \"Environment: \" +\n        enviroPath +\n        \" will be cleaned, and this action cannot be undone.\";\n      vscode.window\n        .showInformationMessage(message, \"Clean Environment\", \"Cancel\")\n        .then(async (answer) => {\n          if (answer === \"Clean Environment\") {\n            // execute a manage call to clean the env\n            await cleanProjectEnvironment(\n              enviroPath,\n              enviroNode.id,\n              projectPath,\n              displayName\n            );\n          }\n        });\n    }\n  );\n  context.subscriptions.push(cleanEnviro);\n\n  // Command: vectorcastTestExplorer.setDefaultConfigFile////////////////////////////////////////////////////////\n  let selectDefaultConfigFile = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.setDefaultConfigFile\",\n    (fileURI: any) => {\n      // we will only get here if the user has selected a CCAST_.CFG file\n      // all we do is replace the current value of the configurationLocation option\n      // no validity checking is needed.\n      if (fileURI) {\n        const settings = vscode.workspace.getConfiguration(\n          \"vectorcastTestExplorer\"\n        );\n        settings.update(\n          \"configurationLocation\",\n          fileURI.fsPath,\n          vscode.ConfigurationTarget.Workspace\n        );\n      }\n    }\n  );\n  context.subscriptions.push(selectDefaultConfigFile);\n\n  // This command appears in the context menu of the vscode gutter (same as Add Breakpoint) and\n  // generates the MCDC report.\n  let getMCDCReportCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.viewMCDCReport\",\n    async (args) => {\n      const activeEditor = vscode.window.activeTextEditor;\n      let fileFromUri = forceLowerCaseDriveLetter(args.uri.fsPath);\n\n      if (activeEditor || fileFromUri) {\n        // Get the file name and remove the extension --> For the UNIT parameter.\n        // Prioritize activeEditor for user convenience\u2014it reflects the file in focus.\n        // Fallback to fileFromUri ensures the command works\n        // (if the focus is on no file --> activeEditor undefined --> command wont work)\n        // But we still can get the file \u00FCath from where it s called via the uri\n        const filePath = activeEditor\n          ? activeEditor.document.uri.fsPath\n          : fileFromUri;\n        const enviroPath = getEnvPathForFilePath(filePath);\n        const fileName = path.parse(filePath).name;\n        if (enviroPath) {\n          viewMCDCReport(enviroPath, fileName, args.lineNumber);\n        } else {\n          vscode.window.showErrorMessage(\n            `Did not find environment name ${enviroPath} or path for file: ${filePath}`\n          );\n        }\n      }\n    }\n  );\n  context.subscriptions.push(getMCDCReportCommand);\n\n  vscode.workspace.onDidChangeWorkspaceFolders(\n    async (e) => {\n      await refreshAllExtensionData();\n      setGlobalProjectIsOpenedChecker();\n      setGlobalCompilerAndTestsuites();\n    },\n    null,\n    context.subscriptions\n  );\n\n  vscode.window.onDidChangeActiveTextEditor(\n    // this function gets called when the user changes the\n    // active editor, including when closing an editor\n    // in which case the \"editor\" parameter will be undefined\n    async (editor) => {\n      if (editor) {\n        await updateDisplayedCoverage();\n        updateTestDecorator();\n      } else {\n        hideStatusBarCoverage();\n      }\n    },\n    null,\n    context.subscriptions\n  );\n\n  // This works nicely to remove the decorations when\n  // the user has auto-save ON, but not if they don't.\n  // There is another event called onDidChangeTextDocument\n  // that gets invoked when the user edits, but to determine\n  // if the file has changed we compute the checksum of the file\n  // and since the file on disk has not changed, we would keep the\n  // decorations anyway.\n  vscode.workspace.onDidSaveTextDocument(\n    async (editor) => {\n      // changing the file will invalidate the\n      // coverage and editor annotations\n      if (editor) {\n        // Check if file ends with .tst and has \"build\" in its path\n        // We want to load the test script automatically when the user saves\n        const filePath = editor.uri.fsPath;\n        if (filePath.endsWith(\".tst\") && alreadyConfigured) {\n          await loadTestScript();\n        }\n        await updateCodedTestCases(editor);\n        await updateCOVdecorations();\n        updateTestDecorator();\n      }\n    },\n    null,\n    context.subscriptions\n  );\n}\n\nasync function installPreActivationEventHandlers(\n  context: vscode.ExtensionContext\n) {\n  // this is separate from configureExtension() because we want to\n  // handle some actions before the configuration of the extension is complete\n  // Specifically for the case where the user does a create environment action\n  // and vcast installation is invalid.\n\n  // Note: there is no existing API to do variable substitution for configuration\n  // values that could contain things like ${workspaceFolder} so we don't provide support.\n  // Here is a starting point for research: https://github.com/microsoft/vscode/issues/46471\n\n  vscode.workspace.onDidChangeConfiguration(async (event) => {\n    // post configuration, we handle changes to all options ...\n    if (alreadyConfigured) {\n      // This function gets triggered when any option at any level (user, workspace, etc.)\n      // gets changed.  The event parameter does not indicate what level has been\n      // edited but you can use the\n\n      if (\n        event.affectsConfiguration(\"vectorcastTestExplorer.decorateExplorer\")\n      ) {\n        updateExploreDecorations();\n      } else if (\n        event.affectsConfiguration(\"vectorcastTestExplorer.verboseLogging\")\n      ) {\n        adjustVerboseSetting();\n      } else if (\n        event.affectsConfiguration(\n          \"vectorcastTestExplorer.configurationLocation\"\n        )\n      ) {\n        updateConfigurationOption();\n      } else if (\n        event.affectsConfiguration(\"vectorcastTestExplorer.unitTestLocation\")\n      ) {\n        updateUnitTestLocationOption();\n      } else if (\n        event.affectsConfiguration(\"vectorcastTestExplorer.useDataServer\")\n      ) {\n        initializeServerState();\n      } else if (\n        event.affectsConfiguration(\"vectorcastTestExplorer.build.coverageKind\")\n      ) {\n        await updateCoverageAndRebuildEnv();\n      } else if (\n        event.affectsConfiguration(\n          \"vectorcastTestExplorer.vectorcastInstallationLocation\"\n        )\n      ) {\n        // if the user changes the path to vcast, we need to reset the values\n        // for clicast and vpython path etc.\n        if (await checkIfInstallationIsOK()) {\n          await initializeServerState();\n          await refreshAllExtensionData();\n        } else {\n          // this will remove the status bar icon and shutdown the server\n          // it needs to be in both sides of the if because we want it to run\n          // before the \"refreshAllExtensionData\" call in the TRUE case.\n          await initializeServerState();\n        }\n      }\n    }\n    // pre-configuration, we only handle changes to the vcast installation location\n    else if (\n      event.affectsConfiguration(\n        \"vectorcastTestExplorer.vectorcastInstallationLocation\"\n      )\n    ) {\n      // this call will check if the new value is valid,\n      // and if so, perform extension activation\n      await checkPrerequisites(context);\n      await initializeServerState();\n    }\n  });\n\n  // Command: vectorcastTestExplorer.newEnviroVCAST ////////////////////////////////////////////////////////\n  let newEnviroVCASTCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.newEnviroVCAST\",\n    async (args: Uri, argList: Uri[]) => {\n      // contains a check for already configured, so no work will be done in that case\n      await checkPrerequisites(context);\n      if (alreadyConfigured) {\n        // arg is the actual item that the right click happened on, argList is the list\n        // of all items if this is a multi-select.  Since argList is always valid, even for a single\n        // selection, we just use this here.\n        if (argList) {\n          await newEnvironment(argList);\n        }\n      }\n    }\n  );\n  context.subscriptions.push(newEnviroVCASTCommand);\n\n  const importEnviroToProject = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.importEnviroToProject\",\n    async (_args: vscode.Uri, argList: vscode.Uri[]) => {\n      const manageWebviewSrcDir = resolveWebviewBase(context);\n      const panel = vscode.window.createWebviewPanel(\n        \"importEnviroToProject\",\n        \"Import Environment to Project\",\n        vscode.ViewColumn.Active,\n        {\n          enableScripts: true,\n          retainContextWhenHidden: true,\n          localResourceRoots: [vscode.Uri.file(manageWebviewSrcDir)],\n        }\n      );\n\n      panel.webview.html = await getImportEnvWebviewContent(\n        context,\n        panel,\n        argList\n      );\n\n      // --- Dispatch Table ---\n      const dispatch: Record<string, (msg?: any) => Promise<void> | void> = {\n        importEnvFile: handleImportEnvFile,\n        submit: handleSubmit,\n        cancel: () => panel.dispose(),\n      };\n\n      panel.webview.onDidReceiveMessage(\n        (message) => dispatch[message.command]?.(message),\n        undefined,\n        context.subscriptions\n      );\n\n      // --- Handlers ---\n      async function handleImportEnvFile(): Promise<void> {\n        const files = await vscode.window.showOpenDialog({\n          canSelectMany: false,\n          filters: { \"Env Files\": [\"env\"] },\n          openLabel: \"Select Env File\",\n        });\n\n        if (files?.length) {\n          panel.webview.postMessage({\n            command: \"envFileSelected\",\n            envFile: files[0].fsPath,\n          });\n        }\n      }\n\n      async function handleSubmit(message: {\n        projectPath?: string;\n        envFiles?: string[];\n        testsuiteArgs?: string[];\n      }): Promise<void> {\n        const { projectPath, envFiles = [], testsuiteArgs = [] } = message;\n\n        if (!projectPath || !envFiles.length || !testsuiteArgs.length) {\n          vscode.window.showErrorMessage(\n            \"Project Path, Env Files, and Testsuite are required.\"\n          );\n          return;\n        }\n\n        for (const file of envFiles) {\n          if (!fs.existsSync(file)) {\n            vscode.window.showInformationMessage(\n              `Environment file ${file} does not exist.`\n            );\n            return;\n          }\n\n          for (const level of testsuiteArgs) {\n            vectorMessage(`Env File: ${file}`);\n            await importEnvToTestsuite(projectPath, level, file);\n          }\n        }\n\n        panel.dispose();\n      }\n    }\n  );\n\n  context.subscriptions.push(importEnviroToProject);\n\n  // Command: vectorcastTestExplorer.addEnviroToProject\n  const addEnviroToProject = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.addEnviroToProject\",\n    async (_projectNode: any) => {\n      const manageWebviewSrcDir = resolveWebviewBase(context);\n      const panel = vscode.window.createWebviewPanel(\n        \"addEnviroToProject\",\n        \"Add Environment To Project\",\n        vscode.ViewColumn.Active,\n        {\n          enableScripts: true,\n          retainContextWhenHidden: true,\n          localResourceRoots: [vscode.Uri.file(manageWebviewSrcDir)],\n        }\n      );\n\n      panel.webview.html = await getImportEnvWebviewContent(context, panel, []);\n\n      // --- Command dispatch table ---\n      const dispatch: Record<string, (msg?: any) => Promise<void> | void> = {\n        importEnvFile: handleImportEnvFile,\n        submit: handleSubmit,\n        cancel: () => panel.dispose(),\n      };\n\n      // --- Message handler ---\n      panel.webview.onDidReceiveMessage(\n        (message) => dispatch[message.command]?.(message),\n        undefined,\n        context.subscriptions\n      );\n\n      // --- Handlers ---\n      async function handleImportEnvFile() {\n        const [uri] =\n          (await vscode.window.showOpenDialog({\n            canSelectMany: false,\n            filters: { \"Environment Files\": [\"env\"] },\n            openLabel: \"Select Environment File\",\n          })) ?? [];\n\n        if (uri) {\n          panel.webview.postMessage({\n            command: \"envFileSelected\",\n            envFile: uri.fsPath,\n          });\n        }\n      }\n\n      async function handleSubmit(message: {\n        projectPath?: string;\n        envFiles?: string[];\n        testsuiteArgs?: string[];\n      }): Promise<void> {\n        const { projectPath, envFiles = [], testsuiteArgs = [] } = message;\n\n        if (!projectPath || !envFiles.length || !testsuiteArgs.length) {\n          vscode.window.showErrorMessage(\n            \"Project Path, Env Files, and Testsuite are required.\"\n          );\n          return;\n        }\n\n        if (envFiles.length > 1) {\n          vscode.window.showInformationMessage(\n            \"Multiple Env Files selected. Only the first one will be used.\"\n          );\n        }\n\n        const envFile = envFiles[0];\n\n        // this should not happen as we click on the envs, but in case the user manually changes something\n        if (!fs.existsSync(envFile)) {\n          vscode.window.showInformationMessage(\n            `Environment file ${envFile} does not exist.`\n          );\n          return;\n        }\n\n        for (const [index, level] of testsuiteArgs.entries()) {\n          vectorMessage(`Env File: ${envFile}`);\n\n          if (index === 0) {\n            await importEnvToTestsuite(projectPath, level, envFile);\n          } else {\n            const envName = path.basename(envFile, \".env\");\n            await addEnvToTestsuite(projectPath, level, envName);\n          }\n        }\n\n        panel.dispose();\n      }\n    }\n  );\n\n  context.subscriptions.push(addEnviroToProject);\n\n  /**\n   * Returns the HTML content for the webview.\n   * It builds a form that allows the user to select:\n   *   - a Project Path (populated from a global combobox map),\n   *   - Env Files (with pre-filled values from the argList), and\n   *   - a set of Compiler/Testsuite rows.\n   *\n   * The label \"Source Files\" is replaced with \"Env Files\" in this version.\n   */\n  async function getImportEnvWebviewContent(\n    context: vscode.ExtensionContext,\n    panel: vscode.WebviewPanel,\n    argList: vscode.Uri[]\n  ): Promise<string> {\n    const base = resolveWebviewBase(context);\n\n    // on-disk resource locations\n    const cssOnDisk = vscode.Uri.file(path.join(base, \"css\", \"importEnv.css\"));\n    const scriptOnDisk = vscode.Uri.file(\n      path.join(base, \"webviewScripts\", \"importEnv.js\")\n    );\n    const htmlPath = path.join(base, \"html\", \"importEnv.html\");\n\n    // convert to webview URIs\n    const cssUri = panel.webview.asWebviewUri(cssOnDisk);\n    const scriptUri = panel.webview.asWebviewUri(scriptOnDisk);\n\n    // prepare dynamic data\n    const projectData = JSON.stringify(\n      Array.from(globalProjectWebviewComboboxItems.entries())\n    );\n    const initialEnvFile = JSON.stringify(argList[0]?.fsPath ?? \"\");\n\n    // load the template\n    let html = fs.readFileSync(htmlPath, \"utf8\");\n\n    // inject CSP + nonce\n    const nonce = getNonce();\n    const cspMeta = `\n      <meta http-equiv=\"Content-Security-Policy\"\n            content=\"default-src 'none';\n                     style-src ${panel.webview.cspSource};\n                     script-src 'nonce-${nonce}' ${panel.webview.cspSource};\">\n    `;\n    html = html.replace(/<head>/, `<head>${cspMeta}`);\n\n    // inject URIs + data\n    html = html\n      .replace(/{{\\s*cssUri\\s*}}/g, cssUri.toString())\n      .replace(\n        /<script src=\"{{\\s*scriptUri\\s*}}\"><\\/script>/,\n        `<script nonce=\"${nonce}\" src=\"${scriptUri}\"></script>`\n      )\n      .replace(\n        /<\\/head>/,\n        `  <script nonce=\"${nonce}\">\n         window.projectData = ${projectData};\n         window.initialEnvFile = ${initialEnvFile};\n        </script>\\n</head>`\n      );\n\n    return html;\n  }\n\n  const newEnviroInProjectVCASTCommand = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.newEnviroInProjectVCAST\",\n    async (_args: vscode.Uri, argList: vscode.Uri[]) => {\n      const manageWebviewSrcDir = resolveWebviewBase(context);\n      const panel = vscode.window.createWebviewPanel(\n        \"newEnvProject\",\n        \"Create Environment in Project\",\n        vscode.ViewColumn.Active,\n        {\n          enableScripts: true,\n          retainContextWhenHidden: true,\n          localResourceRoots: [vscode.Uri.file(manageWebviewSrcDir)],\n        }\n      );\n\n      panel.webview.html = await getNewEnvWebviewContent(\n        context,\n        panel,\n        argList\n      );\n\n      // --- Dispatch Table ---\n      const dispatch: Record<string, (msg?: any) => Promise<void> | void> = {\n        submit: handleSubmit,\n        cancel: () => panel.dispose(),\n      };\n\n      panel.webview.onDidReceiveMessage(\n        (message) => dispatch[message.command]?.(message),\n        undefined,\n        context.subscriptions\n      );\n\n      // --- Handlers ---\n      async function handleSubmit(message: {\n        projectPath?: string;\n        sourceFiles?: string[];\n        testsuiteArgs?: string[];\n      }): Promise<void> {\n        const { projectPath, sourceFiles = [], testsuiteArgs = [] } = message;\n\n        if (!projectPath || !testsuiteArgs.length) {\n          vscode.window.showErrorMessage(\n            \"Compiler Name and Testsuite Name are required.\"\n          );\n          return;\n        }\n\n        // Validate file existence\n        for (const file of sourceFiles) {\n          if (!fs.existsSync(file)) {\n            vscode.window.showInformationMessage(\n              `Source file ${file} does not exist.`\n            );\n            return;\n          }\n        }\n\n        const params: ProjectEnvParameters = {\n          path: projectPath,\n          sourceFiles,\n          testsuiteArgs,\n        };\n\n        vscode.window.showInformationMessage(\n          `Creating environment in ${projectPath} with ${testsuiteArgs.join(\n            \", \"\n          )} and sources ${sourceFiles.join(\", \")}`\n        );\n\n        await newEnvironment(argList, params);\n        panel.dispose();\n      }\n    }\n  );\n\n  context.subscriptions.push(newEnviroInProjectVCASTCommand);\n\n  async function getNewEnvWebviewContent(\n    context: vscode.ExtensionContext,\n    panel: vscode.WebviewPanel,\n    argList: vscode.Uri[]\n  ): Promise<string> {\n    const base = resolveWebviewBase(context);\n    const cssOnDisk = vscode.Uri.file(\n      path.join(base, \"css\", \"newEnvProject.css\")\n    );\n    const scriptOnDisk = vscode.Uri.file(\n      path.join(base, \"webviewScripts\", \"newEnvProject.js\")\n    );\n    const htmlPath = path.join(base, \"html\", \"newEnvProject.html\");\n\n    const cssUri = panel.webview.asWebviewUri(cssOnDisk);\n    const scriptUri = panel.webview.asWebviewUri(scriptOnDisk);\n\n    const projectData = JSON.stringify(\n      Array.from(globalProjectWebviewComboboxItems.entries())\n    );\n    const initialSourceFiles = JSON.stringify(argList.map((u) => u.fsPath));\n\n    let html = fs.readFileSync(htmlPath, \"utf8\");\n\n    const nonce = getNonce();\n    const csp = `\n      <meta http-equiv=\"Content-Security-Policy\"\n            content=\"default-src 'none';\n                     style-src ${panel.webview.cspSource};\n                     script-src 'nonce-${nonce}' ${panel.webview.cspSource};\">\n    `;\n    html = html.replace(/<head>/, `<head>${csp}`);\n\n    html = html\n      .replace(/{{\\s*cssUri\\s*}}/g, cssUri.toString())\n      .replace(\n        /<script src=\"{{\\s*scriptUri\\s*}}\"><\\/script>/,\n        `<script nonce=\"${nonce}\" src=\"${scriptUri}\"></script>`\n      )\n      .replace(\n        /<\\/head>/,\n        `<script nonce=\"${nonce}\">\n           window.projectData = ${projectData};\n           window.initialSourceFiles = ${initialSourceFiles};\n         </script>\\n</head>`\n      );\n\n    return html;\n  }\n\n  const createNewProjectCmd = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.createNewProject\",\n    async () => {\n      const workspaceFolders = vscode.workspace.workspaceFolders;\n      if (!workspaceFolders?.length) {\n        vscode.window.showErrorMessage(\"Open a folder first.\");\n        return;\n      }\n      const workspaceRoot = workspaceFolders[0].uri.fsPath;\n\n      const baseDir = resolveWebviewBase(context);\n      const panel = vscode.window.createWebviewPanel(\n        \"newProject\",\n        \"Create New Project\",\n        vscode.ViewColumn.Active,\n        {\n          enableScripts: true,\n          retainContextWhenHidden: true,\n          localResourceRoots: [vscode.Uri.file(baseDir)],\n        }\n      );\n\n      panel.webview.html = await getNewProjectWebviewContent(\n        context,\n        panel,\n        workspaceRoot\n      );\n\n      panel.webview.onDidReceiveMessage(\n        async (msg) => {\n          switch (msg.command) {\n            case \"browseForDir\": {\n              const folderUris = await vscode.window.showOpenDialog({\n                canSelectFiles: false,\n                canSelectFolders: true,\n                canSelectMany: false,\n                openLabel: \"Select Target Folder\",\n              });\n              if (folderUris?.length) {\n                panel.webview.postMessage({\n                  command: \"setTargetDir\",\n                  targetDir: folderUris[0].fsPath,\n                });\n              }\n              break;\n            }\n            case \"submit\":\n              await handleSubmit(msg);\n              break;\n            case \"cancel\":\n              panel.dispose();\n              break;\n          }\n        },\n        undefined,\n        context.subscriptions\n      );\n\n      async function handleSubmit(message: {\n        projectName?: string;\n        compilerName?: string;\n        targetDir?: string;\n      }) {\n        const { projectName, compilerName, targetDir } = message;\n        // Make sure that Inputs have to be filled and the compiler tag is found\n        if (!projectName) {\n          vscode.window.showErrorMessage(\"Project Name is required.\");\n          return;\n        }\n        if (!compilerName) {\n          vscode.window.showErrorMessage(\"Compiler selection is required.\");\n          return;\n        }\n        const compilerTag = compilerTagList[compilerName];\n        if (!compilerTag) {\n          vscode.window.showErrorMessage(\n            `No compiler tag found for \"${compilerName}\".`\n          );\n          return;\n        }\n\n        const base = targetDir ?? workspaceRoot;\n        const projectPath = path.join(base, projectName);\n\n        vscode.window.showInformationMessage(\n          `Creating project \"${projectName}\" at ${projectPath} using ${compilerName}.`\n        );\n        await createNewProject(projectPath, compilerTag);\n        panel.dispose();\n      }\n    }\n  );\n\n  context.subscriptions.push(createNewProjectCmd);\n\n  async function getNewProjectWebviewContent(\n    context: vscode.ExtensionContext,\n    panel: vscode.WebviewPanel,\n    workspaceRoot: string\n  ): Promise<string> {\n    const base = resolveWebviewBase(context);\n    const cssOnDisk = vscode.Uri.file(path.join(base, \"css\", \"newProject.css\"));\n    const scriptOnDisk = vscode.Uri.file(\n      path.join(base, \"webviewScripts\", \"newProject.js\")\n    );\n    const htmlPath = path.join(base, \"html\", \"newProject.html\");\n\n    const cssUri = panel.webview.asWebviewUri(cssOnDisk);\n    const scriptUri = panel.webview.asWebviewUri(scriptOnDisk);\n\n    const compilersJson = JSON.stringify(Object.keys(compilerTagList));\n    // pass default targetDir as workspace root\n    const workspaceJson = JSON.stringify(workspaceRoot);\n\n    let html = fs.readFileSync(htmlPath, \"utf8\");\n    const nonce = getNonce();\n    html = html.replace(\n      /<head>/,\n      `<head>\n        <meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'none'; style-src ${\n          panel.webview.cspSource\n        }; script-src 'nonce-${nonce}' ${panel.webview.cspSource};\">\n        <script nonce=\"${nonce}\">\n          window.compilerData = ${compilersJson};\n          window.defaultDir   = ${workspaceJson};\n        </script>`\n    );\n    html = html.replace(\"{{ cssUri }}\", cssUri.toString());\n    html = html.replace(\n      \"{{ scriptUri }}\",\n      `<script nonce=\"${nonce}\" src=\"${scriptUri}\"></script>`\n    );\n\n    return html;\n  }\n\n  const newCompilerCmd = vscode.commands.registerCommand(\n    \"vectorcastTestExplorer.newCompilerInProjectVCAST\",\n    async (args: any) => {\n      // Retrieve project path from the clicked node's 'id'\n      const projectPath: string | undefined = args?.id;\n      if (!projectPath) {\n        vscode.window.showErrorMessage(\"No project node provided.\");\n        return;\n      }\n\n      // Create webview panel\n      const baseDir = resolveWebviewBase(context);\n      const panel = vscode.window.createWebviewPanel(\n        \"newCompiler\",\n        \"Create Compiler in Project\",\n        vscode.ViewColumn.Active,\n        {\n          enableScripts: true,\n          retainContextWhenHidden: true,\n          localResourceRoots: [vscode.Uri.file(baseDir)],\n        }\n      );\n\n      // Load HTML into webview\n      panel.webview.html = await getNewCompilerWebviewContent(\n        context,\n        panel,\n        projectPath\n      );\n\n      // Dispatch table\n      const dispatch: Record<string, (msg?: any) => Promise<void> | void> = {\n        submit: handleSubmit,\n        cancel: () => panel.dispose(),\n      };\n\n      panel.webview.onDidReceiveMessage(\n        (message) => dispatch[message.command]?.(message),\n        undefined,\n        context.subscriptions\n      );\n\n      // Handle submission\n      async function handleSubmit(message: { compilerName?: string }) {\n        const compilerName = message.compilerName;\n        if (!compilerName) {\n          vscode.window.showErrorMessage(\"Compiler Name is required.\");\n          return;\n        }\n\n        const compilerTemplate = compilerTagList[compilerName];\n        if (!compilerTemplate) {\n          vscode.window.showErrorMessage(\n            `Compiler Template Name was not found for ${compilerName}.`\n          );\n          return;\n        }\n\n        if (projectPath) {\n          vscode.window.showInformationMessage(\n            `Adding compiler ${compilerName} to project ${projectPath}`\n          );\n          await createNewCompilerInProject(projectPath, compilerTemplate);\n        } else {\n          vscode.window.showErrorMessage(\n            \"Project Path is not defined. Cannot add compiler.\"\n          );\n          return;\n        }\n        panel.dispose();\n      }\n    }\n  );\n\n  context.subscriptions.push(newCompilerCmd);\n\n  async function getNewCompilerWebviewContent(\n    context: vscode.ExtensionContext,\n    panel: vscode.WebviewPanel,\n    projectPath: string\n  ): Promise<string> {\n    const base = resolveWebviewBase(context);\n    const cssOnDisk = vscode.Uri.file(\n      path.join(base, \"css\", \"newCompiler.css\")\n    );\n    const scriptOnDisk = vscode.Uri.file(\n      path.join(base, \"webviewScripts\", \"newCompiler.js\")\n    );\n    const htmlPath = path.join(base, \"html\", \"newCompiler.html\");\n\n    const cssUri = panel.webview.asWebviewUri(cssOnDisk);\n    const scriptUri = panel.webview.asWebviewUri(scriptOnDisk);\n\n    // For demo, hard\u2011coded compiler list\n    const compilerList = JSON.stringify(Object.keys(compilerTagList));\n    const projectDir = path.resolve(projectPath);\n    const projectName = JSON.stringify(path.basename(projectDir));\n\n    let html = fs.readFileSync(htmlPath, \"utf8\");\n    const nonce = getNonce();\n    const csp = `\n      <meta http-equiv=\"Content-Security-Policy\"\n            content=\"default-src 'none';\n                     style-src ${panel.webview.cspSource};\n                     script-src 'nonce-${nonce}' ${panel.webview.cspSource};\">\n    `;\n    html = html.replace(/<head>/, `<head>${csp}`);\n\n    html = html\n      .replace(/{{\\s*cssUri\\s*}}/g, cssUri.toString())\n      .replace(\n        /<script src=\"{{\\s*scriptUri\\s*}}\"><\\/script>/,\n        `<script nonce=\"${nonce}\" src=\"${scriptUri}\"></script>`\n      )\n      .replace(\n        /<\\/head>/,\n        `<script nonce=\"${nonce}\">\n           window.projectName = ${projectName};\n           window.compilerData = ${compilerList};\n         </script>\\n</head>`\n      );\n\n    return html;\n  }\n}\n\n// this method is called when your extension is deactivated\nexport async function deactivate() {\n  await serverProcessController(serverStateType.stopped);\n  // delete the server log if it exists\n  await deleteServerLog();\n  console.log(\"The VectorCAST Test Explorer has been de-activated\");\n  return deactivateLanguageServerClient();\n}\n", "import * as vscode from \"vscode\";\n\n// some functions that are used across functional areas of the extensions\nimport {\n  errorLevel,\n  indentString,\n  openMessagePane,\n  vectorMessage,\n} from \"./messagePane\";\nimport { getEnviroPathFromID, removeNodeFromCache } from \"./testData\";\n\nimport {\n  buildTestPaneContents,\n  removeCBTfilesCacheForEnviro,\n  removeNodeFromTestPane,\n  updateDataForEnvironment,\n  updateTestPane,\n  vcastUnbuiltEnviroList,\n} from \"./testPane\";\n\nimport { removeFilePattern } from \"./utilities\";\nimport { loadTestScriptIntoEnvironment } from \"./vcastAdapter\";\nimport { commandStatusType } from \"./vcastCommandRunner\";\nimport { removeCoverageDataForEnviro } from \"./vcastTestInterface\";\nimport {\n  closeConnection,\n  globalEnviroDataServerActive,\n} from \"../src-common/vcastServer\";\nimport { updateDisplayedCoverage } from \"./coverage\";\nimport { updateExploreDecorations } from \"./fileDecorator\";\nimport { updateTestDecorator } from \"./editorDecorator\";\n\nconst fs = require(\"fs\");\nconst path = require(\"path\");\n\n/**\n * Callback function when we build a single (Project-) Environment\n * @param enviroPath Path to env\n * @param code Exit code of the process\n */\nexport async function buildEnvironmentCallback(\n  enviroPath: string,\n  code: number\n) {\n  // This function gets called after we build an environment\n  // We check the return code, update the test pane, and cleanup on failure\n\n  if (code == 0) {\n    await buildTestPaneContents();\n    await updateDataForEnvironment(enviroPath);\n  } else {\n    try {\n      // remove the environment directory, as well as the .vce file\n      vectorMessage(\"Environment build failed, removing artifacts ...\");\n      fs.rmSync(enviroPath, { recursive: true, force: true });\n      fs.unlinkSync(enviroPath + \".vce\");\n      // Don't want to remove the .env, because leaving it allows the\n      // user to edit and then right click to try a re-build\n    } catch {\n      // ignore errors\n    }\n  }\n}\n\n/**\n * Callback function when we re-build a single (Project-) Environment\n * @param enviroPath Path to env\n * @param code Exit code of the process\n */\nexport async function rebuildEnvironmentCallback(\n  enviroPath: string,\n  code: number\n) {\n  // This function gets called after the rebuildEnviro command\n  // When the rebuild succeeds, we delete the BAK stuff\n\n  if (code == 0) {\n    try {\n      // remove the BAK directory and .vce file\n      vectorMessage(\"Environment re-build complete, removing artifacts ...\");\n      fs.rmSync(enviroPath + \".BAK\", { recursive: true, force: true });\n      fs.unlinkSync(enviroPath + \".BAK.vce\");\n\n      // vcast leaves the ENVIRO-NAME.time-tag.tst file so we clean that up\n      removeFilePattern(enviroPath, \".*.tst\");\n    } catch {\n      // ignore errors\n    }\n    await updateDataForEnvironment(enviroPath);\n  }\n}\n\n/**\n * Callback function when we delete a single Environment\n * @param enviroPath Path to env\n * @param code Exit code of the process\n */\nexport async function deleteEnvironmentCallback(\n  enviroNodeID: string,\n  code: number\n) {\n  // this function gets called after the clicast env delete completes\n\n  // if the delete succeeded then we need to remove the environment from the test pane\n  if (code == 0) {\n    removeNodeFromTestPane(enviroNodeID);\n    removeCBTfilesCacheForEnviro(enviroNodeID);\n\n    let enviroPath = getEnviroPathFromID(enviroNodeID);\n    if (!enviroPath) {\n      // We check if it is present in the unbuilt list\n      // If so, we take the id and split it after \"vcast:\" to get the path\n      // In case that is not possible, we throw an error message\n      if (vcastUnbuiltEnviroList.includes(enviroNodeID)) {\n        const parts = enviroNodeID.split(\":\");\n        enviroPath = parts.slice(1).join(\":\");\n      } else {\n        vscode.window.showErrorMessage(\n          `Unable to determine environment path from node: ${enviroNodeID}`\n        );\n        return;\n      }\n    }\n\n    removeCoverageDataForEnviro(enviroPath);\n    updateDisplayedCoverage();\n    updateExploreDecorations();\n    updateTestDecorator();\n    removeNodeFromCache(enviroNodeID);\n\n    // vcast does not delete the ENVIRO-NAME.* files so we clean those up here\n    removeFilePattern(enviroPath, \".*\");\n  }\n}\n\nexport async function loadScriptCallBack(\n  commandStatus: commandStatusType,\n  enviroName: string,\n  scriptPath: string\n) {\n  // This is the callback that should be passed to executeCommandWithProgress() when\n  // we are computing basis path or ATG tests, this gets called when the command completes\n\n  if (commandStatus.errorCode == 0) {\n    vectorMessage(\"Loading tests into VectorCAST environment ...\");\n\n    // call clicast to load the test script\n    await loadTestScriptIntoEnvironment(enviroName, scriptPath);\n\n    const enviroPath = path.join(path.dirname(scriptPath), enviroName);\n\n    vectorMessage(`Deleting script file: ${path.basename(scriptPath)}`);\n    await updateTestPane(enviroPath);\n    if (globalEnviroDataServerActive) await closeConnection(enviroPath);\n    fs.unlinkSync(scriptPath);\n  } else {\n    vscode.window.showInformationMessage(\n      `Error generating tests, see log for details`\n    );\n    vectorMessage(\"Error generating tests\");\n    vectorMessage(commandStatus.stdout, errorLevel.info, indentString);\n    openMessagePane();\n  }\n}\n", "// Copied from TypeCheck, should be merged\n\nimport * as vscode from \"vscode\";\nimport { getMessagePane } from \"./extension\";\n// This file contains functions that allow the extension to log\n// status to a dedicated output pane in VSCode\n\n// I created this simple wrapper in case we add other features\n\n// This object creates a new output pane in the running extension\n// To access: View -> Output, then choose \"Output\" tab, and pull\n// down on the list to the right until you see vTestAdvisor\n\n// duplicated from VTC ////////////////////////\nexport enum errorLevel {\n  error = \"[error]\",\n  warn = \"[warn] \",\n  info = \"[info] \",\n  trace = \"[trace]\",\n}\n\nfunction formattedLine(\n  prefix: string,\n  level: errorLevel,\n  indent: string,\n  line: string\n): string {\n  let returnString: string = \"\";\n  returnString = prefix.padEnd(15) + level.padEnd(8) + indent + line;\n  return returnString;\n}\n\nasync function displayMessage(\n  prefix: string,\n  level: errorLevel,\n  indent: string,\n  msg: string\n) {\n  const messagePane = getMessagePane();\n  let stringList = msg.split(\"\\n\");\n  // for errorLevel.error, we show the first line of the msg in a popup\n  if (level == errorLevel.error) {\n    vscode.window.showErrorMessage(stringList[0]);\n  }\n  for (let line of stringList) {\n    messagePane.appendLine(formattedLine(prefix, level, indent, line));\n  }\n}\n\n// Note that this is an aysnc function so to if you are using to display\n// a message before a long-running process, use await in the caller.\nexport const indentString = \"   \"; // for consistency\nexport async function vectorMessage(\n  msg: string,\n  level: errorLevel = errorLevel.info,\n  indent: string = \"\"\n) {\n  if (\n    level != errorLevel.trace ||\n    (level == errorLevel.trace && globalVerboseOn)\n  ) {\n    displayMessage(\"test explorer\", level, indent, msg);\n  }\n}\n\nexport function vcastMessage(msg: string, level: errorLevel = errorLevel.info) {\n  if (globalVerboseOn) displayMessage(\"vectorcast\", level, \"\", msg);\n}\n\nlet globalVerboseOn: boolean = false;\nexport function adjustVerboseSetting() {\n  const settings = vscode.workspace.getConfiguration(\"vectorcastTestExplorer\");\n  globalVerboseOn = settings.get(\"verboseLogging\", false);\n}\n\nlet globalLogIsOpen: boolean = false;\nexport function openMessagePane() {\n  const messagePane = getMessagePane();\n  messagePane.show();\n  globalLogIsOpen = true;\n}\n\nexport function closeMessagePane() {\n  const messagePane = getMessagePane();\n  messagePane.hide();\n  globalLogIsOpen = false;\n}\n\nexport function toggleMessageLog() {\n  const messagePane = getMessagePane();\n  if (globalLogIsOpen) {\n    messagePane.hide();\n    globalLogIsOpen = false;\n  } else {\n    messagePane.show();\n    globalLogIsOpen = true;\n  }\n}\n", "import * as vscode from \"vscode\";\n\n// needed for parsing json files with comments\nimport * as jsonc from \"jsonc-parser\";\n\nimport { Uri } from \"vscode\";\n\nimport { errorLevel, vectorMessage } from \"./messagePane\";\nimport { getGlobalCoverageData } from \"./vcastTestInterface\";\nimport { rebuildEnvironment } from \"./vcastAdapter\";\nimport { rebuildEnvironmentCallback } from \"./callbacks\";\n\nconst fs = require(\"fs\");\nconst glob = require(\"glob\");\nconst os = require(\"os\");\nconst path = require(\"path\");\n\n// options used for reading json-c files\nexport const jsoncParseOptions: jsonc.ParseOptions = {\n  allowTrailingComma: true,\n  disallowComments: false,\n  allowEmptyContent: false,\n};\n// note: we don't use this programmatically but it is useful for debugging\nexport var jsoncParseErrors: jsonc.ParseError[] = []; // not using programmatically, for debug only\nexport const jsoncModificationOptions: jsonc.ModificationOptions = {\n  formattingOptions: { tabSize: 4, insertSpaces: true },\n};\n\n// The testInterface is delivered in the .vsix\n// in the sub-directory \"python\"\n\n// The VectorCAST extensions for settings and launch are delivered in the .vsix\n// in the sub-directory \"support\"\n\nexport interface jsonDataType {\n  jsonData: any;\n  jsonDataAsString: string;\n}\n\n/**\n * Retrieves the environment path associated with a given file path.\n *\n * @param {string} filePath - The file path for which the environment path is needed.\n * @returns {string | null} The environment path if found, otherwise null.\n */\nexport function getEnvPathForFilePath(filePath: string): string | null {\n  const globalCoverageMap = getGlobalCoverageData();\n  const fileData = globalCoverageMap.get(filePath);\n  if (fileData?.enviroList) {\n    // Retrieve the first environment key, if it exists\n    const envKey = Array.from(fileData.enviroList.keys())[0];\n    if (envKey) {\n      // Return the full environment key (entire path)\n      return envKey;\n    }\n  }\n  return null;\n}\n\nexport function loadLaunchFile(jsonPath: string): jsonDataType | undefined {\n  // this function takes the path to a launch.json\n  // and returns the contents, or an empty list of configurations\n  // if we cannot read the file\n  let returnValue: jsonDataType | undefined = undefined;\n\n  // Requires json-c parsing to handle comments etc.\n  const existingContents = fs.readFileSync(jsonPath).toString();\n  // note that jsonc.parse returns \"real json\" without the comments\n  const existingJSONdata = jsonc.parse(\n    existingContents,\n    jsoncParseErrors,\n    jsoncParseOptions\n  );\n\n  if (existingJSONdata) {\n    returnValue = {\n      jsonData: existingJSONdata,\n      jsonDataAsString: existingContents,\n    };\n  }\n  return returnValue;\n}\n\n/**\n *  Decodes a base64 encoded string.\n * @param b64 - The base64 encoded string to decode.\n * @returns The decoded string.\n */\nexport function decodeVar(b64: string): string {\n  return Buffer.from(b64, \"base64\").toString(\"utf-8\");\n}\n\nexport function addLaunchConfiguration(\n  fileUri: Uri,\n  pathToSupportFiles: string\n) {\n  // This function adds the VectorCAST Harness Debug configuration to any\n  // launch.json file that the user right clicks on\n\n  const jsonPath = fileUri.fsPath;\n  const existingLaunchData: jsonDataType | undefined = loadLaunchFile(jsonPath);\n\n  const vectorJSON = JSON.parse(\n    fs.readFileSync(path.join(pathToSupportFiles, \"vcastLaunchTemplate.json\"))\n  );\n\n  // if we have a well formatted launch file with an array of configurations ...\n  if (\n    existingLaunchData &&\n    existingLaunchData.jsonData.configurations &&\n    existingLaunchData.jsonData.configurations.length > 0\n  ) {\n    // Remember that the vectorJSON data has the \"configurations\" level which is an array\n    const vectorConfiguration = vectorJSON.configurations[0];\n\n    // now loop through launch.json to make sure it does not already have the vector config\n    let needToAddVectorLaunchConfig = true;\n\n    for (const existingConfig of existingLaunchData.jsonData.configurations) {\n      if (existingConfig.name == vectorConfiguration.name) {\n        vscode.window.showInformationMessage(\n          `File: ${jsonPath}, already contains a ${vectorConfiguration.name} configuration`\n        );\n        needToAddVectorLaunchConfig = false;\n        break;\n      }\n    }\n    if (needToAddVectorLaunchConfig) {\n      const whereToInsert = existingLaunchData.jsonData.configurations.length;\n      let jsonDataAsString = existingLaunchData.jsonDataAsString;\n      const jsoncEdits = jsonc.modify(\n        jsonDataAsString,\n        [\"configurations\", whereToInsert],\n        vectorConfiguration,\n        jsoncModificationOptions\n      );\n      jsonDataAsString = jsonc.applyEdits(jsonDataAsString, jsoncEdits);\n      fs.writeFileSync(jsonPath, jsonDataAsString);\n    }\n  } else {\n    // if the existing file is empty or does not contain a \"configurations\" section,\n    // simply insert the vector config.  This allows the user to start with an empty file\n    fs.writeFileSync(jsonPath, JSON.stringify(vectorJSON, null, 4));\n  }\n}\n\nconst filesExcludeString = \"files.exclude\";\nexport function addSettingsFileFilter(\n  fileUri: Uri,\n  pathToSupportFiles: string\n) {\n  const filePath = fileUri.fsPath;\n  let existingJSON;\n  let existingJSONasString: string;\n\n  try {\n    // Requires json-c parsing to handle comments etc.\n    existingJSONasString = fs.readFileSync(filePath).toString();\n    // note that jsonc.parse returns \"real json\" without the comments\n    existingJSON = jsonc.parse(\n      existingJSONasString,\n      jsoncParseErrors,\n      jsoncParseOptions\n    );\n  } catch {\n    vscode.window.showErrorMessage(\n      `Could not load the existing ${path.basename(\n        filePath\n      )}, check for syntax errors`\n    );\n    return;\n  }\n\n  // if the file does not have a \"files.exclude\" section, add one\n  if (!existingJSON.hasOwnProperty(filesExcludeString)) {\n    // we don't need to modify the existing jsonAsString\n    // because it will do the insert of a new section for us\n    existingJSON[filesExcludeString] = {};\n  }\n\n  // Remember that the vectorJSON data has the \"configurations\" level which is an array\n  const vectorJSON = JSON.parse(\n    fs.readFileSync(path.join(pathToSupportFiles, \"vcastSettings.json\"))\n  );\n\n  // now check if the vector filters are already in the files.exclude object\n  if (\n    existingJSON[filesExcludeString].hasOwnProperty(\"vectorcast-filter-start\")\n  ) {\n    vscode.window.showInformationMessage(\n      `File: ${filePath}, already contains the VectorCAST exclude patterns`\n    );\n  } else {\n    const mergedExcludeList = Object.assign(\n      existingJSON[\"files.exclude\"],\n      vectorJSON[\"files.exclude\"]\n    );\n    const jsoncEdits = jsonc.modify(\n      existingJSONasString,\n      [filesExcludeString],\n      mergedExcludeList,\n      jsoncModificationOptions\n    );\n    existingJSONasString = jsonc.applyEdits(existingJSONasString, jsoncEdits);\n\n    fs.writeFileSync(filePath, existingJSONasString);\n  }\n}\n\nexport interface statusMessageType {\n  fullLines: string;\n  remainderText: string;\n}\nexport function processCommandOutput(\n  remainderTextFromLastCall: string,\n  newTextFromThisCall: string\n): statusMessageType {\n  // The purpose of this function is to process the raw text that comes\n  // from the spawned process and to split it into full lines and a \"remainder\"\n  // The caller will keep the remainder around until the next data comes in\n  // and then pass that in with the new text.\n\n  let returnObject: statusMessageType = { fullLines: \"\", remainderText: \"\" };\n  const candidateString = remainderTextFromLastCall + newTextFromThisCall;\n\n  if (candidateString.endsWith(\"\\n\"))\n    // if we got all full lines, there is no remainder\n    returnObject.fullLines = candidateString.slice(\n      0,\n      candidateString.length - 1\n    );\n  else if (candidateString.includes(\"\\n\")) {\n    // if there is at least one \\n then we have full lines and a remainder\n    const whereToSplit = candidateString.lastIndexOf(\"\\n\");\n    returnObject.fullLines = candidateString.substring(0, whereToSplit);\n    returnObject.remainderText = candidateString.substring(\n      whereToSplit + 1,\n      candidateString.length\n    );\n  } else {\n    // otherwise we have only a remainder\n    returnObject.remainderText = candidateString;\n  }\n\n  return returnObject;\n}\n\nexport function exeFilename(basename: string): string {\n  if (os.platform() == \"win32\") return basename + \".exe\";\n  else return basename;\n}\n\nexport function forceLowerCaseDriveLetter(path?: string): string {\n  // There is an issue with drive letter case between TS and Python\n  // On windows, the drive letter is always lower case here in TS\n  // but in python, the calls to abspath, and realpath force the\n  // drive letter to be upper case.\n\n  if (path) {\n    const platform = os.platform();\n    if (platform == \"win32\") {\n      if (path.charAt(1) == \":\") {\n        const driveLetter = path.charAt(0).toLowerCase();\n        return driveLetter + path.slice(1, path.length);\n      }\n    }\n    return path;\n  } else return \"\";\n}\n\nexport function normalizePath(path: string): string {\n  // This function is used to fix the drive letter AS WELL AS\n  // replace any backslashes with forward slashes\n\n  let returnPath = path;\n  if (os.platform() == \"win32\") {\n    returnPath = forceLowerCaseDriveLetter(path).replace(/\\\\/g, \"/\");\n  }\n  return returnPath;\n}\n\n/**\n * this function returns a single line range DecorationOption\n * @param lineIndex line index to be used for the range\n * @returns DecorationOptions for the line\n */\nexport function getRangeOption(lineIndex: number): vscode.DecorationOptions {\n  // If we start the extension with a cpp file opened and in focus, lineIndex is -1 because the cursor is not\n  // on a line. We need to set it to 0 in that case\n  if (lineIndex < 0) {\n    lineIndex = 0;\n  }\n  const startPos = new vscode.Position(lineIndex, 0);\n  const endPos = new vscode.Position(lineIndex, 0);\n  return { range: new vscode.Range(startPos, endPos) };\n}\n\nexport function openFileWithLineSelected(\n  filePath: string,\n  lineNumber: number,\n  viewColumn: vscode.ViewColumn = vscode.ViewColumn.One\n) {\n  const locationToHighlight: vscode.Range = new vscode.Range(\n    new vscode.Position(lineNumber, 0),\n    new vscode.Position(lineNumber, 200)\n  );\n\n  let viewOptions: vscode.TextDocumentShowOptions = {\n    viewColumn: viewColumn,\n    preserveFocus: false,\n    selection: locationToHighlight,\n  };\n  vscode.workspace.openTextDocument(filePath).then(\n    (doc: vscode.TextDocument) => {\n      vscode.window.showTextDocument(doc, viewOptions);\n    },\n    (error: any) => {\n      vectorMessage(error.message, errorLevel.error);\n    }\n  );\n}\n\nexport function quote(name: string) {\n  // if name contains <<COMPOUND>>, <<INIT>> or parenthesis\n  // we need to quote the name so that the shell does not interpret it.\n\n  if (\n    name.includes(\"<\") ||\n    name.includes(\">\") ||\n    name.includes(\"(\") ||\n    name.includes(\")\")\n  ) {\n    return '\"' + name + '\"';\n  } else return name;\n}\n\nexport function showSettings() {\n  console.log(\"VectorCAST Test Explorer show settings called ...\");\n  // previously, I was using: \"VectorCAST Test Explorer\" as the \"filter\" in this call, but\n  // that resulted in a couple of extra settings, and the wrong order being displayed\n  // through trial and error, I found that this gives what we want\n  vscode.commands.executeCommand(\n    \"workbench.action.openWorkspaceSettings\",\n    \"@ext:vectorgroup.vectorcasttestexplorer\"\n  );\n}\n\nexport function removeFilePattern(enviroPath: string, pattern: string) {\n  const options = {\n    cwd: path.dirname(enviroPath),\n    absolute: true,\n    strict: false,\n  };\n  let fileList = glob.sync(`${path.basename(enviroPath)}${pattern}`, options);\n  for (let filePath of fileList) {\n    fs.unlinkSync(filePath);\n  }\n}\n\n/**\n * Cleans the message we want to show in the output. The Test Results pane handles logs differently.\n * @param testResultString Test result we want to clean\n * @returns Cleaned message, ready for the Test Results pane\n */\nexport function cleanTestResultsPaneMessage(testResultString: string) {\n  let cleanedOutput = testResultString.split(\"\\n\");\n\n  // Determine the leading spaces in the second line\n  // We want that the first line is left-aligned, and all subsequent lines are aligned to the second line\n  let secondLine = cleanedOutput[1] || \"\";\n  let secondLinePadding = secondLine.match(/^(\\s*)/)?.[0] || \"\";\n\n  // Align all lines after the first one to match the second line's padding\n  let alignedOutput = cleanedOutput\n    .map((line, index) => {\n      // First line stays unmodified\n      if (index === 0) {\n        return line.trim();\n      }\n      // Apply second line padding to subsequent lines\n      return secondLinePadding + line.trim();\n    })\n    .join(\"\\r\\n\");\n\n  return alignedOutput;\n}\n\n/**\n * Updates the env file with the new settings from the VSCode settings\n */\nexport async function updateCoverageAndRebuildEnv() {\n  const globalCoverageMap = getGlobalCoverageData();\n  const mapValues = [...globalCoverageMap.values()];\n  let envArray: string[] = [];\n\n  for (let envValues of mapValues) {\n    for (let enviroPath of envValues[\"enviroList\"].keys()) {\n      // If multiple units are in the env, the env is there multiple times\n      if (!envArray.includes(enviroPath)) {\n        envArray.push(enviroPath);\n      }\n    }\n  }\n  // Now rebuild every env so that the coverage is updated\n  for (let enviroPath of envArray) {\n    await rebuildEnvironment(enviroPath, rebuildEnvironmentCallback);\n  }\n}\n\n/**\n * Returns the root of the opened workspace.\n */\nexport function getWorkspaceRootPath(): string | undefined {\n  const folders = vscode.workspace.workspaceFolders;\n  if (folders && folders.length > 0) {\n    return folders[0].uri.fsPath;\n  }\n  return undefined;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text, ignoreTrivia = false) {\n    const len = text.length;\n    let pos = 0, value = '', tokenOffset = 0, token = 16 /* SyntaxKind.Unknown */, lineNumber = 0, lineStartOffset = 0, tokenLineStartOffset = 0, prevTokenLineStartOffset = 0, scanError = 0 /* ScanError.None */;\n    function scanHexDigits(count, exact) {\n        let digits = 0;\n        let value = 0;\n        while (digits < count || !exact) {\n            let ch = text.charCodeAt(pos);\n            if (ch >= 48 /* CharacterCodes._0 */ && ch <= 57 /* CharacterCodes._9 */) {\n                value = value * 16 + ch - 48 /* CharacterCodes._0 */;\n            }\n            else if (ch >= 65 /* CharacterCodes.A */ && ch <= 70 /* CharacterCodes.F */) {\n                value = value * 16 + ch - 65 /* CharacterCodes.A */ + 10;\n            }\n            else if (ch >= 97 /* CharacterCodes.a */ && ch <= 102 /* CharacterCodes.f */) {\n                value = value * 16 + ch - 97 /* CharacterCodes.a */ + 10;\n            }\n            else {\n                break;\n            }\n            pos++;\n            digits++;\n        }\n        if (digits < count) {\n            value = -1;\n        }\n        return value;\n    }\n    function setPosition(newPosition) {\n        pos = newPosition;\n        value = '';\n        tokenOffset = 0;\n        token = 16 /* SyntaxKind.Unknown */;\n        scanError = 0 /* ScanError.None */;\n    }\n    function scanNumber() {\n        let start = pos;\n        if (text.charCodeAt(pos) === 48 /* CharacterCodes._0 */) {\n            pos++;\n        }\n        else {\n            pos++;\n            while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n            }\n        }\n        if (pos < text.length && text.charCodeAt(pos) === 46 /* CharacterCodes.dot */) {\n            pos++;\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n            }\n            else {\n                scanError = 3 /* ScanError.UnexpectedEndOfNumber */;\n                return text.substring(start, pos);\n            }\n        }\n        let end = pos;\n        if (pos < text.length && (text.charCodeAt(pos) === 69 /* CharacterCodes.E */ || text.charCodeAt(pos) === 101 /* CharacterCodes.e */)) {\n            pos++;\n            if (pos < text.length && text.charCodeAt(pos) === 43 /* CharacterCodes.plus */ || text.charCodeAt(pos) === 45 /* CharacterCodes.minus */) {\n                pos++;\n            }\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n                end = pos;\n            }\n            else {\n                scanError = 3 /* ScanError.UnexpectedEndOfNumber */;\n            }\n        }\n        return text.substring(start, end);\n    }\n    function scanString() {\n        let result = '', start = pos;\n        while (true) {\n            if (pos >= len) {\n                result += text.substring(start, pos);\n                scanError = 2 /* ScanError.UnexpectedEndOfString */;\n                break;\n            }\n            const ch = text.charCodeAt(pos);\n            if (ch === 34 /* CharacterCodes.doubleQuote */) {\n                result += text.substring(start, pos);\n                pos++;\n                break;\n            }\n            if (ch === 92 /* CharacterCodes.backslash */) {\n                result += text.substring(start, pos);\n                pos++;\n                if (pos >= len) {\n                    scanError = 2 /* ScanError.UnexpectedEndOfString */;\n                    break;\n                }\n                const ch2 = text.charCodeAt(pos++);\n                switch (ch2) {\n                    case 34 /* CharacterCodes.doubleQuote */:\n                        result += '\\\"';\n                        break;\n                    case 92 /* CharacterCodes.backslash */:\n                        result += '\\\\';\n                        break;\n                    case 47 /* CharacterCodes.slash */:\n                        result += '/';\n                        break;\n                    case 98 /* CharacterCodes.b */:\n                        result += '\\b';\n                        break;\n                    case 102 /* CharacterCodes.f */:\n                        result += '\\f';\n                        break;\n                    case 110 /* CharacterCodes.n */:\n                        result += '\\n';\n                        break;\n                    case 114 /* CharacterCodes.r */:\n                        result += '\\r';\n                        break;\n                    case 116 /* CharacterCodes.t */:\n                        result += '\\t';\n                        break;\n                    case 117 /* CharacterCodes.u */:\n                        const ch3 = scanHexDigits(4, true);\n                        if (ch3 >= 0) {\n                            result += String.fromCharCode(ch3);\n                        }\n                        else {\n                            scanError = 4 /* ScanError.InvalidUnicode */;\n                        }\n                        break;\n                    default:\n                        scanError = 5 /* ScanError.InvalidEscapeCharacter */;\n                }\n                start = pos;\n                continue;\n            }\n            if (ch >= 0 && ch <= 0x1f) {\n                if (isLineBreak(ch)) {\n                    result += text.substring(start, pos);\n                    scanError = 2 /* ScanError.UnexpectedEndOfString */;\n                    break;\n                }\n                else {\n                    scanError = 6 /* ScanError.InvalidCharacter */;\n                    // mark as error but continue with string\n                }\n            }\n            pos++;\n        }\n        return result;\n    }\n    function scanNext() {\n        value = '';\n        scanError = 0 /* ScanError.None */;\n        tokenOffset = pos;\n        lineStartOffset = lineNumber;\n        prevTokenLineStartOffset = tokenLineStartOffset;\n        if (pos >= len) {\n            // at the end\n            tokenOffset = len;\n            return token = 17 /* SyntaxKind.EOF */;\n        }\n        let code = text.charCodeAt(pos);\n        // trivia: whitespace\n        if (isWhiteSpace(code)) {\n            do {\n                pos++;\n                value += String.fromCharCode(code);\n                code = text.charCodeAt(pos);\n            } while (isWhiteSpace(code));\n            return token = 15 /* SyntaxKind.Trivia */;\n        }\n        // trivia: newlines\n        if (isLineBreak(code)) {\n            pos++;\n            value += String.fromCharCode(code);\n            if (code === 13 /* CharacterCodes.carriageReturn */ && text.charCodeAt(pos) === 10 /* CharacterCodes.lineFeed */) {\n                pos++;\n                value += '\\n';\n            }\n            lineNumber++;\n            tokenLineStartOffset = pos;\n            return token = 14 /* SyntaxKind.LineBreakTrivia */;\n        }\n        switch (code) {\n            // tokens: []{}:,\n            case 123 /* CharacterCodes.openBrace */:\n                pos++;\n                return token = 1 /* SyntaxKind.OpenBraceToken */;\n            case 125 /* CharacterCodes.closeBrace */:\n                pos++;\n                return token = 2 /* SyntaxKind.CloseBraceToken */;\n            case 91 /* CharacterCodes.openBracket */:\n                pos++;\n                return token = 3 /* SyntaxKind.OpenBracketToken */;\n            case 93 /* CharacterCodes.closeBracket */:\n                pos++;\n                return token = 4 /* SyntaxKind.CloseBracketToken */;\n            case 58 /* CharacterCodes.colon */:\n                pos++;\n                return token = 6 /* SyntaxKind.ColonToken */;\n            case 44 /* CharacterCodes.comma */:\n                pos++;\n                return token = 5 /* SyntaxKind.CommaToken */;\n            // strings\n            case 34 /* CharacterCodes.doubleQuote */:\n                pos++;\n                value = scanString();\n                return token = 10 /* SyntaxKind.StringLiteral */;\n            // comments\n            case 47 /* CharacterCodes.slash */:\n                const start = pos - 1;\n                // Single-line comment\n                if (text.charCodeAt(pos + 1) === 47 /* CharacterCodes.slash */) {\n                    pos += 2;\n                    while (pos < len) {\n                        if (isLineBreak(text.charCodeAt(pos))) {\n                            break;\n                        }\n                        pos++;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 12 /* SyntaxKind.LineCommentTrivia */;\n                }\n                // Multi-line comment\n                if (text.charCodeAt(pos + 1) === 42 /* CharacterCodes.asterisk */) {\n                    pos += 2;\n                    const safeLength = len - 1; // For lookahead.\n                    let commentClosed = false;\n                    while (pos < safeLength) {\n                        const ch = text.charCodeAt(pos);\n                        if (ch === 42 /* CharacterCodes.asterisk */ && text.charCodeAt(pos + 1) === 47 /* CharacterCodes.slash */) {\n                            pos += 2;\n                            commentClosed = true;\n                            break;\n                        }\n                        pos++;\n                        if (isLineBreak(ch)) {\n                            if (ch === 13 /* CharacterCodes.carriageReturn */ && text.charCodeAt(pos) === 10 /* CharacterCodes.lineFeed */) {\n                                pos++;\n                            }\n                            lineNumber++;\n                            tokenLineStartOffset = pos;\n                        }\n                    }\n                    if (!commentClosed) {\n                        pos++;\n                        scanError = 1 /* ScanError.UnexpectedEndOfComment */;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 13 /* SyntaxKind.BlockCommentTrivia */;\n                }\n                // just a single slash\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* SyntaxKind.Unknown */;\n            // numbers\n            case 45 /* CharacterCodes.minus */:\n                value += String.fromCharCode(code);\n                pos++;\n                if (pos === len || !isDigit(text.charCodeAt(pos))) {\n                    return token = 16 /* SyntaxKind.Unknown */;\n                }\n            // found a minus, followed by a number so\n            // we fall through to proceed with scanning\n            // numbers\n            case 48 /* CharacterCodes._0 */:\n            case 49 /* CharacterCodes._1 */:\n            case 50 /* CharacterCodes._2 */:\n            case 51 /* CharacterCodes._3 */:\n            case 52 /* CharacterCodes._4 */:\n            case 53 /* CharacterCodes._5 */:\n            case 54 /* CharacterCodes._6 */:\n            case 55 /* CharacterCodes._7 */:\n            case 56 /* CharacterCodes._8 */:\n            case 57 /* CharacterCodes._9 */:\n                value += scanNumber();\n                return token = 11 /* SyntaxKind.NumericLiteral */;\n            // literals and unknown symbols\n            default:\n                // is a literal? Read the full word.\n                while (pos < len && isUnknownContentCharacter(code)) {\n                    pos++;\n                    code = text.charCodeAt(pos);\n                }\n                if (tokenOffset !== pos) {\n                    value = text.substring(tokenOffset, pos);\n                    // keywords: true, false, null\n                    switch (value) {\n                        case 'true': return token = 8 /* SyntaxKind.TrueKeyword */;\n                        case 'false': return token = 9 /* SyntaxKind.FalseKeyword */;\n                        case 'null': return token = 7 /* SyntaxKind.NullKeyword */;\n                    }\n                    return token = 16 /* SyntaxKind.Unknown */;\n                }\n                // some\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* SyntaxKind.Unknown */;\n        }\n    }\n    function isUnknownContentCharacter(code) {\n        if (isWhiteSpace(code) || isLineBreak(code)) {\n            return false;\n        }\n        switch (code) {\n            case 125 /* CharacterCodes.closeBrace */:\n            case 93 /* CharacterCodes.closeBracket */:\n            case 123 /* CharacterCodes.openBrace */:\n            case 91 /* CharacterCodes.openBracket */:\n            case 34 /* CharacterCodes.doubleQuote */:\n            case 58 /* CharacterCodes.colon */:\n            case 44 /* CharacterCodes.comma */:\n            case 47 /* CharacterCodes.slash */:\n                return false;\n        }\n        return true;\n    }\n    function scanNextNonTrivia() {\n        let result;\n        do {\n            result = scanNext();\n        } while (result >= 12 /* SyntaxKind.LineCommentTrivia */ && result <= 15 /* SyntaxKind.Trivia */);\n        return result;\n    }\n    return {\n        setPosition: setPosition,\n        getPosition: () => pos,\n        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n        getToken: () => token,\n        getTokenValue: () => value,\n        getTokenOffset: () => tokenOffset,\n        getTokenLength: () => pos - tokenOffset,\n        getTokenStartLine: () => lineStartOffset,\n        getTokenStartCharacter: () => tokenOffset - prevTokenLineStartOffset,\n        getTokenError: () => scanError,\n    };\n}\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* CharacterCodes.space */ || ch === 9 /* CharacterCodes.tab */;\n}\nfunction isLineBreak(ch) {\n    return ch === 10 /* CharacterCodes.lineFeed */ || ch === 13 /* CharacterCodes.carriageReturn */;\n}\nfunction isDigit(ch) {\n    return ch >= 48 /* CharacterCodes._0 */ && ch <= 57 /* CharacterCodes._9 */;\n}\nvar CharacterCodes;\n(function (CharacterCodes) {\n    CharacterCodes[CharacterCodes[\"lineFeed\"] = 10] = \"lineFeed\";\n    CharacterCodes[CharacterCodes[\"carriageReturn\"] = 13] = \"carriageReturn\";\n    CharacterCodes[CharacterCodes[\"space\"] = 32] = \"space\";\n    CharacterCodes[CharacterCodes[\"_0\"] = 48] = \"_0\";\n    CharacterCodes[CharacterCodes[\"_1\"] = 49] = \"_1\";\n    CharacterCodes[CharacterCodes[\"_2\"] = 50] = \"_2\";\n    CharacterCodes[CharacterCodes[\"_3\"] = 51] = \"_3\";\n    CharacterCodes[CharacterCodes[\"_4\"] = 52] = \"_4\";\n    CharacterCodes[CharacterCodes[\"_5\"] = 53] = \"_5\";\n    CharacterCodes[CharacterCodes[\"_6\"] = 54] = \"_6\";\n    CharacterCodes[CharacterCodes[\"_7\"] = 55] = \"_7\";\n    CharacterCodes[CharacterCodes[\"_8\"] = 56] = \"_8\";\n    CharacterCodes[CharacterCodes[\"_9\"] = 57] = \"_9\";\n    CharacterCodes[CharacterCodes[\"a\"] = 97] = \"a\";\n    CharacterCodes[CharacterCodes[\"b\"] = 98] = \"b\";\n    CharacterCodes[CharacterCodes[\"c\"] = 99] = \"c\";\n    CharacterCodes[CharacterCodes[\"d\"] = 100] = \"d\";\n    CharacterCodes[CharacterCodes[\"e\"] = 101] = \"e\";\n    CharacterCodes[CharacterCodes[\"f\"] = 102] = \"f\";\n    CharacterCodes[CharacterCodes[\"g\"] = 103] = \"g\";\n    CharacterCodes[CharacterCodes[\"h\"] = 104] = \"h\";\n    CharacterCodes[CharacterCodes[\"i\"] = 105] = \"i\";\n    CharacterCodes[CharacterCodes[\"j\"] = 106] = \"j\";\n    CharacterCodes[CharacterCodes[\"k\"] = 107] = \"k\";\n    CharacterCodes[CharacterCodes[\"l\"] = 108] = \"l\";\n    CharacterCodes[CharacterCodes[\"m\"] = 109] = \"m\";\n    CharacterCodes[CharacterCodes[\"n\"] = 110] = \"n\";\n    CharacterCodes[CharacterCodes[\"o\"] = 111] = \"o\";\n    CharacterCodes[CharacterCodes[\"p\"] = 112] = \"p\";\n    CharacterCodes[CharacterCodes[\"q\"] = 113] = \"q\";\n    CharacterCodes[CharacterCodes[\"r\"] = 114] = \"r\";\n    CharacterCodes[CharacterCodes[\"s\"] = 115] = \"s\";\n    CharacterCodes[CharacterCodes[\"t\"] = 116] = \"t\";\n    CharacterCodes[CharacterCodes[\"u\"] = 117] = \"u\";\n    CharacterCodes[CharacterCodes[\"v\"] = 118] = \"v\";\n    CharacterCodes[CharacterCodes[\"w\"] = 119] = \"w\";\n    CharacterCodes[CharacterCodes[\"x\"] = 120] = \"x\";\n    CharacterCodes[CharacterCodes[\"y\"] = 121] = \"y\";\n    CharacterCodes[CharacterCodes[\"z\"] = 122] = \"z\";\n    CharacterCodes[CharacterCodes[\"A\"] = 65] = \"A\";\n    CharacterCodes[CharacterCodes[\"B\"] = 66] = \"B\";\n    CharacterCodes[CharacterCodes[\"C\"] = 67] = \"C\";\n    CharacterCodes[CharacterCodes[\"D\"] = 68] = \"D\";\n    CharacterCodes[CharacterCodes[\"E\"] = 69] = \"E\";\n    CharacterCodes[CharacterCodes[\"F\"] = 70] = \"F\";\n    CharacterCodes[CharacterCodes[\"G\"] = 71] = \"G\";\n    CharacterCodes[CharacterCodes[\"H\"] = 72] = \"H\";\n    CharacterCodes[CharacterCodes[\"I\"] = 73] = \"I\";\n    CharacterCodes[CharacterCodes[\"J\"] = 74] = \"J\";\n    CharacterCodes[CharacterCodes[\"K\"] = 75] = \"K\";\n    CharacterCodes[CharacterCodes[\"L\"] = 76] = \"L\";\n    CharacterCodes[CharacterCodes[\"M\"] = 77] = \"M\";\n    CharacterCodes[CharacterCodes[\"N\"] = 78] = \"N\";\n    CharacterCodes[CharacterCodes[\"O\"] = 79] = \"O\";\n    CharacterCodes[CharacterCodes[\"P\"] = 80] = \"P\";\n    CharacterCodes[CharacterCodes[\"Q\"] = 81] = \"Q\";\n    CharacterCodes[CharacterCodes[\"R\"] = 82] = \"R\";\n    CharacterCodes[CharacterCodes[\"S\"] = 83] = \"S\";\n    CharacterCodes[CharacterCodes[\"T\"] = 84] = \"T\";\n    CharacterCodes[CharacterCodes[\"U\"] = 85] = \"U\";\n    CharacterCodes[CharacterCodes[\"V\"] = 86] = \"V\";\n    CharacterCodes[CharacterCodes[\"W\"] = 87] = \"W\";\n    CharacterCodes[CharacterCodes[\"X\"] = 88] = \"X\";\n    CharacterCodes[CharacterCodes[\"Y\"] = 89] = \"Y\";\n    CharacterCodes[CharacterCodes[\"Z\"] = 90] = \"Z\";\n    CharacterCodes[CharacterCodes[\"asterisk\"] = 42] = \"asterisk\";\n    CharacterCodes[CharacterCodes[\"backslash\"] = 92] = \"backslash\";\n    CharacterCodes[CharacterCodes[\"closeBrace\"] = 125] = \"closeBrace\";\n    CharacterCodes[CharacterCodes[\"closeBracket\"] = 93] = \"closeBracket\";\n    CharacterCodes[CharacterCodes[\"colon\"] = 58] = \"colon\";\n    CharacterCodes[CharacterCodes[\"comma\"] = 44] = \"comma\";\n    CharacterCodes[CharacterCodes[\"dot\"] = 46] = \"dot\";\n    CharacterCodes[CharacterCodes[\"doubleQuote\"] = 34] = \"doubleQuote\";\n    CharacterCodes[CharacterCodes[\"minus\"] = 45] = \"minus\";\n    CharacterCodes[CharacterCodes[\"openBrace\"] = 123] = \"openBrace\";\n    CharacterCodes[CharacterCodes[\"openBracket\"] = 91] = \"openBracket\";\n    CharacterCodes[CharacterCodes[\"plus\"] = 43] = \"plus\";\n    CharacterCodes[CharacterCodes[\"slash\"] = 47] = \"slash\";\n    CharacterCodes[CharacterCodes[\"formFeed\"] = 12] = \"formFeed\";\n    CharacterCodes[CharacterCodes[\"tab\"] = 9] = \"tab\";\n})(CharacterCodes || (CharacterCodes = {}));\n", "export const cachedSpaces = new Array(20).fill(0).map((_, index) => {\n    return ' '.repeat(index);\n});\nconst maxCachedValues = 200;\nexport const cachedBreakLinesWithSpaces = {\n    ' ': {\n        '\\n': new Array(maxCachedValues).fill(0).map((_, index) => {\n            return '\\n' + ' '.repeat(index);\n        }),\n        '\\r': new Array(maxCachedValues).fill(0).map((_, index) => {\n            return '\\r' + ' '.repeat(index);\n        }),\n        '\\r\\n': new Array(maxCachedValues).fill(0).map((_, index) => {\n            return '\\r\\n' + ' '.repeat(index);\n        }),\n    },\n    '\\t': {\n        '\\n': new Array(maxCachedValues).fill(0).map((_, index) => {\n            return '\\n' + '\\t'.repeat(index);\n        }),\n        '\\r': new Array(maxCachedValues).fill(0).map((_, index) => {\n            return '\\r' + '\\t'.repeat(index);\n        }),\n        '\\r\\n': new Array(maxCachedValues).fill(0).map((_, index) => {\n            return '\\r\\n' + '\\t'.repeat(index);\n        }),\n    }\n};\nexport const supportedEols = ['\\n', '\\r', '\\r\\n'];\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner';\nimport { cachedSpaces, cachedBreakLinesWithSpaces, supportedEols } from './string-intern';\nexport function format(documentText, range, options) {\n    let initialIndentLevel;\n    let formatText;\n    let formatTextStart;\n    let rangeStart;\n    let rangeEnd;\n    if (range) {\n        rangeStart = range.offset;\n        rangeEnd = rangeStart + range.length;\n        formatTextStart = rangeStart;\n        while (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n            formatTextStart--;\n        }\n        let endOffset = rangeEnd;\n        while (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n            endOffset++;\n        }\n        formatText = documentText.substring(formatTextStart, endOffset);\n        initialIndentLevel = computeIndentLevel(formatText, options);\n    }\n    else {\n        formatText = documentText;\n        initialIndentLevel = 0;\n        formatTextStart = 0;\n        rangeStart = 0;\n        rangeEnd = documentText.length;\n    }\n    const eol = getEOL(options, documentText);\n    const eolFastPathSupported = supportedEols.includes(eol);\n    let numberLineBreaks = 0;\n    let indentLevel = 0;\n    let indentValue;\n    if (options.insertSpaces) {\n        indentValue = cachedSpaces[options.tabSize || 4] ?? repeat(cachedSpaces[1], options.tabSize || 4);\n    }\n    else {\n        indentValue = '\\t';\n    }\n    const indentType = indentValue === '\\t' ? '\\t' : ' ';\n    let scanner = createScanner(formatText, false);\n    let hasError = false;\n    function newLinesAndIndent() {\n        if (numberLineBreaks > 1) {\n            return repeat(eol, numberLineBreaks) + repeat(indentValue, initialIndentLevel + indentLevel);\n        }\n        const amountOfSpaces = indentValue.length * (initialIndentLevel + indentLevel);\n        if (!eolFastPathSupported || amountOfSpaces > cachedBreakLinesWithSpaces[indentType][eol].length) {\n            return eol + repeat(indentValue, initialIndentLevel + indentLevel);\n        }\n        if (amountOfSpaces <= 0) {\n            return eol;\n        }\n        return cachedBreakLinesWithSpaces[indentType][eol][amountOfSpaces];\n    }\n    function scanNext() {\n        let token = scanner.scan();\n        numberLineBreaks = 0;\n        while (token === 15 /* SyntaxKind.Trivia */ || token === 14 /* SyntaxKind.LineBreakTrivia */) {\n            if (token === 14 /* SyntaxKind.LineBreakTrivia */ && options.keepLines) {\n                numberLineBreaks += 1;\n            }\n            else if (token === 14 /* SyntaxKind.LineBreakTrivia */) {\n                numberLineBreaks = 1;\n            }\n            token = scanner.scan();\n        }\n        hasError = token === 16 /* SyntaxKind.Unknown */ || scanner.getTokenError() !== 0 /* ScanError.None */;\n        return token;\n    }\n    const editOperations = [];\n    function addEdit(text, startOffset, endOffset) {\n        if (!hasError && (!range || (startOffset < rangeEnd && endOffset > rangeStart)) && documentText.substring(startOffset, endOffset) !== text) {\n            editOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n        }\n    }\n    let firstToken = scanNext();\n    if (options.keepLines && numberLineBreaks > 0) {\n        addEdit(repeat(eol, numberLineBreaks), 0, 0);\n    }\n    if (firstToken !== 17 /* SyntaxKind.EOF */) {\n        let firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n        let initialIndent = (indentValue.length * initialIndentLevel < 20) && options.insertSpaces\n            ? cachedSpaces[indentValue.length * initialIndentLevel]\n            : repeat(indentValue, initialIndentLevel);\n        addEdit(initialIndent, formatTextStart, firstTokenStart);\n    }\n    while (firstToken !== 17 /* SyntaxKind.EOF */) {\n        let firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n        let secondToken = scanNext();\n        let replaceContent = '';\n        let needsLineBreak = false;\n        while (numberLineBreaks === 0 && (secondToken === 12 /* SyntaxKind.LineCommentTrivia */ || secondToken === 13 /* SyntaxKind.BlockCommentTrivia */)) {\n            let commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n            addEdit(cachedSpaces[1], firstTokenEnd, commentTokenStart);\n            firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n            needsLineBreak = secondToken === 12 /* SyntaxKind.LineCommentTrivia */;\n            replaceContent = needsLineBreak ? newLinesAndIndent() : '';\n            secondToken = scanNext();\n        }\n        if (secondToken === 2 /* SyntaxKind.CloseBraceToken */) {\n            if (firstToken !== 1 /* SyntaxKind.OpenBraceToken */) {\n                indentLevel--;\n            }\n            ;\n            if (options.keepLines && numberLineBreaks > 0 || !options.keepLines && firstToken !== 1 /* SyntaxKind.OpenBraceToken */) {\n                replaceContent = newLinesAndIndent();\n            }\n            else if (options.keepLines) {\n                replaceContent = cachedSpaces[1];\n            }\n        }\n        else if (secondToken === 4 /* SyntaxKind.CloseBracketToken */) {\n            if (firstToken !== 3 /* SyntaxKind.OpenBracketToken */) {\n                indentLevel--;\n            }\n            ;\n            if (options.keepLines && numberLineBreaks > 0 || !options.keepLines && firstToken !== 3 /* SyntaxKind.OpenBracketToken */) {\n                replaceContent = newLinesAndIndent();\n            }\n            else if (options.keepLines) {\n                replaceContent = cachedSpaces[1];\n            }\n        }\n        else {\n            switch (firstToken) {\n                case 3 /* SyntaxKind.OpenBracketToken */:\n                case 1 /* SyntaxKind.OpenBraceToken */:\n                    indentLevel++;\n                    if (options.keepLines && numberLineBreaks > 0 || !options.keepLines) {\n                        replaceContent = newLinesAndIndent();\n                    }\n                    else {\n                        replaceContent = cachedSpaces[1];\n                    }\n                    break;\n                case 5 /* SyntaxKind.CommaToken */:\n                    if (options.keepLines && numberLineBreaks > 0 || !options.keepLines) {\n                        replaceContent = newLinesAndIndent();\n                    }\n                    else {\n                        replaceContent = cachedSpaces[1];\n                    }\n                    break;\n                case 12 /* SyntaxKind.LineCommentTrivia */:\n                    replaceContent = newLinesAndIndent();\n                    break;\n                case 13 /* SyntaxKind.BlockCommentTrivia */:\n                    if (numberLineBreaks > 0) {\n                        replaceContent = newLinesAndIndent();\n                    }\n                    else if (!needsLineBreak) {\n                        replaceContent = cachedSpaces[1];\n                    }\n                    break;\n                case 6 /* SyntaxKind.ColonToken */:\n                    if (options.keepLines && numberLineBreaks > 0) {\n                        replaceContent = newLinesAndIndent();\n                    }\n                    else if (!needsLineBreak) {\n                        replaceContent = cachedSpaces[1];\n                    }\n                    break;\n                case 10 /* SyntaxKind.StringLiteral */:\n                    if (options.keepLines && numberLineBreaks > 0) {\n                        replaceContent = newLinesAndIndent();\n                    }\n                    else if (secondToken === 6 /* SyntaxKind.ColonToken */ && !needsLineBreak) {\n                        replaceContent = '';\n                    }\n                    break;\n                case 7 /* SyntaxKind.NullKeyword */:\n                case 8 /* SyntaxKind.TrueKeyword */:\n                case 9 /* SyntaxKind.FalseKeyword */:\n                case 11 /* SyntaxKind.NumericLiteral */:\n                case 2 /* SyntaxKind.CloseBraceToken */:\n                case 4 /* SyntaxKind.CloseBracketToken */:\n                    if (options.keepLines && numberLineBreaks > 0) {\n                        replaceContent = newLinesAndIndent();\n                    }\n                    else {\n                        if ((secondToken === 12 /* SyntaxKind.LineCommentTrivia */ || secondToken === 13 /* SyntaxKind.BlockCommentTrivia */) && !needsLineBreak) {\n                            replaceContent = cachedSpaces[1];\n                        }\n                        else if (secondToken !== 5 /* SyntaxKind.CommaToken */ && secondToken !== 17 /* SyntaxKind.EOF */) {\n                            hasError = true;\n                        }\n                    }\n                    break;\n                case 16 /* SyntaxKind.Unknown */:\n                    hasError = true;\n                    break;\n            }\n            if (numberLineBreaks > 0 && (secondToken === 12 /* SyntaxKind.LineCommentTrivia */ || secondToken === 13 /* SyntaxKind.BlockCommentTrivia */)) {\n                replaceContent = newLinesAndIndent();\n            }\n        }\n        if (secondToken === 17 /* SyntaxKind.EOF */) {\n            if (options.keepLines && numberLineBreaks > 0) {\n                replaceContent = newLinesAndIndent();\n            }\n            else {\n                replaceContent = options.insertFinalNewline ? eol : '';\n            }\n        }\n        const secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n        addEdit(replaceContent, firstTokenEnd, secondTokenStart);\n        firstToken = secondToken;\n    }\n    return editOperations;\n}\nfunction repeat(s, count) {\n    let result = '';\n    for (let i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\nfunction computeIndentLevel(content, options) {\n    let i = 0;\n    let nChars = 0;\n    const tabSize = options.tabSize || 4;\n    while (i < content.length) {\n        let ch = content.charAt(i);\n        if (ch === cachedSpaces[1]) {\n            nChars++;\n        }\n        else if (ch === '\\t') {\n            nChars += tabSize;\n        }\n        else {\n            break;\n        }\n        i++;\n    }\n    return Math.floor(nChars / tabSize);\n}\nfunction getEOL(options, text) {\n    for (let i = 0; i < text.length; i++) {\n        const ch = text.charAt(i);\n        if (ch === '\\r') {\n            if (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                return '\\r\\n';\n            }\n            return '\\r';\n        }\n        else if (ch === '\\n') {\n            return '\\n';\n        }\n    }\n    return (options && options.eol) || '\\n';\n}\nexport function isEOL(text, offset) {\n    return '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner';\nvar ParseOptions;\n(function (ParseOptions) {\n    ParseOptions.DEFAULT = {\n        allowTrailingComma: false\n    };\n})(ParseOptions || (ParseOptions = {}));\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text, position) {\n    const segments = []; // strings or numbers\n    const earlyReturnException = new Object();\n    let previousNode = undefined;\n    const previousNodeInst = {\n        value: {},\n        offset: 0,\n        length: 0,\n        type: 'object',\n        parent: undefined\n    };\n    let isAtPropertyKey = false;\n    function setPreviousNode(value, offset, length, type) {\n        previousNodeInst.value = value;\n        previousNodeInst.offset = offset;\n        previousNodeInst.length = length;\n        previousNodeInst.type = type;\n        previousNodeInst.colonOffset = undefined;\n        previousNode = previousNodeInst;\n    }\n    try {\n        visit(text, {\n            onObjectBegin: (offset, length) => {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                isAtPropertyKey = position > offset;\n                segments.push(''); // push a placeholder (will be replaced)\n            },\n            onObjectProperty: (name, offset, length) => {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(name, offset, length, 'property');\n                segments[segments.length - 1] = name;\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onObjectEnd: (offset, length) => {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.pop();\n            },\n            onArrayBegin: (offset, length) => {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.push(0);\n            },\n            onArrayEnd: (offset, length) => {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.pop();\n            },\n            onLiteralValue: (value, offset, length) => {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(value, offset, length, getNodeType(value));\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onSeparator: (sep, offset, length) => {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                if (sep === ':' && previousNode && previousNode.type === 'property') {\n                    previousNode.colonOffset = offset;\n                    isAtPropertyKey = false;\n                    previousNode = undefined;\n                }\n                else if (sep === ',') {\n                    const last = segments[segments.length - 1];\n                    if (typeof last === 'number') {\n                        segments[segments.length - 1] = last + 1;\n                    }\n                    else {\n                        isAtPropertyKey = true;\n                        segments[segments.length - 1] = '';\n                    }\n                    previousNode = undefined;\n                }\n            }\n        });\n    }\n    catch (e) {\n        if (e !== earlyReturnException) {\n            throw e;\n        }\n    }\n    return {\n        path: segments,\n        previousNode,\n        isAtPropertyKey,\n        matches: (pattern) => {\n            let k = 0;\n            for (let i = 0; k < pattern.length && i < segments.length; i++) {\n                if (pattern[k] === segments[i] || pattern[k] === '*') {\n                    k++;\n                }\n                else if (pattern[k] !== '**') {\n                    return false;\n                }\n            }\n            return k === pattern.length;\n        }\n    };\n}\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text, errors = [], options = ParseOptions.DEFAULT) {\n    let currentProperty = null;\n    let currentParent = [];\n    const previousParents = [];\n    function onValue(value) {\n        if (Array.isArray(currentParent)) {\n            currentParent.push(value);\n        }\n        else if (currentProperty !== null) {\n            currentParent[currentProperty] = value;\n        }\n    }\n    const visitor = {\n        onObjectBegin: () => {\n            const object = {};\n            onValue(object);\n            previousParents.push(currentParent);\n            currentParent = object;\n            currentProperty = null;\n        },\n        onObjectProperty: (name) => {\n            currentProperty = name;\n        },\n        onObjectEnd: () => {\n            currentParent = previousParents.pop();\n        },\n        onArrayBegin: () => {\n            const array = [];\n            onValue(array);\n            previousParents.push(currentParent);\n            currentParent = array;\n            currentProperty = null;\n        },\n        onArrayEnd: () => {\n            currentParent = previousParents.pop();\n        },\n        onLiteralValue: onValue,\n        onError: (error, offset, length) => {\n            errors.push({ error, offset, length });\n        }\n    };\n    visit(text, visitor, options);\n    return currentParent[0];\n}\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text, errors = [], options = ParseOptions.DEFAULT) {\n    let currentParent = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n    function ensurePropertyComplete(endOffset) {\n        if (currentParent.type === 'property') {\n            currentParent.length = endOffset - currentParent.offset;\n            currentParent = currentParent.parent;\n        }\n    }\n    function onValue(valueNode) {\n        currentParent.children.push(valueNode);\n        return valueNode;\n    }\n    const visitor = {\n        onObjectBegin: (offset) => {\n            currentParent = onValue({ type: 'object', offset, length: -1, parent: currentParent, children: [] });\n        },\n        onObjectProperty: (name, offset, length) => {\n            currentParent = onValue({ type: 'property', offset, length: -1, parent: currentParent, children: [] });\n            currentParent.children.push({ type: 'string', value: name, offset, length, parent: currentParent });\n        },\n        onObjectEnd: (offset, length) => {\n            ensurePropertyComplete(offset + length); // in case of a missing value for a property: make sure property is complete\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onArrayBegin: (offset, length) => {\n            currentParent = onValue({ type: 'array', offset, length: -1, parent: currentParent, children: [] });\n        },\n        onArrayEnd: (offset, length) => {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onLiteralValue: (value, offset, length) => {\n            onValue({ type: getNodeType(value), offset, length, parent: currentParent, value });\n            ensurePropertyComplete(offset + length);\n        },\n        onSeparator: (sep, offset, length) => {\n            if (currentParent.type === 'property') {\n                if (sep === ':') {\n                    currentParent.colonOffset = offset;\n                }\n                else if (sep === ',') {\n                    ensurePropertyComplete(offset);\n                }\n            }\n        },\n        onError: (error, offset, length) => {\n            errors.push({ error, offset, length });\n        }\n    };\n    visit(text, visitor, options);\n    const result = currentParent.children[0];\n    if (result) {\n        delete result.parent;\n    }\n    return result;\n}\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root, path) {\n    if (!root) {\n        return undefined;\n    }\n    let node = root;\n    for (let segment of path) {\n        if (typeof segment === 'string') {\n            if (node.type !== 'object' || !Array.isArray(node.children)) {\n                return undefined;\n            }\n            let found = false;\n            for (const propertyNode of node.children) {\n                if (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment && propertyNode.children.length === 2) {\n                    node = propertyNode.children[1];\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                return undefined;\n            }\n        }\n        else {\n            const index = segment;\n            if (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n                return undefined;\n            }\n            node = node.children[index];\n        }\n    }\n    return node;\n}\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node) {\n    if (!node.parent || !node.parent.children) {\n        return [];\n    }\n    const path = getNodePath(node.parent);\n    if (node.parent.type === 'property') {\n        const key = node.parent.children[0].value;\n        path.push(key);\n    }\n    else if (node.parent.type === 'array') {\n        const index = node.parent.children.indexOf(node);\n        if (index !== -1) {\n            path.push(index);\n        }\n    }\n    return path;\n}\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node) {\n    switch (node.type) {\n        case 'array':\n            return node.children.map(getNodeValue);\n        case 'object':\n            const obj = Object.create(null);\n            for (let prop of node.children) {\n                const valueNode = prop.children[1];\n                if (valueNode) {\n                    obj[prop.children[0].value] = getNodeValue(valueNode);\n                }\n            }\n            return obj;\n        case 'null':\n        case 'string':\n        case 'number':\n        case 'boolean':\n            return node.value;\n        default:\n            return undefined;\n    }\n}\nexport function contains(node, offset, includeRightBound = false) {\n    return (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node, offset, includeRightBound = false) {\n    if (contains(node, offset, includeRightBound)) {\n        const children = node.children;\n        if (Array.isArray(children)) {\n            for (let i = 0; i < children.length && children[i].offset <= offset; i++) {\n                const item = findNodeAtOffset(children[i], offset, includeRightBound);\n                if (item) {\n                    return item;\n                }\n            }\n        }\n        return node;\n    }\n    return undefined;\n}\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text, visitor, options = ParseOptions.DEFAULT) {\n    const _scanner = createScanner(text, false);\n    // Important: Only pass copies of this to visitor functions to prevent accidental modification, and\n    // to not affect visitor functions which stored a reference to a previous JSONPath\n    const _jsonPath = [];\n    function toNoArgVisit(visitFunction) {\n        return visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()) : () => true;\n    }\n    function toNoArgVisitWithPath(visitFunction) {\n        return visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter(), () => _jsonPath.slice()) : () => true;\n    }\n    function toOneArgVisit(visitFunction) {\n        return visitFunction ? (arg) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()) : () => true;\n    }\n    function toOneArgVisitWithPath(visitFunction) {\n        return visitFunction ? (arg) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter(), () => _jsonPath.slice()) : () => true;\n    }\n    const onObjectBegin = toNoArgVisitWithPath(visitor.onObjectBegin), onObjectProperty = toOneArgVisitWithPath(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisitWithPath(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisitWithPath(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\n    const disallowComments = options && options.disallowComments;\n    const allowTrailingComma = options && options.allowTrailingComma;\n    function scanNext() {\n        while (true) {\n            const token = _scanner.scan();\n            switch (_scanner.getTokenError()) {\n                case 4 /* ScanError.InvalidUnicode */:\n                    handleError(14 /* ParseErrorCode.InvalidUnicode */);\n                    break;\n                case 5 /* ScanError.InvalidEscapeCharacter */:\n                    handleError(15 /* ParseErrorCode.InvalidEscapeCharacter */);\n                    break;\n                case 3 /* ScanError.UnexpectedEndOfNumber */:\n                    handleError(13 /* ParseErrorCode.UnexpectedEndOfNumber */);\n                    break;\n                case 1 /* ScanError.UnexpectedEndOfComment */:\n                    if (!disallowComments) {\n                        handleError(11 /* ParseErrorCode.UnexpectedEndOfComment */);\n                    }\n                    break;\n                case 2 /* ScanError.UnexpectedEndOfString */:\n                    handleError(12 /* ParseErrorCode.UnexpectedEndOfString */);\n                    break;\n                case 6 /* ScanError.InvalidCharacter */:\n                    handleError(16 /* ParseErrorCode.InvalidCharacter */);\n                    break;\n            }\n            switch (token) {\n                case 12 /* SyntaxKind.LineCommentTrivia */:\n                case 13 /* SyntaxKind.BlockCommentTrivia */:\n                    if (disallowComments) {\n                        handleError(10 /* ParseErrorCode.InvalidCommentToken */);\n                    }\n                    else {\n                        onComment();\n                    }\n                    break;\n                case 16 /* SyntaxKind.Unknown */:\n                    handleError(1 /* ParseErrorCode.InvalidSymbol */);\n                    break;\n                case 15 /* SyntaxKind.Trivia */:\n                case 14 /* SyntaxKind.LineBreakTrivia */:\n                    break;\n                default:\n                    return token;\n            }\n        }\n    }\n    function handleError(error, skipUntilAfter = [], skipUntil = []) {\n        onError(error);\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            let token = _scanner.getToken();\n            while (token !== 17 /* SyntaxKind.EOF */) {\n                if (skipUntilAfter.indexOf(token) !== -1) {\n                    scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token) !== -1) {\n                    break;\n                }\n                token = scanNext();\n            }\n        }\n    }\n    function parseString(isValue) {\n        const value = _scanner.getTokenValue();\n        if (isValue) {\n            onLiteralValue(value);\n        }\n        else {\n            onObjectProperty(value);\n            // add property name afterwards\n            _jsonPath.push(value);\n        }\n        scanNext();\n        return true;\n    }\n    function parseLiteral() {\n        switch (_scanner.getToken()) {\n            case 11 /* SyntaxKind.NumericLiteral */:\n                const tokenValue = _scanner.getTokenValue();\n                let value = Number(tokenValue);\n                if (isNaN(value)) {\n                    handleError(2 /* ParseErrorCode.InvalidNumberFormat */);\n                    value = 0;\n                }\n                onLiteralValue(value);\n                break;\n            case 7 /* SyntaxKind.NullKeyword */:\n                onLiteralValue(null);\n                break;\n            case 8 /* SyntaxKind.TrueKeyword */:\n                onLiteralValue(true);\n                break;\n            case 9 /* SyntaxKind.FalseKeyword */:\n                onLiteralValue(false);\n                break;\n            default:\n                return false;\n        }\n        scanNext();\n        return true;\n    }\n    function parseProperty() {\n        if (_scanner.getToken() !== 10 /* SyntaxKind.StringLiteral */) {\n            handleError(3 /* ParseErrorCode.PropertyNameExpected */, [], [2 /* SyntaxKind.CloseBraceToken */, 5 /* SyntaxKind.CommaToken */]);\n            return false;\n        }\n        parseString(false);\n        if (_scanner.getToken() === 6 /* SyntaxKind.ColonToken */) {\n            onSeparator(':');\n            scanNext(); // consume colon\n            if (!parseValue()) {\n                handleError(4 /* ParseErrorCode.ValueExpected */, [], [2 /* SyntaxKind.CloseBraceToken */, 5 /* SyntaxKind.CommaToken */]);\n            }\n        }\n        else {\n            handleError(5 /* ParseErrorCode.ColonExpected */, [], [2 /* SyntaxKind.CloseBraceToken */, 5 /* SyntaxKind.CommaToken */]);\n        }\n        _jsonPath.pop(); // remove processed property name\n        return true;\n    }\n    function parseObject() {\n        onObjectBegin();\n        scanNext(); // consume open brace\n        let needsComma = false;\n        while (_scanner.getToken() !== 2 /* SyntaxKind.CloseBraceToken */ && _scanner.getToken() !== 17 /* SyntaxKind.EOF */) {\n            if (_scanner.getToken() === 5 /* SyntaxKind.CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ParseErrorCode.ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 2 /* SyntaxKind.CloseBraceToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* ParseErrorCode.CommaExpected */, [], []);\n            }\n            if (!parseProperty()) {\n                handleError(4 /* ParseErrorCode.ValueExpected */, [], [2 /* SyntaxKind.CloseBraceToken */, 5 /* SyntaxKind.CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onObjectEnd();\n        if (_scanner.getToken() !== 2 /* SyntaxKind.CloseBraceToken */) {\n            handleError(7 /* ParseErrorCode.CloseBraceExpected */, [2 /* SyntaxKind.CloseBraceToken */], []);\n        }\n        else {\n            scanNext(); // consume close brace\n        }\n        return true;\n    }\n    function parseArray() {\n        onArrayBegin();\n        scanNext(); // consume open bracket\n        let isFirstElement = true;\n        let needsComma = false;\n        while (_scanner.getToken() !== 4 /* SyntaxKind.CloseBracketToken */ && _scanner.getToken() !== 17 /* SyntaxKind.EOF */) {\n            if (_scanner.getToken() === 5 /* SyntaxKind.CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ParseErrorCode.ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 4 /* SyntaxKind.CloseBracketToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* ParseErrorCode.CommaExpected */, [], []);\n            }\n            if (isFirstElement) {\n                _jsonPath.push(0);\n                isFirstElement = false;\n            }\n            else {\n                _jsonPath[_jsonPath.length - 1]++;\n            }\n            if (!parseValue()) {\n                handleError(4 /* ParseErrorCode.ValueExpected */, [], [4 /* SyntaxKind.CloseBracketToken */, 5 /* SyntaxKind.CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onArrayEnd();\n        if (!isFirstElement) {\n            _jsonPath.pop(); // remove array index\n        }\n        if (_scanner.getToken() !== 4 /* SyntaxKind.CloseBracketToken */) {\n            handleError(8 /* ParseErrorCode.CloseBracketExpected */, [4 /* SyntaxKind.CloseBracketToken */], []);\n        }\n        else {\n            scanNext(); // consume close bracket\n        }\n        return true;\n    }\n    function parseValue() {\n        switch (_scanner.getToken()) {\n            case 3 /* SyntaxKind.OpenBracketToken */:\n                return parseArray();\n            case 1 /* SyntaxKind.OpenBraceToken */:\n                return parseObject();\n            case 10 /* SyntaxKind.StringLiteral */:\n                return parseString(true);\n            default:\n                return parseLiteral();\n        }\n    }\n    scanNext();\n    if (_scanner.getToken() === 17 /* SyntaxKind.EOF */) {\n        if (options.allowEmptyContent) {\n            return true;\n        }\n        handleError(4 /* ParseErrorCode.ValueExpected */, [], []);\n        return false;\n    }\n    if (!parseValue()) {\n        handleError(4 /* ParseErrorCode.ValueExpected */, [], []);\n        return false;\n    }\n    if (_scanner.getToken() !== 17 /* SyntaxKind.EOF */) {\n        handleError(9 /* ParseErrorCode.EndOfFileExpected */, [], []);\n    }\n    return true;\n}\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text, replaceCh) {\n    let _scanner = createScanner(text), parts = [], kind, offset = 0, pos;\n    do {\n        pos = _scanner.getPosition();\n        kind = _scanner.scan();\n        switch (kind) {\n            case 12 /* SyntaxKind.LineCommentTrivia */:\n            case 13 /* SyntaxKind.BlockCommentTrivia */:\n            case 17 /* SyntaxKind.EOF */:\n                if (offset !== pos) {\n                    parts.push(text.substring(offset, pos));\n                }\n                if (replaceCh !== undefined) {\n                    parts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n                }\n                offset = _scanner.getPosition();\n                break;\n        }\n    } while (kind !== 17 /* SyntaxKind.EOF */);\n    return parts.join('');\n}\nexport function getNodeType(value) {\n    switch (typeof value) {\n        case 'boolean': return 'boolean';\n        case 'number': return 'number';\n        case 'string': return 'string';\n        case 'object': {\n            if (!value) {\n                return 'null';\n            }\n            else if (Array.isArray(value)) {\n                return 'array';\n            }\n            return 'object';\n        }\n        default: return 'null';\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { format, isEOL } from './format';\nimport { parseTree, findNodeAtLocation } from './parser';\nexport function removeProperty(text, path, options) {\n    return setProperty(text, path, void 0, options);\n}\nexport function setProperty(text, originalPath, value, options) {\n    const path = originalPath.slice();\n    const errors = [];\n    const root = parseTree(text, errors);\n    let parent = void 0;\n    let lastSegment = void 0;\n    while (path.length > 0) {\n        lastSegment = path.pop();\n        parent = findNodeAtLocation(root, path);\n        if (parent === void 0 && value !== void 0) {\n            if (typeof lastSegment === 'string') {\n                value = { [lastSegment]: value };\n            }\n            else {\n                value = [value];\n            }\n        }\n        else {\n            break;\n        }\n    }\n    if (!parent) {\n        // empty document\n        if (value === void 0) { // delete\n            throw new Error('Can not delete in empty document');\n        }\n        return withFormatting(text, { offset: root ? root.offset : 0, length: root ? root.length : 0, content: JSON.stringify(value) }, options);\n    }\n    else if (parent.type === 'object' && typeof lastSegment === 'string' && Array.isArray(parent.children)) {\n        const existing = findNodeAtLocation(parent, [lastSegment]);\n        if (existing !== void 0) {\n            if (value === void 0) { // delete\n                if (!existing.parent) {\n                    throw new Error('Malformed AST');\n                }\n                const propertyIndex = parent.children.indexOf(existing.parent);\n                let removeBegin;\n                let removeEnd = existing.parent.offset + existing.parent.length;\n                if (propertyIndex > 0) {\n                    // remove the comma of the previous node\n                    let previous = parent.children[propertyIndex - 1];\n                    removeBegin = previous.offset + previous.length;\n                }\n                else {\n                    removeBegin = parent.offset + 1;\n                    if (parent.children.length > 1) {\n                        // remove the comma of the next node\n                        let next = parent.children[1];\n                        removeEnd = next.offset;\n                    }\n                }\n                return withFormatting(text, { offset: removeBegin, length: removeEnd - removeBegin, content: '' }, options);\n            }\n            else {\n                // set value of existing property\n                return withFormatting(text, { offset: existing.offset, length: existing.length, content: JSON.stringify(value) }, options);\n            }\n        }\n        else {\n            if (value === void 0) { // delete\n                return []; // property does not exist, nothing to do\n            }\n            const newProperty = `${JSON.stringify(lastSegment)}: ${JSON.stringify(value)}`;\n            const index = options.getInsertionIndex ? options.getInsertionIndex(parent.children.map(p => p.children[0].value)) : parent.children.length;\n            let edit;\n            if (index > 0) {\n                let previous = parent.children[index - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            else if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty + ',' };\n            }\n            return withFormatting(text, edit, options);\n        }\n    }\n    else if (parent.type === 'array' && typeof lastSegment === 'number' && Array.isArray(parent.children)) {\n        const insertIndex = lastSegment;\n        if (insertIndex === -1) {\n            // Insert\n            const newProperty = `${JSON.stringify(value)}`;\n            let edit;\n            if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                const previous = parent.children[parent.children.length - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            return withFormatting(text, edit, options);\n        }\n        else if (value === void 0 && parent.children.length >= 0) {\n            // Removal\n            const removalIndex = lastSegment;\n            const toRemove = parent.children[removalIndex];\n            let edit;\n            if (parent.children.length === 1) {\n                // only item\n                edit = { offset: parent.offset + 1, length: parent.length - 2, content: '' };\n            }\n            else if (parent.children.length - 1 === removalIndex) {\n                // last item\n                let previous = parent.children[removalIndex - 1];\n                let offset = previous.offset + previous.length;\n                let parentEndOffset = parent.offset + parent.length;\n                edit = { offset, length: parentEndOffset - 2 - offset, content: '' };\n            }\n            else {\n                edit = { offset: toRemove.offset, length: parent.children[removalIndex + 1].offset - toRemove.offset, content: '' };\n            }\n            return withFormatting(text, edit, options);\n        }\n        else if (value !== void 0) {\n            let edit;\n            const newProperty = `${JSON.stringify(value)}`;\n            if (!options.isArrayInsertion && parent.children.length > lastSegment) {\n                const toModify = parent.children[lastSegment];\n                edit = { offset: toModify.offset, length: toModify.length, content: newProperty };\n            }\n            else if (parent.children.length === 0 || lastSegment === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: parent.children.length === 0 ? newProperty : newProperty + ',' };\n            }\n            else {\n                const index = lastSegment > parent.children.length ? parent.children.length : lastSegment;\n                const previous = parent.children[index - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            return withFormatting(text, edit, options);\n        }\n        else {\n            throw new Error(`Can not ${value === void 0 ? 'remove' : (options.isArrayInsertion ? 'insert' : 'modify')} Array index ${insertIndex} as length is not sufficient`);\n        }\n    }\n    else {\n        throw new Error(`Can not add ${typeof lastSegment !== 'number' ? 'index' : 'property'} to parent of type ${parent.type}`);\n    }\n}\nfunction withFormatting(text, edit, options) {\n    if (!options.formattingOptions) {\n        return [edit];\n    }\n    // apply the edit\n    let newText = applyEdit(text, edit);\n    // format the new text\n    let begin = edit.offset;\n    let end = edit.offset + edit.content.length;\n    if (edit.length === 0 || edit.content.length === 0) { // insert or remove\n        while (begin > 0 && !isEOL(newText, begin - 1)) {\n            begin--;\n        }\n        while (end < newText.length && !isEOL(newText, end)) {\n            end++;\n        }\n    }\n    const edits = format(newText, { offset: begin, length: end - begin }, { ...options.formattingOptions, keepLines: false });\n    // apply the formatting edits and track the begin and end offsets of the changes\n    for (let i = edits.length - 1; i >= 0; i--) {\n        const edit = edits[i];\n        newText = applyEdit(newText, edit);\n        begin = Math.min(begin, edit.offset);\n        end = Math.max(end, edit.offset + edit.length);\n        end += edit.content.length - edit.length;\n    }\n    // create a single edit with all changes\n    const editLength = text.length - (newText.length - end) - begin;\n    return [{ offset: begin, length: editLength, content: newText.substring(begin, end) }];\n}\nexport function applyEdit(text, edit) {\n    return text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\nexport function isWS(text, offset) {\n    return '\\r\\n \\t'.indexOf(text.charAt(offset)) !== -1;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as formatter from './impl/format';\nimport * as edit from './impl/edit';\nimport * as scanner from './impl/scanner';\nimport * as parser from './impl/parser';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport const createScanner = scanner.createScanner;\nexport var ScanError;\n(function (ScanError) {\n    ScanError[ScanError[\"None\"] = 0] = \"None\";\n    ScanError[ScanError[\"UnexpectedEndOfComment\"] = 1] = \"UnexpectedEndOfComment\";\n    ScanError[ScanError[\"UnexpectedEndOfString\"] = 2] = \"UnexpectedEndOfString\";\n    ScanError[ScanError[\"UnexpectedEndOfNumber\"] = 3] = \"UnexpectedEndOfNumber\";\n    ScanError[ScanError[\"InvalidUnicode\"] = 4] = \"InvalidUnicode\";\n    ScanError[ScanError[\"InvalidEscapeCharacter\"] = 5] = \"InvalidEscapeCharacter\";\n    ScanError[ScanError[\"InvalidCharacter\"] = 6] = \"InvalidCharacter\";\n})(ScanError || (ScanError = {}));\nexport var SyntaxKind;\n(function (SyntaxKind) {\n    SyntaxKind[SyntaxKind[\"OpenBraceToken\"] = 1] = \"OpenBraceToken\";\n    SyntaxKind[SyntaxKind[\"CloseBraceToken\"] = 2] = \"CloseBraceToken\";\n    SyntaxKind[SyntaxKind[\"OpenBracketToken\"] = 3] = \"OpenBracketToken\";\n    SyntaxKind[SyntaxKind[\"CloseBracketToken\"] = 4] = \"CloseBracketToken\";\n    SyntaxKind[SyntaxKind[\"CommaToken\"] = 5] = \"CommaToken\";\n    SyntaxKind[SyntaxKind[\"ColonToken\"] = 6] = \"ColonToken\";\n    SyntaxKind[SyntaxKind[\"NullKeyword\"] = 7] = \"NullKeyword\";\n    SyntaxKind[SyntaxKind[\"TrueKeyword\"] = 8] = \"TrueKeyword\";\n    SyntaxKind[SyntaxKind[\"FalseKeyword\"] = 9] = \"FalseKeyword\";\n    SyntaxKind[SyntaxKind[\"StringLiteral\"] = 10] = \"StringLiteral\";\n    SyntaxKind[SyntaxKind[\"NumericLiteral\"] = 11] = \"NumericLiteral\";\n    SyntaxKind[SyntaxKind[\"LineCommentTrivia\"] = 12] = \"LineCommentTrivia\";\n    SyntaxKind[SyntaxKind[\"BlockCommentTrivia\"] = 13] = \"BlockCommentTrivia\";\n    SyntaxKind[SyntaxKind[\"LineBreakTrivia\"] = 14] = \"LineBreakTrivia\";\n    SyntaxKind[SyntaxKind[\"Trivia\"] = 15] = \"Trivia\";\n    SyntaxKind[SyntaxKind[\"Unknown\"] = 16] = \"Unknown\";\n    SyntaxKind[SyntaxKind[\"EOF\"] = 17] = \"EOF\";\n})(SyntaxKind || (SyntaxKind = {}));\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport const getLocation = parser.getLocation;\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore, always check the errors list to find out if the input was valid.\n */\nexport const parse = parser.parse;\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport const parseTree = parser.parseTree;\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport const findNodeAtLocation = parser.findNodeAtLocation;\n/**\n * Finds the innermost node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport const findNodeAtOffset = parser.findNodeAtOffset;\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport const getNodePath = parser.getNodePath;\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport const getNodeValue = parser.getNodeValue;\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport const visit = parser.visit;\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport const stripComments = parser.stripComments;\nexport var ParseErrorCode;\n(function (ParseErrorCode) {\n    ParseErrorCode[ParseErrorCode[\"InvalidSymbol\"] = 1] = \"InvalidSymbol\";\n    ParseErrorCode[ParseErrorCode[\"InvalidNumberFormat\"] = 2] = \"InvalidNumberFormat\";\n    ParseErrorCode[ParseErrorCode[\"PropertyNameExpected\"] = 3] = \"PropertyNameExpected\";\n    ParseErrorCode[ParseErrorCode[\"ValueExpected\"] = 4] = \"ValueExpected\";\n    ParseErrorCode[ParseErrorCode[\"ColonExpected\"] = 5] = \"ColonExpected\";\n    ParseErrorCode[ParseErrorCode[\"CommaExpected\"] = 6] = \"CommaExpected\";\n    ParseErrorCode[ParseErrorCode[\"CloseBraceExpected\"] = 7] = \"CloseBraceExpected\";\n    ParseErrorCode[ParseErrorCode[\"CloseBracketExpected\"] = 8] = \"CloseBracketExpected\";\n    ParseErrorCode[ParseErrorCode[\"EndOfFileExpected\"] = 9] = \"EndOfFileExpected\";\n    ParseErrorCode[ParseErrorCode[\"InvalidCommentToken\"] = 10] = \"InvalidCommentToken\";\n    ParseErrorCode[ParseErrorCode[\"UnexpectedEndOfComment\"] = 11] = \"UnexpectedEndOfComment\";\n    ParseErrorCode[ParseErrorCode[\"UnexpectedEndOfString\"] = 12] = \"UnexpectedEndOfString\";\n    ParseErrorCode[ParseErrorCode[\"UnexpectedEndOfNumber\"] = 13] = \"UnexpectedEndOfNumber\";\n    ParseErrorCode[ParseErrorCode[\"InvalidUnicode\"] = 14] = \"InvalidUnicode\";\n    ParseErrorCode[ParseErrorCode[\"InvalidEscapeCharacter\"] = 15] = \"InvalidEscapeCharacter\";\n    ParseErrorCode[ParseErrorCode[\"InvalidCharacter\"] = 16] = \"InvalidCharacter\";\n})(ParseErrorCode || (ParseErrorCode = {}));\nexport function printParseErrorCode(code) {\n    switch (code) {\n        case 1 /* ParseErrorCode.InvalidSymbol */: return 'InvalidSymbol';\n        case 2 /* ParseErrorCode.InvalidNumberFormat */: return 'InvalidNumberFormat';\n        case 3 /* ParseErrorCode.PropertyNameExpected */: return 'PropertyNameExpected';\n        case 4 /* ParseErrorCode.ValueExpected */: return 'ValueExpected';\n        case 5 /* ParseErrorCode.ColonExpected */: return 'ColonExpected';\n        case 6 /* ParseErrorCode.CommaExpected */: return 'CommaExpected';\n        case 7 /* ParseErrorCode.CloseBraceExpected */: return 'CloseBraceExpected';\n        case 8 /* ParseErrorCode.CloseBracketExpected */: return 'CloseBracketExpected';\n        case 9 /* ParseErrorCode.EndOfFileExpected */: return 'EndOfFileExpected';\n        case 10 /* ParseErrorCode.InvalidCommentToken */: return 'InvalidCommentToken';\n        case 11 /* ParseErrorCode.UnexpectedEndOfComment */: return 'UnexpectedEndOfComment';\n        case 12 /* ParseErrorCode.UnexpectedEndOfString */: return 'UnexpectedEndOfString';\n        case 13 /* ParseErrorCode.UnexpectedEndOfNumber */: return 'UnexpectedEndOfNumber';\n        case 14 /* ParseErrorCode.InvalidUnicode */: return 'InvalidUnicode';\n        case 15 /* ParseErrorCode.InvalidEscapeCharacter */: return 'InvalidEscapeCharacter';\n        case 16 /* ParseErrorCode.InvalidCharacter */: return 'InvalidCharacter';\n    }\n    return '<unknown ParseErrorCode>';\n}\n/**\n * Computes the edit operations needed to format a JSON document.\n *\n * @param documentText The input text\n * @param range The range to format or `undefined` to format the full content\n * @param options The formatting options\n * @returns The edit operations describing the formatting changes to the original document following the format described in {@linkcode EditResult}.\n * To apply the edit operations to the input, use {@linkcode applyEdits}.\n */\nexport function format(documentText, range, options) {\n    return formatter.format(documentText, range, options);\n}\n/**\n * Computes the edit operations needed to modify a value in the JSON document.\n *\n * @param documentText The input text\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\n * If the path points to an non-existing property or item, it will be created.\n * @param value The new value for the specified property or item. If the value is undefined,\n * the property or item will be removed.\n * @param options Options\n * @returns The edit operations describing the changes to the original document, following the format described in {@linkcode EditResult}.\n * To apply the edit operations to the input, use {@linkcode applyEdits}.\n */\nexport function modify(text, path, value, options) {\n    return edit.setProperty(text, path, value, options);\n}\n/**\n * Applies edits to an input string.\n * @param text The input text\n * @param edits Edit operations following the format described in {@linkcode EditResult}.\n * @returns The text with the applied edits.\n * @throws An error if the edit operations are not well-formed as described in {@linkcode EditResult}.\n */\nexport function applyEdits(text, edits) {\n    let sortedEdits = edits.slice(0).sort((a, b) => {\n        const diff = a.offset - b.offset;\n        if (diff === 0) {\n            return a.length - b.length;\n        }\n        return diff;\n    });\n    let lastModifiedOffset = text.length;\n    for (let i = sortedEdits.length - 1; i >= 0; i--) {\n        let e = sortedEdits[i];\n        if (e.offset + e.length <= lastModifiedOffset) {\n            text = edit.applyEdit(text, e);\n        }\n        else {\n            throw new Error('Overlapping edit');\n        }\n        lastModifiedOffset = e.offset;\n    }\n    return text;\n}\n", "import { EOL } from \"os\";\nimport * as vscode from \"vscode\";\nimport { Uri } from \"vscode\";\n\nimport { cleanVectorcastOutput } from \"../src-common/commonUtilities\";\nimport { pythonErrorCodes } from \"../src-common/vcastServerTypes\";\nimport {\n  configFilename,\n  getUnitTestLocationForPath,\n  initializeConfigurationFile,\n} from \"./configuration\";\n\nimport { updateFunctionDataForFile } from \"./editorDecorator\";\n\nimport { fileDecorator } from \"./fileDecorator\";\n\nimport {\n  openMessagePane,\n  indentString,\n  vectorMessage,\n  errorLevel,\n} from \"./messagePane\";\n\nimport { getEnviroPathFromID, getTestNode, testNodeType } from \"./testData\";\n\nimport {\n  enviroListAsMapType,\n  globalProjectDataCache,\n  refreshAllExtensionData,\n  updateTestPane,\n} from \"./testPane\";\n\nimport {\n  forceLowerCaseDriveLetter,\n  normalizePath,\n  openFileWithLineSelected,\n  showSettings,\n} from \"./utilities\";\n\nimport {\n  addCodedTestToEnvironment,\n  buildEnvironmentFromScript,\n  codedTestAction,\n  executeTest,\n  getMCDCReport,\n  getTestExecutionReport,\n  setCodedTestOption,\n} from \"./vcastAdapter\";\n\nimport {\n  importEnvToTestsuite,\n  updateProjectData,\n  addEnvToTestsuite,\n  createNewTestsuiteInProject,\n} from \"./manage/manageSrc/manageCommands\";\n\nimport {\n  commandStatusType,\n  executeCommandSync,\n  executeVPythonScript,\n} from \"./vcastCommandRunner\";\n\nimport { checksumCommandToUse } from \"./vcastInstallation\";\n\nimport {\n  closeAnyOpenErrorFiles,\n  openTestFileAndErrors,\n  testStatus,\n} from \"./vcastUtilities\";\nimport {\n  closeConnection,\n  globalEnviroDataServerActive,\n} from \"../src-common/vcastServer\";\n\nconst fs = require(\"fs\");\nconst path = require(\"path\");\n\nexport const vcastEnviroFile = \"UNITDATA.VCD\";\n\n// Define the interface for project environment parameters.\nexport interface ProjectEnvParameters {\n  path: string;\n  sourceFiles: string[];\n  testsuiteArgs: string[];\n}\n\n// Creating a cache for the checksums so we don't constantly re-run the command\ninterface ChecksumCacheType {\n  checksum: number;\n  modificationTime: string;\n}\nlet checksumCache = new Map<string, ChecksumCacheType>();\n\n// Compute the checksum for a source file\nfunction getChecksum(filePath: string) {\n  // I am assuming that doing the fstat is faster than\n  // running the checksum command, but I did not check\n\n  // Return the cache value if the file has not changed\n  let cacheValue = checksumCache.get(filePath);\n  if (cacheValue) {\n    const currentMtime = fs.statSync(filePath).mtime.toISOString();\n    if (currentMtime == cacheValue.modificationTime) {\n      return cacheValue.checksum;\n    }\n  }\n\n  // if we did not return the cached value, compute the cksum\n  let returnValue = 0;\n  const checksumCommand = checksumCommandToUse;\n  if (checksumCommand) {\n    let commandOutputString: string;\n    if (checksumCommand.endsWith(\".py\"))\n      commandOutputString = executeVPythonScript(\n        `${checksumCommand} ${filePath}`,\n        path.dirname(filePath)\n      ).stdout;\n    else\n      commandOutputString = executeCommandSync(\n        `${checksumCommand} ${filePath}`,\n        process.cwd()\n      ).stdout;\n\n    // convert the to a number and return\n    // this will throw if something is wrong with the result\n    try {\n      // see detailed comment with the function definition\n      commandOutputString = cleanVectorcastOutput(commandOutputString);\n      returnValue = Number(commandOutputString);\n      // only save into the cache if we get a valid checksum\n      const cacheValue: ChecksumCacheType = {\n        checksum: returnValue,\n        modificationTime: fs.statSync(filePath).mtime.toISOString(),\n      };\n      checksumCache.set(filePath, cacheValue);\n    } catch {\n      returnValue = 0;\n    }\n  }\n  return returnValue;\n}\n\n// we save the some key data, indexed into by test.id\n// at the time that we build the test tree\nexport interface testDataType {\n  status: string;\n  passfail: string;\n  time: string;\n  resultFilePath: string;\n  stdout: string;\n  notes: string;\n  compoundOnly: boolean;\n  testFile: string;\n  testStartLine: number;\n}\n\n// This allows us to get direct access to the test nodes via the ID\nexport interface testStatusArrayType {\n  [id: string]: testDataType;\n}\n\nexport var globalTestStatusArray = <testStatusArrayType>{};\n\nexport function getGlobalCoverageData() {\n  return globalCoverageData;\n}\n\nexport function addTestDataToStatusArray(\n  testID: string,\n  testData: testDataType\n): void {\n  globalTestStatusArray[testID] = testData;\n}\n\nexport function addResultFileToStatusArray(\n  testID: string,\n  resultFilePath: string\n) {\n  // the testID should always me in the map but just to make sure ...\n  if (testID in globalTestStatusArray) {\n    globalTestStatusArray[testID].resultFilePath = resultFilePath;\n  }\n}\n\nexport function clearTestDataFromStatusArray(): void {\n  globalTestStatusArray = {};\n}\n\n// List of source file from all local environments\ninterface coverageDataType {\n  crc32Checksum: number;\n  covered: number[];\n  uncovered: number[];\n  partiallyCovered: number[];\n}\n\ninterface fileCoverageType {\n  hasCoverage: boolean;\n  enviroList: Map<string, coverageDataType>; //key is enviroPath\n}\n\n// key is filePath\nlet globalCoverageData = new Map<string, fileCoverageType>();\n\n/////////////////////////////////////////////////////////////////////\nexport function resetCoverageData() {\n  // this should be called whenever we want to reload all coverage data\n  globalCoverageData.clear();\n}\n\ninterface coverageSummaryType {\n  hasCoverageData: boolean;\n  statusString: string;\n  covered: number[];\n  uncovered: number[];\n  partiallyCovered: number[];\n}\n\n//////////////////////////////////////////////////////////////////////\nexport function getCoverageDataForFile(filePath: string): coverageSummaryType {\n  // this function will combine the coverage for all instances of\n  // filePath that match the provided checksum into a single coverageDataType\n\n  // .statusString will be \"no-coverage-data\" if there are no environments\n  // with coverage for this file\n\n  // .statusString will be null if there is at least one environment\n  // that that matches the checksum for this file\n\n  // .statusString will be \"out-of-date\" if NO enviro checksums match this file\n\n  let returnData: coverageSummaryType = {\n    hasCoverageData: false,\n    statusString: \"\",\n    covered: [],\n    uncovered: [],\n    partiallyCovered: [],\n  };\n\n  const dataForThisFile = globalCoverageData.get(filePath);\n  // if we have data for this file it means that it is part of\n  // an environment but not necessarily that it has coverage data\n  if (dataForThisFile) {\n    // if there is coverage data, create the x/y status bar message\n    if (dataForThisFile.hasCoverage && dataForThisFile.enviroList.size > 0) {\n      const checksum: number = getChecksum(filePath);\n      let coveredList: number[] = [];\n      let uncoveredList: number[] = [];\n      let partiallyCoveredList: number[] = [];\n      for (const enviroData of dataForThisFile.enviroList.values()) {\n        if (enviroData.crc32Checksum == checksum) {\n          coveredList = coveredList.concat(enviroData.covered);\n          uncoveredList = uncoveredList.concat(enviroData.uncovered);\n          partiallyCoveredList = partiallyCoveredList.concat(\n            enviroData.partiallyCovered\n          );\n        }\n      }\n\n      if (coveredList.length == 0 && uncoveredList.length == 0) {\n        // This status is for files that have changed since\n        // they were last instrumented\n        returnData.statusString = \"Coverage Out of Date\";\n      } else {\n        returnData.hasCoverageData = true;\n        // remove duplicates\n        returnData.covered = [...new Set(coveredList)];\n        returnData.uncovered = [...new Set(uncoveredList)];\n        returnData.partiallyCovered = [...new Set(partiallyCoveredList)];\n      }\n    } else {\n      // This status is for files that are part of\n      // and environment but not instrumented\n      returnData.statusString = \"No Coverage Data\";\n    }\n  }\n\n  return returnData;\n}\n\nexport function checksumMatchesEnvironment(\n  filePath: string,\n  enviroPath: string\n): boolean {\n  // this will check if the current checksum of filePath matches the\n  // checksum of that file from the provided environment.\n\n  let returnValue: boolean = false;\n  const checksum = getChecksum(filePath);\n  const dataForThisFile = globalCoverageData.get(filePath);\n\n  if (dataForThisFile) {\n    const enviroData = dataForThisFile.enviroList.get(enviroPath);\n    if (enviroData) {\n      if (enviroData.crc32Checksum == checksum) {\n        returnValue = true;\n      }\n    }\n  }\n  return returnValue;\n}\n\nexport function getListOfFilesWithCoverage(): string[] {\n  let returnList: string[] = [];\n\n  for (let [filePath, enviroData] of globalCoverageData.entries()) {\n    if (enviroData.hasCoverage && !returnList.includes(filePath))\n      returnList.push(filePath);\n  }\n  return returnList;\n}\n\n// we keep track of the files for each enviro, so that its faster\n// to remove coverage when an enviro is deleted.\n\n// key is enviroPath, value is a list of filePaths\nlet enviroFileList: Map<string, string[]> = new Map();\n\nexport function updateGlobalDataForFile(enviroPath: string, fileList: any[]) {\n  let filePathList: string[] = [];\n\n  for (let fileIndex = 0; fileIndex < fileList.length; fileIndex++) {\n    let filePath = forceLowerCaseDriveLetter(fileList[fileIndex].path);\n    filePathList.push(filePath);\n\n    let coveredList: number[] = [];\n    if (fileList[fileIndex].covered.length > 0)\n      coveredList = fileList[fileIndex].covered.split(\",\").map(Number);\n\n    let uncoveredList: number[] = [];\n    if (fileList[fileIndex].uncovered.length > 0)\n      uncoveredList = fileList[fileIndex].uncovered.split(\",\").map(Number);\n\n    let partiallyCoveredList: number[] = [];\n    if (fileList[fileIndex].partiallyCovered.length > 0)\n      partiallyCoveredList = fileList[fileIndex].partiallyCovered\n        .split(\",\")\n        .map(Number);\n\n    const checksum = fileList[fileIndex].cmcChecksum;\n    let coverageData: coverageDataType = {\n      crc32Checksum: checksum,\n      covered: coveredList,\n      uncovered: uncoveredList,\n      partiallyCovered: partiallyCoveredList,\n    };\n\n    let fileData: fileCoverageType | undefined =\n      globalCoverageData.get(filePath);\n\n    // if there is not existing data for this file\n    if (!fileData) {\n      fileData = { hasCoverage: false, enviroList: new Map() };\n      globalCoverageData.set(filePath, fileData);\n    }\n\n    fileData.hasCoverage =\n      fileData.hasCoverage ||\n      coverageData.covered.length > 0 ||\n      coverageData.uncovered.length > 0 ||\n      coverageData.partiallyCovered.length > 0;\n    fileData.enviroList.set(enviroPath, coverageData);\n\n    // if we are displaying the file decoration in the explorer view\n    if (fileDecorator) {\n      if (fileData.hasCoverage)\n        fileDecorator.addCoverageDecorationToFile(filePath);\n      else fileDecorator.removeCoverageDecorationFromFile(filePath);\n    }\n\n    // update the testable function icons for this file\n    updateFunctionDataForFile(\n      enviroPath,\n      filePath,\n      fileList[fileIndex].functionList\n    );\n  }\n  enviroFileList.set(enviroPath, filePathList);\n}\n\nexport function removeCoverageDataForEnviro(enviroPath: string) {\n  let filePathList: string[] | undefined = enviroFileList.get(enviroPath);\n  if (filePathList) {\n    for (let filePath of filePathList) {\n      let coverageForFile: fileCoverageType | undefined =\n        globalCoverageData.get(filePath);\n      // if there is coverage data for this file\n      if (coverageForFile) {\n        coverageForFile.enviroList.delete(enviroPath);\n        if (coverageForFile.enviroList.size == 0) {\n          coverageForFile.hasCoverage = false;\n        }\n      }\n    }\n  }\n}\n\nexport async function getResultFileForTest(testID: string) {\n  // This function will return the path to the result file if it is already saved\n  // in the globalTestStatus array, otherwise it will ask Python to generate the report\n  let resultFile: string = globalTestStatusArray[testID].resultFilePath;\n\n  // Check if the file already exists\n  if (!fs.existsSync(resultFile)) {\n    // Generate the environment path and request the test report from Python\n    const enviroPath = getEnviroPathFromID(testID);\n    const commandStatus = await getTestExecutionReport(enviroPath, testID);\n\n    // Check if report generation was successful\n    if (commandStatus.errorCode === 0) {\n      const firstLineOfOutput: string = commandStatus.stdout\n        .split(\"\\n\", 1)[0]\n        .trim();\n\n      // Handle the case where the output contains \"REPORT\"\n      if (firstLineOfOutput.includes(\"REPORT:\")) {\n        // This is the normal case --> delete the REPORT to only have the file name\n        resultFile = firstLineOfOutput.replace(\"REPORT:\", \"\");\n        // Check if the file exists\n        if (!fs.existsSync(resultFile)) {\n          const reportNotExistentErrorMessage = `The Report: ${resultFile} does not exist.`;\n          vscode.window.showWarningMessage(`${reportNotExistentErrorMessage}`);\n          vectorMessage(`${reportNotExistentErrorMessage}`);\n        }\n      }\n\n      // If the first line of output contains \"Error\" --> Test result generation failed\n      else if (firstLineOfOutput.includes(\"Error:\")) {\n        const errorDetails = firstLineOfOutput.split(\"Error:\")[1].trim();\n        const reportGenerationErrorMessage = `Execution report was not successfully generated. Error details: \\n${errorDetails}`;\n        vscode.window.showWarningMessage(`${reportGenerationErrorMessage}`);\n        vectorMessage(`${reportGenerationErrorMessage}`);\n      }\n\n      // Handle other unexpected cases (After successfull test generation, but without the \"REPORT:\" string)\n      else {\n        const unexpectedErrorMessage = `Unexpected Error: \\n${commandStatus.stdout}`;\n        vscode.window.showWarningMessage(`${unexpectedErrorMessage}`);\n        vectorMessage(`${unexpectedErrorMessage}`);\n      }\n    }\n    // Handle command failure\n    else {\n      vectorMessage(\n        `Retrieving test report was not successful. Command Status: ${commandStatus.errorCode}`\n      );\n    }\n\n    // Update the global test status with the result file path\n    globalTestStatusArray[testID].resultFilePath = resultFile;\n  }\n\n  return resultFile;\n}\n\ninterface executeOutputType {\n  status: string;\n  resultsFilePath: string;\n  time: string;\n  passfail: string;\n  stdOut: string;\n}\nconst nullExecutionStatus: executeOutputType = {\n  status: \"\",\n  resultsFilePath: \"\",\n  time: \"\",\n  passfail: \"\",\n  stdOut: \"\",\n};\n\nfunction processExecutionOutput(commandOutput: string): executeOutputType {\n  let returnData: executeOutputType = {\n    status: \"failed\",\n    stdOut: \"\",\n    resultsFilePath: \"\",\n    time: \"\",\n    passfail: \"\",\n  };\n  const outputLineList: string[] = commandOutput.split(\"\\n\");\n\n  for (let line of outputLineList) {\n    console.log(`LINE IS: ${line}`);\n    if (line.startsWith(\"STATUS:\"))\n      returnData.status = line.replace(\"STATUS:\", \"\").trim();\n    else if (line.startsWith(\"REPORT:\"))\n      returnData.resultsFilePath = line.replace(\"REPORT:\", \"\").trim();\n    else if (line.startsWith(\"PASSFAIL:\"))\n      returnData.passfail = line.replace(\"PASSFAIL:\", \"\").trim();\n    else if (line.startsWith(\"TIME:\"))\n      returnData.time = line.replace(\"TIME:\", \"\").trim();\n    else returnData.stdOut += line + EOL;\n  }\n\n  return returnData;\n}\n\nfunction testExecutionFailed(commandStatus: commandStatusType): boolean {\n  // There are lots of ways that a test run can end badly,\n  // this function will check for these cases to simplify\n  // the process in runVCTest\n\n  let commandOutputText: string = commandStatus.stdout;\n  let returnValue: boolean = false;\n\n  if (commandOutputText.startsWith(\"FATAL\")) {\n    // comes from clicast, something bad happened\n    returnValue = true;\n  } else if (commandOutputText.includes(\"Resolve Errors\")) {\n    // handles things like compile errors\n    returnValue = true;\n  } else if (commandStatus.errorCode == 1) {\n    // usage error with interface\n    returnValue = true;\n  }\n\n  return returnValue;\n}\n\nexport async function runVCTest(enviroPath: string, nodeID: string) {\n  // what gets returned\n  let returnStatus: testStatus = testStatus.didNotRun;\n\n  // execute, or execute and generate report\n  const commandStatus: commandStatusType = await executeTest(\n    enviroPath,\n    nodeID\n  );\n\n  let commandOutputText: string = commandStatus.stdout;\n  let executionDetails: executeOutputType = nullExecutionStatus;\n\n  if (commandStatus.errorCode == pythonErrorCodes.codedTestCompileError) {\n    const testNode = getTestNode(nodeID);\n    returnStatus = openTestFileAndErrors(testNode);\n  } else if (testExecutionFailed(commandStatus)) {\n    // lots of different things can go wrong\n    vectorMessage(\"Could not complete test execution ...\");\n    if (commandOutputText.startsWith(\"FATAL\")) {\n      commandOutputText = commandOutputText.replace(\"FATAL\", \"\");\n    }\n    vectorMessage(commandOutputText, errorLevel.info, indentString);\n    openMessagePane();\n    returnStatus = testStatus.didNotRun;\n  } else if (commandStatus.errorCode != 0 && commandStatus.errorCode != 28) {\n    // 0 means test pass, 28 means test failed, everything else is an error\n    // however the printing of the error message is done where the command is run\n    // so we don't have to do it here\n    returnStatus = testStatus.didNotRun;\n  } else {\n    // successful execution\n    executionDetails = processExecutionOutput(commandOutputText);\n\n    let updatedStatusItem = globalTestStatusArray[nodeID];\n\n    if (updatedStatusItem) {\n      updatedStatusItem.status = executionDetails.status;\n      updatedStatusItem.resultFilePath = executionDetails.resultsFilePath;\n      globalTestStatusArray[nodeID] = updatedStatusItem;\n\n      if (updatedStatusItem.status == \"passed\") {\n        returnStatus = testStatus.passed;\n      } else {\n        returnStatus = testStatus.failed;\n      }\n    } else {\n      returnStatus = testStatus.didNotRun;\n    }\n  }\n  return { status: returnStatus, details: executionDetails };\n}\n\nfunction addSearchPathsFromConfigurationFile(\n  cwd: string,\n  searchList: string[]\n) {\n  const pathToConfigurationFile = path.join(cwd, configFilename);\n\n  // should always exist, but just to make sure\n  if (fs.existsSync(pathToConfigurationFile)) {\n    // open the file, and loop looking for \"TESTABLE_SOURCE_DIR\" lines,\n    const fileContents = fs.readFileSync(pathToConfigurationFile, \"utf8\");\n    const lineList = fileContents.split(/\\r?\\n/g);\n    for (let lineIndex = 0; lineIndex < lineList.length; lineIndex++) {\n      const line = lineList[lineIndex];\n      if (line.startsWith(\"TESTABLE_SOURCE_DIR\")) {\n        const pieces = line.split(\"TESTABLE_SOURCE_DIR:\", 2);\n        if (pieces.length > 1) {\n          const searchPath = pieces[1].trim();\n          if (!searchList.includes(searchPath)) {\n            searchList.push(searchPath);\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction createVcastEnvironmentScript(\n  unitTestLocation: string,\n  enviroName: string,\n  fileList: string[]\n) {\n  // This will take a list of files and create the enviroName.env\n  // in the location pointed to by unitTestLocation\n\n  // compute the UUT and SEARCH_LIST lists\n  // Improvement needed: Add source locations for include paths from cpp_properties\n  let uutList: string[] = [];\n  let searchList: string[] = [];\n  for (let index = 0; index < fileList.length; index++) {\n    const filePath = fileList[index];\n    // must strip the extension ...\n    const uutName = path.basename(filePath).split(\".\")[0];\n    uutList.push(uutName);\n    const candidatePath = path.dirname(filePath);\n    if (!searchList.includes(candidatePath)) {\n      searchList.push(candidatePath);\n    }\n  }\n\n  addSearchPathsFromConfigurationFile(unitTestLocation, searchList);\n  const envFilePath = path.join(unitTestLocation, enviroName + \".env\");\n\n  // read the settings that affect enviro build\n  let settings = vscode.workspace.getConfiguration(\"vectorcastTestExplorer\");\n\n  fs.writeFileSync(envFilePath, `ENVIRO.NEW\\n`, { flag: \"w\" });\n  fs.writeFileSync(envFilePath, `ENVIRO.NAME: ${enviroName}\\n`, { flag: \"a+\" });\n\n  const coverageKind = settings.get(\"build.coverageKind\", \"None\");\n  if (coverageKind != \"None\") {\n    fs.writeFileSync(envFilePath, `ENVIRO.COVERAGE_TYPE: ${coverageKind}\\n`, {\n      flag: \"a+\",\n    });\n  }\n\n  fs.writeFileSync(envFilePath, \"ENVIRO.WHITE_BOX: YES\\n\", { flag: \"a+\" });\n  fs.writeFileSync(envFilePath, \"ENVIRO.STUB: ALL_BY_PROTOTYPE\\n\", {\n    flag: \"a+\",\n  });\n\n  searchList.forEach((item) =>\n    fs.writeFileSync(envFilePath, `ENVIRO.SEARCH_LIST: ${item}\\n`, {\n      flag: \"a+\",\n    })\n  );\n  uutList.forEach((item) =>\n    fs.writeFileSync(envFilePath, `ENVIRO.STUB_BY_FUNCTION: ${item}\\n`, {\n      flag: \"a+\",\n    })\n  );\n\n  fs.writeFileSync(envFilePath, \"ENVIRO.END\", { flag: \"a+\" });\n}\n\nasync function buildEnvironmentVCAST(\n  fileList: string[],\n  unitTestLocation: string,\n  enviroName: string,\n  shouldBuildEnviro: boolean = true\n) {\n  // enviroName is the name of the enviro without the .env\n\n  // use the first filename in the list as the environment name\n\n  vectorMessage(new Array(101).join(\"-\"));\n  vectorMessage(\n    \"Creating environment '\" +\n      enviroName +\n      \" for \" +\n      fileList.length +\n      \" file(s) ...\"\n  );\n\n  // It is important that this call be done before the creation of the .env\n  // Check that we have a valid configuration file, and create one if we don't\n  // This function will return True if there is a CFG when it is done.\n  if (!shouldBuildEnviro) {\n    setCodedTestOption(unitTestLocation);\n    createVcastEnvironmentScript(unitTestLocation, enviroName, fileList);\n  } else if (initializeConfigurationFile(unitTestLocation)) {\n    setCodedTestOption(unitTestLocation);\n\n    createVcastEnvironmentScript(unitTestLocation, enviroName, fileList);\n\n    await buildEnvironmentFromScript(unitTestLocation, enviroName);\n  }\n}\n\n/**\n * Processes the import of an environment to a project and the creation of the first testsuite\n * @param projectPath Path to Project file\n * @param testSuite Testsuite string containing Compiler/TestSuite/Group\n * @param envFilePath Path to env file\n */\nasync function processFirstTestSuite(\n  projectPath: string,\n  testSuite: string,\n  envFilePath: string\n) {\n  // Need to extract the group from the testsuite string\n  const parts = testSuite.split(\"/\");\n  const baseDisplayName = parts.slice(0, 2).join(\"/\");\n  await importEnvToTestsuite(projectPath, baseDisplayName, envFilePath);\n}\n\n/**\n * Processes the creation of additional testsuites in a project and the addition of the environment to the testsuite\n * @param projectPath Path to Project file\n * @param testSuite Testsuite string containing Compiler/TestSuite/Group\n * @param envName Name of the environment (The Env needs to be already imported to use this function).\n * @param projectEnvData Data of the project environments\n */\nasync function processAdditionalTestSuite(\n  projectPath: string,\n  testSuite: string,\n  envName: string,\n  projectEnvData: enviroListAsMapType\n) {\n  // Need to extract the group from the testsuite string\n  const parts = testSuite.split(\"/\");\n  const baseDisplayName = parts.slice(0, 2).join(\"/\");\n\n  // Check if the testsuite already exists in the project data\n  let existsInProject = false;\n  if (projectEnvData) {\n    for (const envData of projectEnvData.values()) {\n      const existingBaseName = envData.displayName\n        .split(\"/\")\n        .slice(0, 2)\n        .join(\"/\");\n      if (existingBaseName === baseDisplayName) {\n        existsInProject = true;\n        break;\n      }\n    }\n  }\n  if (!existsInProject) {\n    await createNewTestsuiteInProject(projectPath, baseDisplayName);\n  }\n  await addEnvToTestsuite(projectPath, baseDisplayName, envName);\n}\n\nasync function configureWorkspaceAndBuildEnviro(\n  fileList: string[],\n  envLocation: string,\n  projectEnvParameters?: ProjectEnvParameters\n): Promise<void> {\n  // This function will check if unit test directory exists\n  // and if not ask the user if we should auto-create it or not\n\n  // If we have project params, we want to create an env within a project\n  if (projectEnvParameters) {\n    // Create the environment using the provided file list\n    await commonEnvironmentSetup(fileList, envLocation, false);\n\n    const envName = createEnvNameFromFiles(fileList);\n    const envFilePath = path.join(envLocation, `${envName}.env`);\n    const testSuites = projectEnvParameters.testsuiteArgs;\n    const projectPath = projectEnvParameters.path;\n\n    // First we need to import the Env and therefore process the first testsuite separately\n    await processFirstTestSuite(projectPath, testSuites[0], envFilePath);\n\n    // Process each additional testsuite\n    const projectEnvData = globalProjectDataCache.get(projectPath);\n    if (projectEnvData) {\n      for (let i = 1; i < testSuites.length; i++) {\n        await processAdditionalTestSuite(\n          projectPath,\n          testSuites[i],\n          envName,\n          projectEnvData\n        );\n      }\n    }\n\n    // Delete the temporary folder and its contents\n    try {\n      if (fs.existsSync(envLocation)) {\n        fs.rmdirSync(envLocation, { recursive: true });\n      }\n    } catch (error) {\n      vscode.window.showErrorMessage(\n        `Error deleting temporary folder: ${error}`\n      );\n    }\n  } else if (fs.existsSync(envLocation)) {\n    // If no project params but the folder already exists, just do the common setup\n    await commonEnvironmentSetup(fileList, envLocation);\n  } else {\n    // Otherwise prompt the user to create it\n    const message =\n      \"Unit test location: '\" +\n      envLocation +\n      \"' does not exist.\\n\" +\n      \"Do you want to create and initialize this directory?\";\n\n    // await the user's choice instead of using .then()\n    const answer = await vscode.window.showInformationMessage(\n      message,\n      \"Yes\",\n      \"No\"\n    );\n\n    if (answer === \"Yes\") {\n      try {\n        fs.mkdirSync(envLocation, { recursive: true });\n        await commonEnvironmentSetup(fileList, envLocation);\n      } catch (error: any) {\n        vscode.window.showErrorMessage(\n          `Error creating directory: ${envLocation} [${error.message}].  Update the 'Unit Test Location' option to a valid value`\n        );\n        vectorMessage(\"Error creating directory: \" + envLocation);\n        showSettings();\n      }\n    } else {\n      vscode.window.showWarningMessage(\n        `Please create the unit test directory: '${envLocation}', or update the 'Unit Test Location' option`\n      );\n      showSettings();\n    }\n  }\n}\n\nexport function createEnvNameFromFiles(fileList: string[]) {\n  if (fileList.length > 0) {\n    const firstFile = fileList[0];\n    const filename = path.basename(firstFile);\n    let enviroName = filename.split(\".\")[0].toUpperCase();\n\n    // if multiple files are in the list make the enviroName the hyphenated name of the first 2\n    if (fileList.length > 1) {\n      enviroName += `-${path\n        .basename(fileList[1])\n        .split(\".\")[0]\n        .toUpperCase()}`;\n    }\n\n    return enviroName;\n  }\n}\n\nasync function commonEnvironmentSetup(\n  fileList: string[],\n  envLocation: string,\n  shouldBuildEnviro: boolean = true\n) {\n  // Nothing to do if no files selected\n  if (fileList.length === 0) {\n    vectorMessage(\"No C/C++ source files found in selection ...\");\n    return;\n  }\n\n  // Derive the environment name and path\n  let enviroName = createEnvNameFromFiles(fileList)!.toUpperCase();\n  let enviroPath = path.join(envLocation, enviroName);\n\n  // If the directory already exists, prompt for a new name\n  if (fs.existsSync(enviroPath)) {\n    const response = await vscode.window.showInputBox({\n      prompt: `Directory: \"${enviroName}\" already exists, please choose an alternate name ...`,\n      title: \"Choose VectorCAST Environment Name\",\n      value: enviroName,\n      ignoreFocusOut: true,\n    });\n\n    // If user cancelled, abort\n    if (!response) {\n      return;\n    }\n\n    // Update name and path based on user input\n    enviroName = response.toUpperCase();\n    enviroPath = path.join(envLocation, response);\n\n    // If the new name also exists, show error and abort\n    if (fs.existsSync(enviroPath)) {\n      vscode.window.showErrorMessage(\n        `Environment name: ${enviroName}, already in use, aborting`\n      );\n      return;\n    }\n  }\n\n  // Build the environment with the valid name\n  await buildEnvironmentVCAST(\n    fileList,\n    envLocation,\n    enviroName,\n    shouldBuildEnviro\n  );\n}\n\n// Improvement needed: get the language extensions automatically, don't hard-code\nconst extensionsOfInterest = [\"c\", \"cpp\", \"cc\", \"cxx\"];\n\nexport async function newEnvironment(\n  URIlist: Uri[],\n  projectEnvParameters?: ProjectEnvParameters\n) {\n  // This is called from the right click in the file explorer tree\n  // Based on the package.json, we know tha that at least one\n  // file in the list will be a C/C++ file but we need to filter\n  // for the multi-select case.\n  //\n\n  let fileList: string[] = [];\n  for (let index = 0; index < URIlist.length; index++) {\n    const filePath = URIlist[index].fsPath;\n    const fileExtension = filePath.split(\".\").pop();\n    if (fileExtension && extensionsOfInterest.includes(fileExtension)) {\n      fileList.push(filePath);\n    }\n  }\n  if (fileList.length > 0) {\n    if (projectEnvParameters) {\n      // Get the workspace root folder.\n      const workspaceFolders = vscode.workspace.workspaceFolders;\n      if (!workspaceFolders || workspaceFolders.length === 0) {\n        vscode.window.showErrorMessage(\"No workspace folder is open.\");\n        return;\n      }\n      const workspaceRoot = workspaceFolders[0].uri.fsPath;\n\n      //Create a new folder \"tempEnv\" under the workspace root.\n      const tempEnvPath = path.join(workspaceRoot, \"tempEnv\");\n      try {\n        if (!fs.existsSync(tempEnvPath)) {\n          fs.mkdirSync(tempEnvPath);\n        }\n      } catch (error) {\n        vscode.window.showErrorMessage(\n          `Failed to create tempEnv folder: ${error}`\n        );\n        return;\n      }\n      await configureWorkspaceAndBuildEnviro(\n        fileList,\n        tempEnvPath,\n        projectEnvParameters\n      );\n    } else {\n      let unitTestLocation = getUnitTestLocationForPath(\n        path.dirname(fileList[0])\n      );\n      await configureWorkspaceAndBuildEnviro(fileList, unitTestLocation);\n    }\n  } else {\n    vscode.window.showWarningMessage(\n      \"Create environment may only be run for source files [\" +\n        extensionsOfInterest.join(\", \") +\n        \"]\"\n    );\n  }\n  await refreshAllExtensionData();\n}\n\nfunction valueOrDefault(name: string): string {\n  return name.length > 0 ? \":\" + name : \"\";\n}\n\nfunction defaultTestName(name: string): string {\n  return name.length > 0 ? \":test-\" + name : \"\";\n}\n\nfunction createScriptTemplate(testNode: testNodeType): string {\n  // this will create a test script template and return the path to the file\n\n  let scriptTemplateLines: string[] = [];\n\n  scriptTemplateLines.push(\"-- Test Case Script\");\n  scriptTemplateLines.push(\"--\");\n  scriptTemplateLines.push(\"-- Environment: \" + testNode.enviroName);\n  if (testNode.unitName != \"not-used\")\n    scriptTemplateLines.push(\"-- Unit:        \" + testNode.unitName);\n  scriptTemplateLines.push(\"-- Function:    \" + testNode.functionName);\n  scriptTemplateLines.push(\"--\");\n  scriptTemplateLines.push(\"--\");\n  scriptTemplateLines.push(\n    \"-- Type 'vcast-test to get the framework of a new test inserted\"\n  );\n  scriptTemplateLines.push(\n    \"-- Then use the LSE features of the extension to fill-in values\"\n  );\n  scriptTemplateLines.push(\"--\");\n  scriptTemplateLines.push(\n    \"-- Right click anywhere in the editor pane and choose\"\n  );\n  scriptTemplateLines.push(\n    \"-- 'Load Test Script into Environment' when done editing\"\n  );\n  scriptTemplateLines.push(\"--\");\n  scriptTemplateLines.push(\"--\");\n  scriptTemplateLines.push(\"\");\n  scriptTemplateLines.push(\"\");\n  scriptTemplateLines.push(\"TEST.SCRIPT_FEATURE:MIXED_CASE_NAMES\");\n  scriptTemplateLines.push(\"TEST.SCRIPT_FEATURE:MULTIPLE_UUT_SUPPORT\");\n  scriptTemplateLines.push(\"\");\n  scriptTemplateLines.push(\"\");\n\n  if (testNode.unitName != \"not-used\")\n    scriptTemplateLines.push(\"TEST.UNIT\" + valueOrDefault(testNode.unitName));\n\n  scriptTemplateLines.push(\n    \"TEST.SUBPROGRAM\" + valueOrDefault(testNode.functionName)\n  );\n  // It's important to use TEST.NEW here, see Issue# 20\n  scriptTemplateLines.push(\"TEST.NEW\");\n  scriptTemplateLines.push(\n    \"TEST.NAME\" + defaultTestName(testNode.functionName)\n  );\n  scriptTemplateLines.push(\"TEST.NOTES:\");\n  scriptTemplateLines.push(\"\");\n  scriptTemplateLines.push(\"TEST.END_NOTES:\");\n  if (testNode.functionName == \"<<COMPOUND>>\") {\n    scriptTemplateLines.push(\"TEST.SLOT\");\n  } else {\n    scriptTemplateLines.push(\"TEST.VALUE\");\n  }\n  scriptTemplateLines.push(\"TEST.END\");\n\n  return scriptTemplateLines.join(\"\\n\");\n}\n\nexport async function newTestScript(testNode: testNodeType) {\n  // This can be called for any subprogram node other than an environment node\n\n  const contents = createScriptTemplate(testNode);\n  const scriptPath = path.join(\n    path.dirname(testNode.enviroPath),\n    \"vcast-template.tst\"\n  );\n\n  // create the template file\n  fs.writeFileSync(scriptPath, contents);\n\n  let scriptUri: vscode.Uri = vscode.Uri.file(scriptPath);\n  vscode.workspace.openTextDocument(scriptUri).then(\n    (doc: vscode.TextDocument) => {\n      vscode.window.showTextDocument(doc, 1, false);\n    },\n    (error: any) => {\n      vectorMessage(error.message, errorLevel.error);\n    }\n  );\n}\n\nasync function commonCodedTestProcessing(\n  userFilePath: string,\n  testID: string,\n  action: codedTestAction\n) {\n  let testNode: testNodeType = getTestNode(testID);\n  const enviroPath = getEnviroPathFromID(testID);\n  const enviroName = path.basename(enviroPath);\n\n  await vectorMessage(\n    `Adding coded test file: ${userFilePath} for environment: ${enviroPath}`\n  );\n\n  // call clicast to create new coded test\n  const commandStatus: commandStatusType = await addCodedTestToEnvironment(\n    enviroPath,\n    testNode,\n    action,\n    normalizePath(userFilePath)\n  );\n\n  await updateTestPane(enviroPath);\n\n  if (commandStatus.errorCode == 0 && enviroName) {\n    // update project data after the script is loaded\n    await updateProjectData(enviroPath);\n    vscode.window.showInformationMessage(`Coded Tests added successfully`);\n  } else {\n    openTestFileAndErrors(testNode);\n  }\n  if (globalEnviroDataServerActive) await closeConnection(enviroPath);\n}\n\nexport async function addExistingCodedTestFile(testID: string) {\n  // This can be called for any \"main\" Coded Test node that\n  // does not have children.  When we are loading the test data,\n  // we set the testFile field for the \"Coded Test\" node if\n  // there are children, so check that to determine if we can add ...\n\n  // check if there are any vcast error files open, and close them\n  await closeAnyOpenErrorFiles();\n\n  let testNode: testNodeType = getTestNode(testID);\n  if (testNode.testFile.length == 0) {\n    const option: vscode.OpenDialogOptions = {\n      title: \"Select Coded Test File\",\n      filters: { \"Coded Test Files\": [\"cpp\", \"cc\", \"cxx\"] },\n    };\n    vscode.window.showOpenDialog(option).then((fileUri) => {\n      if (fileUri) {\n        commonCodedTestProcessing(\n          fileUri[0].fsPath,\n          testID,\n          codedTestAction.add\n        );\n      }\n    });\n  }\n}\n\nexport async function generateNewCodedTestFile(testID: string) {\n  // This can be called for any \"main\" Coded Test node that\n  // does not have children.  When we are loading the test data,\n  // we set the testFile field for the \"Coded Test\" node if\n  // there are children, so check that to determine if we can add ...\n\n  const testNode: testNodeType = getTestNode(testID);\n\n  if (testNode.testFile.length == 0) {\n    const option: vscode.SaveDialogOptions = {\n      title: \"Save Code Test File\",\n      filters: { \"Coded Test Files\": [\"cpp\", \"cc\", \"cxx\"] },\n    };\n    vscode.window.showSaveDialog(option).then((fileUri) => {\n      if (fileUri) {\n        commonCodedTestProcessing(fileUri.fsPath, testID, codedTestAction.new);\n      }\n    });\n  }\n}\n\nexport async function openCodedTest(testNode: testNodeType) {\n  // This can be called for any Coded Test or its children\n  // but the test file will always be the same\n\n  // just to be sure ...\n  if (fs.existsSync(testNode.testFile)) {\n    openFileWithLineSelected(testNode.testFile, testNode.testStartLine - 1);\n  }\n}\n\n/**\n * Generates and retrieves the MCDC html result file.\n *\n * @param {string} enviroPath - The path to the environment or directory.\n * @param {string} unit - The unit which includes the line.\n * @param {number} lineNumber - The line number for which the report is generated.\n * @returns {Promise<string>} A promise that resolves to the path of the result file if successful, or an empty string on failure.\n */\nexport async function getMCDCResultFile(\n  enviroPath: string,\n  unit: string,\n  lineNumber: number\n) {\n  // Generate the environment path and request the test report from Python\n  const commandStatus = await getMCDCReport(enviroPath, unit, lineNumber);\n  let resultFile: string = \"\";\n\n  // Check if report generation was successful\n  if (commandStatus.errorCode === 0) {\n    const firstLineOfOutput: string = commandStatus.stdout\n      .split(\"\\n\", 1)[0]\n      .trim();\n\n    resultFile = firstLineOfOutput.split(\"REPORT:\")[1].trim();\n    // Handle the case where the output contains \"REPORT\"\n    if (firstLineOfOutput.includes(\"REPORT:\")) {\n      // Verify if the generated report file actually exists\n      if (!fs.existsSync(resultFile)) {\n        const reportNotExistentErrorMessage = `The Report: ${resultFile} does not exist.`;\n        vscode.window.showWarningMessage(`${reportNotExistentErrorMessage}`);\n        vectorMessage(`${reportNotExistentErrorMessage}`);\n      }\n    }\n\n    // If the first line of output contains \"Error\" --> Test result generation failed\n    else if (firstLineOfOutput.includes(\"Error:\")) {\n      const errorDetails = firstLineOfOutput.split(\"Error:\")[1].trim();\n      const reportGenerationErrorMessage = `Execution report was not successfully generated. Error details: \\n${errorDetails}`;\n      vscode.window.showWarningMessage(`${reportGenerationErrorMessage}`);\n      vectorMessage(`${reportGenerationErrorMessage}`);\n    }\n\n    // Handle other unexpected cases (After successfull test generation, but without the \"REPORT:\" string)\n    else {\n      const unexpectedErrorMessage = `Unexpected Error: \\n${commandStatus.stdout}`;\n      vscode.window.showWarningMessage(`${unexpectedErrorMessage}`);\n      vectorMessage(`${unexpectedErrorMessage}`);\n    }\n  } else {\n    const commandErrorString = `Error generating MCDC report. Error Code: ${commandStatus.errorCode}`;\n    vscode.window.showWarningMessage(`${commandErrorString}`);\n    vectorMessage(`${commandErrorString}`);\n  }\n\n  return resultFile;\n}\n", "// This file is for stuff to be shared between the client and the server\n// It is important that this file NOT import any VS Code stuff\n\nconst fs = require(\"fs\");\nconst path = require(\"path\");\n\nexport interface enviroDataType {\n  enviroPath: string;\n  hasMockSupport: boolean;\n}\n\nconst enviroNameRegEx = /--.*Environment.*:(.*)/;\nexport function getEnviroNameFromScript(\n  testScriptPath: string\n): string | undefined {\n  let enviroName: string | undefined = undefined;\n  if (fs.existsSync(testScriptPath)) {\n    const lineList = fs.readFileSync(testScriptPath).toString().split(\"\\n\");\n    for (let line of lineList) {\n      let result = line.match(enviroNameRegEx);\n      if (result) {\n        enviroName = result[1].trim();\n        break;\n      }\n    }\n  }\n  return enviroName;\n}\n\n// Initially I thought I needed to get multiple options, so I implemented it this way to make that easy\n// but it turns out that I did not really need the SOURCE_EXTENSION ... but I am leaving this as an example\n\nexport interface cfgOptionType {\n  C_DEBUG_CMD: string;\n  SOURCE_EXTENSION: string;\n}\n\n// we keep a cache so we don't have to do the parse if\n// we've seen this path before\nvar cfgOptionCache: Map<string, cfgOptionType> = new Map();\n\nexport function getVcastOptionValues(enviroPath: string): cfgOptionType {\n  // this will read the CCAST_.CFG file in the directoryPath and\n  // return a list of values for the options in optionList\n\n  const cfgLocation = path.dirname(enviroPath);\n  const cachedObject = cfgOptionCache.get(cfgLocation);\n  if (cachedObject == undefined) {\n    let newObject: cfgOptionType = { C_DEBUG_CMD: \"\", SOURCE_EXTENSION: \"\" };\n    const cfgPath = path.join(cfgLocation, \"CCAST_.CFG\");\n    if (fs.existsSync(cfgPath)) {\n      const lines = fs\n        .readFileSync(cfgPath, \"utf-8\")\n        .replace(\"\\r\", \"\")\n        .split(\"\\n\");\n      for (let line of lines) {\n        if (line.startsWith(\"C_DEBUG_CMD\")) {\n          newObject.C_DEBUG_CMD = line.split(\":\")[1].trim();\n        } else if (line.startsWith(\"SOURCE_EXTENSION\")) {\n          newObject.SOURCE_EXTENSION = line.split(\":\")[1].trim();\n        }\n      }\n    }\n    // only cache this if it had \"good data\"\n    if (\n      newObject.C_DEBUG_CMD.length > 0 &&\n      newObject.SOURCE_EXTENSION.length > 0\n    )\n      cfgOptionCache.set(cfgLocation, newObject);\n    return newObject;\n  } else {\n    return cachedObject;\n  }\n}\n\n// The VectorCAST executables print an annoying message to stdout when\n// VECTORCAST_DIR does not match the executable being run.\n// Since this happens before our script even starts so we cannot suppress it.\n\n// For out own vpython executables, we control the contents of the py script\n// so we print ACTUAL-DATA at the start of the script and split on this\n// Improvement needed: we could remove this ACTUAL-DATA stuff now that we\n// created this common way to clean the output\n\n// For clicast and ATG, we have no control, so we split on the\n// \"If you want to use VECTORCAST_DIR, use this syntax\" message\n\n// We export these just so that the tests can use these without duplication\nexport const vpythonSplitString = \"ACTUAL-DATA\";\nexport const atgAndClicastSplitString =\n  \"If you want to use VECTORCAST_DIR, use this syntax:\";\nexport function cleanVectorcastOutput(outputString: string): string {\n  if (outputString.includes(vpythonSplitString)) {\n    const pieces = outputString.split(vpythonSplitString, 2);\n    return pieces[1].trim();\n  } else if (outputString.includes(atgAndClicastSplitString)) {\n    // there are two lines that we want to remove beyond the split string\n    const pieces = outputString.split(atgAndClicastSplitString, 2);\n    const restOfText = pieces[1].trim();\n    const lines = restOfText.split(\"\\n\");\n    return lines.slice(2).join(\"\\n\");\n  } else {\n    return outputString;\n  }\n}\n", "import * as vscode from \"vscode\";\n\nimport { vectorMessage } from \"./messagePane\";\n\nimport { openVcastOptionsDialog } from \"./vcastAdapter\";\n\nconst fs = require(\"fs\");\nconst path = require(\"path\");\n\nexport const configFilename = \"CCAST_.CFG\";\n\nexport function initializeConfigurationFile(CWD: string): boolean {\n  // If CWD does not contains a CCAST_.CFG, this function will either\n  //  -- copy the default configuration file to the CWD from the extension options, or\n  //  -- open the VectorCAST GUI in \"option mode\" to allow the user to create one\n\n  let returnValue = true;\n  let localConfigurationFilePath = path.join(CWD, configFilename);\n\n  const settings = vscode.workspace.getConfiguration(\"vectorcastTestExplorer\");\n  const defaultConfigurationPath = settings.get(\"configurationLocation\", \"\");\n\n  if (fs.existsSync(localConfigurationFilePath)) {\n    vectorMessage(\"Using the existing configuration file ...\");\n    vectorMessage(`   ${localConfigurationFilePath}`);\n  } else if (defaultConfigurationPath.length > 0) {\n    // The option value gets validated in onDidChangeConfiguration()\n    // Improvement Needed: do we need to worry about the user editing settings.json manually?\n    // copy the file to the current directory\n    vectorMessage(\n      `Using the default configuration file from the extension options ...`\n    );\n    vectorMessage(`   ${defaultConfigurationPath}`);\n    fs.copyFileSync(defaultConfigurationPath, localConfigurationFilePath);\n  } else {\n    // open the VectorCAST GUI in \"option mode\"\n    vscode.window.showInformationMessage(\n      \"Opening the VectorCAST options editor.  Use the editor to create a VectorCAST configuration file that has the correct settings for your compiler.\"\n    );\n\n    vectorMessage(`Opening the VectorCAST options editor ...`);\n    openVcastOptionsDialog(CWD);\n\n    // if the user simply closes the options dialog, no CFG file will get created so we will abort ...\n    if (!fs.existsSync(localConfigurationFilePath)) {\n      vscode.window.showErrorMessage(\n        \"The VectorCAST options editor was closed without creating a configuration file, environment creation will be aborted.\"\n      );\n      returnValue = false;\n    }\n  }\n\n  return returnValue;\n}\n\n// There are some nuances to handling the options.\n// In general, there are user settings, and workspace settings\n// If user=abc, and workspace=xyz, then the value from get() is xyz\n// and we do not get an indication of which one the user is actively changing,\n// however the inspect() method lets us see the values from all levels\n\n// This makes it tricky to handle validity checking for values, since\n// an illegal user value will be \"hidden\" by a legal workspace value,\n// or cause us to insert a valid value at the workspace level leaving the\n// user level with an illegal value.\n\nexport function updateConfigurationOption() {\n  // get the current option value\n  const settings = vscode.workspace.getConfiguration(\"vectorcastTestExplorer\");\n  const currentValue = settings.get(\"configurationLocation\", \"\");\n\n  // empty is valid, and no processing is needed\n  if (currentValue.length > 0) {\n    if (!fs.existsSync(currentValue)) {\n      vscode.window.showErrorMessage(\n        `Provided file path: ${currentValue} does not exist`\n      );\n      // clear illegal value at the workspace level for now\n      // Improvement Needed: use inspect() to determine where the illegal value comes from\n      settings.update(\n        \"configurationLocation\",\n        \"\",\n        vscode.ConfigurationTarget.Workspace\n      );\n    } else if (!currentValue.endsWith(configFilename)) {\n      vscode.window.showErrorMessage(\n        `Provided file path: ${currentValue} is invalid (path must end with ${configFilename})`\n      );\n      // clear illegal value at the workspace level for now\n      // Improvement Needed: use inspect() to determine where the illegal value comes from\n      settings.update(\n        \"configurationLocation\",\n        \"\",\n        vscode.ConfigurationTarget.Workspace\n      );\n    } else {\n      vscode.window.showInformationMessage(\n        `Default configuration file now set to: ${currentValue})`\n      );\n    }\n  }\n}\n\nconst defaultUTlocation = \"./unitTests\";\nexport function updateUnitTestLocationOption() {\n  // get the current option value\n  const settings = vscode.workspace.getConfiguration(\"vectorcastTestExplorer\");\n  const currentValue = settings.get(\"unitTestLocation\", \"\");\n\n  if (currentValue.length == 0) {\n    vscode.window.showErrorMessage(\n      `The unit test location may not be empty, resetting to default`\n    );\n    settings.update(\n      \"unitTestLocation\",\n      defaultUTlocation,\n      vscode.ConfigurationTarget.Workspace\n    );\n  } else if (currentValue.length > 0) {\n    // if the value starts with \"./\" then it is a relative path\n    // and is valid in all cases\n    if (!currentValue.startsWith(\"./\")) {\n      // otherwise we need to check if the path exists\n      if (!fs.existsSync(currentValue)) {\n        vscode.window.showErrorMessage(\n          `Provided directory path: ${currentValue} does not exist, resetting to default`\n        );\n        // clear illegal value at the workspace level for now\n        // Improvement Needed: use inspect() to determine where the illegal value comes from\n        settings.update(\n          \"unitTestLocation\",\n          defaultUTlocation,\n          vscode.ConfigurationTarget.Workspace\n        );\n      }\n    }\n  }\n}\n\nexport function getUnitTestLocationForPath(dirpath: string): string {\n  // path points to the place where we want to create a UT folder\n\n  // By default the unit tests get created in the \"unitTests\" directory\n  // but this can be controlled with an option\n\n  let settings = vscode.workspace.getConfiguration(\"vectorcastTestExplorer\");\n  let unitTestLocation: string = settings.get(\n    \"unitTestLocation\",\n    defaultUTlocation\n  );\n\n  if (unitTestLocation.startsWith(\".\")) {\n    unitTestLocation = path.join(dirpath, unitTestLocation);\n  }\n\n  return unitTestLocation;\n}\n\nexport function useServerOption() {\n  const settings = vscode.workspace.getConfiguration(\"vectorcastTestExplorer\");\n  return settings.get(\"useDataServer\", false);\n}\n", "// This module contains all interactions with a VectorCAST environment via clicast or vcastqt\n\nimport * as vscode from \"vscode\";\n\nimport { execSync, spawn } from \"child_process\";\n\nimport {\n  buildEnvironmentCallback,\n  deleteEnvironmentCallback,\n} from \"./callbacks\";\n\nimport { updateProjectData } from \"./manage/manageSrc/manageCommands\";\n\nimport { openMessagePane, vectorMessage } from \"./messagePane\";\n\nimport {\n  environmentDataCache,\n  getClicastArgsFromTestNode,\n  getClicastArgsFromTestNodeAsList,\n  getEnviroNameFromID,\n  getEnviroPathFromID,\n  getTestNode,\n  testNodeType,\n} from \"./testData\";\n\nimport {\n  commandStatusType,\n  convertServerResponseToCommandStatus,\n  executeClicastCommandUsingServer,\n  executeCommandWithProgress,\n  executeCommandSync,\n  executeVPythonScript,\n  executeWithRealTimeEcho,\n  getJsonDataFromTestInterface,\n  executeWithRealTimeEchoWithProgress,\n} from \"./vcastCommandRunner\";\n\nimport {\n  atgCommandToUse,\n  clicastCommandToUse,\n  manageCommandToUse,\n  vcastCommandToUse,\n} from \"./vcastInstallation\";\n\nimport {\n  getClientRequestObject,\n  getMCDCLineCoverageCommand,\n  getRebuildOptionsString,\n  getVcastInterfaceCommand,\n  getVcastInterfaceCommandForMCDC,\n} from \"./vcastUtilities\";\n\nimport {\n  clientRequestType,\n  closeConnection,\n  globalEnviroDataServerActive,\n  mcdcClientRequestType,\n  transmitCommand,\n  transmitResponseType,\n  vcastCommandType,\n} from \"../src-common/vcastServer\";\nimport { cleanVectorcastOutput } from \"../src-common/commonUtilities\";\nimport { refreshAllExtensionData, removeNodeFromTestPane } from \"./testPane\";\n\nconst path = require(\"path\");\n\n// ------------------------------------------------------------------------------------\n// Direct clicast Calls\n// ------------------------------------------------------------------------------------\n\n// Check License - no server logic needed --------------------------------------------\nexport function vcastLicenseOK(): boolean {\n  const commandToRun = `${clicastCommandToUse} tools has_license`;\n  let commandStatus: commandStatusType = executeCommandSync(\n    commandToRun,\n    process.cwd(),\n    false\n  );\n  return commandStatus.errorCode == 0;\n}\n\n// Build Environment - no server logic needed ----------------------------------------\nexport async function buildEnvironmentFromScript(\n  unitTestLocation: string,\n  enviroName: string\n) {\n  // this function is separate and exported because it's used when we\n  // create environments from source files and from .env files\n\n  // this call runs clicast in the background\n  const enviroPath = path.join(unitTestLocation, enviroName);\n\n  const clicastArgs = [\"-lc\", \"env\", \"build\", enviroName + \".env\"];\n  // This is long running commands so we open the message pane to give the user a sense of what is going on.\n  openMessagePane();\n  executeWithRealTimeEcho(\n    clicastCommandToUse,\n    clicastArgs,\n    unitTestLocation,\n    buildEnvironmentCallback,\n    enviroPath\n  );\n}\n\n// Delete Environment - server logic included -----------------------------------------\nexport async function deleteEnvironment(\n  enviroPath: string,\n  enviroNodeID: string\n) {\n  const enclosingDirectory = path.dirname(enviroPath);\n\n  // if we are in server mode, close any existing connection to the environment\n  if (globalEnviroDataServerActive) await closeConnection(enviroPath);\n\n  // this returns the environment directory name without any nesting\n  let vcastArgs: string[] = [\"-e\" + getEnviroNameFromID(enviroNodeID)];\n  vcastArgs.push(\"enviro\"); // Generate Basis Path Tests Script and Load into Environment (via callback)\n\n  vcastArgs.push(\"delete\");\n  executeWithRealTimeEcho(\n    clicastCommandToUse,\n    vcastArgs,\n    enclosingDirectory,\n    deleteEnvironmentCallback,\n    enviroNodeID\n  );\n}\n\nexport async function deleteLevel(projectPath: string, level: string) {\n  const projectName = path.basename(projectPath);\n  const projectLocation = path.dirname(projectPath);\n  const manageArgs = [\n    `-p${projectName}`,\n    `--level=${level}`,\n    `--delete`,\n    `--force`,\n  ];\n\n  const message = `Deleting ${level} from Project ${projectName} ...`;\n\n  await executeWithRealTimeEchoWithProgress(\n    manageCommandToUse,\n    manageArgs,\n    projectLocation,\n    message\n  );\n\n  const nodeId = path.join(projectPath, level);\n  await refreshAllExtensionData();\n  removeNodeFromTestPane(nodeId);\n}\n\n// Load Test Script - server logic included -----------------------------------------\nexport async function loadTestScriptIntoEnvironment(\n  enviroName: string,\n  scriptPath: string\n) {\n  const enviroPath = path.join(path.dirname(scriptPath), enviroName);\n  // call clicast to load the test script\n  let loadScriptArgs: string = `-e${enviroName} test script run ${scriptPath}`;\n\n  let commandStatus: commandStatusType;\n  // using server ....\n  if (globalEnviroDataServerActive) {\n    commandStatus = await executeClicastCommandUsingServer(\n      enviroPath,\n      loadScriptArgs\n    );\n  } else {\n    commandStatus = executeCommandSync(\n      `${clicastCommandToUse} ${loadScriptArgs}`,\n      path.dirname(scriptPath)\n    );\n  }\n\n  // if the script load fails, executeCommandSync or executeClicastCommand\n  // will open the message pane.  If the load passes, we want to give the\n  // user an indication that it worked ...\n  if (commandStatus.errorCode == 0) {\n    // update project data after the script is loaded successfully\n    vectorMessage(\"Script loaded successfully\");\n    await updateProjectData(enviroPath);\n    // Maybe this will be annoying to users, but I think\n    // it's good to know when the load is complete.\n    vscode.window.showInformationMessage(`Test script loaded successfully`);\n\n    // this API allows a timeout for the message, but I think its too subtle\n    // because it is only shown in the status bar\n    //vscode.window.setStatusBarMessage  (`Test script loaded successfully`, 5000);\n  } else {\n    vectorMessage(\"Error loading test script\\n\");\n  }\n}\n\n// Delete Test Case - server logic included ---------------------------------------\nexport async function deleteSingleTest(\n  testNodeID: string\n): Promise<commandStatusType> {\n  const testNode: testNodeType = getTestNode(testNodeID);\n  const clicastArgs: string = getClicastArgsFromTestNode(\n    testNode,\n    globalEnviroDataServerActive\n  );\n  let deleteTestArgs = `${clicastArgs} test delete`;\n\n  // special vcast case for delete ALL tests for the environment\n  // when no unit, subprogram or test is provided, you have to give YES to delete all\n  if (testNode.unitName.length == 0 && testNode.functionName.length == 0) {\n    deleteTestArgs += \" YES\";\n  }\n\n  // using server ....\n  let commandStatus: commandStatusType;\n  if (globalEnviroDataServerActive) {\n    commandStatus = await executeClicastCommandUsingServer(\n      testNode.enviroPath,\n      deleteTestArgs\n    );\n  } else {\n    commandStatus = executeCommandSync(\n      `${clicastCommandToUse} ${deleteTestArgs}`,\n      path.dirname(testNode.enviroPath)\n    );\n  }\n\n  return commandStatus;\n}\n\n// Set Coded Test Option - no server logic needed -----------------------------------\nexport function setCodedTestOption(unitTestLocation: string) {\n  // This gets called before every build and rebuild environment\n  // to make sure that the CFG file has the right value for coded testing.\n  // This is easier than keeping track of n CFG files and their values\n  // and I think that the coded test option will be removed soon.\n\n  const settings = vscode.workspace.getConfiguration(\"vectorcastTestExplorer\");\n  if (settings.get(\"build.enableCodedTesting\", false)) {\n    // force the coded test option on\n    executeCommandSync(\n      `${clicastCommandToUse} option VCAST_CODED_TESTS_SUPPORT true`,\n      unitTestLocation\n    );\n  } else {\n    // force the coded test option off\n    executeCommandSync(\n      `${clicastCommandToUse} option VCAST_CODED_TESTS_SUPPORT false`,\n      unitTestLocation\n    );\n  }\n}\n\n// Add New or Existing Coded Test - server logic included ---------------------------\nexport enum codedTestAction {\n  add = \"add\",\n  new = \"new\",\n}\nexport async function addCodedTestToEnvironment(\n  enviroPath: string,\n  testNode: testNodeType,\n  action: codedTestAction,\n  userFilePath: string\n): Promise<commandStatusType> {\n  //\n  const enclosingDirectory = path.dirname(enviroPath);\n  const clicastArgs = getClicastArgsFromTestNode(\n    testNode,\n    globalEnviroDataServerActive\n  );\n  let codedTestArgs: string = `${clicastArgs} test coded ${action} ${userFilePath}`;\n\n  let commandStatus: commandStatusType;\n  if (globalEnviroDataServerActive) {\n    commandStatus = await executeClicastCommandUsingServer(\n      enviroPath,\n      codedTestArgs\n    );\n  } else {\n    commandStatus = executeCommandSync(\n      `${clicastCommandToUse} ${codedTestArgs}`,\n      enclosingDirectory\n    );\n  }\n\n  // update the passed in testNode with the coded test file\n  testNode.testFile = userFilePath;\n  return commandStatus;\n}\n\n// Create Test Script - server logic included ----------------------------------------\nexport async function dumpTestScriptFile(\n  testNode: testNodeType,\n  scriptPath: string\n): Promise<commandStatusType> {\n  const enclosingDirectory = path.dirname(testNode.enviroPath);\n  const clicastArgs = getClicastArgsFromTestNode(\n    testNode,\n    globalEnviroDataServerActive\n  );\n  let dumpScriptArgs: string = `${clicastArgs} test script create ${scriptPath}`;\n\n  vectorMessage(`Creating test script: ${scriptPath}`);\n\n  let commandStatus: commandStatusType;\n  if (globalEnviroDataServerActive) {\n    commandStatus = await executeClicastCommandUsingServer(\n      testNode.enviroPath,\n      dumpScriptArgs\n    );\n  } else {\n    commandStatus = executeCommandSync(\n      `${clicastCommandToUse} ${dumpScriptArgs}`,\n      enclosingDirectory\n    );\n  }\n\n  if (commandStatus.errorCode != 0) {\n    vectorMessage(\"Error creating test script\");\n  }\n  return commandStatus;\n}\n\n// Get CBT Test Names - server logic included ----------------------------------------\nexport async function getCBTNamesFromFile(\n  filePath: string,\n  enviroPath: string\n): Promise<any> {\n  // this function will return the CBT test names as a JSON object\n  // containing a \"tests\" field that is a list of\n\n  let returnData;\n  if (globalEnviroDataServerActive) {\n    const requestObject = getClientRequestObject(\n      vcastCommandType.parseCBT,\n      filePath\n    );\n\n    let transmitResponse: transmitResponseType =\n      await transmitCommand(requestObject);\n\n    if (transmitResponse.success && transmitResponse.returnData) {\n      returnData = transmitResponse.returnData.data;\n    } else {\n      vectorMessage(transmitResponse.statusText);\n      return undefined;\n    }\n  } else {\n    const commandToRun = getVcastInterfaceCommand(\n      vcastCommandType.parseCBT,\n      filePath\n    );\n    returnData = getJsonDataFromTestInterface(commandToRun, enviroPath);\n  }\n\n  return returnData;\n}\n\n// Refresh Coded Test List From File - server logic included -------------------------\nexport async function refreshCodedTests(\n  enviroPath: string,\n  enviroNodeID: string\n): Promise<commandStatusType> {\n  // refresh the coded test file for this environment\n  // note: the same file should never be associated with more than one unit\n\n  const testNode = getTestNode(enviroNodeID);\n  const enclosingDirectory = path.dirname(enviroPath);\n  const clicastArgs = getClicastArgsFromTestNode(\n    testNode,\n    globalEnviroDataServerActive\n  );\n  let refreshCodedArgs: string = `${clicastArgs} test coded refresh`;\n\n  let commandStatus: commandStatusType;\n  if (globalEnviroDataServerActive) {\n    commandStatus = await executeClicastCommandUsingServer(\n      enviroPath,\n      refreshCodedArgs\n    );\n  } else {\n    commandStatus = executeCommandSync(\n      `${clicastCommandToUse} ${refreshCodedArgs}`,\n      enclosingDirectory\n    );\n  }\n  return commandStatus;\n}\n\n// Generate Basis Path Test Script and Load into Environment (via callback) ------------\n// Server logic to close existing connection is included\nexport async function runBasisPathCommands(\n  testNode: testNodeType,\n  testScriptPath: string,\n  loadScriptCallBack: any\n) {\n  // Execute Clicast With Progress() uses spawn() which needs the args as a list\n  let argList: string[] = [];\n  argList.push(`${clicastCommandToUse}`);\n  // note that we do NOT set the usingServer parameter here\n  // because we always call clicast directly in this case.\n  argList = argList.concat(getClicastArgsFromTestNodeAsList(testNode));\n  argList = argList.concat([\"tool\", \"auto_test\", `${testScriptPath}`]);\n\n  // if we are in server mode, close any existing connection to the environment\n  // because the time benefit of using the server for this is negligible and\n  // getting a nice progress dialog would be impossible.\n  const enviroPath = path.join(\n    path.dirname(testScriptPath),\n    testNode.enviroName\n  );\n  if (globalEnviroDataServerActive) await closeConnection(enviroPath);\n\n  // Since it can be slow to generate basis path tests, we use a progress dialog\n  // and since we don't want to show all of the stdout messages, we use a\n  // regex filter for what to show\n  const messageFilter = /.*Generating test cases for.*/;\n  const startOfRealMessages = \"VectorCAST Copyright\";\n\n  executeCommandWithProgress(\n    \"Generating Basis Path Tests: \",\n    argList,\n    testNode.enviroName,\n    testScriptPath,\n    startOfRealMessages,\n    messageFilter,\n    loadScriptCallBack\n  );\n}\n\n// ------------------------------------------------------------------------------------\n// Direct ATG Call\n// ------------------------------------------------------------------------------------\n\n// Generate ATG Test Script and Load into Environment (via callback)\n// Server logic to close existing connection is included\nexport async function runATGCommands(\n  testNode: testNodeType,\n  testScriptPath: string,\n  loadScriptCallBack: any\n) {\n  // Execute Clicast With Progress() uses spawn() which needs the args as a list\n  let argList: string[] = [];\n  argList.push(`${atgCommandToUse}`);\n  // note that we do NOT set the usingServer parameter here\n  // because we always call clicast directly in this case.\n  argList = argList.concat(getClicastArgsFromTestNodeAsList(testNode));\n\n  // -F tells atg to NOT use regex for the -s (sub-program) option\n  // since we always use the \"full\" sub-program name, we always set -F\n  argList.push(\"-F\");\n\n  // if we are using over-loaded syntax, then we need to add the -P (parameterized) option\n  if (testNode.functionName.includes(\"(\")) {\n    argList.push(\"-P\");\n  }\n  argList.push(`${testScriptPath}`);\n\n  // if we are in server mode, close any existing connection to the environment\n  // because the time benefit of using the server for this is negligible and\n  // getting a nice progress dialog would be impossible.\n  const enviroPath = path.join(\n    path.dirname(testScriptPath),\n    testNode.enviroName\n  );\n  if (globalEnviroDataServerActive) await closeConnection(enviroPath);\n\n  // Since it can be slow to generate ATG tests, we use a progress dialog\n  // and since we don't want to show all of the stdout messages, we use a\n  // regex filter for what to show\n  const messageFilter = /Subprogram:.*/;\n  const startOfRealMessages = \"Processing unit:\";\n\n  executeCommandWithProgress(\n    \"Generating ATG Tests: \",\n    argList,\n    testNode.enviroName,\n    testScriptPath,\n    startOfRealMessages,\n    messageFilter,\n    loadScriptCallBack\n  );\n}\n\n// ------------------------------------------------------------------------------------\n// Direct vcastqt Calls\n// ------------------------------------------------------------------------------------\n\n// Open vcastqt in options dialog mode - no server logic needed -----------------------\n// In the future we might create a native VS Code dialog for this\nexport function openVcastOptionsDialog(cwd: string) {\n  execSync(`${vcastCommandToUse} -lc -o`, { cwd: cwd });\n}\n\n// Open VectorCAST for an environment directory --------------------------------------\n// Server logic to close existing connection is included\nexport async function openVcastFromEnviroNode(\n  enviroNodeID: string,\n  callback: any\n) {\n  // this returns the environment directory name without any nesting\n  let vcastArgs: string[] = [\"-e \" + getEnviroNameFromID(enviroNodeID)];\n\n  // this returns the full path to the environment directory\n  const enviroPath = getEnviroPathFromID(enviroNodeID);\n  const enclosingDirectory = path.dirname(enviroPath);\n\n  // close any existing clicast connection to this environment\n  if (globalEnviroDataServerActive) await closeConnection(enviroPath);\n\n  // we use spawn directly to control the detached and shell args\n  let vcast = spawn(vcastCommandToUse, vcastArgs, {\n    cwd: enclosingDirectory,\n    detached: true,\n    shell: true,\n    windowsHide: true,\n  });\n  vcast.on(\"exit\", function (code: any) {\n    callback(enviroPath);\n  });\n}\n\nexport async function openProjectInVcast(\n  projectRoot: string,\n  projectName: string\n) {\n  // this returns the environment directory name without any nesting\n  let vcastArgs: string[] = [\"-e \" + projectName];\n\n  const projectPath = path.join(projectRoot, projectName);\n  // close any existing clicast connection to this environment\n  if (globalEnviroDataServerActive) {\n    for (let envData of environmentDataCache.values()) {\n      if (envData.projectPath === projectPath) {\n        await closeConnection(envData.buildDirectory);\n      }\n    }\n  }\n\n  // we use spawn directly to control the detached and shell args\n  let vcast = spawn(vcastCommandToUse, vcastArgs, {\n    cwd: projectRoot,\n    detached: true,\n    shell: true,\n    windowsHide: true,\n  });\n  vcast.on(\"exit\", async function (code: any) {\n    await refreshAllExtensionData();\n  });\n}\n\n// Open VectorCAST for a .vce file ---------------------------------------------------\n// Server logic to close existing connection is included\nexport async function openVcastFromVCEfile(vcePath: string, callback: any) {\n  // split vceFile path into the CWD and the Environment\n  const vceFilename = path.basename(vcePath);\n  let vcastArgs: string[] = [\"-e \" + vceFilename];\n\n  const dotIndex = vcePath.lastIndexOf(\".\");\n  const enviroPath = vcePath.slice(0, dotIndex);\n\n  const enclosingDirectory = path.dirname(vcePath);\n\n  vectorMessage(\"Opening vcast for: \" + enviroPath);\n\n  // close any existing clicast connection to this environment\n  if (globalEnviroDataServerActive) await closeConnection(enviroPath);\n\n  vectorMessage(\n    `Calling vcast with args: ${vcastCommandToUse} ${vcastArgs.join(\" \")}`\n  );\n\n  // we use spawn directly to control the detached and shell args\n  const vcast = spawn(vcastCommandToUse, vcastArgs, {\n    cwd: enclosingDirectory,\n    detached: true,\n    windowsHide: true,\n    env: {\n      ...process.env,\n      QT_DEBUG_PLUGINS: \"1\",\n    },\n  });\n\n  vcast.stdout.on(\"data\", (data) => {\n    vectorMessage(`stdout: ${data.toString()}`);\n  });\n\n  vcast.stderr.on(\"data\", (data) => {\n    vectorMessage(`stderr: ${data.toString()}`);\n  });\n\n  vcast.on(\"error\", (err) => {\n    vectorMessage(`Failed to start VectorCAST process: ${err.message}`);\n  });\n\n  vcast.on(\"exit\", function (code: any) {\n    if (code !== 0) {\n      vectorMessage(`VectorCAST exited with error code: ${code}`);\n    } else {\n      vectorMessage(\"VectorCAST exited successfully.\");\n    }\n    callback(enviroPath);\n  });\n}\n\n// ------------------------------------------------------------------------------------\n// Direct vpython calls\n// ------------------------------------------------------------------------------------\n\n// Get Project Data ---------------------------------------------------------------\n// Server logic is in a separate function below\nexport async function getDataForProject(projectFilePath: string): Promise<any> {\n  // We get back is a JSON formatted string (if the command works)\n  // with a list of environments and their attributes\n\n  // strip the .vcm extension from the project file path\n  let projectDirectoryPath = projectFilePath.slice(0, -4);\n  const jsonData = getProjectDataFromPython(projectDirectoryPath);\n\n  return jsonData;\n}\n\n// vPython Logic\nfunction getProjectDataFromPython(projectDirectoryPath: string): any {\n  // This function will return the environment data for a single directory\n  // by calling vpython with the appropriate command\n  const commandToRun = getVcastInterfaceCommand(\n    vcastCommandType.getProjectData,\n    projectDirectoryPath\n  );\n  let jsonData = getJsonDataFromTestInterface(\n    commandToRun,\n    projectDirectoryPath\n  );\n  return jsonData;\n}\n\n// Get Environment Data ---------------------------------------------------------------\n// Server logic is in a separate function below\nexport async function getDataForEnvironment(enviroPath: string): Promise<any> {\n  // what we get back is a JSON formatted string (if the command works)\n  // that has two sub-fields: testData, and unitData\n  vectorMessage(\"Processing environment data for: \" + enviroPath);\n\n  let jsonData: any;\n  if (globalEnviroDataServerActive) {\n    jsonData = await getEnviroDataFromServer(enviroPath);\n  } else {\n    jsonData = getEnviroDataFromPython(enviroPath);\n  }\n\n  return jsonData;\n}\n\n// vPython Logic\nfunction getEnviroDataFromPython(enviroPath: string): any {\n  // This function will return the environment data for a single directory\n  // by calling vpython with the appropriate command\n  const commandToRun = getVcastInterfaceCommand(\n    vcastCommandType.getEnviroData,\n    enviroPath\n  );\n  let jsonData = getJsonDataFromTestInterface(commandToRun, enviroPath);\n  return jsonData;\n}\n\n// Server Logic\nasync function getEnviroDataFromServer(enviroPath: string): Promise<any> {\n  //\n  const requestObject: clientRequestType = {\n    command: vcastCommandType.getEnviroData,\n    path: enviroPath,\n  };\n\n  let transmitResponse: transmitResponseType =\n    await transmitCommand(requestObject);\n\n  // transmitResponse.returnData is an object with exitCode and data properties\n  // for getEnviroData we might have a version miss-match if the enviro is newer\n  // than the version of vcast we are using, so handle that here\n  if (transmitResponse.success) {\n    const returnData = transmitResponse.returnData;\n    if (returnData.exitCode == 0) {\n      return returnData.data;\n    } else {\n      vectorMessage(returnData.data.text.join(\"\\n\"));\n      return undefined;\n    }\n  } else {\n    await vectorMessage(transmitResponse.statusText);\n    openMessagePane();\n    return undefined;\n  }\n}\n\n// Get Environment Data ---------------------------------------------------------------\n// Server logic is in a separate function below\nexport async function getWorkspaceEnvDataVPython(\n  workspaceDir: string\n): Promise<any> {\n  // what we get back is a JSON formatted string (if the command works)\n  // that has two sub-fields: testData, and unitData\n\n  // This function will return the environment data for a single directory\n  // by calling vpython with the appropriate command\n  const commandToRun = getVcastInterfaceCommand(\n    vcastCommandType.getWorkspaceEnviroData,\n    workspaceDir\n  );\n  let jsonData = getJsonDataFromTestInterface(commandToRun, workspaceDir);\n\n  vectorMessage(\"Building environments data for workspace: \" + workspaceDir);\n\n  return jsonData;\n}\n\n// Execute Test ------------------------------------------------------------------------\n// Server logic is in a separate function below\nexport async function executeTest(\n  enviroPath: string,\n  nodeID: string\n): Promise<commandStatusType> {\n  //\n  let vcastCommand: vcastCommandType = vcastCommandType.executeTest;\n\n  let commandStatus: commandStatusType;\n  const startTime: number = performance.now();\n  if (globalEnviroDataServerActive) {\n    commandStatus = await executeTestViaServer(\n      vcastCommand,\n      enviroPath,\n      nodeID\n    );\n  } else {\n    commandStatus = executeTestViaPython(vcastCommand, enviroPath, nodeID);\n  }\n\n  // added this timing info to help with performance tuning - interesting to leave in\n  const endTime: number = performance.now();\n  const deltaString: string = ((endTime - startTime) / 1000).toFixed(2);\n  vectorMessage(`Execution of test took: ${deltaString} seconds (TS)`);\n\n  return commandStatus;\n}\n\n// Server Logic\nasync function executeTestViaServer(\n  vcastCommand: vcastCommandType,\n  enviroPath: string,\n  nodeID: string\n): Promise<commandStatusType> {\n  //\n  const requestObject = getClientRequestObject(\n    vcastCommand,\n    enviroPath,\n    nodeID\n  );\n\n  let transmitResponse: transmitResponseType =\n    await transmitCommand(requestObject);\n\n  return convertServerResponseToCommandStatus(transmitResponse);\n}\n\n// vPython Logic\nfunction executeTestViaPython(\n  vcastCommand: vcastCommandType,\n  enviroPath: string,\n  nodeID: string\n): commandStatusType {\n  //\n  const commandToRun = getVcastInterfaceCommand(\n    vcastCommand,\n    enviroPath,\n    nodeID\n  );\n\n  const commandStatus = executeVPythonScript(commandToRun, enviroPath, false);\n  return commandStatus;\n}\n\n// Get Execution Report ----------------------------------------------------------------\n// Server logic is in a separate function below\nexport async function getTestExecutionReport(\n  enviroPath: string,\n  testID: string\n): Promise<commandStatusType> {\n  if (globalEnviroDataServerActive) {\n    return await getTestExecutionReportFromServer(enviroPath, testID);\n  } else {\n    return getTestExecutionReportFromPython(enviroPath, testID);\n  }\n}\n\n// Server Logic\nasync function getTestExecutionReportFromServer(\n  enviroPath: string,\n  testID: string\n): Promise<commandStatusType> {\n  //\n  const requestObject = getClientRequestObject(\n    vcastCommandType.report,\n    enviroPath,\n    testID\n  );\n\n  let transmitResponse: transmitResponseType =\n    await transmitCommand(requestObject);\n\n  return convertServerResponseToCommandStatus(transmitResponse);\n}\n\n// python logic\nfunction getTestExecutionReportFromPython(\n  enviroPath: string,\n  testID: string\n): commandStatusType {\n  //\n  const commandToRun = getVcastInterfaceCommand(\n    vcastCommandType.report,\n    enviroPath,\n    testID\n  );\n  const commandStatus: commandStatusType = executeVPythonScript(\n    commandToRun,\n    enviroPath\n  );\n  return commandStatus;\n}\n\n// Rebuild Environment -----------------------------------------------------------------\n// Server logic is in a separate function below\nexport async function rebuildEnvironment(\n  enviroPath: string,\n  rebuildEnvironmentCallback: any\n) {\n  setCodedTestOption(path.dirname(enviroPath));\n\n  if (globalEnviroDataServerActive) {\n    await rebuildEnvironmentUsingServer(enviroPath, rebuildEnvironmentCallback);\n  } else {\n    await rebuildEnvironmentUsingPython(enviroPath, rebuildEnvironmentCallback);\n  }\n}\n\nexport async function rebuildEnvironmentUsingPython(\n  enviroPath: string,\n  rebuildEnvironmentCallback: any\n) {\n  const commandToRun = getVcastInterfaceCommand(\n    vcastCommandType.rebuild,\n    enviroPath\n  );\n  const optionString = `--options=${getRebuildOptionsString()}`;\n\n  let commandPieces = commandToRun.split(\" \");\n  commandPieces.push(optionString);\n  const commandVerb = commandPieces[0];\n  commandPieces.shift();\n\n  const unitTestLocation = path.dirname(enviroPath);\n\n  // The progress bar ensures the execution waits and prevents failure when rebuilding\n  // multiple environments (for instance when changing the coverageKind).\n  // It also provides visual progress to the user.\n  await vscode.window.withProgress(\n    {\n      location: vscode.ProgressLocation.Notification,\n      title: `Rebuilding environment: ${path.basename(enviroPath)}...`,\n      cancellable: false,\n    },\n    async (progress) => {\n      progress.report({ increment: 25 });\n\n      await new Promise<void>((resolve) => {\n        executeWithRealTimeEcho(\n          commandVerb,\n          commandPieces,\n          unitTestLocation,\n          async (envPath: string, errorCode: number) => {\n            await rebuildEnvironmentCallback(envPath, errorCode);\n            resolve();\n          },\n          enviroPath\n        );\n      });\n\n      progress.report({ increment: 100 });\n    }\n  );\n}\n\nexport async function rebuildEnvironmentUsingServer(\n  enviroPath: string,\n  rebuildEnvironmentCallback: any\n) {\n  const requestObject: clientRequestType = {\n    command: vcastCommandType.rebuild,\n    path: enviroPath,\n    options: getRebuildOptionsString(),\n  };\n\n  // We don't know how long this will take, so we just\n  // use a running rabbit style progress bar\n  let transmitResponse = await vscode.window.withProgress(\n    {\n      location: vscode.ProgressLocation.Notification,\n      title: `Rebuilding environment: ${path.basename(enviroPath)}... `,\n      cancellable: false,\n    },\n    async (progress): Promise<transmitResponseType> => {\n      progress.report({ increment: 25 });\n      let transmitResponse = await transmitCommand(requestObject);\n      progress.report({ increment: 100 });\n      return transmitResponse;\n    }\n  );\n\n  const commandStatus = convertServerResponseToCommandStatus(transmitResponse);\n  // in the server case, we cannot echo the rebuild output to the message pane\n  // in real-time as we do in the Python case, so show it here!\n  vectorMessage(\"-\".repeat(100));\n  vectorMessage(commandStatus.stdout);\n\n  // call the callback to update the test explorer pane\n  await rebuildEnvironmentCallback(enviroPath, commandStatus.errorCode);\n}\n\n// Get Execution Report ----------------------------------------------------------------\n// Server logic is in a separate function below\nexport async function getMCDCReport(\n  enviroPath: string,\n  unit: string,\n  lineNumber: number\n): Promise<commandStatusType> {\n  if (globalEnviroDataServerActive) {\n    return await getMCDCReportFromServer(enviroPath, unit, lineNumber);\n  } else {\n    return getMCDCReportFromPython(enviroPath, unit, lineNumber);\n  }\n}\n\n// Server Logic\nasync function getMCDCReportFromServer(\n  enviroPath: string,\n  unitName: string,\n  lineNumber: number\n): Promise<commandStatusType> {\n  //\n  const requestObject: mcdcClientRequestType = {\n    command: vcastCommandType.mcdcReport,\n    path: enviroPath,\n    unitName: unitName,\n    lineNumber: lineNumber,\n  };\n\n  vectorMessage(\n    `\"command: ${requestObject.command}, path: ${requestObject.path}, unit: ${requestObject.unitName}, lineNumber: ${requestObject.lineNumber}`\n  );\n  let transmitResponse: transmitResponseType =\n    await transmitCommand(requestObject);\n\n  return convertServerResponseToCommandStatus(transmitResponse);\n}\n\n// python logic\nfunction getMCDCReportFromPython(\n  enviroPath: string,\n  unitName: string,\n  lineNumber: number\n): commandStatusType {\n  //\n  const commandToRun = getVcastInterfaceCommandForMCDC(\n    vcastCommandType.mcdcReport,\n    enviroPath,\n    unitName,\n    lineNumber\n  );\n  const commandStatus: commandStatusType = executeVPythonScript(\n    commandToRun,\n    enviroPath\n  );\n  return commandStatus;\n}\n\n/**\n * Gets all MCDC lines for every unit contained in the Environment\n * @param enviroPath Path to Environment\n * @returns Set of units including their covered MCDC lines\n */\nexport async function getMCDCCoverageLines(enviroPath: string) {\n  let mcdcLines: string;\n  if (globalEnviroDataServerActive) {\n    mcdcLines = await getMCDCCoverageLinesFromServer(enviroPath);\n  } else {\n    mcdcLines = getMCDCCoverageLinesFromPython(enviroPath);\n  }\n  return mcdcLines;\n}\n\n/**\n * Python logic to retrieve all MCDC Lines from an environment.\n * @param enviroPath Path to Environment\n * @returns Cleaned string of MCDC lines\n */\nfunction getMCDCCoverageLinesFromPython(enviroPath: string) {\n  const commandToRun = getMCDCLineCoverageCommand(enviroPath);\n  const commandStatus: commandStatusType = executeCommandSync(\n    commandToRun,\n    process.cwd()\n  );\n  return cleanVectorcastOutput(commandStatus.stdout);\n}\n\n/**\n * Server logic to retrieve all MCDC Lines from an environment.\n * @param enviroPath Path to Environment\n * @returns Cleaned string of MCDC lines\n */\nasync function getMCDCCoverageLinesFromServer(\n  enviroPath: string\n): Promise<string> {\n  //\n  const requestObject: mcdcClientRequestType = {\n    command: vcastCommandType.mcdcLines,\n    path: enviroPath,\n  };\n\n  let transmitResponse: transmitResponseType =\n    await transmitCommand(requestObject);\n\n  const commandStatus = convertServerResponseToCommandStatus(transmitResponse);\n  return cleanVectorcastOutput(commandStatus.stdout);\n}\n", "import * as vscode from \"vscode\";\nimport * as fs from \"fs\";\n\nimport {\n  buildEnvironmentCallback,\n  deleteEnvironmentCallback,\n} from \"../../callbacks\";\n\nimport {\n  addEnvToProjectCallback,\n  buildEnvironmentIncrementalCallback,\n  cleanEnvironmentCallback,\n} from \"./manageCallbacks\";\n\nimport {\n  createNewCFGFromCompiler,\n  findTestItemInController,\n} from \"./manageUtils\";\n\nimport { openMessagePane, vectorMessage } from \"../../messagePane\";\n\nimport { getEnviroNodeData } from \"../../testData\";\n\nimport { executeWithRealTimeEchoWithProgress } from \"../../vcastCommandRunner\";\n\nimport { manageCommandToUse } from \"../../vcastInstallation\";\n\nimport {\n  checkIfEnvironmentIsBuildMultipleTimes,\n  closeAnyOpenErrorFiles,\n  deleteOtherBuildFolders,\n  envIsEmbeddedInProject,\n} from \"../../vcastUtilities\";\n\nimport {\n  closeConnection,\n  globalEnviroDataServerActive,\n} from \"../../../src-common/vcastServer\";\n\nimport {\n  globalProjectDataCache,\n  refreshAllExtensionData,\n  runTests,\n} from \"../../testPane\";\nimport { normalizePath } from \"../../utilities\";\nimport { viewResultsReportVC } from \"../../reporting\";\n\nconst path = require(\"path\");\n\n// ------------------------------------------------------------------------------------\n// Direct manage Calls\n// ------------------------------------------------------------------------------------\n\n// Build Project Environment - no server logic needed ---------------------------------\nexport async function buildProjectEnvironment(\n  projectFilePath: string,\n  levelString: string,\n  enviroPath: string\n) {\n  // Used to build a manage project environment that has is not currently built\n  // need to issue a vcast manage command to build the enviro, similar to this\n  // manage -p SecondaryProject --level=GNU_Native_Automatic_C++17/Suite3/FOO --build\n\n  const projectName = path.basename(projectFilePath);\n  const projectLocation = path.dirname(projectFilePath);\n  const manageArgs = [`-p${projectName}`, `--level=${levelString}`, \"--build\"];\n\n  const progressMessage = `Building environment: ${levelString} ...`;\n\n  // This is long running commands so we open the message pane to give the user a sense of what is going on.\n  openMessagePane();\n  await executeWithRealTimeEchoWithProgress(\n    manageCommandToUse,\n    manageArgs,\n    projectLocation,\n    progressMessage,\n    buildEnvironmentCallback,\n    enviroPath\n  );\n}\n\n/**\n * Creates a new compiler in a selected project\n * @param projectPath Path to project\n * @param compiler Selected Compiler\n * @returns\n */\nexport async function createNewCompilerInProject(\n  projectPath: string,\n  compiler: string\n) {\n  const projectName = path.basename(projectPath);\n  const projectLocation = projectPath.split(\".vcm\")[0];\n  // We save all new created compilers in a compilers dir\n  // Check if it already exists, otherwise create it\n  if (!fs.existsSync(projectLocation)) {\n    vectorMessage(`${projectLocation} does not exist.`);\n    return;\n  }\n  const projectCompilerPath = path.join(projectLocation, \"compilers\");\n  if (!fs.existsSync(projectCompilerPath)) {\n    await vscode.workspace.fs.createDirectory(\n      vscode.Uri.file(projectCompilerPath)\n    );\n  }\n\n  const compilerPath = await createNewCFGFromCompiler(\n    compiler,\n    projectCompilerPath\n  );\n\n  if (compilerPath) {\n    const compilerName = path.basename(compilerPath);\n    await addCompilerToProject(projectPath, compilerPath);\n    vectorMessage(`Added Compiler ${compilerName} to Project ${projectName}`);\n  } else {\n    vectorMessage(`No Compiler found for Project ${projectName}`);\n  }\n}\n\n/**\n * Creates a new Project including a new Compiler\n * @param projectPath Path to the new project file\n * @param compiler Compiler Name\n */\nexport async function createNewProject(projectPath: string, compiler: string) {\n  const projectName = path.basename(projectPath);\n  const projectLocation = path.dirname(projectPath);\n  const progressMessage = `Creating new Project ${projectName}  ...`;\n  const manageArgs = [`-p${projectName}`, `--create`, \"--force\"];\n\n  await executeWithRealTimeEchoWithProgress(\n    manageCommandToUse,\n    manageArgs,\n    projectLocation,\n    progressMessage\n  );\n\n  await createNewCompilerInProject(projectPath, compiler);\n}\n\nexport async function cleanProjectEnvironment(\n  enviroPath: string,\n  enviroNodeID: string,\n  projectPath: string,\n  level: string\n) {\n  const projectName = path.basename(projectPath);\n  const projectLocation = path.dirname(projectPath);\n  const progressMessage = `Cleaning up Environment ${level}  ...`;\n  const manageArgs = [\n    `-p${projectName}`,\n    `--level=${level}`,\n    \"--clean\",\n    \"--force\",\n  ];\n\n  // if we are in server mode, close any existing connection to the environment\n  if (globalEnviroDataServerActive) await closeConnection(enviroPath);\n\n  await executeWithRealTimeEchoWithProgress(\n    manageCommandToUse,\n    manageArgs,\n    projectLocation,\n    progressMessage,\n    cleanEnvironmentCallback,\n    enviroNodeID\n  );\n}\n\nexport async function buildExecuteIncremental(\n  projectPath: string,\n  level: string,\n  enviroPathList: string[],\n  nodeId: string\n) {\n  const projectName = path.basename(projectPath);\n  const projectLocation = path.dirname(projectPath);\n  const manageArgs = [`-p${projectName}`, \"--build-execute\", \"--incremental\"];\n\n  if (level != \"\") {\n    manageArgs.push(`--level=${level}`);\n  }\n\n  const progressMessage = `Building and Executing Level: ${level} ...`;\n\n  openMessagePane();\n  await executeWithRealTimeEchoWithProgress(\n    manageCommandToUse,\n    manageArgs,\n    projectLocation,\n    progressMessage,\n    buildEnvironmentIncrementalCallback,\n    enviroPathList\n  );\n\n  await closeAnyOpenErrorFiles();\n\n  // The build-execute command only provides an HTML report indicating whether the build was necessary.\n  // However, it does not include test results, which we need to refresh on the extension side.\n  // To ensure test results are updated, we rerun the tests here.\n  // It's crucial to call runTests so that results are logged and test icons in the testing pane are refreshed.\n  const testItem = findTestItemInController(nodeId);\n  if (testItem) {\n    const request = new vscode.TestRunRequest([testItem]);\n    await runTests(request, new vscode.CancellationTokenSource().token);\n  } else {\n    vectorMessage(`TestItem for ${nodeId} not found`);\n  }\n\n  // Show the HTML Report\n  const htmlFileName =\n    projectName.split(\".\")[0] + \"_manage_incremental_rebuild_report.html\";\n  const htmlFilePath = normalizePath(path.join(projectLocation, htmlFileName));\n  viewResultsReportVC(htmlFilePath);\n}\n\nexport async function removeTestsuiteFromProject(\n  enviroPath: string,\n  enviroNodeID: string\n) {\n  let manageArgs: string[] = [];\n  let progressMessage: string = \"\";\n  let projectLocation: string = \"\";\n\n  // if we are in server mode, close any existing connection to the environment\n  if (globalEnviroDataServerActive) await closeConnection(enviroPath);\n\n  for (const [projectPath, projectData] of globalProjectDataCache) {\n    for (const [cachedEnviroPath, enviroData] of projectData) {\n      // We search for the correct environment in the cache in order to get the project\n      if (cachedEnviroPath === enviroPath) {\n        const projectName = path.basename(projectPath);\n        const levelString = enviroData.displayName;\n        projectLocation = path.dirname(projectPath);\n        const testsuite = path.dirname(levelString);\n        const envName = path.basename(enviroPath);\n\n        manageArgs = [\n          `-p${projectName}`,\n          `--level=${testsuite}`,\n          \"--remove\",\n          `${envName}`,\n          `--force`,\n        ];\n        progressMessage = `Removing Testsuite ${levelString} from Project ${projectName}`;\n        break;\n      }\n    }\n  }\n  await executeWithRealTimeEchoWithProgress(\n    manageCommandToUse,\n    manageArgs,\n    projectLocation,\n    progressMessage,\n    deleteEnvironmentCallback,\n    enviroNodeID\n  );\n}\n\n/**\n * Deletes the environment from the project\n * @param projectPath Path to the project\n * @param enviroName Name of the environment\n */\nexport async function deleteEnvironmentFromProject(\n  projectPath: string,\n  enviroName: string\n) {\n  const projectName = path.basename(projectPath);\n  const projectLocation = path.dirname(projectPath);\n  const manageArgs = [\n    `-p${projectName}`,\n    `-e${enviroName}`,\n    `--delete`,\n    `--force`,\n  ];\n\n  const message = `Deleting ${enviroName} from Project ${projectName} ...`;\n\n  await executeWithRealTimeEchoWithProgress(\n    manageCommandToUse,\n    manageArgs,\n    projectLocation,\n    message\n  );\n  await refreshAllExtensionData();\n}\n\nexport async function createTestsuiteInCompiler(\n  projectPath: string,\n  compilerName: string,\n  testsuiteName: string\n) {\n  const projectName = path.basename(projectPath);\n  const projectLocation = path.dirname(projectPath);\n  const manageArgs = [\n    `-p${projectName}`,\n    `--compiler=${compilerName}`,\n    `--testsuite=${testsuiteName}`,\n    `--create`,\n    \"--force\",\n  ];\n\n  const message = `Adding Testsuite ${testsuiteName} to Compiler ${compilerName} ...`;\n\n  await executeWithRealTimeEchoWithProgress(\n    manageCommandToUse,\n    manageArgs,\n    projectLocation,\n    message\n  );\n\n  await refreshAllExtensionData();\n}\n\n/**\n * Imports an already existing Environment to the Project if possible\n * @param projectFilePath Path to the Project\n * @param testsuite Testsuite string containing CompilerName/TestsuiteName\n * @param enviroPath Path to Environment\n */\nexport async function importEnvToTestsuite(\n  projectFilePath: string,\n  testsuite: string,\n  enviroPath: string\n) {\n  const projectName = path.basename(projectFilePath);\n  const projectLocation = path.dirname(projectFilePath);\n  const manageArgs = [\n    `-p${projectName}`,\n    `--level=${testsuite}`,\n    `--import`,\n    `${enviroPath}`,\n    \"--force\",\n    \"--migrate\",\n  ];\n\n  const message = `Importing Environment ${enviroPath} to Testsuite ${testsuite}`;\n\n  await executeWithRealTimeEchoWithProgress(\n    manageCommandToUse,\n    manageArgs,\n    projectLocation,\n    message,\n    addEnvToProjectCallback,\n    enviroPath\n  );\n}\n\n/**\n * Imports an existing Compiler configuration into the Project.\n * @param projectFilePath Path to the Project file (e.g. from args.id)\n * @param pathToCFG Path to the selected .CFG file\n */\nexport async function addCompilerToProject(\n  projectFilePath: string,\n  pathToCFG: string\n) {\n  const projectName = path.basename(projectFilePath);\n  const projectLocation = path.dirname(projectFilePath);\n  const manageArgs = [`-p${projectName}`, `--cfg-to-compiler=${pathToCFG}`];\n  const message = `Importing Compiler configuration from ${pathToCFG} into project ${projectName}`;\n\n  // Call your function that runs the process with a progress UI.\n  await executeWithRealTimeEchoWithProgress(\n    manageCommandToUse,\n    manageArgs,\n    projectLocation,\n    message\n  );\n\n  await refreshAllExtensionData();\n}\n\n/**\n * Imports an already existing Environment to the Project if possible\n * @param projectFilePath Path to the Project\n * @param testsuite Testsuite string containing CompilerName/TestsuiteName\n * @param enviroPath Path to Environment\n */\nexport async function createNewTestsuiteInProject(\n  projectFilePath: string,\n  testsuite: string\n) {\n  const projectName = path.basename(projectFilePath);\n  const projectLocation = path.dirname(projectFilePath);\n  const manageArgs = [\n    `-p${projectName}`,\n    `--create`,\n    `--level=${testsuite}`,\n    \"--force\",\n  ];\n  const message = `Creating Testsuite ${testsuite} in Project`;\n\n  await executeWithRealTimeEchoWithProgress(\n    manageCommandToUse,\n    manageArgs,\n    projectLocation,\n    message\n  );\n}\n\n/**\n * Imports an already existing Environment to the Project if possible\n * @param projectFilePath Path to the Project\n * @param testsuite Testsuite string containing CompilerName/TestsuiteName\n * @param enviroPath Path to Environment\n */\nexport async function addEnvToTestsuite(\n  projectFilePath: string,\n  testsuite: string,\n  enviroName: string\n) {\n  const projectName = path.basename(projectFilePath);\n  const projectLocation = path.dirname(projectFilePath);\n  const manageArgs = [\n    `-p${projectName}`,\n    `--level=${testsuite}`,\n    `--add`,\n    `${enviroName}`,\n    \"--force\",\n  ];\n\n  const message = `Adding Environment ${enviroName} to Testsuite`;\n\n  await executeWithRealTimeEchoWithProgress(\n    manageCommandToUse,\n    manageArgs,\n    projectLocation,\n    message,\n    addEnvToProjectCallback,\n    enviroName\n  );\n}\n\n/**\n * Updates the project data of all currenrly opened projects in the workspace\n * @param enviroPath Path to the environment\n * @param enviroName Name of the environment\n */\nexport async function updateAllOpenedProjects() {\n  for (const projectPath of globalProjectDataCache.keys()) {\n    const projectLocation = path.dirname(projectPath);\n    const projectName = path.basename(projectPath);\n    const manageArgs: string[] = [\n      `-p${projectName}`,\n      \"--apply-changes\",\n      \"--force\",\n    ];\n\n    openMessagePane();\n    const progressMessage = \"Updating project data ...\";\n    await executeWithRealTimeEchoWithProgress(\n      manageCommandToUse,\n      manageArgs,\n      projectLocation,\n      progressMessage\n    );\n  }\n}\n\n/**\n * Updates the project data for the given environment\n * @param enviroPath Path to the environment\n * @param forceUpdate Whether to force update even if auto-update is disabled\n */\nexport async function updateProjectData(\n  enviroPath: string,\n  forceUpdate = false\n) {\n  const normalizedPath = normalizePath(enviroPath);\n  const config = vscode.workspace.getConfiguration(\"vectorcastTestExplorer\");\n  const autoUpdate = config.get<boolean>(\n    \"automaticallyUpdateManageProject\",\n    true\n  );\n\n  // Only update if the current env is embedded in a project and the setting is enabled\n  // or we force the update by actively clicking on the Update Project Button\n  if (\n    !envIsEmbeddedInProject(normalizedPath) ||\n    (!autoUpdate && !forceUpdate)\n  ) {\n    return;\n  }\n\n  const enviroName = path.basename(normalizedPath);\n\n  // Check if the environment is built in multiple test suites\n  const shouldBlock = await checkIfEnvironmentIsBuildMultipleTimes(enviroName);\n\n  if (shouldBlock) {\n    // Show an information message with two options.\n    const choice = await vscode.window.showInformationMessage(\n      `Updating the project data is currently blocked because ${enviroName} is built in multiple testsuites. You can clean the other Environments now and the project will be updated.`,\n      \"Cancel\",\n      \"Clean other Environments\"\n    );\n\n    if (choice !== \"Clean other Environments\") return;\n\n    // Delete the build folders of the other builds.\n    await deleteOtherBuildFolders(normalizedPath);\n  }\n\n  // Update Project after cleaning the other environments OR if update is not blocked\n  const { projectPath, displayName } = getEnviroNodeData(normalizedPath);\n  const projectName = path.basename(projectPath);\n  const projectLocation = path.dirname(projectPath);\n  const manageArgs = [\n    `-p${projectName}`,\n    `--level=${displayName}`,\n    \"--apply-changes\",\n    \"--force\",\n  ];\n\n  openMessagePane();\n  const progressMessage = \"Updating project data ...\";\n  await executeWithRealTimeEchoWithProgress(\n    manageCommandToUse,\n    manageArgs,\n    projectLocation,\n    progressMessage\n  );\n}\n", "import * as vscode from \"vscode\";\n\n// some functions that are used across functional areas of the extensions\nimport { vectorMessage } from \"../../messagePane\";\nimport { getEnviroPathFromID } from \"../../testData\";\n\nimport {\n  refreshAllExtensionData,\n  removeCBTfilesCacheForEnviro,\n  updateDataForEnvironment,\n  vcastUnbuiltEnviroList,\n} from \"../../testPane\";\n\nimport { removeFilePattern } from \"../../utilities\";\nimport { removeCoverageDataForEnviro } from \"../../vcastTestInterface\";\n\nconst fs = require(\"fs\");\n\n/**\n * Callback function when we clean a Project-Environment\n * @param enviroPath Path to env\n * @param code Exit code of the process\n */\nexport async function cleanEnvironmentCallback(\n  enviroNodeID: string,\n  code: number\n) {\n  // if the delete succeeded then we need to remove the environment from the test pane\n  if (code == 0) {\n    removeCBTfilesCacheForEnviro(enviroNodeID);\n    let enviroPath = getEnviroPathFromID(enviroNodeID);\n    if (!enviroPath) {\n      // We check if it is present in the unbuilt list\n      // If so, we take the id and split it after \"vcast:\" to get the path\n      // In case that is not possible, we throw an error message\n      if (vcastUnbuiltEnviroList.includes(enviroNodeID)) {\n        const parts = enviroNodeID.split(\":\");\n        enviroPath = parts.slice(1).join(\":\");\n      } else {\n        vscode.window.showErrorMessage(\n          `Unable to determine environment path from node: ${enviroNodeID}`\n        );\n        return;\n      }\n    }\n\n    removeCoverageDataForEnviro(enviroPath);\n    await refreshAllExtensionData();\n\n    // vcast does not delete the ENVIRO-NAME.* files so we clean those up here\n    removeFilePattern(enviroPath, \".*\");\n  }\n}\n\nexport async function addEnvToProjectCallback(\n  enviroPath: string,\n  code: number\n) {\n  // This function gets called after we add an environment to a project.\n  // We check the return code, update Project Tree, and cleanup on failure\n\n  if (code == 0) {\n    await refreshAllExtensionData();\n  } else {\n    try {\n      // remove the environment directory, as well as the .vce file\n      vectorMessage(\"Environment adding failed, removing artifacts ...\");\n      fs.rmSync(enviroPath, { recursive: true, force: true });\n      fs.unlinkSync(enviroPath + \".vce\");\n      // Don't want to remove the .env, because leaving it allows the\n      // user to edit and then right click to try a re-build\n    } catch (error: any) {\n      vectorMessage(\n        `Error while adding ${enviroPath} to project: ${error.message}`\n      );\n    }\n  }\n}\n\n/**\n * Callback function for executing buildEnvironmentIncremental command\n * @param enviroPathList List of env path\n * @param code Exit code\n */\nexport async function buildEnvironmentIncrementalCallback(\n  enviroPathList: string[],\n  code: number\n) {\n  // This function gets called after we Build/Execute a Node\n  // Basically the same like buildEnvironmentCallback, but we can have multiple environments\n  // We check the return code, update the test pane, and cleanup on failure\n\n  for (let enviroPath of enviroPathList) {\n    if (code == 0) {\n      await updateDataForEnvironment(enviroPath);\n    } else {\n      try {\n        // remove the environment directory, as well as the .vce file\n        vectorMessage(\"Environment build failed, removing artifacts ...\");\n        fs.rmSync(enviroPath, { recursive: true, force: true });\n        fs.unlinkSync(enviroPath + \".vce\");\n        // Don't want to remove the .env, because leaving it allows the\n        // user to edit and then right click to try a re-build\n      } catch (error: any) {\n        vectorMessage(\n          `Error while cleaning up environment at ${enviroPath}: ${error.message}`\n        );\n      }\n    }\n  }\n}\n", "// To build this I started with the Test Explorer that\n// I created using the Test Explorer UI, and the followed their\n// excellent step by step instructions from this repo example\n// https://github.com/connor4312/test-controller-migration-example\n\nimport * as vscode from \"vscode\";\n\nimport { Position, Range, Uri, TestMessage } from \"vscode\";\n\nimport { sendTestFileDataToLanguageServer } from \"./client\";\n\nimport { updateDisplayedCoverage, updateCOVdecorations } from \"./coverage\";\n\nimport { updateTestDecorator } from \"./editorDecorator\";\n\nimport { updateExploreDecorations } from \"./fileDecorator\";\n\nimport {\n  errorLevel,\n  indentString,\n  openMessagePane,\n  vectorMessage,\n} from \"./messagePane\";\n\nimport { viewResultsReport } from \"./reporting\";\n\nimport {\n  addTestNodeToCache,\n  clearEnviroDataCache,\n  clearTestNodeCache,\n  compoundOnlyString,\n  createTestNodeInCache,\n  duplicateTestNode,\n  environmentNodeDataType,\n  getEnviroNodeData,\n  getEnviroPathFromID,\n  getEnviroNodeIDFromID,\n  getFunctionNameFromID,\n  getTestNameFromID,\n  getUnitNameFromID,\n  saveEnviroNodeData,\n  testNodeType,\n  testNodeCache,\n} from \"./testData\";\n\nimport {\n  addLaunchConfiguration,\n  cleanTestResultsPaneMessage,\n  forceLowerCaseDriveLetter,\n  getWorkspaceRootPath,\n  loadLaunchFile,\n  normalizePath,\n  openFileWithLineSelected,\n} from \"./utilities\";\n\nimport {\n  deleteSingleTest,\n  getCBTNamesFromFile,\n  getDataForEnvironment,\n  getDataForProject,\n  getWorkspaceEnvDataVPython,\n  loadTestScriptIntoEnvironment,\n  refreshCodedTests,\n} from \"./vcastAdapter\";\n\nimport { updateProjectData } from \"./manage/manageSrc/manageCommands\";\n\nimport { globalPathToSupportFiles, launchFile } from \"./vcastInstallation\";\n\nimport {\n  addResultFileToStatusArray,\n  globalTestStatusArray,\n  resetCoverageData,\n  runVCTest,\n  testDataType,\n  updateGlobalDataForFile,\n  vcastEnviroFile,\n} from \"./vcastTestInterface\";\n\nimport {\n  adjustScriptContentsBeforeLoad,\n  checkIfAnyProjectsAreOpened,\n  closeAnyOpenErrorFiles,\n  ensureCompilerNodes,\n  ensureTestsuiteNodes,\n  generateAndLoadATGTests,\n  generateAndLoadBasisPathTests,\n  getWebviewComboboxItems,\n  testStatus,\n} from \"./vcastUtilities\";\n\nimport {\n  cfgOptionType,\n  getEnviroNameFromScript,\n  getVcastOptionValues,\n} from \"../src-common/commonUtilities\";\nimport {\n  closeConnection,\n  globalEnviroDataServerActive,\n} from \"../src-common/vcastServer\";\nimport {\n  addManagedEnvironments,\n  ignoreEnvsInProject,\n} from \"./manage/manageSrc/manageUtils\";\n\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst crypto = require(\"crypto\");\n\ntype FunctionTestData = {\n  name: string;\n  parameterizedName: string;\n  tests: any[]; // could be typed further if you know test object shape\n};\n\ntype FileTestData =\n  | { name: string; tests: any[] }\n  | { name: string; path: string; functions: FunctionTestData[] };\n\ntype FunctionUnitData = {\n  isTestable: boolean;\n  name: string;\n  startLine: number;\n};\n\ntype UnitData = {\n  cmcChecksum: string;\n  covered: string;\n  partiallyCovered: string;\n  uncovered: string;\n  path: string;\n  functionList: FunctionUnitData[];\n};\n\ntype EnviroData = {\n  vcePath: string;\n  testData: FileTestData[];\n  unitData: UnitData[];\n  mockingSupport: boolean;\n};\n\ntype CachedWorkspaceData = {\n  testData: FileTestData[];\n  unitData: UnitData[];\n  enviro: EnviroData[];\n  errors?: string[];\n};\n\n// This function does the work of adding the actual tests\n// to whatever parent is passed in generally a function node\n//\n// Note that if you pass in a fileURI, then the test tree node will have\n// a \"go to test\" icon, and clicking on it will open the file at the test location\n// and double click on the test will open the test file.\nfunction addTestNodes(\n  testList: any[],\n  parentNode: vcastTestItem,\n  parentNodeID: string,\n  parentNodeForCache: testNodeType\n) {\n  for (let testIndex = 0; testIndex < testList.length; testIndex++) {\n    // we save the current test status to be used by updateStatusForNode\n    let testData: testDataType = {\n      status: testList[testIndex].status,\n      passfail: testList[testIndex].passfail,\n      time: testList[testIndex].time,\n      notes: testList[testIndex].notes,\n      resultFilePath: \"\",\n      stdout: \"\",\n      compoundOnly: testList[testIndex].compoundOnly,\n      testFile: testList[testIndex].codedTestFile ?? \"\",\n      testStartLine: testList[testIndex].codedTestLine ?? 1,\n    };\n\n    testData.testFile = forceLowerCaseDriveLetter(\n      path.normalize(testData.testFile)\n    );\n    parentNodeForCache.testFile = testData.testFile;\n\n    let testName = testList[testIndex].testName;\n    if (testData.compoundOnly) testName += compoundOnlyString;\n    const testNodeID = parentNodeID + \".\" + testName;\n\n    // add a cache node for the test\n    let testNodeForCache: testNodeType = duplicateTestNode(parentNodeID);\n    testNodeForCache.testName = testName;\n    testNodeForCache.testFile = testData.testFile;\n    testNodeForCache.testStartLine = testData.testStartLine;\n    addTestNodeToCache(testNodeID, testNodeForCache);\n\n    globalTestStatusArray[testNodeID] = testData;\n\n    // currently we only use the Uri and Range for Coded Tests\n    let testURI: vscode.Uri | undefined = undefined;\n    let testRange: vscode.Range | undefined = undefined;\n    if (testData.testFile.length > 0) {\n      testURI = vscode.Uri.file(testData.testFile);\n      const startLine = testData.testStartLine;\n      testRange = new Range(\n        new Position(startLine - 1, 0),\n        new Position(startLine - 1, 0)\n      );\n    } else {\n      testURI = undefined;\n    }\n\n    let testNode: vcastTestItem = globalController.createTestItem(\n      testNodeID,\n      testName,\n      testURI\n    );\n    testNode.nodeKind = nodeKind.test;\n    testNode.isCompoundOnly = testData.compoundOnly;\n    testNode.range = testRange;\n\n    parentNode.children.add(testNode);\n  }\n\n  // Note: vcast currently only supports a single coded test file per uut,\n  // so when there are coded test children, we set the coded testFile\n  // for the function node to match the first child\n\n  // vcastHasCodedTestsList is used by the package.json to control context menu choices\n  if (testList.length > 0 && testList[0].codedTestFile) {\n    vcastHasCodedTestsList.push(parentNodeID);\n  } else {\n    vcastHasCodedTestsList = vcastHasCodedTestsList.filter(\n      (item) => item !== parentNodeID\n    );\n  }\n  vscode.commands.executeCommand(\n    \"setContext\",\n    \"vectorcastTestExplorer.vcastHasCodedTestsList\",\n    vcastHasCodedTestsList\n  );\n\n  addTestNodeToCache(parentNodeID, parentNodeForCache);\n}\n\nconst codedTestFunctionName = \"coded_tests_driver\";\n// leading space is intentional to force it to the top of the list\nconst codedTestDisplayName = \" Coded Tests\";\nfunction processVCtestData(\n  enviroPath: string,\n  enviroNodeID: string,\n  enviroNode: vcastTestItem,\n  jsonData: any\n) {\n  // enviroNodeID, is the parent of the nodes to be added here\n\n  // The top level of the JSON is an array ...\n  const unitList = jsonData.testData;\n  for (const unitData of unitList) {\n    const unitNodeID = `${enviroNodeID}|${unitData.name}`;\n\n    // add a cache node for the unit\n    let unitNodeForCache: testNodeType = duplicateTestNode(enviroNodeID);\n    unitNodeForCache.unitName = unitData.name;\n    addTestNodeToCache(unitNodeID, unitNodeForCache);\n\n    let unitNode: vcastTestItem = globalController.createTestItem(\n      unitNodeID,\n      unitData.name\n    );\n    unitNode.nodeKind = nodeKind.unit;\n    if (unitData.path) unitNode.sourcePath = unitData.path;\n\n    if (unitData.functions) {\n      const functionList = unitData.functions;\n      for (const functionData of functionList) {\n        let functionName: string = functionData.name;\n\n        const testList = functionData.tests;\n        const functionNodeID = `${unitNodeID}.${functionName}`;\n\n        // add a cache node for the function\n        let functionNodeForCache: testNodeType = duplicateTestNode(unitNodeID);\n        functionNodeForCache.functionName = functionName;\n        addTestNodeToCache(functionNodeID, functionNodeForCache);\n\n        let displayName = functionName;\n        if (functionName == codedTestFunctionName) {\n          displayName = codedTestDisplayName;\n        }\n        const functionNode: vcastTestItem = globalController.createTestItem(\n          functionNodeID,\n          displayName\n        );\n        functionNode.nodeKind = nodeKind.function;\n\n        addTestNodes(\n          testList,\n          functionNode,\n          functionNodeID,\n          functionNodeForCache\n        );\n\n        // if the function we are processing is the coded test driver\n        // and if there is a test file associated with it ...\n        if (\n          functionName == codedTestFunctionName &&\n          functionNodeForCache.testFile.length > 0\n        ) {\n          addCodedTestfileToCache(enviroNodeID, functionNodeForCache);\n\n          // we need to tell the language server about the test file to\n          // environment mapping, including whether or not the environment\n          // has coded mock support\n\n          const enviroHasMockSupport = jsonData.mockingSupport;\n          const testFilePath = functionNodeForCache.testFile;\n\n          sendTestFileDataToLanguageServer(\n            testFilePath,\n            functionNodeForCache.enviroPath,\n            enviroHasMockSupport\n          );\n        }\n\n        unitNode.children.add(functionNode);\n      }\n    }\n    // no functions, check if there are tests anyway as there are for INIT and COMPOUND\n    else if (unitData.tests) {\n      // compound or init\n      let nodeName: string = \"\";\n      let nodeIdName: string = \"\";\n      let sortText: string = \"\";\n      if (unitData.name == \"Compound Tests\") {\n        nodeName = \"Compound Tests\";\n        nodeIdName = \"<<COMPOUND>>\";\n        sortText = \"AAAA\";\n      } else if (unitData.name == \"Initialization Tests\") {\n        nodeName = \"Initialization Tests\";\n        nodeIdName = \"<<INIT>>\";\n        sortText = \"BBBB\";\n      }\n\n      const testList = unitData.tests;\n      // we insert not-used to make the format of the IDs consistent\n      // this gets stripped off/processed in the functions\n      //   -- getClicastArgsFromTestNode()     -- ts\n      //   -- getStandardArgsFromTestObject()  -- python\n      const specialNodeID = enviroNodeID + \"|not-used.\" + nodeIdName;\n\n      let specialNodeForCache: testNodeType = duplicateTestNode(enviroNodeID);\n      specialNodeForCache.unitName = \"not-used\";\n      specialNodeForCache.functionName = nodeIdName;\n      addTestNodeToCache(specialNodeID, specialNodeForCache);\n\n      const specialNode: vcastTestItem = globalController.createTestItem(\n        specialNodeID,\n        nodeName\n      );\n      specialNode.nodeKind = nodeKind.special;\n      // we use sortText to force the compound and init nodes to the top of the tree\n      specialNode.sortText = sortText;\n\n      addTestNodes(testList, specialNode, specialNodeID, specialNodeForCache);\n\n      enviroNode.children.add(specialNode);\n    }\n    if (unitNode.children.size > 0) enviroNode.children.add(unitNode);\n  }\n}\n\nfunction getWorkspaceFolderList(): string[] {\n  // This function will covert the workspace folders into a\n  // string list of folders to be used in getEnvironmentList\n\n  let returnList: string[] = [];\n  for (const workspace of vscode.workspace.workspaceFolders ?? []) {\n    const workspaceRoot = workspace.uri.fsPath;\n    // doing the path separate replacement here to avoid complexity below\n    returnList.push(workspaceRoot.replaceAll(\"\\\\\", \"/\"));\n  }\n  return returnList;\n}\n\nconst glob = require(\"glob\");\n\n// Data for one environment in a manage project\ninterface projectEnvironmentType {\n  displayName: string;\n  isBuilt: boolean;\n  rebuildNeeded: boolean;\n  compiler: { name: string; testsuites: string[] };\n}\n\nexport type enviroListAsMapType = Map<string, projectEnvironmentType>;\n\n// This is built once each time we load a workspace.\n// The outer map key is the project filename,\n// the inner map key is the build directory\nexport const globalProjectDataCache = new Map<string, enviroListAsMapType>();\n\n// Boolean to check, if the current opened directory contains a project\n// Have to keep it \"let\" instead of \"const\" because it's only a boolean\nexport let globalProjectIsOpenedChecker: boolean = false;\n\n/**\n * Sets the global variable to check if the dir contains a project or not\n */\nexport function setGlobalProjectIsOpenedChecker() {\n  globalProjectIsOpenedChecker = checkIfAnyProjectsAreOpened();\n  vscode.commands.executeCommand(\n    \"setContext\",\n    \"vectorcastTestExplorer.globalProjectIsOpenedChecker\",\n    globalProjectIsOpenedChecker\n  );\n}\n\n// Map to store all compilers and testsuites for the combobox items in the project webviews\nexport const globalProjectWebviewComboboxItems = new Map<\n  string,\n  { compilers: string[]; testsuites: string[] }\n>();\n// Global variable to store compilers and testsuites.\nexport const globalCompilersAndTestsuites: {\n  compiler: string[];\n  testsuites: string[];\n} = {\n  compiler: [],\n  testsuites: [],\n};\n\n// Empty Compilers or Testsuites that do not contain anything.\n// We need to store and process them seperately, because otherwise they are not shown in the tree\nexport const globalUnusedTestsuiteList: {\n  projectFile: string;\n  displayName: string;\n}[] = [];\nexport const globalUnusedCompilerList: {\n  projectFile: string;\n  displayName: string;\n}[] = [];\n\n/**\n * Updates the global compilers and testsuites list based on all nodes in the test tree.\n */\nexport function updateGlobalCompilersAndTestsuites() {\n  const compilers = new Set<string>();\n  const testsuites = new Set<string>();\n\n  // Recursive helper that traverses the test tree.\n  function traverse(node: vcastTestItem) {\n    if (node.nodeKind === nodeKind.compiler) {\n      compilers.add(node.id);\n    } else if (node.nodeKind === nodeKind.testsuite) {\n      testsuites.add(node.id);\n    }\n    node.children.forEach((child) => traverse(child as vcastTestItem));\n  }\n\n  // Walk all top-level items\n  globalController.items.forEach((item) => traverse(item as vcastTestItem));\n\n  // MUTATE the existing arrays rather than reassigning:\n  globalCompilersAndTestsuites.compiler.length = 0;\n  globalCompilersAndTestsuites.compiler.push(...Array.from(compilers));\n\n  globalCompilersAndTestsuites.testsuites.length = 0;\n  globalCompilersAndTestsuites.testsuites.push(...Array.from(testsuites));\n}\n\n/**\n * Clears the global compilers and testsuites list.\n */\nexport function clearGlobalCompilersAndTestsuites() {\n  globalCompilersAndTestsuites.compiler.length = 0;\n  globalCompilersAndTestsuites.testsuites.length = 0;\n\n  globalUnusedCompilerList.length = 0;\n  globalUnusedTestsuiteList.length = 0;\n}\n\n/**\n * Sets the global compilers and testsuites list in the for package.json.\n * This is how we an check in the package.json if the current node is a testsuite\n * or compiler and therefore show the correct context menu items.\n */\nexport function setGlobalCompilerAndTestsuites() {\n  updateGlobalCompilersAndTestsuites();\n  vscode.commands.executeCommand(\n    \"setContext\",\n    \"vectorcastTestExplorer.globalProjectCompilers\",\n    globalCompilersAndTestsuites.compiler\n  );\n  vscode.commands.executeCommand(\n    \"setContext\",\n    \"vectorcastTestExplorer.globalProjectTestsuites\",\n    globalCompilersAndTestsuites.testsuites\n  );\n}\n\n/**\n * Converts the raw environment data into a map for the cache.\n * @param enviroList - The list of environments to convert\n * @returns A map where the key is the build directory and the value is the environment data\n */\nexport async function convertProjectDataToMap(\n  enviroList: any[]\n): Promise<enviroListAsMapType> {\n  let returnData: enviroListAsMapType = new Map<\n    string,\n    projectEnvironmentType\n  >();\n\n  for (const rawData of enviroList) {\n    const enviroData: projectEnvironmentType = {\n      displayName: rawData.displayName,\n      isBuilt: rawData.isBuilt,\n      rebuildNeeded: rawData.rebuildNeeded,\n      compiler: rawData.compiler,\n    };\n\n    const mapKey = forceLowerCaseDriveLetter(rawData.buildDirectory);\n    returnData.set(mapKey, enviroData);\n  }\n\n  return returnData;\n}\n\n/**\n * Builds the project data cache for all projects in the given directory.\n * @param baseDirectory - The base directory to search for projects\n */\nexport async function buildProjectDataCache(\n  baseDirectory: string,\n  progress?: vscode.Progress<{ message?: string; increment?: number }>\n) {\n  const options = { cwd: baseDirectory, absolute: true, strict: false };\n  const projectFileList = glob.sync(\"**/*.vcm\", options);\n\n  // Resetting unused compiler & testsuite list\n  globalUnusedCompilerList.length = 0;\n  globalUnusedTestsuiteList.length = 0;\n\n  for (const projectFile of projectFileList) {\n    // enviroList is a list of json objects with fields:\n    // \"displayName\", \"buildDirectory\", \"isBuilt\", \"rebuildNeeded\"\n    // See python function vTestInterface.py:getProjectData()\n    if (progress) {\n      progress.report({ message: `Processing project: ${projectFile}` });\n      // allow UI to catch up\n      await new Promise((r) => setTimeout(r, 0));\n    }\n    const projectData = await getDataForProject(projectFile);\n\n    if (projectData) {\n      const enviroList = projectData.projectEnvData;\n\n      // This includes all unused and empty testsuites and compilers because\n      // they are not in the enviroList as they do not include any envs\n      globalUnusedTestsuiteList.push(\n        ...projectData.projectTestsuiteData.map((testSuite: any) => ({\n          ...testSuite,\n          projectFile: forceLowerCaseDriveLetter(projectFile),\n        }))\n      );\n\n      projectData.projectCompilerData.forEach(\n        (item: { projectFile: string | undefined }) => {\n          item.projectFile = forceLowerCaseDriveLetter(item.projectFile);\n        }\n      );\n      globalUnusedCompilerList.push(...projectData.projectCompilerData);\n\n      // convert the raw json data into a map for the cache\n      const enviroListAsMap = await convertProjectDataToMap(enviroList);\n\n      // we turn this into a typescript object and then store in a map\n      globalProjectDataCache.set(projectFile, enviroListAsMap);\n\n      const comboBoxList = getWebviewComboboxItems(projectFile);\n      globalProjectWebviewComboboxItems.set(projectFile, comboBoxList);\n    } else {\n      vectorMessage(\"Error getting project data for: \" + projectFile);\n      ignoreEnvsInProject.push(projectFile);\n    }\n  }\n}\n\n/**\n * Adds free (non-managed) environments to the environment list.\n * @param workspaceRoot The workspace root directory path.\n * @param projectPathDirList A list of project directory paths.\n * @param ignoreEnvsInProject A list of ignored environments due to project issues.\n * @param environmentList A list to push environment data.\n */\nexport function addFreeEnvironments(\n  workspaceRoot: string,\n  projectPathDirList: string[],\n  ignoreEnvsInProject: string[],\n  environmentList: any[]\n): void {\n  for (const environment of getEnvironmentList(workspaceRoot)) {\n    let enviroIsNotManaged = true;\n    let ignoreEnvDueToProjectIssue = false;\n    const normalizedPath = normalizePath(environment);\n\n    // Check if the environment is part of a managed project\n    for (let path of projectPathDirList) {\n      if (normalizedPath.includes(path)) {\n        enviroIsNotManaged = false;\n      }\n\n      // Check if there was an issue with the project\n      for (let path of ignoreEnvsInProject) {\n        const projectDir = path.split(\".vcm\")[0];\n        if (normalizedPath.includes(projectDir)) {\n          ignoreEnvDueToProjectIssue = true;\n        }\n      }\n    }\n\n    if (enviroIsNotManaged && !ignoreEnvDueToProjectIssue) {\n      const displayName = path.relative(workspaceRoot, normalizedPath);\n      environmentList.push({\n        projectPath: \"\",\n        buildDirectory: normalizedPath,\n        isBuilt: true,\n        displayName: displayName,\n        workspaceRoot: workspaceRoot,\n      });\n    }\n  }\n}\n\n/**\n * Checks if the given path is an environment of interest.\n * @param candidatePath - The path to check\n * @returns True if the path is an environment of interest, false otherwise\n */\nfunction isEnvironmentOfInterest(candidatePath: string): boolean {\n  let returnValue: boolean = true;\n\n  // vcast creates .BAK version of a directory on rebuild\n  if (candidatePath.includes(\".BAK\")) {\n    returnValue = false;\n  } else {\n    // also ignore environments that are part of a project\n    // these get added in a separate project processing step\n    for (const projectData of globalProjectDataCache.values()) {\n      if (projectData.has(candidatePath)) {\n        returnValue = false;\n        break;\n      }\n    }\n  }\n\n  return returnValue;\n}\n\nfunction getEnvironmentList(baseDirectory: string): string[] {\n  // This function will find all of the VectorCAST and vTest\n  // environments downstream of the current workspace\n\n  const options = { cwd: baseDirectory, absolute: true, strict: false };\n  let fileList = glob.sync(\"**/\" + vcastEnviroFile, options);\n\n  // now we have a list of the UNITDATA.VCD files downstream of us\n  // so turn this into a list of the enclosing directories only\n  let returnList: string[] = [];\n  const workspaceFolderList = getWorkspaceFolderList();\n  for (const filePath of fileList) {\n    // note that glob always uses / as path separator ...\n    const candidatePath = path.dirname(filePath);\n    if (isEnvironmentOfInterest(candidatePath)) {\n      // we don't want to support users who add an enviro\n      // directory to the workspace - someone did this :()\n      if (!workspaceFolderList?.includes(candidatePath)) {\n        returnList.push(forceLowerCaseDriveLetter(candidatePath));\n      } else {\n        vectorMessage(`Ignoring environment: ${candidatePath} ...`);\n        vectorMessage(\n          `environments should not be at the workspace root, open the enclosing directory\\n`,\n          errorLevel.info,\n          indentString\n        );\n      }\n    }\n  }\n\n  return returnList;\n}\n\n// These variables are used in the package.json to control the display of context menu items\n// Search for 'vectorcastTestExplorer.vcastEnviroList | vcastHasCodedTestsList' in package.json\n// to see where we reference them\n// this list in a \"when\" clause\nlet vcastEnviroList: string[] = [];\n\nexport let vcastUnbuiltEnviroList: string[] = [];\n// Helper to turn a buildDirectory into the unique test\u2010item ID\nfunction makeEnviroNodeID(buildDirectory: string): string {\n  return `vcast:${buildDirectory}`;\n}\n\nlet vcastHasCodedTestsList: string[] = [];\n\n// Global cache for workspace-wide env data\n// Used to avoid redundant API calls during refresh\nlet cachedWorkspaceEnvData: CachedWorkspaceData | null = null;\n\nexport function clearCachedWorkspaceEnvData(): void {\n  cachedWorkspaceEnvData = null;\n}\n\n/**\n * Given a parent node and environment data, this function creates the environment node.\n * It uses only the last part of the displayName as the label.\n */\nexport async function updateTestsForEnvironment(\n  parentNode: vcastTestItem | null,\n  enviroData: environmentNodeDataType,\n  comingFromRefresh: boolean = false\n) {\n  let jsonData: any;\n\n  // In case we are refreshing the extension, we do not want to call the API n times (n=|envs|)\n  // Instead we get the entire env data at once and save us time.\n  jsonData = await loadEnviroData(enviroData, comingFromRefresh);\n  if (!jsonData) return;\n\n  await processSingleEnvData(parentNode, enviroData, jsonData);\n}\n\n/**\n * Loads environment data depending on the context:\n * - If refreshing: loads all environments at once from workspace (once only)\n * - Otherwise: loads one environment based on build directory\n */\nasync function loadEnviroData(\n  enviroData: environmentNodeDataType,\n  comingFromRefresh: boolean\n): Promise<EnviroData | undefined> {\n  let buildDirDerivedFromVCEPath: string = \"\";\n  let buildPathDir: string = enviroData.buildDirectory;\n\n  if (comingFromRefresh) {\n    // If we've already fetched the full workspace data, reuse it\n    if (cachedWorkspaceEnvData) {\n      const enviroList = cachedWorkspaceEnvData[\"enviro\"];\n      vectorMessage(`Processing environment data for: ${buildPathDir}`);\n      for (const envAPIData of enviroList) {\n        buildDirDerivedFromVCEPath = envAPIData.vcePath.split(\".vce\")[0];\n        if (buildDirDerivedFromVCEPath === buildPathDir) {\n          return envAPIData;\n        }\n      }\n    } else {\n      // Fallback in case the cache is not build, but it should be\n      return await getDataForEnvironment(buildPathDir);\n    }\n  } else {\n    // Individual environment fetch (e.g. adding new test scripts, coded tests, ...)\n    return await getDataForEnvironment(buildPathDir);\n  }\n  // We have a valid build directory, but we couldn't find a matching VCE file in the workspace data.\n  vectorMessage(\n    `Build directory ${buildPathDir} found, but no matching VCE file detected at the same level of it. Environment data may be incomplete.`\n  );\n  return undefined;\n}\n\nasync function buildEnvDataCacheForCurrentDir() {\n  const workspaceDir = getWorkspaceRootPath();\n  if (workspaceDir) {\n    cachedWorkspaceEnvData = await getWorkspaceEnvDataVPython(workspaceDir);\n  } else {\n    // This should not be possible as we have env data, but just in case\n    vectorMessage(\"No workspace root found, cannot refresh environment data.\");\n  }\n}\n\n/**\n * Processes one environment:\n * - Updates caches and global structures\n * - Creates test node and child function/test nodes\n * - Adds it to the controller tree (either under parent or root)\n */\nasync function processSingleEnvData(\n  parentNode: vcastTestItem | null,\n  enviroData: environmentNodeDataType,\n  jsonData: any = null\n) {\n  saveEnviroNodeData(enviroData.buildDirectory, enviroData);\n  updateGlobalDataForFile(enviroData.buildDirectory, jsonData.unitData);\n\n  const enviroNodeID: string = \"vcast:\" + enviroData.buildDirectory;\n  createTestNodeInCache(\n    enviroNodeID,\n    enviroData.buildDirectory,\n    path.basename(enviroData.buildDirectory)\n  );\n\n  // Use only the last part of the displayName as the environment name.\n  const envName = path.basename(enviroData.displayName);\n  const enviroNode = globalController.createTestItem(\n    enviroNodeID,\n    envName\n  ) as vcastTestItem;\n  enviroNode.nodeKind = nodeKind.environment;\n\n  // Process functions and tests to add child nodes.\n  processVCtestData(\n    enviroData.buildDirectory,\n    enviroNodeID,\n    enviroNode,\n    jsonData\n  );\n\n  if (!vcastEnviroList.includes(enviroNodeID)) {\n    vcastEnviroList.push(enviroNodeID);\n    vscode.commands.executeCommand(\n      \"setContext\",\n      \"vectorcastTestExplorer.vcastEnviroList\",\n      vcastEnviroList\n    );\n  }\n\n  // Instead of grouping, add the environment directly.\n  globalController.items.delete(enviroNode.id);\n  if (parentNode) {\n    parentNode.children.add(enviroNode);\n  } else {\n    globalController.items.add(enviroNode);\n  }\n}\n\nexport function findAndReturnEnvDataByBuildDir(buildDir: string) {\n  if (cachedWorkspaceEnvData) {\n    const enviroList = cachedWorkspaceEnvData[\"enviro\"];\n    for (const envAPIData of enviroList) {\n      if (path.dirname(envAPIData.vcePath) === path.dirname(buildDir)) {\n        return envAPIData;\n      }\n    }\n  }\n  return undefined;\n}\n\n/**\n * This function is used to push the unbuilt environment list to the context menu.\n * This is also required for the package.json to get the correct context menu items for\n * all unbuilt envs.\n */\nfunction pushUnbuiltEnviroListToContextMenu() {\n  vscode.commands.executeCommand(\n    \"setContext\",\n    \"vectorcastTestExplorer.vcastUnbuiltEnviroList\",\n    vcastUnbuiltEnviroList\n  );\n}\nfunction addUnbuiltEnviroToTestPane(\n  parentNode: vcastTestItem | null,\n  enviroData: environmentNodeDataType\n) {\n  const nodeID = makeEnviroNodeID(enviroData.buildDirectory);\n  const label = path.basename(enviroData.displayName);\n\n  // Create the TestItem\n  const envNode: vcastTestItem = globalController.createTestItem(nodeID, label);\n  envNode.nodeKind = nodeKind.environment;\n\n  if (parentNode) {\n    parentNode.children.add(envNode);\n  } else {\n    globalController.items.add(envNode);\n  }\n\n  // Cache its data for later\n  saveEnviroNodeData(enviroData.buildDirectory, enviroData);\n\n  // If not already marked \u201Cunbuilt\u201D, add it and update context\n  if (!vcastUnbuiltEnviroList.includes(nodeID)) {\n    vcastUnbuiltEnviroList.push(nodeID);\n    pushUnbuiltEnviroListToContextMenu();\n  }\n}\n\nexport function removeNodeFromTestPane(nodeID: string) {\n  // We need to distinguish between an env within a project and a free Env\n  // And we need to get the enviroPath like this instead of only using getEnviroPathFromID\n  // Because this can also be called AFTER cleaning up the env, which also deletes it from\n  // the testNodeCache. So as a Backup, we just cut the vcast: part off\n  let enviroPath = \"\";\n  enviroPath = getEnviroPathFromID(nodeID);\n  if (!enviroPath) {\n    enviroPath = nodeID.split(\"vcast:\")[1];\n  }\n  const enviroData = getEnviroNodeData(enviroPath);\n  // If we're in a project, we need to go deeper\n  if (enviroData.projectPath !== \"\") {\n    globalController.items.forEach((item) => {\n      deleteItemByID(item, nodeID);\n    });\n  } else {\n    globalController.items.delete(nodeID);\n  }\n}\n\n// Deletes the item with the matching enviroID\nfunction deleteItemByID(item: vscode.TestItem, nodeID: string) {\n  item.children.forEach((child) => {\n    if (child.id === nodeID) {\n      item.children.delete(child.id);\n    } else {\n      // Continue searching recursively\n      deleteItemByID(child, nodeID);\n    }\n  });\n}\n\nexport function deleteAllItems(item: vscode.TestItem) {\n  item.children.forEach((child) => {\n    // Recursively delete children of the current child.\n    deleteAllItems(child);\n    // Remove the child from the parent's collection.\n    item.children.delete(child.id);\n  });\n}\n\nexport let vcastEnvironmentsFound: boolean = false;\nasync function loadAllVCTests(\n  progress: vscode.Progress<{ message?: string; increment?: number }>,\n  token: vscode.CancellationToken\n) {\n  // Iterate over all top-level items and clear their children.\n  // We basically delete the entire tree and afterwards build it again.\n  // It's simpler, because in case we have less nodes than before we need to find\n  // the sepecif node(s) to delete, where we also have to iterate thorugh the whole tree and involves way more logic.\n  // First, delete all children for each item:\n  globalController.items.forEach((item) => {\n    deleteAllItems(item);\n  });\n\n  // Reset caches and environment lists.\n  ignoreEnvsInProject.length = 0;\n  vcastEnviroList = [];\n  vcastUnbuiltEnviroList = [];\n  clearEnviroDataCache();\n  clearTestNodeCache();\n\n  // Resets the \"used\" and empty/unused compilers / testsuites\n  clearGlobalCompilersAndTestsuites();\n\n  //Build the workspace-wide env cache\n  progress.report({\n    message: \"Fetching Environment data for current directory\u2026\",\n  });\n  await buildEnvDataCacheForCurrentDir();\n\n  const environmentList: environmentNodeDataType[] = [];\n  const projectPathDirList: string[] = [];\n\n  progress.report({\n    message: \"Processing existing projects and environments.\",\n  });\n  if (vscode.workspace.workspaceFolders) {\n    //Scan each workspace folder\n    for (const workspace of vscode.workspace.workspaceFolders) {\n      const workspaceRoot = workspace.uri.fsPath;\n      // Build the project cache for this workspace.\n      await buildProjectDataCache(workspaceRoot, progress);\n      // Add environments from managed projects\n      addManagedEnvironments(\n        projectPathDirList,\n        environmentList,\n        workspaceRoot\n      );\n      // Add free environments not bound to a project\n      addFreeEnvironments(\n        workspaceRoot,\n        projectPathDirList,\n        ignoreEnvsInProject,\n        environmentList\n      );\n    }\n\n    if (environmentList.length > 0) {\n      vcastEnvironmentsFound = true;\n    }\n    const increment = 100 / environmentList.length;\n    for (const environmentData of environmentList) {\n      if (token.isCancellationRequested) {\n        break;\n      }\n\n      if (environmentData.isBuilt) {\n        progress.report({\n          increment,\n          message: `Loading data for environment: ${environmentData.displayName}`,\n        });\n        // ensure UI updates\n        await new Promise((r) => setTimeout(r, 0));\n        // Get the parent node by building the hierarchy (project -> compiler -> testsuite -> envs)\n        const parentNode = getParentNodeForEnvironment(environmentData);\n        await updateTestsForEnvironment(parentNode, environmentData, true);\n      } else {\n        const parentNode = getParentNodeForEnvironment(environmentData);\n        addUnbuiltEnviroToTestPane(parentNode, environmentData);\n      }\n    }\n  }\n  // end if workspace folders\n\n  checkWorkspaceEnvDataForErrors();\n  clearCachedWorkspaceEnvData();\n\n  // In case we have empty testsuites or compilers in the project,\n  // we won't find them in the Env data so we have to add them manually here\n  ensureCompilerNodes();\n  ensureTestsuiteNodes();\n  // Update coverage and decorators.\n  setGlobalProjectIsOpenedChecker();\n  setGlobalCompilerAndTestsuites();\n  await updateDisplayedCoverage();\n  updateTestDecorator();\n}\n\nexport let pathToEnviroBeingDebugged: string =\n  \"No Environment is Being Debugged\";\nexport let pathToProgramBeingDebugged: string = \"No Program is Being Debugged\";\n\nfunction okToDebug(\n  node: vcastTestItem,\n  uutFilePath: string,\n  enviroOptions: cfgOptionType\n): boolean {\n  // this function will pick off all the error cases, to make the debugNode() function flow nicely\n\n  let returnValue: boolean = true;\n  const stockSuffix = \"performing normal test execution.\";\n\n  if (node.nodeKind != nodeKind.test) {\n    vscode.window.showInformationMessage(\n      `Debug is only available for test nodes, ${stockSuffix}`\n    );\n    returnValue = false;\n  } else if (enviroOptions.C_DEBUG_CMD.length == 0) {\n    vscode.window.showInformationMessage(\n      `Debug command could not be found in the VectorCAST configuration file for this environment. ${stockSuffix}`\n    );\n    returnValue = false;\n  } else if (!enviroOptions.C_DEBUG_CMD.startsWith(\"gdb\")) {\n    vscode.window.showInformationMessage(\n      `Debugger '${enviroOptions.C_DEBUG_CMD}' is not supported, ${stockSuffix}`\n    );\n    returnValue = false;\n  } else if (!fs.existsSync(uutFilePath)) {\n    vscode.window.showInformationMessage(\n      `Could not find UUT source file: '${uutFilePath}', ${stockSuffix}`\n    );\n    returnValue = false;\n  }\n\n  return returnValue;\n}\n\nlet sourceCache: Map<string, string[]> = new Map();\n\nfunction findStringInFile(filePath: string, stringToFind: string): number {\n  // We know filePath exists when we get here\n\n  let returnLineNumber = 0;\n  let fileContents: string[] = [];\n  if (sourceCache.has(filePath)) {\n    let cacheContents = sourceCache.get(filePath);\n    if (cacheContents) {\n      fileContents = cacheContents;\n    }\n  } else {\n    fileContents = fs.readFileSync(filePath).toString().split(\"\\n\");\n    sourceCache.set(filePath, fileContents);\n  }\n\n  for (const [index, line] of fileContents.entries()) {\n    if (line.includes(stringToFind)) {\n      returnLineNumber = index + 1;\n      break;\n    }\n  }\n  return returnLineNumber;\n}\n\nconst vectorcastLaunchConfigName = \"VectorCAST Harness Debug\";\n\n// this map will store away the list of launch.json files that\n// have a \"VectorCAST Harness Debug\" config, so we don't have\n// do this work multiple times\nlet launchFilesWithVectorCASTConfig: Map<string, boolean> = new Map();\n\n// this map will store away the path to the launch.json for an enviroPath\n// so we don't have to do this work multiple times\nlet workspaceForEnviro: Map<string, string> = new Map();\n\nfunction getWorkspacePath(enviroPath: string): string | undefined {\n  // check if we've seen this enviroPath before ...\n  let ourWorkspace: string | undefined = workspaceForEnviro.get(enviroPath);\n\n  // if we have not, compute it ...\n  if (!ourWorkspace) {\n    const workspaceFolders = vscode.workspace.workspaceFolders;\n    if (workspaceFolders) {\n      for (const workspaceFolder of workspaceFolders) {\n        const relative = path.relative(workspaceFolder.uri.fsPath, enviroPath);\n        if (\n          relative &&\n          !relative.startsWith(\"..\") &&\n          !path.isAbsolute(relative)\n        ) {\n          // we found our parent, save it for next time\n          ourWorkspace = workspaceFolder.uri.fsPath;\n          workspaceForEnviro.set(enviroPath, ourWorkspace);\n        }\n      }\n    }\n  }\n\n  return ourWorkspace;\n}\n\nfunction getLaunchJsonPath(workspacePath: string): string {\n  const jsonPath = path.join(workspacePath, \".vscode\", launchFile);\n  return jsonPath;\n}\n\nfunction launchFileExists(launchJsonPath: string): boolean {\n  // this will check if launch.json exists\n\n  if (launchFilesWithVectorCASTConfig.has(launchJsonPath)) {\n    return true;\n  } else return fs.existsSync(launchJsonPath);\n}\n\nfunction createEmptyLaunchConfigFile(\n  ourWorkspace: string,\n  launchJsonPath: string\n) {\n  const configFolderPath = path.join(ourWorkspace, \".vscode\");\n  if (!fs.existsSync(configFolderPath)) {\n    fs.mkdirSync(configFolderPath);\n  }\n\n  fs.closeSync(fs.openSync(launchJsonPath, \"w\"));\n}\n\nfunction launchConfigExists(launchJsonPath: string): boolean {\n  // this will check if launch.json has\n  // the \"VectorCAST Harness Debug\" configuration defined\n  let returnValue = false;\n  const existingJSONdata: any = loadLaunchFile(launchJsonPath);\n  if (existingJSONdata && existingJSONdata.jsonData.configurations) {\n    for (const existingConfig of existingJSONdata.jsonData.configurations) {\n      if (existingConfig.name === vectorcastLaunchConfigName) {\n        returnValue = true;\n        launchFilesWithVectorCASTConfig.set(launchJsonPath, true);\n        break;\n      }\n    }\n  }\n\n  return returnValue;\n}\n\nconst coverageExeFilename = \"UUT_INST\";\nconst normalExeFilename = \"UUT_INTE\";\n\nfunction getNameOfHarnessExecutable(enviroPath: string): string {\n  // the executable being debugged will either be UUT_INTE or UUT_INST\n  // depending on whether coverage is on.\n  // Could not find a dataAPI call to determine coverage on/off so\n  // I'm using this brute force approach\n\n  // if windows the executable will have an .exe extension\n  let extension = \"\";\n  if (process.platform === \"win32\") {\n    extension = \".EXE\";\n  }\n\n  let harnessName = normalExeFilename + extension;\n  if (isCoverageTurnedOn(enviroPath)) {\n    harnessName = coverageExeFilename + extension;\n  }\n\n  return harnessName;\n}\n\nfunction isCoverageTurnedOn(enviroPath: string): boolean {\n  const commonDBpath = path.join(enviroPath, \"COMMONDB.VCD\");\n  const lines = fs.readFileSync(commonDBpath, \"utf-8\").split(/\\r?\\n/);\n  let coverageON = false;\n  let currentLine = \"\";\n  for (let lineIdx = 0; lineIdx < lines.length; lineIdx++) {\n    currentLine = lines[lineIdx];\n    if (currentLine.trim() === \"COVERAGE_ON_OFF_HDR\") {\n      coverageON = lines[lineIdx + 1].trim() === \"TRUE\";\n      break;\n    }\n  }\n\n  return coverageON;\n}\nfunction getFileToDebug(\n  enviroPath: string,\n  uutName: string,\n  functionName: string,\n  executableFilename: string\n): string {\n  // note: glob pattern is a regex\n  let globPattern: string;\n\n  // coded test\n  if (functionName == codedTestFunctionName) {\n    if (executableFilename.startsWith(coverageExeFilename)) {\n      globPattern = uutName + \"_exp_inst_driver.c*\";\n    } else {\n      globPattern = uutName + \"_expanded_driver.c*\";\n    }\n  }\n  // compound or init\n  else if (uutName == \"not-used\") {\n    // Improvement needed: would be nice to figure out the uut for the first slot ...\n    globPattern = \"S3_switch.*\";\n  }\n  // regular test\n  else {\n    if (executableFilename.startsWith(coverageExeFilename)) {\n      globPattern = uutName + \"_inst.c*\";\n    } else {\n      globPattern = uutName + \"_vcast.c*\";\n    }\n  }\n\n  const globOptions = { cwd: enviroPath, absolute: true, strict: false };\n  // two steps for debugging ...\n  const globResult = glob.sync(globPattern, globOptions);\n\n  return globResult[0];\n}\n\nasync function debugNode(request: vscode.TestRunRequest, node: vcastTestItem) {\n  // Note: we always debug the non-coverage harness, because the\n  // SBF + Cover instrumentation is really messy.\n\n  // Note: this only works for GCC/GDB\n\n  // Here are the steps needed to debug.\n  //   - Check if we have a single test selected, if not do normal run\n  //   - Check if we are gcc/gdb, if now issue a warning and do normal run\n  //\t - Disable coverage so that the UUT source code is more readable\n  //   - Run the test without debug to setup all the test input files\n  //   - Open the file: <uut>_vcast.cpp -> this is the source that will run\n  //   - Start debugger using the VectorCAST launch configuration\n\n  pathToEnviroBeingDebugged = \"No Environment is Being Debugged\";\n  const enviroPath = getEnviroPathFromID(node.id);\n  const enviroOptions = getVcastOptionValues(enviroPath);\n  const uutName = getUnitNameFromID(node.id);\n  const functionUnderTest = getFunctionNameFromID(node.id);\n\n  const executableFilename = getNameOfHarnessExecutable(enviroPath);\n\n  const fileToDebug: string = getFileToDebug(\n    enviroPath,\n    uutName,\n    functionUnderTest,\n    executableFilename\n  );\n\n  if (okToDebug(node, fileToDebug, enviroOptions)) {\n    let ourWorkspace = getWorkspacePath(enviroPath);\n\n    if (ourWorkspace) {\n      let debugConfigurationFound = false;\n      const launchJsonPath = getLaunchJsonPath(ourWorkspace);\n      const launchJsonUri = Uri.file(launchJsonPath);\n\n      if (!launchFileExists(launchJsonPath)) {\n        vectorMessage(\n          `${launchFile}| not found in ${launchJsonPath}.` +\n            ` Generating \"VectorCAST Harness Debug\" configuration from template`\n        );\n\n        vscode.window.showWarningMessage(\n          `${launchFile} not found.\\n` +\n            'Generating \"VectorCAST Harness Debug\" configuration from template'\n        );\n\n        createEmptyLaunchConfigFile(ourWorkspace, launchJsonPath);\n        addLaunchConfiguration(launchJsonUri, globalPathToSupportFiles);\n      } else {\n        debugConfigurationFound = launchConfigExists(launchJsonPath);\n        if (!debugConfigurationFound) {\n          addLaunchConfiguration(launchJsonUri, globalPathToSupportFiles);\n        }\n      }\n\n      // this flag means that the launch file already had a vectorcast debug configuration\n      // if we just added it we want to give the user a chance to review before we debug\n      if (debugConfigurationFound) {\n        vectorMessage(\n          `Preparing to debug test ${getTestNameFromID(node.id)} ... `\n        );\n        vscode.window.showInformationMessage(\n          `Preparing to debug test ${getTestNameFromID(node.id)} ... `\n        );\n\n        // ok to debug, let's go!\n\n        // these are the globals that the launch.json links to ...\n        pathToEnviroBeingDebugged = enviroPath;\n        pathToProgramBeingDebugged = path.join(enviroPath, executableFilename);\n\n        // run the test first without debug to setup the inputs\n        // it's important that we wait for this to finish\n        vectorMessage(`   - initializing test case inputs ... `);\n        const run = globalController.createTestRun(request);\n        runNode(node, run, false).then(async (status) => {\n          run.end();\n\n          if (\n            status == testStatus.didNotRun ||\n            status == testStatus.compileError ||\n            status == testStatus.linkError\n          ) {\n            return;\n          } else {\n            vectorMessage(\n              `   - opening VectorCAST version of file: ${uutName} ... `\n            );\n\n            // Improvement needed:\n            // It would be nice if vcast saved away the function start location when building the _vcast file\n            // open the sbf uut at the correct line for the function being tested\n\n            let searchString: string = \"\";\n            if (functionUnderTest == codedTestFunctionName) {\n              // for coded tests, the test logic will be in something that\n              // looks like: \"class Test_managerTests_realTest\"  class Test_<suite-name>_<test-name>\n              const testName = getTestNameFromID(node.id).replace(\".\", \"_\");\n              searchString = `class Test_${testName}`;\n            } else {\n              searchString = functionUnderTest.split(\"(\")[0];\n            }\n\n            const debugStartLine = findStringInFile(fileToDebug, searchString);\n            openFileWithLineSelected(fileToDebug, debugStartLine);\n\n            // Prompt the user for what to do next!\n            vscode.window.showInformationMessage(\n              `Ready for debugging, choose launch configuration: \"${vectorcastLaunchConfigName}\" ... `\n            );\n          }\n        });\n      } else {\n        const debugFileAsTextDoc =\n          await vscode.workspace.openTextDocument(launchJsonUri);\n        vscode.window.showTextDocument(debugFileAsTextDoc, { preview: false });\n        // Prompt the user for what to do next!\n        vscode.window.showWarningMessage(\n          \"Please review the generated debug configuration.\\n\" +\n            'Execute \"Debug Test\" again to start the debugger'\n        );\n      }\n    } else {\n      vectorMessage(\n        `Error: Workspace path not found at ${ourWorkspace}`,\n        errorLevel.error\n      );\n      vscode.window.showErrorMessage(\n        `Error: Workspace path not found at ${ourWorkspace}`\n      );\n    }\n  } else {\n    // cannot debug so just do a normal test execute\n    const run = globalController.createTestRun(request);\n    await runNode(node, run, false);\n    run.end();\n  }\n}\n\nexport async function runNode(\n  node: vcastTestItem,\n  run: vscode.TestRun,\n  generateReport: boolean\n): Promise<testStatus> {\n  vectorMessage(\"Starting execution of test: \" + node.label + \" ...\");\n  run.started(node);\n\n  // this does the actual work of running the test\n  const enviroPath = getEnviroPathFromID(node.id);\n  return await runVCTest(enviroPath, node.id).then(async (executionResult) => {\n    const status = executionResult.status;\n\n    // We show stdout from execution in the \"Test Results\" pane\n    // We need to clean the string first because the logs in the Test Results pane are handled differently\n    let cleanedOutput = cleanTestResultsPaneMessage(\n      executionResult.details.stdOut\n    );\n    run.appendOutput(cleanedOutput);\n\n    if (status == testStatus.didNotRun) {\n      run.skipped(node);\n    } else if (status == testStatus.compileError) {\n      const failMessage: TestMessage = new TestMessage(\n        \"Coded Test compile error - see details in file: ACOMPILE.LIS\"\n      );\n      run.errored(node, failMessage);\n    } else if (status == testStatus.linkError) {\n      const failMessage: TestMessage = new TestMessage(\n        \"Coded Test link error - see details in file: AALINKER.LIS\"\n      );\n      run.errored(node, failMessage);\n    } else {\n      if (status == testStatus.passed) {\n        run.passed(node);\n      } else if (status == testStatus.failed) {\n        const currentTestData = executionResult.details;\n\n        // convert the pass fail string from the current test data into a message\n        // the pass fail string will look like: \"0/1 (0.00)\" or \"1/1 (100.00)\"\n        // transform to: \"Expected Results matched 0% ( 0 / 1 ) Fail\"\n\n        // We have seen the passfail string be empty so guard i\n        // against that and any malformed strings\n        let failMessageText = \"\";\n        try {\n          const xofy = currentTestData.passfail.split(\"(\")[0].trim();\n          const percentage = currentTestData.passfail\n            .split(\"(\")[1]\n            .split(\")\")[0]\n            .trim();\n          failMessageText = `Expected results matched ${xofy} (${percentage}%) Fail`;\n        } catch (err: any) {\n          failMessageText = \"Unexpected error processing expected results\";\n        }\n        const failMessage = new TestMessage(failMessageText);\n        run.failed(node, failMessage);\n      }\n\n      if (generateReport) {\n        // if the showReportOnExecute option is active, then the\n        // execution report path was returned in the executionResult\n        // object, so we add this to the global status array,\n        // which saves a call to vpython or data server.\n        addResultFileToStatusArray(\n          node.id,\n          executionResult.details.resultsFilePath\n        );\n        viewResultsReport(node.id);\n      }\n    }\n    return status;\n  });\n}\n\nfunction getTestNodes(\n  request: vscode.TestRunRequest,\n  queue: vcastTestItem[]\n): vcastTestItem[] {\n  let returnQueue: vcastTestItem[] = [];\n\n  // now use this initial list to recurse on any container nodes\n  for (const node of queue) {\n    if (node.nodeKind == nodeKind.test) {\n      // Users can hide or filter out tests from their run. If the request says\n      // they've done that for this node, then don't run it.\n      if (!request.exclude?.includes(node)) {\n        returnQueue.push(node);\n      }\n    } else {\n      const children: vcastTestItem[] = [];\n      node.children.forEach((test) => children.push(test));\n      returnQueue = returnQueue.concat(getTestNodes(request, children));\n    }\n  }\n  return returnQueue;\n}\n\nexport async function updateDataForEnvironment(enviroPath: string) {\n  // this function does all of the \"common\" work when an environment is updated\n  // sources of environment update are things like:\n  //   - opening the environment in the vcast gui\n  //   - building a new environment\n  //   - ...\n\n  // we need await on this call because ther other update function\n  // require the data that is loaded downstream of this call\n  await updateTestPane(enviroPath);\n  await updateDisplayedCoverage();\n  updateExploreDecorations();\n  updateTestDecorator();\n\n  // remove environment from the unbuilt list if it's there\n  const nodeID = makeEnviroNodeID(enviroPath);\n  vcastUnbuiltEnviroList = vcastUnbuiltEnviroList.filter(\n    (item) => item !== nodeID\n  );\n  pushUnbuiltEnviroListToContextMenu();\n}\n\nfunction shouldGenerateExecutionReport(testList: vcastTestItem[]): boolean {\n  // a helper function for determining if we should show the report\n\n  let settings = vscode.workspace.getConfiguration(\"vectorcastTestExplorer\");\n  const showReport: boolean = settings.get(\"showReportOnExecute\", false);\n  return testList.length == 1 && showReport;\n}\n\n// this does the actual work of running the tests\nconst { performance } = require(\"perf_hooks\");\n\nexport async function runTests(\n  request: vscode.TestRunRequest,\n  cancellation: vscode.CancellationToken\n) {\n  let nodeList: vcastTestItem[] = [];\n\n  // Build the initial node list with the the included tests,\n  // or all known tests if the include list is null\n  if (request.include) {\n    // all included tests\n    request.include.forEach((test) => nodeList.push(test));\n  } else {\n    // all known tests\n    globalController.items.forEach((test) => nodeList.push(test));\n  }\n\n  const testList: vcastTestItem[] = getTestNodes(request, nodeList);\n\n  // this does the actual execution of the full test list\n  const run = globalController.createTestRun(request);\n  // added this for performance tuning - but interesting to leave in\n  const startTime: number = performance.now();\n  const generateReport: boolean = shouldGenerateExecutionReport(testList);\n  let enviroPathList: Set<string> = new Set();\n  for (const test of testList) {\n    if (cancellation.isCancellationRequested) {\n      run.skipped(test);\n    } else if (test.isCompoundOnly) {\n      run.skipped(test);\n    } else {\n      const enviroPath = getEnviroPathFromID(test.id);\n      enviroPathList.add(enviroPath);\n      await runNode(test, run, generateReport);\n    }\n    // used to allow the message window to display properly\n    await new Promise<void>((r) => setTimeout(r, 0));\n  }\n  const endTime: number = performance.now();\n  const deltaString: string = ((endTime - startTime) / 1000).toFixed(2);\n  vectorMessage(`Execution event took: ${deltaString} seconds`);\n  run.end();\n\n  for (let enviroPath of enviroPathList) {\n    await updateDataForEnvironment(enviroPath);\n    if (globalEnviroDataServerActive) {\n      await closeConnection(enviroPath);\n    }\n  }\n  await updateDisplayedCoverage();\n}\n\nfunction isSingleTestNode(request: vscode.TestRunRequest): boolean {\n  // for debug - ensure that a single node is selected, and that that\n  // node is a \"test\" before allowing debug\n  if (request.include) {\n    if (request.include.length == 1) {\n      const node: vcastTestItem = request.include[0];\n      return node.nodeKind == nodeKind.test;\n    }\n  }\n  return false;\n}\n\nasync function processRunRequest(\n  request: vscode.TestRunRequest,\n  cancellation: vscode.CancellationToken,\n  isDebug: boolean = false\n) {\n  // check if there are any vcast error files open, and close them\n  await closeAnyOpenErrorFiles();\n\n  // Debug is only valid for a single test node\n  // requests.include will be null if the request is for all tests\n  // or it will have a list if the request is for one or more tests\n  // isSingleTestNode checks if it is exactly one and it is a test\n  // not a unit, function, ...\n  if (isDebug && request.include && isSingleTestNode(request)) {\n    const node = request.include[0];\n    debugNode(request, node);\n  } else {\n    // tell user that we are doing a normal run ...\n    if (isDebug) {\n      vscode.window.showInformationMessage(\n        `Debug is only available for single test selections nodes, performing normal test execution.`\n      );\n    }\n    runTests(request, cancellation);\n  }\n}\n\nexport async function deleteTests(nodeList: any[]) {\n  // nodeList might contain environment, unit, function or test nodes\n  // or a combination of all kinds.  The nice thing  is that clicast\n  // handles this all for us.  If we provide only a unit, it deletes\n  // all tests for that unit, only a unit and subprogram, it deletes\n  // all for that subprogram.\n  //\n  // The only special case is for environment-wide delete, see note below\n\n  let changedEnvironmentIDList: Set<string> = new Set();\n\n  for (let node of nodeList) {\n    await vectorMessage(`Deleting tests for node: ${node.id} ...`);\n\n    // call clicast to delete the test case\n    const commandStatus = await deleteSingleTest(node.id);\n\n    if (commandStatus.errorCode == 0) {\n      changedEnvironmentIDList.add(getEnviroNodeIDFromID(node.id));\n    } else {\n      vectorMessage(\"Error deleting test\\n\");\n      openMessagePane();\n    }\n  }\n\n  // now update all of the environments that changed\n  for (let enviroNodeID of changedEnvironmentIDList) {\n    // remove any coded test files from the cache since\n    // they will be re-added by the update\n    removeCBTfilesCacheForEnviro(enviroNodeID);\n    const enviroPath = getEnviroPathFromID(enviroNodeID);\n    await updateDataForEnvironment(enviroPath);\n    await updateProjectData(enviroPath);\n    if (globalEnviroDataServerActive) await closeConnection(enviroPath);\n  }\n}\n\nexport async function insertBasisPathTests(testNode: testNodeType) {\n  // this will insert basis path tests for the given test node\n\n  generateAndLoadBasisPathTests(testNode);\n}\n\nexport async function insertATGTests(testNode: testNodeType) {\n  // this will insert basis path tests for the given test node\n\n  generateAndLoadATGTests(testNode);\n}\n\nexport async function loadTestScript() {\n  const activeEditor = vscode.window.activeTextEditor;\n  if (activeEditor) {\n    let scriptPath = url.fileURLToPath(activeEditor.document.uri.toString());\n\n    // we use the test script contents to determine the environment name\n    const enviroName = getEnviroNameFromScript(scriptPath);\n\n    // We need to check if it's the env test script in case we clicked on\n    // \"Edit Test script\". We don't want to check for it then.\n    const possibleEnviroTstName = enviroName + \".tst\";\n    const isTheEnvTestScript = scriptPath.endsWith(possibleEnviroTstName);\n\n    if (enviroName) {\n      adjustScriptContentsBeforeLoad(scriptPath);\n      const enviroPath = normalizePath(\n        path.join(path.dirname(scriptPath), enviroName)\n      );\n\n      if (!isTheEnvTestScript) {\n        const testExists = await checkIfTestExists(enviroPath, scriptPath);\n        if (!testExists) {\n          return;\n        }\n      }\n\n      // call clicast to load the test script\n      await loadTestScriptIntoEnvironment(enviroName, scriptPath);\n\n      // update the test pane for this environment after the script is loaded\n      // we are reading the data back from the environment with this call\n      updateTestPane(enviroPath);\n      if (globalEnviroDataServerActive) await closeConnection(enviroPath);\n      fs.unlinkSync(scriptPath);\n    } else if (!isTheEnvTestScript) {\n      // Only show the messagt when it's NOT the whole ENV.tst\n      vscode.window.showErrorMessage(\n        `Could not determine environment name, required \"-- Environment: <enviro-name> comment line is missing.`\n      );\n    }\n  }\n}\n\nconst url = require(\"url\");\nexport async function loadTestScriptButton() {\n  // This gets called from the right-click editor context menu\n  // The convention is that the .tst file must be in the same directory\n  // as the environment, so we get the enviroName from parsing the\n  // .tst and get the working directory from its location\n\n  const activeEditor = vscode.window.activeTextEditor;\n  if (activeEditor) {\n    if (activeEditor.document.isDirty) {\n      // need to wait, otherwise we have a race condition with clicast\n      // This also triggers the onDidTextdocumentSave which triggers the loadTestScript function\n      // If we don't do it that way, we will load the same script twice.\n      await activeEditor.document.save();\n    }\n  }\n}\n\nexport async function checkIfTestExists(\n  enviroPath: string,\n  scriptPath: string\n): Promise<boolean> {\n  const scriptContent = fs.readFileSync(scriptPath, \"utf8\");\n\n  // Pre-compile all regexes\n  const nameRe = /^TEST\\.NAME:(.*)$/m;\n  const subprogRe = /^TEST\\.SUBPROGRAM:(.*)$/m;\n  const unitRe = /^TEST\\.UNIT:(.*)$/m;\n  const isCompoundOrInitRe = /^TEST\\.SUBPROGRAM:\\s*<<(?:COMPOUND|INIT)>>$/m;\n\n  // Name and Subprogram\n  const nameMatch = scriptContent.match(nameRe);\n  const subprogMatch = scriptContent.match(subprogRe);\n\n  if (!nameMatch || !subprogMatch) {\n    vscode.window.showErrorMessage(\n      \"Failed to find TEST.NAME or TEST.SUBPROGRAM in script.\"\n    );\n    return false;\n  }\n\n  const testName = nameMatch[1].trim();\n  const subprogName = subprogMatch[1].trim();\n\n  // Build the fullTestName according to compound/init vs. normal\n  let fullTestName: string;\n  // Is it a COMPOUND or INIT test?\n  if (isCompoundOrInitRe.test(scriptContent)) {\n    fullTestName = `vcast:${enviroPath}|not-used.${subprogName}.${testName}`;\n  } else {\n    // Normal test\n    const unitMatch = scriptContent.match(unitRe);\n    if (!unitMatch) {\n      vscode.window.showErrorMessage(\"Failed to find TEST.UNIT in script.\");\n      return false;\n    }\n    const unitName = unitMatch[1].trim();\n    fullTestName = `vcast:${enviroPath}|${unitName}.${subprogName}.${testName}`;\n  }\n\n  // Check if test name already exists\n  const exists = Array.from(testNodeCache.keys()).some(\n    (key) => key === fullTestName\n  );\n  if (exists) {\n    const answer = await vscode.window.showInformationMessage(\n      `Test \"${testName}\" already exists. Loading will create a duplicate with an incremental number. Do you want to proceed?`,\n      \"Yes\",\n      \"No\"\n    );\n    return answer === \"Yes\";\n  }\n\n  return true;\n}\n\nexport async function refreshAllExtensionData() {\n  // This function will do a full reset of the data for all environments\n  // This is needed used when the following happens\n  //      - the workspace is changed\n  //      - the common refresh icon is pressed\n  //      - the vectorcast installation is changed\n  //      - we fall back from server mode\n  //\n  resetCoverageData();\n  await buildTestPaneContents();\n  await updateCOVdecorations();\n  // Global varibale to see if we have a manage Project opened or just an Environment\n  setGlobalProjectIsOpenedChecker();\n  setGlobalCompilerAndTestsuites();\n}\n\n// create the controller\n// Requires to stay \"let\" --> see activateTestPane\nexport let globalController: vscode.TestController;\n\n// We nest each project under the globalProjectsNode, so\n// this is needed to allow us to save and later lookup\n// the parent node for any environment that is part of a project\nexport const globalProjectMap: Map<string, vcastTestItem> = new Map();\n\n/**\n * Given an environment\u2019s data, this function builds (if needed) and returns\n * the parent node for the environment. It uses the environment\u2019s displayName,\n * assumed to be in the format \"Compiler/Testsuite/Environment\", to create the hierarchy.\n * The project file node (e.g. \"TestExplorer.vcm\") is created based on enviroData.projectPath.\n * The last segment (environment name) is omitted because it will be created later.\n */\nfunction getParentNodeForEnvironment(\n  enviroData: environmentNodeDataType\n): vcastTestItem | null {\n  const pathParts = enviroData.displayName.split(\"/\");\n\n  // Free environment: do not create a wrapping node.\n  if (!enviroData.projectPath || enviroData.projectPath.length === 0) {\n    return null;\n  }\n\n  // Managed project branch.\n  let projectNode = globalProjectMap.get(enviroData.projectPath);\n  if (!projectNode) {\n    // If project node doesn't exist, create a new one.\n    const projectDisplayName = path.basename(enviroData.projectPath);\n    projectNode = globalController.createTestItem(\n      enviroData.projectPath,\n      projectDisplayName\n    ) as vcastTestItem;\n    projectNode.nodeKind = nodeKind.project;\n    globalController.items.add(projectNode);\n    globalProjectMap.set(enviroData.projectPath, projectNode);\n  }\n\n  let currentParent = createHierarchy(pathParts, projectNode);\n\n  return currentParent;\n}\n\n/**\n * Creates the hierarchy of nodes (compiler -> testsuite).\n * @param pathParts The segments to create the hierarchy for.\n * @param currentParent The current parent node in the hierarchy.\n */\nfunction createHierarchy(\n  pathParts: string[],\n  currentParent: vcastTestItem\n): vcastTestItem {\n  // Create the hierarchy: compiler -> testsuite (all segments except last).\n  for (let i = 0; i < pathParts.length - 1; i++) {\n    const part = pathParts[i];\n    const childId = `${currentParent.id}/${part}`;\n    let childNode = currentParent.children.get(childId) as vcastTestItem;\n\n    if (!childNode) {\n      childNode = globalController.createTestItem(\n        childId,\n        part\n      ) as vcastTestItem;\n\n      // Set the nodeKind based on the position\n      if (i === 0) {\n        childNode.nodeKind = nodeKind.compiler;\n      } else {\n        childNode.nodeKind = nodeKind.testsuite;\n      }\n\n      currentParent.children.add(childNode);\n    }\n\n    currentParent = childNode;\n  }\n\n  return currentParent;\n}\n\nexport async function activateTestPane(context: vscode.ExtensionContext) {\n  globalController = vscode.tests.createTestController(\n    \"vector-test-controller\",\n    \"VectorCAST Tests\"\n  );\n  context.subscriptions.push(globalController);\n\n  // Removed the creation of globalProjectsNode and globalEnvironmentsNode.\n  // Project nodes will be created dynamically when discovered.\n\n  // Setup the refresh handler.\n  globalController.refreshHandler = async () => {\n    await refreshAllExtensionData();\n  };\n\n  // Custom handler for loading tests.\n  await buildTestPaneContents();\n\n  // Create the \"Run\" and \"Debug\" profiles.\n  globalController.createRunProfile(\n    \"Run\",\n    vscode.TestRunProfileKind.Run,\n    (request, cancellation) => processRunRequest(request, cancellation),\n    true\n  );\n  globalController.createRunProfile(\n    \"Debug\",\n    vscode.TestRunProfileKind.Debug,\n    (request, cancellation) => processRunRequest(request, cancellation, true),\n    true\n  );\n}\n\nexport async function buildTestPaneContents() {\n  return vscode.window.withProgress(\n    {\n      location: vscode.ProgressLocation.Notification,\n      title: \"VectorCAST Test Pane Initialization\",\n      cancellable: true,\n    },\n    async (progress, token) => {\n      // This call will scan all workspace folders.\n      await loadAllVCTests(progress, token);\n    }\n  );\n}\n\nexport async function updateTestPane(enviroPath: string) {\n  // This function updates what is displayed in the test tree.\n  // It is called when we need to update a single environment node\n  // after its children have changed, for example loading a\n  // test script, or editing a coded test file\n\n  const enviroData: environmentNodeDataType = getEnviroNodeData(enviroPath);\n  const parentTreeNode = getParentNodeForEnvironment(enviroData);\n  await updateTestsForEnvironment(parentTreeNode, enviroData);\n}\n\ninterface codedTestFileDataType {\n  checksum: number;\n  enviroNodeIDSet: Set<string>;\n  testNames: any;\n}\n// This map is used to cache the list of tests within a single coded test file\n// we use this when we edit a file to know if the tests have changed\n// the key is the coded test file path, the value is a codedTestFileDataType\nlet codedTestFileCache: Map<string, codedTestFileDataType> = new Map();\n\n// This map is used to cache the list of coded test files in an environment.\n// we use this when we change an environment to know what cbt files are affected\n// the key is the enviroNodeID, the value is the list of cbt files\nlet enviroToCBTfilesCache: Map<string, Set<string>> = new Map();\n\nexport function removeCBTfilesCacheForEnviro(enviroNodeID: string) {\n  // this function will remove the coded test file list from the cache\n  // when we delete or are about to reload an environment\n  const existingList: Set<string> | undefined =\n    enviroToCBTfilesCache.get(enviroNodeID);\n\n  for (let cbtFile of existingList || []) {\n    let cacheData = codedTestFileCache.get(cbtFile);\n    // remove this enviro from the list\n    cacheData?.enviroNodeIDSet.delete(enviroNodeID);\n    // if the list is empty remove the whole node\n    if (cacheData?.enviroNodeIDSet.size == 0) {\n      codedTestFileCache.delete(cbtFile);\n    }\n  }\n  enviroToCBTfilesCache.delete(enviroNodeID);\n}\n\nfunction computeChecksum(filePath: string): number {\n  // used to compute a checksum for a coded test file so that\n  // we know if it has \"really changed\" when we get a write event\n\n  // read contents of testFile into a string\n  const content = fs.readFileSync(filePath);\n  // compute the checksum\n  return crypto.createHash(\"md5\").update(content, \"utf8\").digest(\"hex\");\n}\n\nasync function addCodedTestfileToCache(\n  enviroNodeID: string,\n  functionNodeForCache: testNodeType\n) {\n  // this function will add a coded test file to the cache as we process the enviro data\n  let fileCacheData: codedTestFileDataType | undefined = codedTestFileCache.get(\n    functionNodeForCache.testFile\n  );\n\n  if (!fileCacheData) {\n    const enviroPath: string = getEnviroPathFromID(enviroNodeID);\n    fileCacheData = {\n      checksum: computeChecksum(functionNodeForCache.testFile),\n      enviroNodeIDSet: new Set(),\n      testNames: await getCBTNamesFromFile(\n        functionNodeForCache.testFile,\n        enviroPath\n      ),\n    };\n  }\n\n  // add this enviroID to the list for this test file ...\n  fileCacheData.enviroNodeIDSet.add(enviroNodeID);\n  codedTestFileCache.set(functionNodeForCache.testFile, fileCacheData);\n\n  // we also need to add this Coded Test file to the enviro cache\n  let enviroCacheData: Set<string> | undefined =\n    enviroToCBTfilesCache.get(enviroNodeID);\n\n  enviroCacheData ??= new Set();\n\n  enviroCacheData.add(functionNodeForCache.testFile);\n  enviroToCBTfilesCache.set(enviroNodeID, enviroCacheData);\n}\n\nexport async function updateCodedTestCases(editor: any) {\n  // This function will compare the editor that was just saved against\n  // the known coded test files in the workspace.  If there is a match,\n  // and if the test cases in the file changed we will use clicast to\n  // update the environment and then update the tree.  If the file changed\n  // but the tests did not change we will only ask clicast to re-load the file\n\n  // if this file is a coded test file for any environment in the workspace\n  const filePath = editor.fileName;\n  const codedTestFileData: codedTestFileDataType | undefined =\n    codedTestFileCache.get(filePath);\n  if (codedTestFileData) {\n    // then check if the file has changed (checksum is different)\n    // if it hasn't then we're done\n    const currentChecksum = computeChecksum(filePath);\n    if (currentChecksum != codedTestFileData.checksum) {\n      // we need to do a refresh for every enviro node that uses this file\n      // and then if the test names changed, also update the test pane\n      let newTestNames: string[] | undefined = undefined;\n      for (let enviroNodeID of codedTestFileData.enviroNodeIDSet.values()) {\n        const enviroPath: string = getEnviroPathFromID(enviroNodeID);\n\n        // update newTestNames if we have not yet computed them ...\n        if (!newTestNames) {\n          newTestNames = await getCBTNamesFromFile(filePath, enviroPath);\n        }\n\n        vectorMessage(\n          `Refreshing coded test file: ${filePath} for environment: ${enviroPath} ...`\n        );\n\n        // call clicast to update the coded tests\n        const refreshCommandStatus = await refreshCodedTests(\n          enviroPath,\n          enviroNodeID\n        );\n\n        // if the refresh worked, and the test names changed, then update test pane\n        if (refreshCommandStatus.errorCode == 0) {\n          updateTestPane(enviroPath);\n        } else {\n          vectorMessage(\"Error refreshing coded tests\\n\");\n        }\n        if (globalEnviroDataServerActive) await closeConnection(enviroPath);\n      }\n      // update the test names and checksum in all cases, rather than checking for diffs again\n      codedTestFileData.testNames = newTestNames;\n      codedTestFileData.checksum = currentChecksum;\n    }\n  }\n}\n\n// special is for compound and init\nexport enum nodeKind {\n  projectGroup,\n  project,\n  environmentGroup,\n  environment,\n  unit,\n  function,\n  special,\n  test,\n  compiler,\n  testsuite,\n}\nexport interface vcastTestItem extends vscode.TestItem {\n  // this is a simple wrapper that allows us to add additional\n  // data that we might want to tag along with the test tree nodes\n\n  // Thought I could use this in a package.json when clause\n  // but have not figured this out yet.\n  nodeKind?: nodeKind;\n\n  // used to inhibit run for compound only tests\n  isCompoundOnly?: boolean;\n\n  // this is used for unit nodes to keep track of the\n  // full path to the source file\n  sourcePath?: string;\n}\n\n/**\n * Checking for errors while retrieveing all env data form the workspace and report them\n */\nfunction checkWorkspaceEnvDataForErrors() {\n  if (cachedWorkspaceEnvData) {\n    const errorList = cachedWorkspaceEnvData[\"errors\"];\n    if (errorList && Array.isArray(errorList)) {\n      for (const errMsg of errorList) {\n        vectorMessage(`Error while loading environment: ${errMsg}. Skipping.`);\n      }\n    }\n  }\n}\n", "// this file contains the language server client logic for test script editing\n\nimport * as path from \"path\";\nimport { ExtensionContext } from \"vscode\";\n\nimport { globalEnviroDataServerActive } from \"../src-common/vcastServer\";\n\nimport {\n  LanguageClient,\n  LanguageClientOptions,\n  ServerOptions,\n  TransportKind,\n} from \"vscode-languageclient\";\n\nimport { enviroDataType } from \"../src-common/commonUtilities\";\nimport { vectorMessage } from \"./messagePane\";\nimport { vPythonCommandToUse } from \"./vcastInstallation\";\n\nlet client: LanguageClient;\nlet globalvMockAvailable: boolean = false;\nexport function activateLanguageServerClient(context: ExtensionContext) {\n  // The server is implemented in nodejs also\n  let serverModule = context.asAbsolutePath(path.join(\"out\", \"server.js\"));\n\n  // The debug options for the server\n  // --inspect=6009: runs the tserver in Node's Inspector mode so VS Code can attach to the server for debugging\n  let debugOptions = { execArgv: [\"--nolazy\", \"--inspect=6009\"] };\n\n  // If the extension is launched in debug mode then the debug server options are used\n  // Otherwise the run options are used\n  const vpythonPath: string =\n    vPythonCommandToUse != null ? vPythonCommandToUse : \"vpython\";\n  let serverOptions: ServerOptions = {\n    run: {\n      module: serverModule,\n      args: [\n        context.asAbsolutePath(\".\"),\n        vpythonPath,\n        globalEnviroDataServerActive.toString(),\n      ],\n      transport: TransportKind.ipc,\n    },\n    debug: {\n      module: serverModule,\n      args: [\n        context.asAbsolutePath(\".\"),\n        vpythonPath,\n        globalEnviroDataServerActive.toString(),\n      ],\n      transport: TransportKind.ipc,\n      options: debugOptions,\n    },\n  };\n\n  // Options to control the language client\n  // we register for .tst and c|cpp files, and do the right thing in the callback\n  // depending on the extension of the file\n  let clientOptions: LanguageClientOptions = {\n    documentSelector: [\n      { scheme: \"file\", pattern: \"**/*.tst\" },\n      { scheme: \"file\", language: \"c\" },\n      { scheme: \"file\", language: \"cpp\" },\n      { scheme: \"file\", language: \"cuda-cpp\" },\n    ],\n  };\n\n  // Create the language client and start the client.\n  client = new LanguageClient(\n    \"vcasttesteditor\",\n    \"VectorCAST Test Editor\",\n    serverOptions,\n    clientOptions\n  );\n\n  // Start the client. This will also launch the server\n  vectorMessage(\n    \"Starting the language server client for test script editing ...\"\n  );\n  client.start();\n\n  // initialize the vMock status to the value set during activation\n  updateVMockStatus(globalvMockAvailable);\n}\n\n// we keep a cache of what we have sent to the server so we don't\n// constantly send the same pair, we intentionally over-write the\n// file path key if it already exists, since the most recent\n// environment association is the most correct.\n\nlet testFilesSentToServer: Map<string, enviroDataType> = new Map();\n\nfunction shouldSendFileInfoToServer(\n  testFilePath: string,\n  enviroPath: string,\n  enviroHasMockSupport: boolean\n) {\n  // we only want to send the file association data to the server\n  // if we have not sent it before, or if something has changed\n  // like the environment path or the mock support status\n  const enviroData = testFilesSentToServer.get(testFilePath);\n  if (enviroData) {\n    if (\n      enviroData.enviroPath == enviroPath &&\n      enviroData.hasMockSupport == enviroHasMockSupport\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  } else {\n    return true;\n  }\n}\n\n// This function is used to send the server information about the association between\n// a coded test file and the environment that uses that file.\nexport function sendTestFileDataToLanguageServer(\n  testFilePath: string,\n  enviroPath: string,\n  enviroHasMockSupport: boolean\n) {\n  // if this test file is in the map for this environment, return\n  if (\n    shouldSendFileInfoToServer(testFilePath, enviroPath, enviroHasMockSupport)\n  ) {\n    // else this is a new test file or a new enviro for an existing test file\n    // we always send in in the second case, because we want the server\n    // to have the latest association.\n    client.onReady().then(() => {\n      testFilesSentToServer.set(testFilePath, {\n        enviroPath: enviroPath,\n        hasMockSupport: enviroHasMockSupport,\n      });\n      // we want the server to know about all test files, because this\n      // allows the server to give helpful error messages when the\n      // enviro does not support mocks.\n      client.sendNotification(\"vcasttesteditor/loadTestfile\", {\n        testFilePath,\n        enviroPath,\n        enviroHasMockSupport,\n      });\n    });\n  }\n}\n\n// This function is used to update vmockAvailable on the server side\nexport function updateVMockStatus(vmockAvailable: boolean) {\n  // during activation, the client may not be ready yet, so we store the value\n  // of the vmockAvailable flag in a global variable and send it to the server\n  // on startup\n  if (client) {\n    client.onReady().then(() => {\n      client.sendNotification(\"vcasttesteditor/vmockstatus\", {\n        vmockAvailable,\n      });\n    });\n  } else {\n    globalvMockAvailable = vmockAvailable;\n  }\n}\n\n// This function is used to send an updated path to vPython to the server\nexport function sendVPythonCommandToServer(vPythonCommand: string) {\n  if (client) {\n    client.onReady().then(() => {\n      client.sendNotification(\"vcasttesteditor/updateVPythonCommand\", {\n        vPythonCommand,\n      });\n    });\n  }\n}\n\n// This function is used to send the VectorCAST Data Server\n// port number to the language server\n\nexport function sendPortNumberToLanguageServer(portNumber: number) {\n  if (client) {\n    client.onReady().then(() => {\n      client.sendNotification(\"vcasttesteditor/updateServerPort\", {\n        portNumber,\n      });\n    });\n  }\n}\n\n// This function is used to send an updated state of the\n// VectorCAST Data Server to the language server\nexport function sendServerStateToLanguageServer(useServer: boolean) {\n  if (client) {\n    client.onReady().then(() => {\n      client.sendNotification(\"vcasttesteditor/updateServerState\", {\n        useServer,\n      });\n    });\n  }\n}\n\nexport function deactivateLanguageServerClient(): Thenable<void> | undefined {\n  if (!client) {\n    return undefined;\n  }\n  return client.stop();\n}\n", "'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n", "'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap\n};\n", "'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n", "import FormData from 'form-data';\n\nexport default FormData;\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n", "'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n", "'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n", "'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n", "'use strict';\n\nimport url from 'url';\nexport default url.URLSearchParams;\n", "import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\n\nexport default {\n  isNode: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob: typeof Blob !== 'undefined' && Blob || null\n  },\n  protocols: [ 'http', 'https', 'file', 'data' ]\n};\n", "const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  _navigator as navigator,\n  origin\n}\n", "import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n", "'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n", "'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n", "'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n", "'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isHeaders(header)) {\n      for (const [key, value] of header.entries()) {\n        setHeader(value, key, rewrite);\n      }\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n", "'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n", "'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n", "'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n", "'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n", "'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n", "'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n", "'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n", "'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport buildURL from './../helpers/buildURL.js';\nimport {getProxyForUrl} from 'proxy-from-env';\nimport http from 'http';\nimport https from 'https';\nimport util from 'util';\nimport followRedirects from 'follow-redirects';\nimport zlib from 'zlib';\nimport {VERSION} from '../env/data.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport platform from '../platform/index.js';\nimport fromDataURI from '../helpers/fromDataURI.js';\nimport stream from 'stream';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport AxiosTransformStream from '../helpers/AxiosTransformStream.js';\nimport {EventEmitter} from 'events';\nimport formDataToStream from \"../helpers/formDataToStream.js\";\nimport readBlob from \"../helpers/readBlob.js\";\nimport ZlibHeaderTransformStream from '../helpers/ZlibHeaderTransformStream.js';\nimport callbackify from \"../helpers/callbackify.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\n\nconst zlibOptions = {\n  flush: zlib.constants.Z_SYNC_FLUSH,\n  finishFlush: zlib.constants.Z_SYNC_FLUSH\n};\n\nconst brotliOptions = {\n  flush: zlib.constants.BROTLI_OPERATION_FLUSH,\n  finishFlush: zlib.constants.BROTLI_OPERATION_FLUSH\n}\n\nconst isBrotliSupported = utils.isFunction(zlib.createBrotliDecompress);\n\nconst {http: httpFollow, https: httpsFollow} = followRedirects;\n\nconst isHttps = /https:?/;\n\nconst supportedProtocols = platform.protocols.map(protocol => {\n  return protocol + ':';\n});\n\nconst flushOnFinish = (stream, [throttled, flush]) => {\n  stream\n    .on('end', flush)\n    .on('error', flush);\n\n  return throttled;\n}\n\n/**\n * If the proxy or config beforeRedirects functions are defined, call them with the options\n * object.\n *\n * @param {Object<string, any>} options - The options object that was passed to the request.\n *\n * @returns {Object<string, any>}\n */\nfunction dispatchBeforeRedirect(options, responseDetails) {\n  if (options.beforeRedirects.proxy) {\n    options.beforeRedirects.proxy(options);\n  }\n  if (options.beforeRedirects.config) {\n    options.beforeRedirects.config(options, responseDetails);\n  }\n}\n\n/**\n * If the proxy or config afterRedirects functions are defined, call them with the options\n *\n * @param {http.ClientRequestArgs} options\n * @param {AxiosProxyConfig} configProxy configuration from Axios options object\n * @param {string} location\n *\n * @returns {http.ClientRequestArgs}\n */\nfunction setProxy(options, configProxy, location) {\n  let proxy = configProxy;\n  if (!proxy && proxy !== false) {\n    const proxyUrl = getProxyForUrl(location);\n    if (proxyUrl) {\n      proxy = new URL(proxyUrl);\n    }\n  }\n  if (proxy) {\n    // Basic proxy authorization\n    if (proxy.username) {\n      proxy.auth = (proxy.username || '') + ':' + (proxy.password || '');\n    }\n\n    if (proxy.auth) {\n      // Support proxy auth object form\n      if (proxy.auth.username || proxy.auth.password) {\n        proxy.auth = (proxy.auth.username || '') + ':' + (proxy.auth.password || '');\n      }\n      const base64 = Buffer\n        .from(proxy.auth, 'utf8')\n        .toString('base64');\n      options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n    }\n\n    options.headers.host = options.hostname + (options.port ? ':' + options.port : '');\n    const proxyHost = proxy.hostname || proxy.host;\n    options.hostname = proxyHost;\n    // Replace 'host' since options is not a URL object\n    options.host = proxyHost;\n    options.port = proxy.port;\n    options.path = location;\n    if (proxy.protocol) {\n      options.protocol = proxy.protocol.includes(':') ? proxy.protocol : `${proxy.protocol}:`;\n    }\n  }\n\n  options.beforeRedirects.proxy = function beforeRedirect(redirectOptions) {\n    // Configure proxy for redirected request, passing the original config proxy to apply\n    // the exact same logic as if the redirected request was performed by axios directly.\n    setProxy(redirectOptions, configProxy, redirectOptions.href);\n  };\n}\n\nconst isHttpAdapterSupported = typeof process !== 'undefined' && utils.kindOf(process) === 'process';\n\n// temporary hotfix\n\nconst wrapAsync = (asyncExecutor) => {\n  return new Promise((resolve, reject) => {\n    let onDone;\n    let isDone;\n\n    const done = (value, isRejected) => {\n      if (isDone) return;\n      isDone = true;\n      onDone && onDone(value, isRejected);\n    }\n\n    const _resolve = (value) => {\n      done(value);\n      resolve(value);\n    };\n\n    const _reject = (reason) => {\n      done(reason, true);\n      reject(reason);\n    }\n\n    asyncExecutor(_resolve, _reject, (onDoneHandler) => (onDone = onDoneHandler)).catch(_reject);\n  })\n};\n\nconst resolveFamily = ({address, family}) => {\n  if (!utils.isString(address)) {\n    throw TypeError('address must be a string');\n  }\n  return ({\n    address,\n    family: family || (address.indexOf('.') < 0 ? 6 : 4)\n  });\n}\n\nconst buildAddressEntry = (address, family) => resolveFamily(utils.isObject(address) ? address : {address, family});\n\n/*eslint consistent-return:0*/\nexport default isHttpAdapterSupported && function httpAdapter(config) {\n  return wrapAsync(async function dispatchHttpRequest(resolve, reject, onDone) {\n    let {data, lookup, family} = config;\n    const {responseType, responseEncoding} = config;\n    const method = config.method.toUpperCase();\n    let isDone;\n    let rejected = false;\n    let req;\n\n    if (lookup) {\n      const _lookup = callbackify(lookup, (value) => utils.isArray(value) ? value : [value]);\n      // hotfix to support opt.all option which is required for node 20.x\n      lookup = (hostname, opt, cb) => {\n        _lookup(hostname, opt, (err, arg0, arg1) => {\n          if (err) {\n            return cb(err);\n          }\n\n          const addresses = utils.isArray(arg0) ? arg0.map(addr => buildAddressEntry(addr)) : [buildAddressEntry(arg0, arg1)];\n\n          opt.all ? cb(err, addresses) : cb(err, addresses[0].address, addresses[0].family);\n        });\n      }\n    }\n\n    // temporary internal emitter until the AxiosRequest class will be implemented\n    const emitter = new EventEmitter();\n\n    const onFinished = () => {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(abort);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', abort);\n      }\n\n      emitter.removeAllListeners();\n    }\n\n    onDone((value, isRejected) => {\n      isDone = true;\n      if (isRejected) {\n        rejected = true;\n        onFinished();\n      }\n    });\n\n    function abort(reason) {\n      emitter.emit('abort', !reason || reason.type ? new CanceledError(null, config, req) : reason);\n    }\n\n    emitter.once('abort', reject);\n\n    if (config.cancelToken || config.signal) {\n      config.cancelToken && config.cancelToken.subscribe(abort);\n      if (config.signal) {\n        config.signal.aborted ? abort() : config.signal.addEventListener('abort', abort);\n      }\n    }\n\n    // Parse url\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    const parsed = new URL(fullPath, platform.hasBrowserEnv ? platform.origin : undefined);\n    const protocol = parsed.protocol || supportedProtocols[0];\n\n    if (protocol === 'data:') {\n      let convertedData;\n\n      if (method !== 'GET') {\n        return settle(resolve, reject, {\n          status: 405,\n          statusText: 'method not allowed',\n          headers: {},\n          config\n        });\n      }\n\n      try {\n        convertedData = fromDataURI(config.url, responseType === 'blob', {\n          Blob: config.env && config.env.Blob\n        });\n      } catch (err) {\n        throw AxiosError.from(err, AxiosError.ERR_BAD_REQUEST, config);\n      }\n\n      if (responseType === 'text') {\n        convertedData = convertedData.toString(responseEncoding);\n\n        if (!responseEncoding || responseEncoding === 'utf8') {\n          convertedData = utils.stripBOM(convertedData);\n        }\n      } else if (responseType === 'stream') {\n        convertedData = stream.Readable.from(convertedData);\n      }\n\n      return settle(resolve, reject, {\n        data: convertedData,\n        status: 200,\n        statusText: 'OK',\n        headers: new AxiosHeaders(),\n        config\n      });\n    }\n\n    if (supportedProtocols.indexOf(protocol) === -1) {\n      return reject(new AxiosError(\n        'Unsupported protocol ' + protocol,\n        AxiosError.ERR_BAD_REQUEST,\n        config\n      ));\n    }\n\n    const headers = AxiosHeaders.from(config.headers).normalize();\n\n    // Set User-Agent (required by some servers)\n    // See https://github.com/axios/axios/issues/69\n    // User-Agent is specified; handle case where no UA header is desired\n    // Only set header if it hasn't been set in config\n    headers.set('User-Agent', 'axios/' + VERSION, false);\n\n    const {onUploadProgress, onDownloadProgress} = config;\n    const maxRate = config.maxRate;\n    let maxUploadRate = undefined;\n    let maxDownloadRate = undefined;\n\n    // support for spec compliant FormData objects\n    if (utils.isSpecCompliantForm(data)) {\n      const userBoundary = headers.getContentType(/boundary=([-_\\w\\d]{10,70})/i);\n\n      data = formDataToStream(data, (formHeaders) => {\n        headers.set(formHeaders);\n      }, {\n        tag: `axios-${VERSION}-boundary`,\n        boundary: userBoundary && userBoundary[1] || undefined\n      });\n      // support for https://www.npmjs.com/package/form-data api\n    } else if (utils.isFormData(data) && utils.isFunction(data.getHeaders)) {\n      headers.set(data.getHeaders());\n\n      if (!headers.hasContentLength()) {\n        try {\n          const knownLength = await util.promisify(data.getLength).call(data);\n          Number.isFinite(knownLength) && knownLength >= 0 && headers.setContentLength(knownLength);\n          /*eslint no-empty:0*/\n        } catch (e) {\n        }\n      }\n    } else if (utils.isBlob(data)) {\n      data.size && headers.setContentType(data.type || 'application/octet-stream');\n      headers.setContentLength(data.size || 0);\n      data = stream.Readable.from(readBlob(data));\n    } else if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {\n        // Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = Buffer.from(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = Buffer.from(data, 'utf-8');\n      } else {\n        return reject(new AxiosError(\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\n          AxiosError.ERR_BAD_REQUEST,\n          config\n        ));\n      }\n\n      // Add Content-Length header if data exists\n      headers.setContentLength(data.length, false);\n\n      if (config.maxBodyLength > -1 && data.length > config.maxBodyLength) {\n        return reject(new AxiosError(\n          'Request body larger than maxBodyLength limit',\n          AxiosError.ERR_BAD_REQUEST,\n          config\n        ));\n      }\n    }\n\n    const contentLength = utils.toFiniteNumber(headers.getContentLength());\n\n    if (utils.isArray(maxRate)) {\n      maxUploadRate = maxRate[0];\n      maxDownloadRate = maxRate[1];\n    } else {\n      maxUploadRate = maxDownloadRate = maxRate;\n    }\n\n    if (data && (onUploadProgress || maxUploadRate)) {\n      if (!utils.isStream(data)) {\n        data = stream.Readable.from(data, {objectMode: false});\n      }\n\n      data = stream.pipeline([data, new AxiosTransformStream({\n        maxRate: utils.toFiniteNumber(maxUploadRate)\n      })], utils.noop);\n\n      onUploadProgress && data.on('progress', flushOnFinish(\n        data,\n        progressEventDecorator(\n          contentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress), false, 3)\n        )\n      ));\n    }\n\n    // HTTP basic authentication\n    let auth = undefined;\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password || '';\n      auth = username + ':' + password;\n    }\n\n    if (!auth && parsed.username) {\n      const urlUsername = parsed.username;\n      const urlPassword = parsed.password;\n      auth = urlUsername + ':' + urlPassword;\n    }\n\n    auth && headers.delete('authorization');\n\n    let path;\n\n    try {\n      path = buildURL(\n        parsed.pathname + parsed.search,\n        config.params,\n        config.paramsSerializer\n      ).replace(/^\\?/, '');\n    } catch (err) {\n      const customErr = new Error(err.message);\n      customErr.config = config;\n      customErr.url = config.url;\n      customErr.exists = true;\n      return reject(customErr);\n    }\n\n    headers.set(\n      'Accept-Encoding',\n      'gzip, compress, deflate' + (isBrotliSupported ? ', br' : ''), false\n      );\n\n    const options = {\n      path,\n      method: method,\n      headers: headers.toJSON(),\n      agents: { http: config.httpAgent, https: config.httpsAgent },\n      auth,\n      protocol,\n      family,\n      beforeRedirect: dispatchBeforeRedirect,\n      beforeRedirects: {}\n    };\n\n    // cacheable-lookup integration hotfix\n    !utils.isUndefined(lookup) && (options.lookup = lookup);\n\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname.startsWith(\"[\") ? parsed.hostname.slice(1, -1) : parsed.hostname;\n      options.port = parsed.port;\n      setProxy(options, config.proxy, protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path);\n    }\n\n    let transport;\n    const isHttpsRequest = isHttps.test(options.protocol);\n    options.agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttpsRequest ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n      if (config.beforeRedirect) {\n        options.beforeRedirects.config = config.beforeRedirect;\n      }\n      transport = isHttpsRequest ? httpsFollow : httpFollow;\n    }\n\n    if (config.maxBodyLength > -1) {\n      options.maxBodyLength = config.maxBodyLength;\n    } else {\n      // follow-redirects does not skip comparison, so it should always succeed for axios -1 unlimited\n      options.maxBodyLength = Infinity;\n    }\n\n    if (config.insecureHTTPParser) {\n      options.insecureHTTPParser = config.insecureHTTPParser;\n    }\n\n    // Create the request\n    req = transport.request(options, function handleResponse(res) {\n      if (req.destroyed) return;\n\n      const streams = [res];\n\n      const responseLength = +res.headers['content-length'];\n\n      if (onDownloadProgress || maxDownloadRate) {\n        const transformStream = new AxiosTransformStream({\n          maxRate: utils.toFiniteNumber(maxDownloadRate)\n        });\n\n        onDownloadProgress && transformStream.on('progress', flushOnFinish(\n          transformStream,\n          progressEventDecorator(\n            responseLength,\n            progressEventReducer(asyncDecorator(onDownloadProgress), true, 3)\n          )\n        ));\n\n        streams.push(transformStream);\n      }\n\n      // decompress the response body transparently if required\n      let responseStream = res;\n\n      // return the last request in case of redirects\n      const lastRequest = res.req || req;\n\n      // if decompress disabled we should not decompress\n      if (config.decompress !== false && res.headers['content-encoding']) {\n        // if no content, but headers still say that it is encoded,\n        // remove the header not confuse downstream operations\n        if (method === 'HEAD' || res.statusCode === 204) {\n          delete res.headers['content-encoding'];\n        }\n\n        switch ((res.headers['content-encoding'] || '').toLowerCase()) {\n        /*eslint default-case:0*/\n        case 'gzip':\n        case 'x-gzip':\n        case 'compress':\n        case 'x-compress':\n          // add the unzipper to the body stream processing pipeline\n          streams.push(zlib.createUnzip(zlibOptions));\n\n          // remove the content-encoding in order to not confuse downstream operations\n          delete res.headers['content-encoding'];\n          break;\n        case 'deflate':\n          streams.push(new ZlibHeaderTransformStream());\n\n          // add the unzipper to the body stream processing pipeline\n          streams.push(zlib.createUnzip(zlibOptions));\n\n          // remove the content-encoding in order to not confuse downstream operations\n          delete res.headers['content-encoding'];\n          break;\n        case 'br':\n          if (isBrotliSupported) {\n            streams.push(zlib.createBrotliDecompress(brotliOptions));\n            delete res.headers['content-encoding'];\n          }\n        }\n      }\n\n      responseStream = streams.length > 1 ? stream.pipeline(streams, utils.noop) : streams[0];\n\n      const offListeners = stream.finished(responseStream, () => {\n        offListeners();\n        onFinished();\n      });\n\n      const response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: new AxiosHeaders(res.headers),\n        config,\n        request: lastRequest\n      };\n\n      if (responseType === 'stream') {\n        response.data = responseStream;\n        settle(resolve, reject, response);\n      } else {\n        const responseBuffer = [];\n        let totalResponseBytes = 0;\n\n        responseStream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n          totalResponseBytes += chunk.length;\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {\n            // stream.destroy() emit aborted event before calling reject() on Node.js v16\n            rejected = true;\n            responseStream.destroy();\n            reject(new AxiosError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\n              AxiosError.ERR_BAD_RESPONSE, config, lastRequest));\n          }\n        });\n\n        responseStream.on('aborted', function handlerStreamAborted() {\n          if (rejected) {\n            return;\n          }\n\n          const err = new AxiosError(\n            'maxContentLength size of ' + config.maxContentLength + ' exceeded',\n            AxiosError.ERR_BAD_RESPONSE,\n            config,\n            lastRequest\n          );\n          responseStream.destroy(err);\n          reject(err);\n        });\n\n        responseStream.on('error', function handleStreamError(err) {\n          if (req.destroyed) return;\n          reject(AxiosError.from(err, null, config, lastRequest));\n        });\n\n        responseStream.on('end', function handleStreamEnd() {\n          try {\n            let responseData = responseBuffer.length === 1 ? responseBuffer[0] : Buffer.concat(responseBuffer);\n            if (responseType !== 'arraybuffer') {\n              responseData = responseData.toString(responseEncoding);\n              if (!responseEncoding || responseEncoding === 'utf8') {\n                responseData = utils.stripBOM(responseData);\n              }\n            }\n            response.data = responseData;\n          } catch (err) {\n            return reject(AxiosError.from(err, null, config, response.request, response));\n          }\n          settle(resolve, reject, response);\n        });\n      }\n\n      emitter.once('abort', err => {\n        if (!responseStream.destroyed) {\n          responseStream.emit('error', err);\n          responseStream.destroy();\n        }\n      });\n    });\n\n    emitter.once('abort', err => {\n      reject(err);\n      req.destroy(err);\n    });\n\n    // Handle errors\n    req.on('error', function handleRequestError(err) {\n      // @todo remove\n      // if (req.aborted && err.code !== AxiosError.ERR_FR_TOO_MANY_REDIRECTS) return;\n      reject(AxiosError.from(err, null, config, req));\n    });\n\n    // set tcp keep alive to prevent drop connection by peer\n    req.on('socket', function handleRequestSocket(socket) {\n      // default interval of sending ack packet is 1 minute\n      socket.setKeepAlive(true, 1000 * 60);\n    });\n\n    // Handle request timeout\n    if (config.timeout) {\n      // This is forcing a int timeout to avoid problems if the `req` interface doesn't handle other types.\n      const timeout = parseInt(config.timeout, 10);\n\n      if (Number.isNaN(timeout)) {\n        reject(new AxiosError(\n          'error trying to parse `config.timeout` to int',\n          AxiosError.ERR_BAD_OPTION_VALUE,\n          config,\n          req\n        ));\n\n        return;\n      }\n\n      // Sometime, the response will be very slow, and does not respond, the connect event will be block by event loop system.\n      // And timer callback will be fired, and abort() will be invoked before connection, then get \"socket hang up\" and code ECONNRESET.\n      // At this time, if we have a large number of request, nodejs will hang up some socket on background. and the number will up and up.\n      // And then these socket which be hang up will devouring CPU little by little.\n      // ClientRequest.setTimeout will be fired on the specify milliseconds, and can make sure that abort() will be fired after connect.\n      req.setTimeout(timeout, function handleRequestTimeout() {\n        if (isDone) return;\n        let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n        const transitional = config.transitional || transitionalDefaults;\n        if (config.timeoutErrorMessage) {\n          timeoutErrorMessage = config.timeoutErrorMessage;\n        }\n        reject(new AxiosError(\n          timeoutErrorMessage,\n          transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n          config,\n          req\n        ));\n        abort();\n      });\n    }\n\n\n    // Send the request\n    if (utils.isStream(data)) {\n      let ended = false;\n      let errored = false;\n\n      data.on('end', () => {\n        ended = true;\n      });\n\n      data.once('error', err => {\n        errored = true;\n        req.destroy(err);\n      });\n\n      data.on('close', () => {\n        if (!ended && !errored) {\n          abort(new CanceledError('Request stream has been aborted', config, req));\n        }\n      });\n\n      data.pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n}\n\nexport const __setProxy = setProxy;\n", "export const VERSION = \"1.7.7\";", "'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n", "'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport parseProtocol from './parseProtocol.js';\nimport platform from '../platform/index.js';\n\nconst DATA_URL_PATTERN = /^(?:([^;]+);)?(?:[^;]+;)?(base64|),([\\s\\S]*)$/;\n\n/**\n * Parse data uri to a Buffer or Blob\n *\n * @param {String} uri\n * @param {?Boolean} asBlob\n * @param {?Object} options\n * @param {?Function} options.Blob\n *\n * @returns {Buffer|Blob}\n */\nexport default function fromDataURI(uri, asBlob, options) {\n  const _Blob = options && options.Blob || platform.classes.Blob;\n  const protocol = parseProtocol(uri);\n\n  if (asBlob === undefined && _Blob) {\n    asBlob = true;\n  }\n\n  if (protocol === 'data') {\n    uri = protocol.length ? uri.slice(protocol.length + 1) : uri;\n\n    const match = DATA_URL_PATTERN.exec(uri);\n\n    if (!match) {\n      throw new AxiosError('Invalid URL', AxiosError.ERR_INVALID_URL);\n    }\n\n    const mime = match[1];\n    const isBase64 = match[2];\n    const body = match[3];\n    const buffer = Buffer.from(decodeURIComponent(body), isBase64 ? 'base64' : 'utf8');\n\n    if (asBlob) {\n      if (!_Blob) {\n        throw new AxiosError('Blob is not supported', AxiosError.ERR_NOT_SUPPORT);\n      }\n\n      return new _Blob([buffer], {type: mime});\n    }\n\n    return buffer;\n  }\n\n  throw new AxiosError('Unsupported protocol ' + protocol, AxiosError.ERR_NOT_SUPPORT);\n}\n", "'use strict';\n\nimport stream from 'stream';\nimport utils from '../utils.js';\n\nconst kInternals = Symbol('internals');\n\nclass AxiosTransformStream extends stream.Transform{\n  constructor(options) {\n    options = utils.toFlatObject(options, {\n      maxRate: 0,\n      chunkSize: 64 * 1024,\n      minChunkSize: 100,\n      timeWindow: 500,\n      ticksRate: 2,\n      samplesCount: 15\n    }, null, (prop, source) => {\n      return !utils.isUndefined(source[prop]);\n    });\n\n    super({\n      readableHighWaterMark: options.chunkSize\n    });\n\n    const internals = this[kInternals] = {\n      timeWindow: options.timeWindow,\n      chunkSize: options.chunkSize,\n      maxRate: options.maxRate,\n      minChunkSize: options.minChunkSize,\n      bytesSeen: 0,\n      isCaptured: false,\n      notifiedBytesLoaded: 0,\n      ts: Date.now(),\n      bytes: 0,\n      onReadCallback: null\n    };\n\n    this.on('newListener', event => {\n      if (event === 'progress') {\n        if (!internals.isCaptured) {\n          internals.isCaptured = true;\n        }\n      }\n    });\n  }\n\n  _read(size) {\n    const internals = this[kInternals];\n\n    if (internals.onReadCallback) {\n      internals.onReadCallback();\n    }\n\n    return super._read(size);\n  }\n\n  _transform(chunk, encoding, callback) {\n    const internals = this[kInternals];\n    const maxRate = internals.maxRate;\n\n    const readableHighWaterMark = this.readableHighWaterMark;\n\n    const timeWindow = internals.timeWindow;\n\n    const divider = 1000 / timeWindow;\n    const bytesThreshold = (maxRate / divider);\n    const minChunkSize = internals.minChunkSize !== false ? Math.max(internals.minChunkSize, bytesThreshold * 0.01) : 0;\n\n    const pushChunk = (_chunk, _callback) => {\n      const bytes = Buffer.byteLength(_chunk);\n      internals.bytesSeen += bytes;\n      internals.bytes += bytes;\n\n      internals.isCaptured && this.emit('progress', internals.bytesSeen);\n\n      if (this.push(_chunk)) {\n        process.nextTick(_callback);\n      } else {\n        internals.onReadCallback = () => {\n          internals.onReadCallback = null;\n          process.nextTick(_callback);\n        };\n      }\n    }\n\n    const transformChunk = (_chunk, _callback) => {\n      const chunkSize = Buffer.byteLength(_chunk);\n      let chunkRemainder = null;\n      let maxChunkSize = readableHighWaterMark;\n      let bytesLeft;\n      let passed = 0;\n\n      if (maxRate) {\n        const now = Date.now();\n\n        if (!internals.ts || (passed = (now - internals.ts)) >= timeWindow) {\n          internals.ts = now;\n          bytesLeft = bytesThreshold - internals.bytes;\n          internals.bytes = bytesLeft < 0 ? -bytesLeft : 0;\n          passed = 0;\n        }\n\n        bytesLeft = bytesThreshold - internals.bytes;\n      }\n\n      if (maxRate) {\n        if (bytesLeft <= 0) {\n          // next time window\n          return setTimeout(() => {\n            _callback(null, _chunk);\n          }, timeWindow - passed);\n        }\n\n        if (bytesLeft < maxChunkSize) {\n          maxChunkSize = bytesLeft;\n        }\n      }\n\n      if (maxChunkSize && chunkSize > maxChunkSize && (chunkSize - maxChunkSize) > minChunkSize) {\n        chunkRemainder = _chunk.subarray(maxChunkSize);\n        _chunk = _chunk.subarray(0, maxChunkSize);\n      }\n\n      pushChunk(_chunk, chunkRemainder ? () => {\n        process.nextTick(_callback, null, chunkRemainder);\n      } : _callback);\n    };\n\n    transformChunk(chunk, function transformNextChunk(err, _chunk) {\n      if (err) {\n        return callback(err);\n      }\n\n      if (_chunk) {\n        transformChunk(_chunk, transformNextChunk);\n      } else {\n        callback(null);\n      }\n    });\n  }\n}\n\nexport default AxiosTransformStream;\n", "import {TextEncoder} from 'util';\nimport {Readable} from 'stream';\nimport utils from \"../utils.js\";\nimport readBlob from \"./readBlob.js\";\n\nconst BOUNDARY_ALPHABET = utils.ALPHABET.ALPHA_DIGIT + '-_';\n\nconst textEncoder = new TextEncoder();\n\nconst CRLF = '\\r\\n';\nconst CRLF_BYTES = textEncoder.encode(CRLF);\nconst CRLF_BYTES_COUNT = 2;\n\nclass FormDataPart {\n  constructor(name, value) {\n    const {escapeName} = this.constructor;\n    const isStringValue = utils.isString(value);\n\n    let headers = `Content-Disposition: form-data; name=\"${escapeName(name)}\"${\n      !isStringValue && value.name ? `; filename=\"${escapeName(value.name)}\"` : ''\n    }${CRLF}`;\n\n    if (isStringValue) {\n      value = textEncoder.encode(String(value).replace(/\\r?\\n|\\r\\n?/g, CRLF));\n    } else {\n      headers += `Content-Type: ${value.type || \"application/octet-stream\"}${CRLF}`\n    }\n\n    this.headers = textEncoder.encode(headers + CRLF);\n\n    this.contentLength = isStringValue ? value.byteLength : value.size;\n\n    this.size = this.headers.byteLength + this.contentLength + CRLF_BYTES_COUNT;\n\n    this.name = name;\n    this.value = value;\n  }\n\n  async *encode(){\n    yield this.headers;\n\n    const {value} = this;\n\n    if(utils.isTypedArray(value)) {\n      yield value;\n    } else {\n      yield* readBlob(value);\n    }\n\n    yield CRLF_BYTES;\n  }\n\n  static escapeName(name) {\n      return String(name).replace(/[\\r\\n\"]/g, (match) => ({\n        '\\r' : '%0D',\n        '\\n' : '%0A',\n        '\"' : '%22',\n      }[match]));\n  }\n}\n\nconst formDataToStream = (form, headersHandler, options) => {\n  const {\n    tag = 'form-data-boundary',\n    size = 25,\n    boundary = tag + '-' + utils.generateString(size, BOUNDARY_ALPHABET)\n  } = options || {};\n\n  if(!utils.isFormData(form)) {\n    throw TypeError('FormData instance required');\n  }\n\n  if (boundary.length < 1 || boundary.length > 70) {\n    throw Error('boundary must be 10-70 characters long')\n  }\n\n  const boundaryBytes = textEncoder.encode('--' + boundary + CRLF);\n  const footerBytes = textEncoder.encode('--' + boundary + '--' + CRLF + CRLF);\n  let contentLength = footerBytes.byteLength;\n\n  const parts = Array.from(form.entries()).map(([name, value]) => {\n    const part = new FormDataPart(name, value);\n    contentLength += part.size;\n    return part;\n  });\n\n  contentLength += boundaryBytes.byteLength * parts.length;\n\n  contentLength = utils.toFiniteNumber(contentLength);\n\n  const computedHeaders = {\n    'Content-Type': `multipart/form-data; boundary=${boundary}`\n  }\n\n  if (Number.isFinite(contentLength)) {\n    computedHeaders['Content-Length'] = contentLength;\n  }\n\n  headersHandler && headersHandler(computedHeaders);\n\n  return Readable.from((async function *() {\n    for(const part of parts) {\n      yield boundaryBytes;\n      yield* part.encode();\n    }\n\n    yield footerBytes;\n  })());\n};\n\nexport default formDataToStream;\n", "const {asyncIterator} = Symbol;\n\nconst readBlob = async function* (blob) {\n  if (blob.stream) {\n    yield* blob.stream()\n  } else if (blob.arrayBuffer) {\n    yield await blob.arrayBuffer()\n  } else if (blob[asyncIterator]) {\n    yield* blob[asyncIterator]();\n  } else {\n    yield blob;\n  }\n}\n\nexport default readBlob;\n", "\"use strict\";\n\nimport stream from \"stream\";\n\nclass ZlibHeaderTransformStream extends stream.Transform {\n  __transform(chunk, encoding, callback) {\n    this.push(chunk);\n    callback();\n  }\n\n  _transform(chunk, encoding, callback) {\n    if (chunk.length !== 0) {\n      this._transform = this.__transform;\n\n      // Add Default Compression headers if no zlib headers are present\n      if (chunk[0] !== 120) { // Hex: 78\n        const header = Buffer.alloc(2);\n        header[0] = 120; // Hex: 78\n        header[1] = 156; // Hex: 9C \n        this.push(header, encoding);\n      }\n    }\n\n    this.__transform(chunk, encoding, callback);\n  }\n}\n\nexport default ZlibHeaderTransformStream;\n", "import utils from \"../utils.js\";\n\nconst callbackify = (fn, reducer) => {\n  return utils.isAsyncFn(fn) ? function (...args) {\n    const cb = args.pop();\n    fn.apply(this, args).then((value) => {\n      try {\n        reducer ? cb(null, ...reducer(value)) : cb(null, value);\n      } catch (err) {\n        cb(err);\n      }\n    }, cb);\n  } : fn;\n}\n\nexport default callbackify;\n", "'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n", "/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nexport default throttle;\n", "import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\n\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\n", "'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover its components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n", "import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n", "import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n", "import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n", "import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport utils from '../utils.js';\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils.asap(unsubscribe);\n\n    return signal;\n  }\n}\n\nexport default composeSignals;\n", "\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n", "import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n", "import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n", "'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n", "'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n", "'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy;\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy = {}) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n", "'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n", "'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n", "'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n", "const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n", "'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n", "import axios from './lib/axios.js';\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n} = axios;\n\nexport {\n  axios as default,\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n}\n", "import { pythonErrorCodes } from \"./vcastServerTypes\";\nimport axios from \"axios\";\n\n// Types used for interaction with the python interface and the enviro server\n//\n// Note: some of these match the --mode argument for the vTestInterface.py but\n// some of these (like ping) are for the enviro server only\n//\n// Note: this enum must stay in sync with the server file: vcastDataServerTypes.py: commandType.\n// If we find that we are changing this type frequently we might want to auto-generate\n// this type from a common configuration file.\n\nexport enum vcastCommandType {\n  ping = \"ping\",\n  shutdown = \"shutdown\",\n  closeConnection = \"closeConnection\",\n  runClicastCommand = \"runClicastCommand\",\n  getProjectData = \"getProjectData\",\n  getEnviroData = \"getEnviroData\",\n  rebuild = \"rebuild\",\n  executeTest = \"executeTest\",\n  report = \"report\",\n  parseCBT = \"parseCBT\",\n  choiceListTst = \"choiceList-tst\",\n  choiceListCT = \"choiceList-ct\",\n  mcdcReport = \"mcdcReport\",\n  mcdcLines = \"mcdcLines\",\n  getWorkspaceEnviroData = \"getWorkspaceEnviroData\",\n}\n\nexport interface mcdcClientRequestType extends clientRequestType {\n  unitName?: string;\n  lineNumber?: number;\n}\n\nexport interface clientRequestType {\n  command: vcastCommandType;\n  path: string;\n  test?: string;\n  options?: string;\n  unit?: string;\n}\n\n// This is set when the VectorCAST Data Server process is started\nlet SERVER_PORT: number = 0;\n\nexport function setServerPort(port: number) {\n  SERVER_PORT = port;\n}\n\nexport function getServerPort(): number {\n  return SERVER_PORT;\n}\n\n/**\n * @testing This function is exported for testing purposes only.\n * Returns the server URL used in API calls.\n */\nexport function serverURL() {\n  //\n  // Using localhost here resulted in the language server not being\n  // able to connect to the data server on some of our Linux machines.\n  // It seems that this could be a problem with IPv4 vs IPv6, resolution\n  // so for now we are using 127* which forces IPv4.\n  let SERVER_HOST = \"127.0.0.1\";\n\n  return `http://${SERVER_HOST}:${SERVER_PORT}`;\n}\n\n// IMPORTANT: This file is used by two different executables\n// and called from two different places:\n//    The Language Server calls via pythonUtilities.ts\n//    The Core Extension calls via vcastAdapter.ts, client.ts etc.\n//\n// Since these are two different executables, they are\n// not sharing the same instance of these objects.  But since\n// they both use transmitCommand() defined below, the\n// auto-off processing works for both.\n//\nexport let globalEnviroDataServerActive: boolean = false;\n\nexport function setGLobalServerState(newState: boolean) {\n  globalEnviroDataServerActive = newState;\n}\n\nexport function getGLobalServerState(): boolean {\n  return globalEnviroDataServerActive;\n}\n\n// To allow us to update the test pane when we have a server\n// fall back error we set this callback during extension initialization,\n// and  use it in the transmitCommand error handling below.\n//\n// Note that the callback is only populated for the core extension\n// this means that there will be no message displayed when the\n// language server is running in server mode and the server goes down.\n// This is ok because after fall back things should work if the\n// user just types the \".\" \":\" or whatever to trigger the completion.\n//\nlet terminateServerCallback: any = undefined;\nexport function setTerminateServerCallback(callback: any) {\n  terminateServerCallback = callback;\n}\n\n/**\n * @testing This function is exported for testing purposes only.\n * It indirectly calls terminateServerProcessing() in the core extension case.\n */\nexport async function terminateServerProcessing(errorText: string) {\n  // this function indirectly calls terminateServerProcessing()\n  // in the core extension case.\n  if (terminateServerCallback) {\n    await terminateServerCallback(errorText);\n  }\n}\n\n// Similar to the above, we set this callback during extension initialization\n// to allow transmitCommand to log to the output pane.\nlet logServerCommandsCallback: any = undefined;\nexport function setLogServerCommandsCallback(callback: any) {\n  logServerCommandsCallback = callback;\n}\n\n/**\n * @testing This function is exported for testing purposes only.\n * Logs the server command by calling the logServerCommandsCallback.\n */\nexport function logServerCommand(message: string) {\n  if (logServerCommandsCallback) {\n    // for the core extension we send this to the message pane\n    logServerCommandsCallback(message);\n  }\n}\n\nexport interface transmitResponseType {\n  success: boolean;\n  returnData: any;\n  statusText: string;\n}\n\n// This closes the connection to a clicast instance so that other commands\n// like rebuild or delete environment can be run\nexport async function closeConnection(enviroPath: string): Promise<boolean> {\n  let requestObject: clientRequestType = {\n    command: vcastCommandType.closeConnection,\n    path: enviroPath,\n  };\n\n  const transmitResponse: transmitResponseType =\n    await transmitCommand(requestObject);\n  return transmitResponse.success;\n}\n\nexport async function serverIsAlive() {\n  // This is used to determine if the server is running after startup.\n  // Because the server emits the \"starting message\" before starting\n  // flask, there will be a slight delay between us getting the\n  // port via stdout and the server being ready to accept requests\n  // so we loop here until the ping works, or 3 seconds have elapsed.\n  const pingObject: clientRequestType = {\n    command: vcastCommandType.ping,\n    path: \"\",\n  };\n\n  const startTime = Date.now();\n  let transmitResponse: transmitResponseType;\n  while (true) {\n    transmitResponse = await transmitCommand(pingObject, \"ping\");\n    if (transmitResponse.success) {\n      break;\n    } else if (Date.now() > startTime + 3000) {\n      logServerCommand(\"Server timed out on startup, did not answer ping\");\n      break;\n    } else {\n      // wait for 200ms before trying again\n      logServerCommand(\"Server not ready, waiting 200ms ...\");\n      await new Promise<void>((r) => setTimeout(r, 200));\n    }\n  }\n\n  return transmitResponse.success;\n}\n\nexport async function sendShutdownToServer() {\n  //\n  const shutdownObject: clientRequestType = {\n    command: vcastCommandType.shutdown,\n    path: \"\",\n  };\n\n  await transmitCommand(shutdownObject, \"shutdown\");\n}\n\n// This does the actual fetch from the server\nexport async function transmitCommand(\n  requestObject: clientRequestType | mcdcClientRequestType,\n  route: string = \"runcommand\"\n) {\n  // request is a class, so we convert it to a dictionary, then a string\n  let dataAsString = JSON.stringify(requestObject);\n\n  // this can be useful for debugging server commands outside of the extension\n  // Look in the \"Debug Console\" pane for this output\n  console.log(\n    `Sending command: '${requestObject.command}' to server: ${serverURL()}`\n  );\n  console.log(`   payload: \"${dataAsString}\"`);\n\n  const urlToUse = `${serverURL()}/${route}`;\n  logServerCommand(\n    `Sending command: \"${requestObject.command}\" to server: ${serverURL()},`\n  );\n  logServerCommand(`   payload: \"${dataAsString}\"`);\n  let transmitResponse: transmitResponseType = {\n    success: false,\n    returnData: undefined,\n    statusText: \"\",\n  };\n\n  try {\n    // Await axios post\n    const response = await axios.post(urlToUse, requestObject, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const rawReturnData = response.data;\n\n    // Handle different response codes from the server\n    if (rawReturnData.exitCode == pythonErrorCodes.internalServerError) {\n      // the error message is a list of strings, so join with \\n\n      transmitResponse.success = false;\n      transmitResponse.statusText = `Enviro server error: ${rawReturnData.data.error.join(\"\\n\")}`;\n      //\n      // if we get a test interface error, we report the error but do not\n      // terminate the server, since it might be a one off error.\n      // Maybe we will change this in the future.\n    } else if (rawReturnData.exitCode == pythonErrorCodes.testInterfaceError) {\n      // the error message is a list of strings, so join with \\n\n      transmitResponse.success = false;\n      // format the error message for readability, with new lines and indentation\n      transmitResponse.statusText = `Python interface error: \\n   ${rawReturnData.data.text.join(\"\\n   \")}`;\n      //\n      // If we cannot start clicast, we shutdown the server because this error\n      // is unlikely to be cleared by trying again\n    } else if (\n      rawReturnData.exitCode == pythonErrorCodes.couldNotStartClicastInstance\n    ) {\n      transmitResponse.success = false;\n      transmitResponse.statusText = `Server could not start clicast instance`;\n      // fall back to non-server mode\n      setGLobalServerState(false);\n      // this callback will display an error message and update the test pane\n      await terminateServerProcessing(transmitResponse.statusText);\n      //\n      // else the command was successful so we return the data\n    } else {\n      // Successful case\n      transmitResponse.success = true;\n      transmitResponse.statusText = `Enviro server response status: ${response.statusText}`;\n      // the format of the data property is different based on the command\n      // so it is up to the caller to interpret it properly\n      transmitResponse.returnData = rawReturnData;\n      // there is always an exit code field but it is only used when\n      // executing tests or running clicast commands\n    }\n    //\n    // if there is a communication error with the server it gets caught here\n  } catch (error: any) {\n    // In the shutdown and ping cases we simply return a false success status,\n    // because in the shutdown case, the socket may be closed before  we\n    // read the response, and in the ping case, the server may not be\n    // ready yet and the caller will retry the ping.\n    if (\n      requestObject.command == vcastCommandType.shutdown ||\n      requestObject.command == vcastCommandType.ping\n    ) {\n      transmitResponse.success = false;\n    } else {\n      // For all other communication errors, we terminate server mode\n      let errorText = error.message.split(\"reason:\")[1].trim();\n      // for some reason, when the server is down, the reason is blank\n      // so we insert a generic message in this case.\n      if (errorText.length === 0) {\n        errorText = `cannot communicate with server on port: ${SERVER_PORT}`;\n      }\n      let errorDetails = `command: ${requestObject.command}, error: ${errorText}`;\n      transmitResponse.success = false;\n      transmitResponse.statusText = `Enviro server error: ${errorDetails}`;\n\n      // In the core extension, this callback will shutdown the\n      // server, display an error message and update the test pane, etc.\n      // For the language server, this callback is not set so currently\n      // nothing happens.\n      await terminateServerProcessing(errorDetails);\n    }\n  }\n\n  return transmitResponse;\n}\n", "import * as vscode from \"vscode\";\nimport * as jsonc from \"jsonc-parser\";\n\nimport { sendVPythonCommandToServer, updateVMockStatus } from \"./client\";\n\nimport { openMessagePane, vectorMessage } from \"./messagePane\";\n\nimport {\n  exeFilename,\n  jsoncParseErrors,\n  jsoncParseOptions,\n  showSettings,\n} from \"./utilities\";\n\nimport { vcastLicenseOK } from \"./vcastAdapter\";\n\nimport { executeCommandSync, executeVPythonScript } from \"./vcastCommandRunner\";\n\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst which = require(\"which\");\n\nexport let vcastInstallationDirectory: string = \"\";\nexport let vcastInstallationVersion: toolVersionType = {\n  version: 0,\n  servicePack: 0,\n};\n\nexport const clicastName = \"clicast\";\nexport let clicastCommandToUse: string;\nexport const manageName = \"manage\";\nexport let manageCommandToUse: string;\n\nconst vPythonName = \"vpython\";\nconst vpythonFromPath = which.sync(vPythonName, { nothrow: true });\nexport let vPythonCommandToUse: string;\n\nconst vcastqtName = \"vcastqt\";\nexport let vcastCommandToUse: string;\n\nexport let checksumCommandToUse: string | undefined = undefined;\nlet crc32Name = \"crc32-win32.exe\";\nif (process.platform == \"linux\") {\n  crc32Name = \"crc32-linux\";\n}\n\nexport let globalTestInterfacePath: string | undefined = undefined;\nexport let globalMCDCReportPath: string | undefined = undefined;\nlet globalEnviroDataServerPath: string;\n\nexport function getGlobalEnviroDataServerPath() {\n  return globalEnviroDataServerPath;\n}\n\nlet globalCrc32Path: string | undefined = undefined;\n\nexport let globalPathToSupportFiles: string;\n\nexport let globalIncludePath: string | undefined = undefined;\n\nconst atgName = \"atg\";\nexport let atgCommandToUse: string | undefined = undefined;\nexport let atgAvailable: boolean = false;\n\n// this is set to true if the clicast version supports server mode\nlet enviroDataServerAvailable: boolean = false;\n\nexport function isEnviroDataServerAvailable() {\n  return enviroDataServerAvailable;\n}\n\nexport const configurationFile = \"c_cpp_properties.json\";\nexport const launchFile = \"launch.json\";\n\n// ---------------------------------------------------------------------------------------\n// ---------------------------------------------------------------------------------------\nexport function initializeInstallerFiles(context: vscode.ExtensionContext) {\n  const pathToTestInterface = context.asAbsolutePath(\n    \"./python/vTestInterface.py\"\n  );\n  const pathToMCDCReport = context.asAbsolutePath(\"./python/mcdcReport.py\");\n  if (fs.existsSync(pathToTestInterface)) {\n    vectorMessage(\"Found vTestInterface here: \" + pathToTestInterface);\n    globalTestInterfacePath = `${pathToTestInterface}`;\n  }\n\n  if (fs.existsSync(pathToMCDCReport)) {\n    vectorMessage(\"Found mcdcReport here: \" + pathToMCDCReport);\n    globalMCDCReportPath = `${pathToMCDCReport}`;\n  }\n\n  const pathToEnviroDataServer = context.asAbsolutePath(\n    \"./python/vcastDataServer.py\"\n  );\n  if (fs.existsSync(pathToEnviroDataServer)) {\n    vectorMessage(\"Found vcastDataServer here: \" + pathToEnviroDataServer);\n    globalEnviroDataServerPath = `${pathToEnviroDataServer}`;\n  }\n\n  const crc32Path = context.asAbsolutePath(\"./python/crc32.py\");\n  if (fs.existsSync(crc32Path)) {\n    vectorMessage(\"Found the crc32 python wrapper here: \" + crc32Path);\n    globalCrc32Path = `${crc32Path}`;\n  }\n\n  const pathToSupportFiles = context.asAbsolutePath(\"./supportFiles\");\n  if (fs.existsSync(pathToSupportFiles)) {\n    vectorMessage(\"Found extension support files here: \" + pathToSupportFiles);\n    globalPathToSupportFiles = `${pathToSupportFiles}`;\n  }\n}\n\nexport interface toolVersionType {\n  version: number;\n  servicePack: number;\n}\n\nexport function getToolVersionFromPath(\n  installationPath: string\n): toolVersionType {\n  // This function takes a path to a VectorCAST installation\n  // and returns the version string from the tool version file\n  //\n  // Example version strings\n  //    Normal releases:    23.sp2 (07/19/23)\n  //    Development builds: 24 revision 37f59ce (08/20/24)\n  //\n  // To make is possible to work with development builds\n  // we set the service pack to 99.\n\n  const toolVersionPath = path.join(\n    installationPath,\n    \"DATA\",\n    \"tool_version.txt\"\n  );\n\n  const toolVersionString = fs.readFileSync(toolVersionPath).toString().trim();\n\n  let whatToReturn: toolVersionType = { version: 0, servicePack: 0 };\n  // if this is a development build\n  if (toolVersionString.includes(\" revision \")) {\n    const version = parseInt(toolVersionString.split(\" \")[0]);\n    whatToReturn = { version: version, servicePack: 99 };\n  } else {\n    // extract version and service pack from toolVersion\n    // The string can be in two foramts: \"21 date\" or \"23.sp2 date\"\n    // first theck for \"24.sp2 date\" format ...\n    const matched = toolVersionString.match(/(\\d+)\\.sp(\\d+).*/);\n    if (matched) {\n      // if the format matches, return the values as numbers\n      whatToReturn = {\n        version: parseInt(matched[1]),\n        servicePack: parseInt(matched[2]),\n      };\n    } else {\n      // if the format does not match, split on the first space\n      // and return that (if it's an int) and sp 0\n      const version = toolVersionString.split(\" \")[0];\n      if (version.match(/\\d+/g) != null) {\n        whatToReturn.version = parseInt(version);\n      }\n    }\n  }\n  return whatToReturn;\n}\n\nfunction vcastVersionGreaterThan(versionToCheck: toolVersionType): boolean {\n  // A general purpose version checker ...\n\n  // check if the version the user has asked us to check is\n  // \"smaller\" than the version we found on the installationPath\n  let returnValue: boolean =\n    vcastInstallationVersion.version > versionToCheck.version ||\n    (vcastInstallationVersion.version == versionToCheck.version &&\n      vcastInstallationVersion.servicePack >= versionToCheck.servicePack);\n\n  return returnValue;\n}\n\nfunction initializeServerMode(vcastInstallationPath: string) {\n  // The clicast server mode is only available in vc24sp2 and later\n  enviroDataServerAvailable = vcastVersionGreaterThan({\n    version: 24,\n    servicePack: 5,\n  });\n  if (enviroDataServerAvailable) {\n    vectorMessage(`   clicast server is available in this release`);\n  }\n}\n\nfunction vectorCASTSupportsVMock(vcastInstallationPath: string): boolean {\n  // The vmock features is only available in vc24sp2 and later\n  return vcastVersionGreaterThan({ version: 24, servicePack: 4 });\n}\n\nfunction vectorCASTSupportsATG(vcastInstallationPath: string): boolean {\n  // Versions of VectorCAST between 23sp0 and 23sp4 had ATG but since\n  // we changed the ATG command line interface with 23sp5, we have decided\n  // to only support versions greater than that.\n  return vcastVersionGreaterThan({ version: 23, servicePack: 5 });\n}\n\nfunction checkForATG(vcastInstallationPath: string) {\n  // we only set atgCommandToUse if we find atg and it's licensed\n  const atgCommand = path.join(vcastInstallationPath, exeFilename(atgName));\n  let statusMessageText = \"\";\n  if (fs.existsSync(atgCommand)) {\n    statusMessageText = `   found '${atgName}' here: ${vcastInstallationPath}`;\n    const candidateCommand = atgCommand;\n\n    // now check if its licensed ... just atg --help and check the exit code\n    const commandToRun: string = `${candidateCommand} --help`;\n\n    // cwd=working dir for this process /  printErrorDetails=false\n    const commandStatus = executeCommandSync(\n      commandToRun,\n      process.cwd(),\n      false\n    );\n    if (commandStatus.errorCode == 0) {\n      statusMessageText += \", license is available\";\n      atgCommandToUse = candidateCommand;\n    } else {\n      statusMessageText += \", license is NOT available\";\n    }\n    vectorMessage(statusMessageText);\n    atgAvailable =\n      atgCommandToUse != undefined &&\n      vectorCASTSupportsATG(vcastInstallationPath);\n\n    // atgAvailable is used by package.json to control the existence of the atg command in the context menus\n    vscode.commands.executeCommand(\n      \"setContext\",\n      \"vectorcastTestExplorer.atgAvailable\",\n      atgAvailable\n    );\n  } else {\n    vectorMessage(\n      `   could NOT find '${atgName}' here: ${vcastInstallationPath}`\n    );\n  }\n}\n\nfunction findVcastTools(): boolean {\n  // This function will set global paths to vpython, clicast and vcastqt\n  // by sequentially looking for vpython in the directory set via the\n  // 1. extension option: \"vectorcastInstallationLocation\"\n  // 2. VECTORCAST_DIR\n  // 3. system PATH variable\n\n  // return value\n  let foundAllvcastTools = false;\n\n  // value of the extension option\n  const settings = vscode.workspace.getConfiguration(\"vectorcastTestExplorer\");\n  const installationOptionString = settings.get(\n    \"vectorcastInstallationLocation\",\n    \"\"\n  );\n\n  // value of VECTORCAST_DIR\n  const VECTORCAST_DIR = process.env[\"VECTORCAST_DIR\"];\n\n  // VectorCAST installation location\n  let vcastInstallationPath: string | undefined = undefined;\n\n  // priority 1 is the option value, since this lets the user over-ride PATH or VECTORCAST_DIR\n  if (installationOptionString.length > 0) {\n    const candidatePath = path.join(\n      installationOptionString,\n      exeFilename(vPythonName)\n    );\n    if (fs.existsSync(candidatePath)) {\n      vcastInstallationPath = installationOptionString;\n      vPythonCommandToUse = candidatePath;\n      sendVPythonCommandToServer(candidatePath);\n      vectorMessage(\n        `   found '${vPythonName}' using the 'Vectorcast Installation Location' option [${installationOptionString}].`\n      );\n    } else {\n      vectorMessage(\n        `   the installation path provided: '${installationOptionString}' does not contain ${vPythonName}`\n      );\n      vectorMessage(\n        \"   use the extension options to provide a valid VectorCAST installation directory.\"\n      );\n      showSettings();\n    }\n  }\n\n  // priority 2 is VECTORCAST_DIR, while this is no longer required, it is still widely used\n  else if (VECTORCAST_DIR) {\n    const candidatePath = path.join(VECTORCAST_DIR, exeFilename(vPythonName));\n    if (fs.existsSync(candidatePath)) {\n      vcastInstallationPath = VECTORCAST_DIR;\n      vPythonCommandToUse = candidatePath;\n      vectorMessage(\n        `   found '${vPythonName}' using VECTORCAST_DIR [${VECTORCAST_DIR}]`\n      );\n    } else {\n      vectorMessage(\n        `   the installation path provided via VECTORCAST_DIR does not contain ${vPythonName}`\n      );\n      vectorMessage(\n        \"   use the extension options to provide a valid VectorCAST installation directory.\"\n      );\n      showSettings();\n    }\n  }\n\n  // priority 3 is the system path\n  else if (vpythonFromPath) {\n    vcastInstallationPath = path.dirname(vpythonFromPath);\n    vPythonCommandToUse = vpythonFromPath;\n    vectorMessage(\n      `   found '${vPythonName}' on the system path [${vcastInstallationPath}]`\n    );\n  } else {\n    vectorMessage(\n      `   '${vPythonName}' is not on the system PATH, and VECTORCAST_DIR is not set`\n    );\n    vectorMessage(\n      \"   use the extension options to provide a valid VectorCAST Installation Location.\"\n    );\n    showSettings();\n  }\n\n  // if we found a vpython somewhere ...\n  // we assume the other executables are there too,  but we check anyway :)\n  if (vcastInstallationPath) {\n    // first check if vcast is newer than 21 - minium version for this extension\n    const toolVersion: toolVersionType = getToolVersionFromPath(\n      vcastInstallationPath\n    );\n    if (toolVersion.version >= 21) {\n      // do all of the setup required to use clicast\n      foundAllvcastTools = initializeVcastUtilities(vcastInstallationPath);\n\n      // check if we have access to a valid crc32 command - this is not fatal\n      // must be called after initializeInstallerFiles()\n\n      if (!initializeChecksumCommand(vcastInstallationPath)) {\n        vscode.window.showWarningMessage(\n          \"The VectorCAST Test Explorer could not find the required VectorCAST CRC-32 module, \" +\n            \"so the code coverage feature will not be available.  For details on how to resolve \" +\n            \"this issue, please refer to the 'Prerequisites' section of the README.md file.\"\n        );\n      }\n    } else {\n      // we show also show this in the message pane for completeness\n      vectorMessage(\n        \"   VectorCAST version is too old, minimum supported version is: 21\"\n      );\n      const messageText =\n        \"The VectorCAST Test Explorer requires a VectorCAST version >= 21, \" +\n        \"use the extension options to provide a valid VectorCAST Installation Location.\";\n      vscode.window.showWarningMessage(messageText);\n      showSettings();\n    }\n  }\n\n  return foundAllvcastTools;\n}\n\nexport async function checkIfInstallationIsOK() {\n  // Check if the installation is ok by verifying that:\n  //   - we can find vpython and clicast\n  //   - we have a valid license\n\n  // default this to false, it only gets to true if we find\n  // vpython and clicast and we have a license\n  let installationIsOK = false;\n\n  vectorMessage(\"-\".repeat(100));\n  vectorMessage(\"Checking that a VectorCAST installation is available ... \");\n\n  if (findVcastTools()) {\n    // check if we have a valid license\n    if (vcastLicenseOK()) {\n      vectorMessage(\"   VectorCAST license is available ...\");\n      installationIsOK = true;\n    } else {\n      vectorMessage(\"   no VectorCAST license is available\");\n      installationIsOK = false;\n    }\n  }\n\n  vectorMessage(\"-\".repeat(100) + \"\\n\");\n\n  if (!installationIsOK) {\n    vectorMessage(\n      \"Please refer to the installation and configuration instructions for details on resolving these issues\"\n    );\n    enviroDataServerAvailable = false;\n    openMessagePane();\n  }\n  return installationIsOK;\n}\n\nfunction initializeVcastUtilities(vcastInstallationPath: string) {\n  let toolsFound = false;\n  clicastCommandToUse = path.join(\n    vcastInstallationPath,\n    exeFilename(clicastName)\n  );\n\n  if (fs.existsSync(clicastCommandToUse)) {\n    vectorMessage(`   found '${clicastName}' here: ${vcastInstallationPath}`);\n    vcastCommandToUse = path.join(\n      vcastInstallationPath,\n      exeFilename(vcastqtName)\n    );\n\n    manageCommandToUse = path.join(\n      vcastInstallationPath,\n      exeFilename(manageName)\n    );\n\n    // compute the installation version once ...\n    vcastInstallationDirectory = vcastInstallationPath;\n    vcastInstallationVersion = getToolVersionFromPath(vcastInstallationPath);\n\n    if (fs.existsSync(vcastCommandToUse)) {\n      vectorMessage(`   found '${vcastqtName}' here: ${vcastInstallationPath}`);\n\n      // we only set toolsFound if we find clicast AND vcastqt\n      toolsFound = true;\n\n      // check if atg is available and licensed\n      checkForATG(vcastInstallationPath);\n\n      // check if coded tests are available ...\n      initializeCodedTestSupport(vcastInstallationPath);\n\n      // check if the server mode is available ...\n      initializeServerMode(vcastInstallationPath);\n\n      // check if coded mocks are available ...\n      // vMock available affects how we do completions in the language server\n      // and allows us to issue nice error messages when the user tries to use vMock\n      const vMockAvailable = vectorCASTSupportsVMock(vcastInstallationPath);\n      if (vMockAvailable) {\n        vectorMessage(`   vMock is available in this release`);\n      }\n      updateVMockStatus(vMockAvailable);\n      //\n    } else {\n      vectorMessage(\n        `   could NOT find '${vcastqtName}' here: ${vcastInstallationPath}`\n      );\n    }\n  } else {\n    vectorMessage(\n      `   could NOT find '${clicastName}' here: ${vcastInstallationPath}`\n    );\n  }\n  return toolsFound;\n}\n\nfunction pyCrc32IsAvailable(): boolean {\n  // Although crc32.py simply puts out AVAILABLE or NOT-AVAILABLE,\n  // vpython prints this annoying message if VECTORCAST_DIR does not match the executable\n  // so we need this logic to handle that case.\n\n  // I'm doing this in multiple steps for clarity\n  const commandOutputText = executeVPythonScript(\n    `${vPythonCommandToUse} ${globalCrc32Path}`,\n    process.cwd()\n  ).stdout;\n  const outputLinesAsArray = commandOutputText.split(\"\\n\");\n  const lastOutputLine = outputLinesAsArray[outputLinesAsArray.length - 1];\n  return lastOutputLine == \"AVAILABLE\";\n}\n\nfunction getCRCutilityPath(vcastInstallationPath: string) {\n  // check if the crc32 utility has been added to the the VectorCAST installation\n\n  let returnValue: string | undefined = undefined;\n  if (vcastInstallationPath) {\n    let candidatePath = path.join(vcastInstallationPath, crc32Name);\n    if (fs.existsSync(candidatePath)) {\n      vectorMessage(`   found '${crc32Name}' here: ${vcastInstallationPath}`);\n      returnValue = candidatePath;\n    } else {\n      vectorMessage(\n        `   could NOT find '${crc32Name}' here: ${vcastInstallationPath}, coverage annotations will not be available`\n      );\n    }\n  }\n  return returnValue;\n}\n\nfunction initializeChecksumCommand(\n  vcastInstallationPath: string\n): string | undefined {\n  // checks if this vcast distro has python checksum support built-in\n  if (globalCrc32Path && pyCrc32IsAvailable()) {\n    checksumCommandToUse = `${vPythonCommandToUse} ${globalCrc32Path}`;\n  } else {\n    // check if the user has patched the distro with the crc32 utility\n    checksumCommandToUse = getCRCutilityPath(vcastInstallationPath);\n  }\n\n  return checksumCommandToUse;\n}\n\nexport const vUnitIncludeSuffix = \"/vunit/include\";\n\nexport function configFileContainsCorrectInclude(filePath: string): boolean {\n  // This function will check if the include path for coded testing is in the\n  // c_cpp_properties.json file passed in.  There are two cases to check for:\n  //   1. The path to the current VectorCAST /vUnit/include directory exists\n  //   2. A path with an environment variable, ending in /vunit/include exists\n\n  let returnValue: boolean = false;\n  let existingJSONasString: string;\n  let existingJSON: any;\n\n  // Requires json-c parsing to handle comments etc.\n  existingJSONasString = fs.readFileSync(filePath).toString();\n  // note that jsonc.parse returns \"real json\" without the comments\n  existingJSON = jsonc.parse(\n    existingJSONasString,\n    jsoncParseErrors,\n    jsoncParseOptions\n  );\n\n  if (\n    existingJSON &&\n    existingJSON.configurations &&\n    existingJSON.configurations.length > 0\n  ) {\n    for (const configuration of existingJSON.configurations) {\n      if (configuration.includePath) {\n        for (const includePath of configuration.includePath) {\n          if (includePath == globalIncludePath) {\n            returnValue = true;\n            break;\n          }\n          // allow the use of _any_ environment variable, not just VECTORCAST_DIR\n          // could have used a regex but this is more clear\n          if (\n            includePath.startsWith(\"${env:\") &&\n            includePath.endsWith(vUnitIncludeSuffix)\n          ) {\n            returnValue = true;\n            break;\n          }\n        }\n      }\n    }\n  }\n  return returnValue;\n}\n\nfunction includePathExistsInWorkspace(): boolean {\n  // We'd like to make it easy for the user to add the include path\n  // for the coded test files.  We check if the /vunit/include path\n  // exists in any of the c_cpp_properties.json files and prompt the\n  // user to add the path it doesn't\n  //\n  let returnValue: boolean = false;\n\n  for (const workspace of vscode.workspace.workspaceFolders || []) {\n    const workspaceRoot = workspace.uri.fsPath;\n    const c_cpp_properties = path.join(\n      workspaceRoot,\n      \".vscode\",\n      configurationFile\n    );\n    if (fs.existsSync(c_cpp_properties)) {\n      if (configFileContainsCorrectInclude(c_cpp_properties)) {\n        returnValue = true;\n        break;\n      }\n    }\n  }\n  return returnValue;\n}\n\nfunction initializeCodedTestSupport(vcastInstallationPath: string) {\n  // When we get here vcastInstallationPath will point to a\n  // valid VectorCAST installation but we don't know if\n  // this version has coded test support, so check for that\n  // and initialize global variables to support coded testing\n\n  let candidatePath = path.join(vcastInstallationPath, \"vunit\", \"include\");\n  // swap backslashes to make paths consistent for windows users and\n  globalIncludePath = candidatePath.replace(/\\\\/g, \"/\");\n\n  let codedTestingAvailable: boolean = false;\n  if (fs.existsSync(candidatePath)) {\n    vectorMessage(`   found coded-test support, initializing ...`);\n    codedTestingAvailable = true;\n    if (!includePathExistsInWorkspace()) {\n      vscode.window.showInformationMessage(\n        \"The include path for VectorCAST Coded Testing was not found in your workspace, you should add the \" +\n          `include path by right clicking on the appropriate ${configurationFile} file, ` +\n          \"and choosing 'VectorCAST: Add Coded Test Include Path`  \"\n      );\n    }\n  }\n\n  vscode.commands.executeCommand(\n    \"setContext\",\n    \"vectorcastTestExplorer.codedTestingAvailable\",\n    codedTestingAvailable\n  );\n}\n", "import * as vscode from \"vscode\";\n\nimport { execSync, spawn } from \"child_process\";\n\nimport {\n  errorLevel,\n  indentString,\n  openMessagePane,\n  vectorMessage,\n} from \"./messagePane\";\nimport { processCommandOutput, statusMessageType } from \"./utilities\";\nimport { cleanVectorcastOutput } from \"../src-common/commonUtilities\";\n\nimport {\n  clientRequestType,\n  transmitCommand,\n  transmitResponseType,\n  vcastCommandType,\n} from \"../src-common/vcastServer\";\nimport { pythonErrorCodes } from \"../src-common/vcastServerTypes\";\n\nconst path = require(\"path\");\n\nexport interface commandStatusType {\n  errorCode: number | string;\n  stdout: string;\n}\n\nexport function convertServerResponseToCommandStatus(\n  serverResponse: transmitResponseType\n): commandStatusType {\n  //\n  // tansmitResponse.returnData is an object with exitCode and data properties\n  let commandStatus: commandStatusType = { errorCode: 0, stdout: \"\" };\n  if (serverResponse.success) {\n    commandStatus.errorCode = serverResponse.returnData.exitCode;\n    // the data.text field is returned as a list to join with \\n\n    commandStatus.stdout = serverResponse.returnData.data.text.join(\"\\n\");\n  } else {\n    commandStatus.errorCode = 1;\n    commandStatus.stdout = serverResponse.statusText;\n  }\n  vectorMessage(commandStatus.stdout, errorLevel.info, indentString);\n  return commandStatus;\n}\n\n// Call vpython vTestInterface.py to run a command\nexport function executeVPythonScript(\n  commandToRun: string,\n  whereToRun: string,\n  printErrorDetails: boolean = true\n): commandStatusType {\n  let returnData: commandStatusType = { errorCode: 0, stdout: \"\" };\n  if (commandToRun) {\n    const commandStatus: commandStatusType = executeCommandSync(\n      commandToRun,\n      whereToRun,\n      printErrorDetails\n    );\n    // see detailed comment with the function definition\n    returnData.stdout = cleanVectorcastOutput(commandStatus.stdout);\n    returnData.errorCode = commandStatus.errorCode;\n    // error code 28 means a test fail, not a command failure\n    // all other non 0 error codes are command failures\n    if (returnData.errorCode != 0 && returnData.errorCode != 28) {\n      vectorMessage(\"Error running VectorCAST command\");\n      vectorMessage(\"command: \" + commandToRun, errorLevel.trace, indentString);\n      vectorMessage(returnData.stdout, errorLevel.info, indentString);\n    }\n  }\n  return returnData;\n}\n\n// A wrapper for executeVPythonScript when we know the output is JSON\nexport function getJsonDataFromTestInterface(\n  commandToRun: string,\n  enviroPath: string\n): any {\n  let returnData = undefined;\n\n  let jsonText = executeVPythonScript(commandToRun, enviroPath, true).stdout;\n  try {\n    returnData = JSON.parse(jsonText);\n  } catch {\n    // return undefined\n  }\n  return returnData;\n}\n\n// Makes the executeCommand logic easier to understand\nfunction processExceptionFromExecuteCommand(\n  command: string,\n  error: any,\n  printErrorDetails: boolean\n): commandStatusType {\n  // Safely access stdout and clean it if available\n  let rawStdout = \"\";\n  let stdoutString = \"\";\n\n  // Check if error has a stdout property and convert it to string\n  rawStdout = error?.stdout?.toString();\n\n  if (rawStdout) {\n    stdoutString = cleanVectorcastOutput(rawStdout);\n  }\n\n  // Determine the most meaningful error message\n  let errorMessage = \"Unknown error\";\n  if (error) {\n    if (typeof error.message === \"string\") {\n      errorMessage = error.message;\n    } else if (typeof error.code === \"string\") {\n      errorMessage = error.code;\n    }\n  }\n\n  // Determine the error code: use status if available, fallback to error.code (like \"EACCES\")\n  let errorCode: number | string = 1;\n  if (error) {\n    if (typeof error.status === \"number\") {\n      errorCode = error.status;\n    } else if (typeof error.code === \"string\") {\n      errorCode = error.code; // Like \"EACCES\"\n    }\n  }\n\n  let commandStatus = {\n    errorCode: errorCode,\n    stdout: stdoutString,\n  };\n\n  if (error && error.status === pythonErrorCodes.testInterfaceError) {\n    // Improvement needed: we should document this\n    commandStatus.errorCode = 0;\n    vectorMessage(\"Exception while executing python interface\");\n\n    // Access Errors do not have an stdout\n    if (stdoutString) {\n      // Log the cleaned stdout from the Python interface\n      vectorMessage(stdoutString, errorLevel.info, indentString);\n    } else {\n      // Provide fallback logging when stdout is empty but we still have an error message\n      vectorMessage(\n        `Python interface failed: ${errorMessage}`,\n        errorLevel.warn,\n        indentString\n      );\n    }\n  } else {\n    commandStatus.errorCode = errorCode;\n\n    if (printErrorDetails) {\n      vectorMessage(\"Exception while executing VectorCAST command\");\n      vectorMessage(command, errorLevel.trace, indentString);\n\n      if (stdoutString) {\n        // Log standard output if available\n        vectorMessage(stdoutString, errorLevel.info, indentString);\n      } else {\n        // Log system-level or command-level error when stdout is missing\n        // This helps identify cases like permission denied, missing files, etc.\n        vectorMessage(\n          `Command failed: ${errorMessage}`,\n          errorLevel.info,\n          indentString\n        );\n      }\n    }\n  }\n\n  return commandStatus;\n}\n\n// A wrapper for the NodeJS execSync function\nexport function executeCommandSync(\n  commandToRun: string,\n  cwd: string,\n  printErrorDetails: boolean = true\n): commandStatusType {\n  vectorMessage(`Running: ${commandToRun}`, errorLevel.trace);\n\n  let commandStatus: commandStatusType = { errorCode: 0, stdout: \"\" };\n  try {\n    // commandOutput is a buffer: (Uint8Array)\n    commandStatus.stdout = execSync(commandToRun, { cwd: cwd })\n      .toString()\n      .trim();\n  } catch (error: any) {\n    commandStatus = processExceptionFromExecuteCommand(\n      commandToRun,\n      error,\n      printErrorDetails\n    );\n    openMessagePane();\n  }\n  return commandStatus;\n}\n\n// A command runner for long running commands like build and rebuild environment\nexport function executeWithRealTimeEcho(\n  command: string,\n  argList: string[],\n  CWD: string,\n  callback?: any,\n  enviroPath?: string\n) {\n  // this function is used to build and rebuild environments\n  // long running commands where we want to show real-time output\n\n  // it uses spawn to execute a clicast | manage command, log the output to the\n  // message pane, and update the test explorer when the command completes\n\n  // To debug what's going on with vcast, you can add -dall to\n  // argList, which will dump debug info for the clicast | manage invocation\n  let processHandle = spawn(command, argList, { cwd: CWD });\n  vectorMessage(\"-\".repeat(100));\n\n  // maybe this is a hack, but after reading stackoverflow for a while I could\n  // not come up with anything better.  The issue is that the on (\"exit\") gets called\n  // before the stdout stream is closed so stdoutBuffer is incomplete at that point\n  // so we use on (\"exit\") to invoke the callback and on (\"close\") to dump the clicast stdout.\n\n  // I tried to only dump the output when the exit code was non 0 but we get a race\n  // condition because the exit might not have saved it when the close is seen.\n\n  vectorMessage(\"-\".repeat(100));\n  let messageFragment: string = \"\";\n  processHandle.stdout.on(\"data\", function (data: any) {\n    // split raw message based on \\n or \\r because messages\n    // that come directly from the compiler are LF terminated\n    const rawString = data.toString();\n    const lineArray = rawString.split(/[\\n\\r?]/);\n\n    // add any left over fragment to the end of the first line\n    if (messageFragment.length > 0) {\n      lineArray[0] = messageFragment + lineArray[0];\n      messageFragment = \"\";\n    }\n\n    // handle the case where the last line is not complete\n    if (!rawString.endsWith(\"\\n\") && !rawString.endsWith(\"\\r\")) {\n      messageFragment = lineArray.pop();\n    }\n\n    for (const line of lineArray) {\n      if (line.length > 0) {\n        vectorMessage(line.replace(/\\n/g, \"\"));\n      }\n    }\n  });\n\n  processHandle.stdout.on(\"close\", function (code: any) {\n    vectorMessage(\"-\".repeat(100));\n  });\n\n  processHandle.on(\"exit\", function (code: any) {\n    // clearTimeout(timeout); // Clear the timeout if the process exits naturally\n    vectorMessage(\"-\".repeat(100));\n    vectorMessage(\n      `${path.basename(command)}: '${argList.join(\" \")}' returned exit code: ${code.toString()}`\n    );\n    vectorMessage(\"-\".repeat(100));\n    if (callback) {\n      callback(enviroPath, code);\n    }\n  });\n\n  processHandle.on(\"error\", (error) => {\n    // clearTimeout(timeout); // Clear the timeout on error\n    vectorMessage(`Error occurred: ${error.message}`);\n  });\n}\n\nexport function executeWithRealTimeEchoWithProgress(\n  command: string,\n  argList: string[],\n  CWD: string,\n  vscodeMessage: string,\n  callback?: any,\n  enviroPath?: string | string[]\n) {\n  return vscode.window.withProgress(\n    {\n      location: vscode.ProgressLocation.Notification,\n      title: `${vscodeMessage}`,\n      cancellable: true, // <-- make it cancellable so user gets a cross to click\n    },\n    async (progress, token) => {\n      progress.report({ increment: 10 });\n\n      let processHandle = spawn(command, argList, { cwd: CWD });\n      vectorMessage(\"-\".repeat(100));\n      vectorMessage(\"-\".repeat(100));\n      let messageFragment: string = \"\";\n\n      // Progress \"feel good\" increment\n      let progressValue = 10;\n      const progressInterval = setInterval(() => {\n        if (progressValue < 90) {\n          progressValue += 15;\n          progress.report({ increment: 10 });\n        }\n      }, 3000);\n\n      // Handle user cancellation (cross clicked)\n      token.onCancellationRequested(() => {\n        if (processHandle) {\n          processHandle.kill(); // kill the spawned process\n          vectorMessage(`User cancelled the operation.`);\n        }\n        clearInterval(progressInterval);\n      });\n\n      await new Promise<void>((resolve) => {\n        processHandle.stdout.on(\"data\", function (data: any) {\n          const rawString = data.toString();\n          const lineArray = rawString.split(/[\\n\\r?]/);\n\n          if (messageFragment.length > 0) {\n            lineArray[0] = messageFragment + lineArray[0];\n            messageFragment = \"\";\n          }\n\n          if (!rawString.endsWith(\"\\n\") && !rawString.endsWith(\"\\r\")) {\n            messageFragment = lineArray.pop();\n          }\n\n          for (const line of lineArray) {\n            if (line.length > 0) {\n              vectorMessage(line.replace(/\\n/g, \"\"));\n            }\n          }\n        });\n\n        processHandle.on(\"exit\", async function (code: any) {\n          clearInterval(progressInterval);\n          progress.report({ increment: 100 });\n          vectorMessage(\"-\".repeat(100));\n          vectorMessage(\n            `${path.basename(command)}: '${argList.join(\" \")}' returned exit code: ${code.toString()}`\n          );\n          vectorMessage(\"-\".repeat(100));\n          if (callback) {\n            await callback(enviroPath, code);\n          }\n          resolve();\n        });\n\n        processHandle.on(\"error\", (error) => {\n          clearInterval(progressInterval);\n          vectorMessage(`Error occurred: ${error.message}`);\n          resolve();\n        });\n      });\n    }\n  );\n}\n\n// A command runner simmilar to executeWithRealTimeEcho for long running commands\n// With the difference that it runs multiple commands sequentially and waits for each to finish\nexport function executeWithRealTimeEchoWithProgressSequential(\n  command: string,\n  argLists: string[][],\n  progressMessages: string[],\n  CWD: string,\n  callback?: (enviroPath: string, exitCode: number) => void,\n  enviroPath?: string[]\n) {\n  return vscode.window.withProgress(\n    {\n      location: vscode.ProgressLocation.Notification,\n      cancellable: true,\n      title: \"Executing command(s)...\",\n    },\n    async (progress, token) => {\n      let enviroPathIndex = 0;\n      // Track total progress used\n      let totalProgress = 0;\n\n      // Loop over each argument list\n      for (const [index, argList] of argLists.entries()) {\n        // If cancellation has been requested, break out of the loop.\n        if (token.isCancellationRequested) {\n          vectorMessage(\n            \"Operation cancelled by user. Exiting remaining tasks.\"\n          );\n          break;\n        }\n\n        // Reset per iteration progress\n        let progressValue = 0;\n        enviroPathIndex = index;\n        const message = `${progressMessages[index]} [ ${index + 1} / ${argLists.length} ] ...`;\n\n        // Reset progress if needed.\n        if (totalProgress > 0) {\n          progress.report({ increment: -totalProgress, message });\n          totalProgress = 0;\n        }\n\n        await new Promise<void>((resolve) => {\n          // Spawn the process for the current argument list.\n          const processHandle = spawn(command, argList, { cwd: CWD });\n          vectorMessage(\"-\".repeat(100));\n          vectorMessage(`Executing: ${command} ${argList.join(\" \")}`);\n          let messageFragment: string = \"\";\n\n          // Increment the progress bar every 3 seconds.\n          const progressInterval = setInterval(() => {\n            if (progressValue < 80) {\n              progressValue += 5;\n              totalProgress += 5;\n              progress.report({ increment: 5, message });\n            }\n          }, 3000);\n\n          // Listen for cancellation and kill the process if requested.\n          const cancellationSubscription = token.onCancellationRequested(() => {\n            vectorMessage(\n              \"Cancellation requested. Killing the current process...\"\n            );\n            processHandle.kill();\n          });\n\n          processHandle.stdout.on(\"data\", (data: any) => {\n            const rawString = data.toString();\n            const lineArray = rawString.split(/[\\n\\r]+/);\n\n            if (messageFragment.length > 0) {\n              lineArray[0] = messageFragment + lineArray[0];\n              messageFragment = \"\";\n            }\n\n            if (!rawString.endsWith(\"\\n\") && !rawString.endsWith(\"\\r\")) {\n              messageFragment = lineArray.pop() ?? \"\";\n            }\n\n            for (const line of lineArray) {\n              if (line.length > 0) {\n                vectorMessage(line.replace(/\\n/g, \"\"));\n              }\n            }\n          });\n\n          processHandle.on(\"exit\", (code: any) => {\n            clearInterval(progressInterval);\n            cancellationSubscription.dispose();\n\n            if (callback && enviroPath) {\n              let currentEnviroPath = enviroPath[enviroPathIndex];\n              callback(currentEnviroPath, code);\n            }\n\n            // Ensure progress reaches 100% for this iteration.\n            const finalIncrement = 100 - progressValue;\n            progress.report({\n              increment: finalIncrement,\n              message: `Finished: ${message}`,\n            });\n            totalProgress += finalIncrement;\n\n            vectorMessage(`Process finished with exit code: ${code}`);\n            resolve();\n          });\n\n          processHandle.on(\"error\", (error) => {\n            clearInterval(progressInterval);\n            cancellationSubscription.dispose();\n            vectorMessage(`Error occurred: ${error.message}`);\n            resolve();\n          });\n        });\n      }\n    }\n  );\n}\n\nexport function executeCommandWithProgress(\n  title: string,\n  commandAndArgs: string[],\n  enviroName: string,\n  testScriptPath: string,\n  startOfRealMessages: string,\n  filter: RegExp,\n  callback: any\n) {\n  // Very similar to the executeWithRealTimeEcho(), but adds a progress dialog,\n  // and a different callback structure.\n  // We use this for generating the basis path and ATG tests (for now)\n\n  vectorMessage(\n    `Executing command: ${commandAndArgs.join(\" \")}`,\n    errorLevel.trace\n  );\n  let commandStatus: commandStatusType = { errorCode: 0, stdout: \"\" };\n\n  const cwd = path.dirname(testScriptPath);\n  const command = commandAndArgs[0];\n  const args = commandAndArgs.slice(1, commandAndArgs.length);\n\n  vscode.window.withProgress(\n    {\n      location: vscode.ProgressLocation.Notification,\n      title: title,\n      cancellable: false,\n    },\n    async (progress) => {\n      return new Promise(async (resolve, reject) => {\n        // shell is needed so that stdout is NOT buffered\n        const commandHandle = spawn(command, args, { cwd: cwd, shell: true });\n\n        // To strip the annoying version miss-match string, we look\n        // for the first line that contains the startOFRealMessages\n        // string, and log once we see this.\n        let shouldLogMessage = false;\n\n        // each time we get an entry here, we need to check if we have a\n        // partial message if so we print the part up the the\n        // final \\n and buffer the rest, see comment above\n        let remainderTextFromLastCall = \"\";\n\n        let stderrChunks: string = \"\";\n\n        commandHandle.stdout.on(\"data\", async (data: any) => {\n          const message: statusMessageType = processCommandOutput(\n            remainderTextFromLastCall,\n            data.toString()\n          );\n          remainderTextFromLastCall = message.remainderText;\n\n          // for the dialog, we want use the filter to decide what to show\n          // and this requires the message data to be split into single lines\n          const lineArray = message.fullLines.split(\"\\n\");\n          for (const line of lineArray) {\n            if (line.startsWith(startOfRealMessages)) {\n              shouldLogMessage = true;\n            }\n\n            if (shouldLogMessage && line.length > 0) {\n              vectorMessage(line, errorLevel.info, indentString);\n            }\n\n            const matched = line.match(filter);\n            if (matched && matched.length > 0) {\n              // Improvement needed: figure out how many total subprograms\n              // we are processing and set the increment properly\n              progress.report({ message: matched[0], increment: 10 });\n              // This is needed to allow the message window to update ...\n              await new Promise<void>((r) => setTimeout(r, 0));\n            }\n          }\n        });\n\n        commandHandle.stderr.on(\"data\", (data: any) => {\n          stderrChunks += data.toString();\n        });\n\n        commandHandle.on(\"error\", (error: any) => {\n          commandStatus = processExceptionFromExecuteCommand(\n            commandAndArgs.join(\" \"),\n            error,\n            true\n          );\n        });\n        commandHandle.on(\"close\", (code: any) => {\n          // display any remaining text ...\n          if (remainderTextFromLastCall.length > 0) {\n            vectorMessage(\n              remainderTextFromLastCall,\n              errorLevel.info,\n              indentString\n            );\n          }\n          vectorMessage(stderrChunks, errorLevel.info, indentString);\n\n          commandStatus.errorCode = code;\n          resolve(code);\n          callback(commandStatus, enviroName, testScriptPath);\n        });\n      });\n    }\n  );\n}\n\n// This will run any clicast command on the server\nexport async function executeClicastCommandUsingServer(\n  enviroPath: string,\n  commandArgs: string\n): Promise<commandStatusType> {\n  let commandStatus = { errorCode: 0, stdout: \"\" };\n\n  const requestObject: clientRequestType = {\n    command: vcastCommandType.runClicastCommand,\n    path: enviroPath,\n    options: commandArgs,\n  };\n\n  let transmitResponse: transmitResponseType =\n    await transmitCommand(requestObject);\n\n  // transmitResponse.returnData is an object with exitCode and data properties\n  if (transmitResponse.success) {\n    commandStatus.errorCode = transmitResponse.returnData.exitCode;\n    commandStatus.stdout = transmitResponse.returnData.data.trim();\n  } else {\n    commandStatus.errorCode = 1;\n    commandStatus.stdout = transmitResponse.statusText.trim();\n  }\n\n  if (commandStatus.errorCode != 0) {\n    openMessagePane();\n    vectorMessage(commandStatus.stdout);\n  }\n  return commandStatus;\n}\n", "import * as vscode from \"vscode\";\nimport {\n  DecorationRenderOptions,\n  TextEditorDecorationType,\n  window,\n} from \"vscode\";\nimport {\n  getCoverageDataForFile,\n  getListOfFilesWithCoverage,\n} from \"./vcastTestInterface\";\n\nimport { getRangeOption } from \"./utilities\";\n\nimport { fileDecorator } from \"./fileDecorator\";\nimport {\n  currentActiveUnitMCDCLines,\n  updateCurrentActiveUnitMCDCLines,\n} from \"./editorDecorator\";\n\n// these are defined as globals so that the deactivate function has access\n// to dispose of them when the coverage id turned off\nlet uncoveredDecorationType: TextEditorDecorationType;\nlet coveredDecorationType: TextEditorDecorationType;\nlet partiallyCoveredDecorationType: TextEditorDecorationType;\nlet coveredDecorationTypeWithMCDC: TextEditorDecorationType;\nlet uncoveredDecorationTypeWithMCDC: TextEditorDecorationType;\nlet partiallyCoveredDecorationTypeWithMCDC: TextEditorDecorationType;\n\n// these are really constants, but I set the values via a function\n// so that we could support the user controlling options for the decorations\nlet uncoveredRenderOptions: DecorationRenderOptions;\nlet coveredRenderOptions: DecorationRenderOptions;\nlet partiallyCoveredRenderOptions: DecorationRenderOptions;\nlet uncoveredRenderOptionsWithMCDC: DecorationRenderOptions;\nlet coveredRenderOptionsWithMCDC: DecorationRenderOptions;\nlet partiallyCoveredRenderOptionsWithMCDC: DecorationRenderOptions;\n\nexport function initializeCodeCoverageFeatures(\n  context: vscode.ExtensionContext\n) {\n  // This gets called during activation to construct the decoration types\n  // I have commented out some of the other attributes that can be used\n  // to decorate the lines\n\n  // We have a different style for covered lines that also have MCDC coverage to\n  // indicate that the user can interact with these lines in the decoration gutter.\n\n  // Improvement needed: \"partial\" coverage display not supported\n  uncoveredRenderOptions = {\n    //backgroundColor: \"red\",\n    //color: 'white',\n    //color: \"red\",\n    //fontWeight: \"bold\",\n    gutterIconPath: context.asAbsolutePath(\"./images/light/no-cover-icon.svg\"),\n  };\n  uncoveredRenderOptionsWithMCDC = {\n    gutterIconPath: context.asAbsolutePath(\n      \"./images/light/no-cover-icon-with-mcdc.svg\"\n    ),\n  };\n  coveredRenderOptionsWithMCDC = {\n    gutterIconPath: context.asAbsolutePath(\n      \"./images/light/cover-icon-with-mcdc.svg\"\n    ),\n  };\n\n  partiallyCoveredRenderOptionsWithMCDC = {\n    gutterIconPath: context.asAbsolutePath(\n      \"./images/light/partially-cover-icon-with-mcdc.svg\"\n    ),\n  };\n\n  partiallyCoveredRenderOptions = {\n    gutterIconPath: context.asAbsolutePath(\n      \"./images/light/partially-cover-icon.svg\"\n    ),\n  };\n\n  coveredRenderOptions = {\n    //backgroundColor: 'green',\n    //color: 'white',\n    //color: \"green\",\n    //fontWeight: \"bold\",\n    gutterIconPath: context.asAbsolutePath(\"./images/light/cover-icon.svg\"),\n  };\n}\n\n// global decoration arrays\nlet coveredDecorations: vscode.DecorationOptions[] = [];\nlet uncoveredDecorations: vscode.DecorationOptions[] = [];\nlet partiallyCoveredDecorations: vscode.DecorationOptions[] = [];\nlet coveredDecorationsWithMCDC: vscode.DecorationOptions[] = [];\nlet uncoveredDecorationsWithMCDC: vscode.DecorationOptions[] = [];\nlet partiallyCoveredDecorationsWithMCDC: vscode.DecorationOptions[] = [];\n\nfunction addDecorations(\n  activeEditor: vscode.TextEditor,\n  covered: number[],\n  uncovered: number[],\n  partiallyCovered: number[]\n) {\n  const lineCount = activeEditor.document.lineCount;\n  let lineIndex;\n\n  for (lineIndex = 0; lineIndex < lineCount; lineIndex++) {\n    const lineNumber = lineIndex + 1;\n    const isMCDCLine = currentActiveUnitMCDCLines.includes(lineNumber);\n\n    if (partiallyCovered.includes(lineNumber)) {\n      (isMCDCLine\n        ? partiallyCoveredDecorationsWithMCDC\n        : partiallyCoveredDecorations\n      ).push(getRangeOption(lineIndex));\n      continue;\n    }\n\n    if (covered.includes(lineNumber)) {\n      (isMCDCLine ? coveredDecorationsWithMCDC : coveredDecorations).push(\n        getRangeOption(lineIndex)\n      );\n      continue;\n    }\n\n    if (uncovered.includes(lineNumber)) {\n      (isMCDCLine ? uncoveredDecorationsWithMCDC : uncoveredDecorations).push(\n        getRangeOption(lineIndex)\n      );\n      continue;\n    }\n  }\n}\n\n// Global Data for code coverage ////////////////////////////////////\nlet coverageOn: boolean = false;\nlet coverageStatusBarObject: vscode.StatusBarItem;\n/////////////////////////////////////////////////////////////////////\n\nfunction resetGlobalDecorations() {\n  // Use references to global variables\n  const decorationRefs = [\n    () => (uncoveredDecorations = []),\n    () => (coveredDecorations = []),\n    () => (partiallyCoveredDecorations = []),\n    () => (coveredDecorationsWithMCDC = []),\n    () => (uncoveredDecorationsWithMCDC = []),\n    () => (partiallyCoveredDecorationsWithMCDC = []),\n  ];\n\n  // Reset all decorations\n  for (const resetDecoration of decorationRefs) {\n    resetDecoration();\n  }\n\n  // Group decoration types into a list\n  const decorationTypes = [\n    uncoveredDecorationType,\n    coveredDecorationType,\n    partiallyCoveredDecorationType,\n    coveredDecorationTypeWithMCDC,\n    uncoveredDecorationTypeWithMCDC,\n    partiallyCoveredDecorationTypeWithMCDC,\n  ];\n\n  // Dispose of all decoration types\n  for (const decorationType of decorationTypes) {\n    if (decorationType) decorationType.dispose();\n  }\n}\n\nconst url = require(\"url\");\nexport async function updateCOVdecorations() {\n  // this updates the decorations for the currently active fill\n\n  // Everytime we update the coverage decoration, we also need to update the mcdc lines\n  await updateCurrentActiveUnitMCDCLines();\n\n  let activeEditor = vscode.window.activeTextEditor;\n\n  if (\n    activeEditor &&\n    (activeEditor.document.languageId == \"c\" ||\n      activeEditor.document.languageId == \"cpp\")\n  ) {\n    const filePath = url.fileURLToPath(activeEditor.document.uri.toString());\n\n    // this returns the cached coverage data for this file\n    const coverageData = getCoverageDataForFile(filePath);\n\n    if (coverageData.hasCoverageData) {\n      // there is coverage data and it matches the file checksum\n      // Reset the global decoration arrays\n      resetGlobalDecorations();\n\n      // build the global list of decorations needed\n      addDecorations(\n        activeEditor,\n        coverageData.covered,\n        coverageData.uncovered,\n        coverageData.partiallyCovered\n      );\n\n      // Add the decorations to the editor\n      uncoveredDecorationType = window.createTextEditorDecorationType(\n        uncoveredRenderOptions\n      );\n      activeEditor.setDecorations(\n        uncoveredDecorationType,\n        uncoveredDecorations\n      );\n      coveredDecorationType =\n        window.createTextEditorDecorationType(coveredRenderOptions);\n      activeEditor.setDecorations(coveredDecorationType, coveredDecorations);\n\n      partiallyCoveredDecorationType = window.createTextEditorDecorationType(\n        partiallyCoveredRenderOptions\n      );\n      activeEditor.setDecorations(\n        partiallyCoveredDecorationType,\n        partiallyCoveredDecorations\n      );\n\n      // Coverage lines with MCDC\n\n      partiallyCoveredDecorationTypeWithMCDC =\n        window.createTextEditorDecorationType(\n          partiallyCoveredRenderOptionsWithMCDC\n        );\n      activeEditor.setDecorations(\n        partiallyCoveredDecorationTypeWithMCDC,\n        partiallyCoveredDecorationsWithMCDC\n      );\n\n      coveredDecorationTypeWithMCDC = window.createTextEditorDecorationType(\n        coveredRenderOptionsWithMCDC\n      );\n      activeEditor.setDecorations(\n        coveredDecorationTypeWithMCDC,\n        coveredDecorationsWithMCDC\n      );\n      uncoveredDecorationTypeWithMCDC = window.createTextEditorDecorationType(\n        uncoveredRenderOptionsWithMCDC\n      );\n      activeEditor.setDecorations(\n        uncoveredDecorationTypeWithMCDC,\n        uncoveredDecorationsWithMCDC\n      );\n\n      const covered =\n        coveredDecorations.length + coveredDecorationsWithMCDC.length;\n      const coverable =\n        covered +\n        uncoveredDecorations.length +\n        uncoveredDecorationsWithMCDC.length +\n        partiallyCoveredDecorationsWithMCDC.length;\n      let percentage: number;\n      if (coverable == 0) {\n        percentage = 0;\n      } else {\n        percentage = Math.round((covered / coverable) * 100);\n      }\n      const statusBarText = `Coverage: ${covered}/${coverable} (${percentage}%)`;\n      coverageStatusBarObject.text = statusBarText;\n      coverageStatusBarObject.show();\n    } else if (coverageData.statusString.length > 0) {\n      // this handles the case where coverage is out of date (for example)\n      coverageStatusBarObject.text = coverageData.statusString;\n      coverageStatusBarObject.show();\n      resetGlobalDecorations();\n    } else {\n      // we get here for C/C++ files that are not part of an environment\n      coverageStatusBarObject.hide();\n    }\n  } else {\n    // we get here for non-C/C++ files\n    coverageStatusBarObject.hide();\n  }\n}\n\nfunction deactivateCoverage() {\n  const decorationTypes = [\n    uncoveredDecorationType,\n    coveredDecorationType,\n    partiallyCoveredDecorationType,\n    coveredDecorationTypeWithMCDC,\n    uncoveredDecorationTypeWithMCDC,\n    partiallyCoveredDecorationTypeWithMCDC,\n  ];\n\n  // Debug log to verify contents of decorationTypes\n  console.log(\"Decoration Types Before Disposal:\", decorationTypes);\n\n  // Iterate over the list and dispose of each decoration type if it exists\n  for (const decorationType of decorationTypes) {\n    if (decorationType) {\n      console.log(\"Disposing decoration type:\", decorationType);\n      decorationType.dispose();\n    }\n  }\n\n  coverageStatusBarObject.hide();\n}\n\nexport function hideStatusBarCoverage() {\n  coverageStatusBarObject.hide();\n}\n\nexport function createCoverageStatusBar() {\n  coverageStatusBarObject = vscode.window.createStatusBarItem(\n    vscode.StatusBarAlignment.Right,\n    10\n  );\n  return coverageStatusBarObject;\n}\n\nexport async function toggleCoverageAction() {\n  // This function gets called when the user does toggle on/off coverage\n  // using either ctrl-shift-c or the vectorcastTestExplorer.coverage command\n\n  if (coverageOn) {\n    coverageOn = false;\n    deactivateCoverage();\n    if (fileDecorator) fileDecorator.removeAllCoverageDecorations();\n  } else {\n    coverageOn = true;\n    if (fileDecorator)\n      fileDecorator.updateCoverageDecorations(getListOfFilesWithCoverage());\n    await updateCOVdecorations();\n  }\n}\n\nexport async function updateDisplayedCoverage() {\n  if (coverageOn) await updateCOVdecorations();\n}\n", "import * as vscode from \"vscode\";\nimport { Uri } from \"vscode\";\n\nimport { getListOfFilesWithCoverage } from \"./vcastTestInterface\";\n\n// this class allows us to add decorations to the file explorer\n// we currently use this to indicate what files have vcast coverage\n\nfunction decorateExplorerOn(): boolean {\n  let settings = vscode.workspace.getConfiguration(\"vectorcastTestExplorer\");\n  return settings.get(\"decorateExplorer\", false);\n}\n\n// this is the class instance for the file decorator\n// when it is null no decorations are applied\nexport var fileDecorator: TreeFileDecorationProvider | undefined = undefined;\nexport function updateExploreDecorations() {\n  // called during initialization, and any time the user changes the option\n  if (decorateExplorerOn()) {\n    if (!fileDecorator) {\n      fileDecorator = new TreeFileDecorationProvider();\n    }\n    fileDecorator.updateCoverageDecorations(getListOfFilesWithCoverage());\n  } else {\n    fileDecorator?.removeAllCoverageDecorations();\n    fileDecorator = undefined;\n  }\n}\n\n// from here: https://stackoverflow.com/questions/74449432/how-to-add-and-select-color-for-nodes-tree-view-items-in-explorer-view-in-my-vsc\nexport class TreeFileDecorationProvider\n  implements vscode.FileDecorationProvider\n{\n  private disposables: Array<vscode.Disposable> = [];\n  private filesWithCoverage: string[] = [];\n\n  private readonly _onDidChangeFileDecorations: vscode.EventEmitter<\n    Uri | Uri[]\n  > = new vscode.EventEmitter<Uri | Uri[]>();\n  readonly onDidChangeFileDecorations: vscode.Event<Uri | Uri[]> =\n    this._onDidChangeFileDecorations.event;\n\n  constructor() {\n    this.disposables = [];\n    this.disposables.push(vscode.window.registerFileDecorationProvider(this));\n  }\n\n  async addCoverageDecorationToFile(filePath: string): Promise<void> {\n    // this should be called when you want to indicate that a file\n    // has coverage in the file explorer tree\n\n    // if this path is not in the list, add it\n    if (this.filesWithCoverage.indexOf(filePath) == -1) {\n      this.filesWithCoverage.push(filePath);\n\n      const uri: Uri = vscode.Uri.file(filePath);\n      this._onDidChangeFileDecorations.fire(uri);\n    }\n  }\n\n  async updateCoverageDecorations(fileList: string[]) {\n    // this function will replace the existing decorations\n    await this.removeAllCoverageDecorations();\n\n    // convenience function to update a list of files\n    for (let filePath of fileList) {\n      this.addCoverageDecorationToFile(filePath);\n    }\n  }\n\n  async removeCoverageDecorationFromFile(filePath: string): Promise<void> {\n    // this removes the decoration for one file\n    const index = this.filesWithCoverage.indexOf(filePath);\n    if (index > -1) {\n      this.filesWithCoverage.splice(index, 1);\n\n      const uri: Uri = vscode.Uri.file(filePath);\n      this._onDidChangeFileDecorations.fire(uri);\n    }\n  }\n\n  async removeAllCoverageDecorations(): Promise<void> {\n    // this will spin through the list of decorated files and remove them\n    // create a copy of the list so we can destroy the real list was we process each item\n    const listCopy = [...this.filesWithCoverage];\n    for (const filePath of listCopy) {\n      // remove the first element from the list\n      this.filesWithCoverage.shift();\n\n      const uri: Uri = vscode.Uri.file(filePath);\n      this._onDidChangeFileDecorations.fire(uri);\n    }\n  }\n\n  async provideFileDecoration(\n    uri: Uri\n  ): Promise<vscode.FileDecoration | undefined> {\n    const filePath: string = uri.fsPath;\n    if (this.filesWithCoverage.includes(filePath)) {\n      return {\n        badge: \"VC\",\n        //color: new vscode.ThemeColor(\"charts.red\"),\n        tooltip: \"VectorCAST Coverage Exists\",\n      };\n    } else return; // to get rid of the custom fileDecoration\n  }\n\n  dispose() {\n    this.disposables.forEach((d) => d.dispose());\n  }\n}\n", "import * as vscode from \"vscode\";\nimport { DecorationRenderOptions, TextEditorDecorationType } from \"vscode\";\n\nimport { testNodeType } from \"./testData\";\n\nimport { getEnvPathForFilePath, getRangeOption } from \"./utilities\";\n\nimport { checksumMatchesEnvironment } from \"./vcastTestInterface\";\nimport { getMCDCCoverageLines } from \"./vcastAdapter\";\nimport { vectorMessage } from \"./messagePane\";\n\nconst path = require(\"path\");\n\n// This is used in the package.json to control the display of context menu items\n// Search for 'vectorcastTestExplorer.testableLineList' in package.json to see where we reference it\nlet testableLineList: number[] = [];\n\n// Determines the lines in package.json where the \"Get MCDC Report\" command is available.\n// Also used in coverage.ts to highlight MCDC lines, visually indicating their interactivity for the user.\nlet mcdcUnitCoverageLines: { [unit: string]: number[] } = {};\nexport let currentActiveUnitMCDCLines: number[] = [];\n\nlet testableFunctionDecorationType: TextEditorDecorationType;\nlet testableFunctionOptions: DecorationRenderOptions;\nlet testableFunctionsDecorations: vscode.DecorationOptions[] = [];\n\n/**\n * Updates the global variable `currentActiveUnitMCDCLines`, which is exported and used in coverage.ts.\n * Fetches all lines with MCDC coverage for the current active editor's unit from the Data API.\n */\nexport async function updateCurrentActiveUnitMCDCLines() {\n  let activeEditor = vscode.window.activeTextEditor;\n  if (activeEditor) {\n    // First we need to get the env name from the active file\n    const filePath = activeEditor.document.uri.fsPath;\n    const enviroPath = getEnvPathForFilePath(filePath);\n\n    // Get the unit name based on the file name without extension\n    const fullPath = activeEditor.document.fileName;\n    const unitName = path.basename(fullPath, path.extname(fullPath));\n\n    // Get all mcdc lines for every unit and parse it into JSON\n    if (enviroPath) {\n      // Replace single quotes with double quotes to make it a valid JSON string\n      try {\n        let mcdcCoverageLinesString = (\n          await getMCDCCoverageLines(enviroPath)\n        ).replace(/'/g, '\"');\n        mcdcUnitCoverageLines = JSON.parse(mcdcCoverageLinesString);\n      } catch (error) {\n        vectorMessage(`Error trying to parse MCDC coverage lines: ${error}`);\n      }\n      // Update the current active unit MCDC lines\n      const mcdcLinesForUnit = mcdcUnitCoverageLines[unitName];\n      // Check if there are no MCDC lines for the unit --> for example when the env is build with only Statement coverage\n      // and the user changes it to Statement+MCDC in the settings\n      if (mcdcLinesForUnit) {\n        currentActiveUnitMCDCLines = mcdcUnitCoverageLines[unitName];\n      } else {\n        currentActiveUnitMCDCLines = [];\n      }\n    } else {\n      currentActiveUnitMCDCLines = [];\n    }\n\n    // Push the updated currentActiveUnitMCDCLines to control the possible \"Get MCDC Report\" command\n    vscode.commands.executeCommand(\n      \"setContext\",\n      \"vectorcastTestExplorer.currentMCDCLines\",\n      currentActiveUnitMCDCLines\n    );\n  }\n}\n\nexport function initializeTestDecorator(context: vscode.ExtensionContext) {\n  testableFunctionOptions = {\n    light: {\n      gutterIconPath: context.asAbsolutePath(\"./images/light/beaker-plus.svg\"),\n    },\n    dark: {\n      gutterIconPath: context.asAbsolutePath(\"./images/dark/beaker-plus.svg\"),\n    },\n  };\n  testableFunctionDecorationType = vscode.window.createTextEditorDecorationType(\n    testableFunctionOptions\n  );\n}\n\ninterface unitDataType {\n  enviroPath: string;\n  enviroName: string;\n  unitName: string;\n  lineMap: Map<number, string>;\n}\n\nlet unitAndFunctionMap: Map<string, unitDataType> = new Map();\n\nexport function updateFunctionDataForFile(\n  enviroPath: string,\n  fileName: string,\n  functionList: string[]\n) {\n  // functionList is a list of json items with fields for \"name\" and \"startLine\"\n  let lineMap: Map<number, string> = new Map();\n  for (let i = 0; i < functionList.length; i++) {\n    const functionInfo: any = functionList[i];\n    // for now we only use the line to functionName map to insert\n    // the flask icon in the editor, so we simply drop functions\n    // with isTestable set to false\n    if (functionInfo.isTestable) {\n      const functionName = functionInfo.name;\n      const startLine = functionInfo.startLine;\n      lineMap.set(startLine, functionName);\n    }\n  }\n\n  const enviroName = path.basename(enviroPath);\n  const unitName = path.basename(fileName).split(\".\")[0];\n\n  const unitData: unitDataType = {\n    enviroPath: enviroPath,\n    enviroName: enviroName,\n    unitName: unitName,\n    lineMap: lineMap,\n  };\n\n  unitAndFunctionMap.set(fileName, unitData);\n}\n\nexport function buildTestNodeForFunction(args: any): testNodeType | undefined {\n  // this function will take the file path and function index and return a test node\n  // with the correct data for the function\n\n  // args comes from the call back and has the file URI and the line number\n\n  const filename = args.uri.fsPath;\n  const unitData = unitAndFunctionMap.get(filename);\n  let testNode: testNodeType | undefined = undefined;\n\n  if (unitData) {\n    const functionName = unitData.lineMap.get(args.lineNumber);\n    if (functionName) {\n      testNode = {\n        enviroNodeID: \"\",\n        enviroPath: unitData.enviroPath,\n        enviroName: unitData.enviroName,\n        unitName: unitData.unitName,\n        functionName: functionName,\n        testName: \"\",\n        testFile: \"\",\n        testStartLine: 0,\n      };\n    }\n  }\n  return testNode;\n}\n\nexport function updateTestDecorator() {\n  // activeEditor will always exist when this is called\n  // this will use the previously initialized file|function map to create\n  // the decorations for the currently active file\n\n  // Note: VectorCAST only has the location of the opening curly brace for the\n  // function, so that's where the icon and right click menu will be\n\n  let activeEditor = vscode.window.activeTextEditor;\n  if (activeEditor) {\n    // toss the old data\n    testableLineList = [];\n    testableFunctionsDecorations = [];\n\n    const filePath = activeEditor.document.fileName;\n    const unitData = unitAndFunctionMap.get(filePath);\n\n    // check if there are testable functions in this file\n    if (unitData && unitData.lineMap.size > 0) {\n      // We don't want to display the icon and context menu if the\n      // file has been edited.  This is the easiest way to check that\n      if (checksumMatchesEnvironment(filePath, unitData.enviroPath)) {\n        unitData.lineMap.forEach((functionName, lineNumber) => {\n          testableLineList.push(lineNumber);\n          // the range positions are 0 based\n          testableFunctionsDecorations.push(getRangeOption(lineNumber - 1));\n        });\n      }\n    }\n\n    // update the flask icon decorations\n    // if we this is not a unit of interest, th lists will be empty\n    // and this will remove the decorations\n    activeEditor.setDecorations(\n      testableFunctionDecorationType,\n      testableFunctionsDecorations\n    );\n    // push the updated testableLineList to control content (right click) menu choices\n    vscode.commands.executeCommand(\n      \"setContext\",\n      \"vectorcastTestExplorer.testableLineList\",\n      testableLineList\n    );\n  }\n}\n", "import * as vscode from \"vscode\";\nimport { errorLevel, vectorMessage } from \"./messagePane\";\nimport { getMCDCResultFile, getResultFileForTest } from \"./vcastTestInterface\";\n\nconst fs = require(\"fs\");\n\n// TBD TODAY - We switch txt to html ...\nlet htmlReportPanel: vscode.WebviewPanel | undefined = undefined;\nexport function viewResultsReportVC(htmlFilePath: string) {\n  // The stock VectorCAST HTML reports look ugly in VS Code so\n  // we do a manual edits, and color changes.\n  vectorMessage(`Report file path is: ${htmlFilePath}`);\n  let htmlText = fs.readFileSync(htmlFilePath, \"utf-8\");\n  // this displays the html report in a webview panel\n  if (!htmlReportPanel) {\n    vectorMessage(\"Creating web view panel ...\", errorLevel.trace);\n    htmlReportPanel = vscode.window.createWebviewPanel(\n      \"vcastReport\",\n      \"VectorCAST Report\",\n      vscode.ViewColumn.Two,\n      {}\n    );\n    htmlReportPanel.onDidDispose(() => {\n      htmlReportPanel = undefined;\n    });\n  } else {\n    vectorMessage(\"Revealing webview panel ...\", errorLevel.trace);\n    htmlReportPanel.reveal(vscode.ViewColumn.Two);\n  }\n\n  vectorMessage(\"Setting webview text ...\", errorLevel.trace);\n  htmlReportPanel.webview.html = htmlText;\n}\n\nexport async function viewResultsReport(testID: string) {\n  // make sure that a test is selected\n  const htmlFilePath = await getResultFileForTest(testID);\n  if (fs.existsSync(htmlFilePath)) {\n    vectorMessage(\n      \"Viewing results, result report path: '\" + htmlFilePath + \"'\"\n    );\n    viewResultsReportVC(htmlFilePath);\n  }\n}\n\n/**\n * Displays the MCDC report for a specified line.\n *\n * @param {string} enviroPath - The path to the environment.\n * @param {string} unit - The unit in which the line appears.\n * @param {number} lineNumber - The line number we want to get the report from.\n * @returns {Promise<void>} A promise that resolves when the report is viewed.\n */\nexport async function viewMCDCReport(\n  enviroPath: string,\n  unit: string,\n  lineNumber: number\n) {\n  // make sure that a test is selected\n  const htmlFilePath = await getMCDCResultFile(enviroPath, unit, lineNumber);\n  if (fs.existsSync(htmlFilePath)) {\n    vectorMessage(\n      \"Viewing results, result report path: '\" + htmlFilePath + \"'\"\n    );\n    viewResultsReportVC(htmlFilePath);\n  }\n}\n", "import * as vscode from \"vscode\";\n\n// needed for parsing json files with comments\nimport * as jsonc from \"jsonc-parser\";\n\nimport { loadScriptCallBack } from \"./callbacks\";\n\nimport { vectorMessage } from \"./messagePane\";\n\nimport {\n  environmentDataCache,\n  environmentNodeDataType,\n  getEnviroNodeData,\n  getTestNode,\n  testNodeType,\n} from \"./testData\";\n\nimport {\n  jsoncModificationOptions,\n  jsoncParseErrors,\n  jsoncParseOptions,\n  openFileWithLineSelected,\n} from \"./utilities\";\n\nimport {\n  dumpTestScriptFile,\n  openProjectInVcast,\n  runATGCommands,\n  runBasisPathCommands,\n} from \"./vcastAdapter\";\n\nimport { cleanProjectEnvironment } from \"./manage/manageSrc/manageCommands\";\n\nimport {\n  clicastCommandToUse,\n  configFileContainsCorrectInclude,\n  globalIncludePath,\n  globalMCDCReportPath,\n  globalTestInterfacePath,\n  vPythonCommandToUse,\n  vUnitIncludeSuffix,\n} from \"./vcastInstallation\";\n\nimport { clientRequestType, vcastCommandType } from \"../src-common/vcastServer\";\nimport {\n  globalController,\n  globalProjectDataCache,\n  globalProjectMap,\n  globalUnusedCompilerList,\n  globalUnusedTestsuiteList,\n  nodeKind,\n  vcastTestItem,\n} from \"./testPane\";\n\nconst fs = require(\"fs\");\nconst os = require(\"os\");\nconst path = require(\"path\");\n\nexport function addIncludePath(fileUri: vscode.Uri) {\n  // This small wrapper just checks if we really need to add the include path\n  // and if so calls insertIncludePath.  We intentionally don't turn off\n  // the right click menu if we find the include path during initialization\n  // because that would lock the user out if there is an error in the init stuff\n\n  const filePath = fileUri.fsPath;\n  if (!configFileContainsCorrectInclude(filePath)) {\n    insertIncludePath(filePath);\n  } else {\n    vscode.window.showInformationMessage(\n      `${filePath} already contains the correct include path.  `\n    );\n  }\n}\n\nfunction insertIncludePath(filePath: string) {\n  //\n  // this function will add globalIncludePath to the includePath list in the\n  // c_cpp_properties.json passed in, it will be added to the end of\n  // the includePath list.\n  //\n  // globalIncludePath is initialized in vcastInstallation.ts\n  //\n  // I'm handling a few error cases here without going crazy\n  //\n  let statusMessages: string[] = [];\n\n  let existingJSON: any;\n  let existingJSONasString: string;\n\n  // Requires json-c parsing to handle comments etc.\n  existingJSONasString = fs.readFileSync(filePath).toString();\n  // note that jsonc.parse returns \"real json\" without the comments\n  existingJSON = jsonc.parse(\n    existingJSONasString,\n    jsoncParseErrors,\n    jsoncParseOptions\n  );\n\n  if (\n    existingJSON &&\n    existingJSON.configurations &&\n    existingJSON.configurations.length > 0\n  ) {\n    const numberOfConfigurations = existingJSON.configurations.length;\n    statusMessages.push(\n      `{configurationFile} file has ${numberOfConfigurations} configurations ... `\n    );\n  } else {\n    statusMessages.push(\n      `{configurationFile} file has no existing configurations, please add a configuration.   `\n    );\n    vscode.window.showErrorMessage(statusMessages.join(\"\\n\"));\n    return;\n  }\n\n  // when we get here we should always have a configurations array,\n  // to make things easier we will add the new include to the first config in the array\n  let configName = existingJSON.configurations[0].name;\n  // This configuration might now have includePath, so add it if its missing\n  if (existingJSON.configurations[0].includePath == undefined) {\n    statusMessages.push(\n      `Configuration: \"${configName}\" is missing an includePath list, adding.  `\n    );\n    // we keep the existing JSON up to date to make the logic below simpler\n    existingJSON.configurations[0].includePath = [];\n  }\n\n  let includePathList = existingJSON.configurations[0].includePath;\n  let whereToInsert = existingJSON.configurations[0].includePath.length;\n\n  // if the user updated versions of VectorCAST, we might have an \"old\" include path that needs to be removed\n  const indexToRemove = includePathList.findIndex((element: string) =>\n    element.includes(vUnitIncludeSuffix)\n  );\n  if (indexToRemove >= 0) {\n    const oldPath = includePathList[indexToRemove];\n    const jsoncEdits = jsonc.modify(\n      existingJSONasString,\n      [\"configurations\", 0, \"includePath\", indexToRemove],\n      undefined,\n      jsoncModificationOptions\n    );\n    existingJSONasString = jsonc.applyEdits(existingJSONasString, jsoncEdits);\n    statusMessages.push(\n      `Removed: ${oldPath} from configuration: \"${configName}\".  `\n    );\n  }\n\n  const jsoncEdits = jsonc.modify(\n    existingJSONasString,\n    [\"configurations\", 0, \"includePath\", whereToInsert],\n    globalIncludePath,\n    jsoncModificationOptions\n  );\n  existingJSONasString = jsonc.applyEdits(existingJSONasString, jsoncEdits);\n  statusMessages.push(\n    `Added: ${globalIncludePath} to configuration: \"${configName}\".  `\n  );\n\n  vscode.window.showInformationMessage(statusMessages.join(\"\\n\"));\n\n  // we unconditionally write rather than tracking if we changed anything\n  fs.writeFileSync(filePath, existingJSONasString);\n}\n\nfunction convertTestScriptContents(scriptPath: string) {\n  // Read the file\n  let originalLines = fs.readFileSync(scriptPath).toString().split(os.EOL);\n  let newLines: string[] = [];\n\n  // Modify the lines\n  for (let line of originalLines) {\n    if (line == \"TEST.NEW\") {\n      line = \"TEST.REPLACE\";\n    }\n    newLines.push(line);\n  }\n\n  // Join the modified lines back into a single string\n  const modifiedContent = newLines.join(\"\\n\");\n\n  // Write the modified content back to the file\n  fs.writeFileSync(scriptPath, modifiedContent, \"utf8\");\n}\n\nexport async function openTestScript(nodeID: string) {\n  // this can get called for a unit, environment, function, or test\n\n  const testNode: testNodeType = getTestNode(nodeID);\n  const scriptPath = testNode.enviroPath + \".tst\";\n\n  const commandStatus = await dumpTestScriptFile(testNode, scriptPath);\n\n  if (commandStatus.errorCode == 0) {\n    // Improvement needed:\n    // It would be nice if vcast generated the scripts with TEST.REPLACE, but for now\n    // convert TEST.NEW to TEST.REPLACE so doing an \"immediate load\" works without error\n    convertTestScriptContents(scriptPath);\n\n    // open the script file for editing\n    vscode.workspace.openTextDocument(scriptPath).then(\n      (doc: vscode.TextDocument) => {\n        vscode.window.showTextDocument(doc);\n      },\n      (error: any) => {\n        vectorMessage(error);\n      }\n    );\n  }\n}\n\nexport async function adjustScriptContentsBeforeLoad(scriptPath: string) {\n  // There are some things that need updating before we can load the\n  // script into VectorCAST:\n  //   - The requirement key lines need to be split into two lines\n  //     We insert lines like TEST.REQUIREMENT_KEY: key | description,\n  //     but VectorCAST only allows the key, so we turn the description\n  //     into a comment.\n  //\n  //   - <might be more things to do later>\n\n  let originalLines = fs.readFileSync(scriptPath).toString().split(\"\\n\");\n  let newLines: string[] = [];\n  for (let line of originalLines) {\n    if (line.startsWith(\"TEST.REQUIREMENT_KEY:\")) {\n      const keyLineParts = line.split(\"|\");\n      if (keyLineParts.length == 2) {\n        newLines.push(\"-- Requirement Title: \" + keyLineParts[1]);\n        newLines.push(keyLineParts[0].trim());\n      } else {\n        newLines.push(line);\n      }\n    } else {\n      newLines.push(line);\n    }\n  }\n  fs.writeFileSync(scriptPath, newLines.join(\"\\n\"), \"utf8\");\n}\n\nexport async function generateAndLoadBasisPathTests(testNode: testNodeType) {\n  // This can be called for any node, including environment nodes\n  // In all cases, we need to do the following:\n  //  - Call clicast <-e -u -s options> tool auto_test temp.tst  [creates tests]\n  //  - Call loadTestScriptIntoEnvironment() to do the actual load\n  //\n  // Other Points:\n  //   - Use a temporary filename and ensure we delete it\n\n  const enclosingDirectory = path.dirname(testNode.enviroPath);\n  const timeStamp = Date.now().toString();\n  const tempScriptPath = path.join(\n    enclosingDirectory,\n    `vcast-${timeStamp}.tst`\n  );\n\n  vectorMessage(\"Generating Basis Path script file ...\");\n  // ignore the testName (if any)\n  testNode.testName = \"\";\n\n  runBasisPathCommands(testNode, tempScriptPath, loadScriptCallBack);\n}\n\nexport async function generateAndLoadATGTests(testNode: testNodeType) {\n  // This can be called for any node, including environment nodes\n  // In all cases, we need to do the following:\n  //  - Call atg <-e -u -s options> temp.tst  [creates tests]\n  //  - Call loadTestScriptIntoEnvironment() to do the actual load\n\n  // Other points:\n  //   - Use a temporary filename and ensure we delete it.\n  //   - ATG can be slowish, so we need a status dialog\n\n  const enclosingDirectory = path.dirname(testNode.enviroPath);\n  const timeStamp = Date.now().toString();\n  const tempScriptPath = path.join(\n    enclosingDirectory,\n    `vcast-${timeStamp}.tst`\n  );\n\n  vectorMessage(\"Generating ATG script file ...\");\n  // ignore the testName (if any)\n  testNode.testName = \"\";\n\n  runATGCommands(testNode, tempScriptPath, loadScriptCallBack);\n}\n\nexport enum testStatus {\n  didNotRun,\n  compileError,\n  linkError,\n  passed,\n  failed,\n}\n\nexport function openTestFileAndErrors(testNode: testNodeType): testStatus {\n  // used to show the coded test source file and associated\n  // compile or link errors when a coded test \"add\" or execution fails.\n\n  // because vcast does not give us a unique error code for coded test\n  // compile or link errors, we need to check the timestamps of the\n  // the ACOMPILE.LIS and AALINKER.LIS to figure out which one is newer\n\n  let returnStatus: testStatus = testStatus.compileError;\n\n  const compileErrorFile = path.join(testNode.enviroPath, \"ACOMPILE.LIS\");\n  const linkErrorFile = path.join(testNode.enviroPath, \"AALINKER.LIS\");\n\n  let compileModTime = 0;\n  if (fs.existsSync(compileErrorFile)) {\n    compileModTime = fs.statSync(compileErrorFile).mtime.getTime();\n  }\n  let linkModTime = 0;\n  if (fs.existsSync(linkErrorFile)) {\n    linkModTime = fs.statSync(linkErrorFile).mtime.getTime();\n  }\n\n  let fileToDisplay = compileErrorFile;\n  if (compileModTime < linkModTime) {\n    fileToDisplay = linkErrorFile;\n    returnStatus = testStatus.linkError;\n  }\n\n  openFileWithLineSelected(testNode.testFile, testNode.testStartLine - 1);\n  openFileWithLineSelected(fileToDisplay, 0, vscode.ViewColumn.Beside);\n\n  return returnStatus;\n}\n\nexport async function closeAnyOpenErrorFiles() {\n  // this function will close any left over ACOMPILE.LIS or AALINKER.LIS files\n  // from the last test execution.\n  for (let editor of vscode.window.visibleTextEditors) {\n    if (\n      editor.document.fileName.endsWith(\"ACOMPILE.LIS\") ||\n      editor.document.fileName.endsWith(\"AALINKER.LIS\")\n    ) {\n      await vscode.window.showTextDocument(editor.document.uri, {\n        preview: false,\n        viewColumn: editor.viewColumn,\n      });\n      await vscode.commands.executeCommand(\n        \"workbench.action.closeActiveEditor\"\n      );\n    }\n  }\n}\n\nexport function getEnviroNameFromFile(filePath: string): string | undefined {\n  // This function will extract the enviro name from\n  // the ENVIRO.NAME: <name> line of the provided file\n\n  let enviroName: string | undefined = undefined;\n\n  // load the contents of filePath, find the ENVIRO.NAME: line\n  // and return the value after the colon\n  const fileContents = fs.readFileSync(filePath).toString();\n  const lines = fileContents.split(\"\\n\");\n  for (let line of lines) {\n    if (line.startsWith(\"ENVIRO.NAME:\")) {\n      enviroName = line.split(\":\")[1].trim();\n      break;\n    }\n  }\n\n  return enviroName;\n}\n\nfunction getTestArgument(testID: string, withFlag: boolean): string {\n  // This function will generate the --test argument for the vpython command\n  // with or without the --test flag based on the withFlag parameter\n\n  let testArgument = undefined;\n  if (testID.length > 0) {\n    // we need to strip the \"path part\" of the environment directory from the test ID\n    // which is the part before the '|' and after the ':'\n    const enviroPath = testID.split(\"|\")[0].split(\"vcast:\")[1];\n\n    // now the path to the environment might have a slash if the environment is nested or not\n    // so we need to handle that case, since we only want the environment name\n    let enviroName = enviroPath;\n    if (enviroName.includes(\"/\")) {\n      enviroName = enviroPath.substring(\n        enviroPath.lastIndexOf(\"/\") + 1,\n        enviroPath.length\n      );\n    }\n    // The -test arguments should be the enviro name along with everything after the |\n    testArgument = withFlag ? \"--test=\" : \"\";\n    testArgument += `\"${enviroName}|${testID.split(\"|\")[1]}\"`;\n  }\n\n  return testArgument || \"\";\n}\n\nfunction getCommonCommandString(\n  command: vcastCommandType,\n  enviroPath: string\n): string {\n  return `${vPythonCommandToUse} ${globalTestInterfacePath} --mode=${command.toString()} --clicast=${clicastCommandToUse} --path=${enviroPath}`;\n}\n\nexport function getVcastInterfaceCommand(\n  command: vcastCommandType,\n  enviroPath: string,\n  testID: string = \"\"\n): string {\n  //\n  // This function generates the vpython command to execute\n  //\n  // enviroPath is the absolute path to the environnement directory\n  // testID is contains the string that uniquely identifies the node, something like:\n  //    vcast:TEST|manager.Manager::PlaceOrder.test-Manager::PlaceOrder\n  //    vcast:unitTests/MANAGER|manager.Manager::PlaceOrder.test-Manager::PlaceOrder\n\n  // we always include --clicast rather than checking if it is needed or not\n  const commandToRun = getCommonCommandString(command, enviroPath);\n  const testArgument = getTestArgument(testID, true);\n  return `${commandToRun} ${testArgument}`;\n}\n\n/**\n * Generates the command to interface with MCDC coverage tools.\n *\n * @param {vcastCommandType} command - The type of command to execute.\n * @param {string} enviroPath - The path to the environment.\n * @param {string} unitName - The unit name.\n * @param {number} lineNumber - The specific line number for the MCDC report.\n * @returns {string} The fully constructed command string to execute the MCDC interface.\n */\nexport function getVcastInterfaceCommandForMCDC(\n  command: vcastCommandType,\n  enviroPath: string,\n  unitName: string,\n  lineNumber: number\n) {\n  const commandToRun = `${vPythonCommandToUse} ${globalTestInterfacePath}  --mode=${command.toString()} --clicast=${clicastCommandToUse} --path=${enviroPath}`;\n  let optionsDict: { [command: string]: string | number } = {};\n  optionsDict[\"unitName\"] = unitName;\n  optionsDict[\"lineNumber\"] = lineNumber;\n  const jsonOptions: string = JSON.stringify(optionsDict).replaceAll(\n    '\"',\n    '\\\\\"'\n  );\n  const testArgument = `--options=\"${jsonOptions}\"`;\n  return `${commandToRun} ${testArgument}`;\n}\n\n/**\n * Generates the command to get all mcdc coverage lines in an env.\n * @param enviroName Name of env.\n * @returns Command to get all mcdc coverage lines in an env.\n */\nexport function getMCDCLineCoverageCommand(enviroPath: string) {\n  const commandToRun = `${vPythonCommandToUse} ${globalMCDCReportPath}  --env=${enviroPath}`;\n  return commandToRun;\n}\n\nexport function getClientRequestObject(\n  command: vcastCommandType,\n  path: string,\n  testID: string = \"\"\n): clientRequestType {\n  //\n  // Rather than adding another \"dontUseQuotes\" param I just strip them here\n  const testArgWithQuotes = getTestArgument(testID, false);\n  const testArgWithoutQuotes = testArgWithQuotes.substring(\n    1,\n    testArgWithQuotes.length - 1\n  );\n  const requestObject: clientRequestType = {\n    command: command,\n    path: path,\n    test: testArgWithoutQuotes,\n  };\n\n  return requestObject;\n}\n\nexport function getRebuildOptionsString(): string {\n  // this returns the --options=jsonString that is used to rebuild the environment\n\n  // read the settings that affect enviro build\n  const settings = vscode.workspace.getConfiguration(\"vectorcastTestExplorer\");\n  let optionsDict: { [command: string]: string | boolean } = {};\n  optionsDict[\"ENVIRO.COVERAGE_TYPE\"] = settings.get(\n    \"build.coverageKind\",\n    \"None\"\n  );\n  const jsonOptions: string = JSON.stringify(optionsDict);\n\n  return jsonOptions;\n}\n\n/**\n * Function to retrieve the Combobox items for the webview when creating an env in a project\n * @param projectFile Path to Project File\n * @returns 2 Lists containing the project compilers and testsuites\n */\nexport function getWebviewComboboxItems(projectFile: string) {\n  let comboBoxList: { compilers: string[]; testsuites: string[] } = {\n    compilers: [],\n    testsuites: [],\n  };\n  let compilerList: string[] = [];\n  let testsuiteList: string[] = [];\n\n  const enviroData = globalProjectDataCache.get(projectFile);\n\n  if (enviroData) {\n    for (let [, envData] of enviroData) {\n      if (!compilerList.includes(envData.compiler.name)) {\n        compilerList.push(envData.compiler.name);\n      }\n\n      for (let testsuiteName of envData.compiler.testsuites) {\n        if (!testsuiteList.includes(testsuiteName)) {\n          testsuiteList.push(testsuiteName);\n        }\n      }\n    }\n  }\n\n  // Include empty / unused compilers\n  for (let compiler of globalUnusedCompilerList) {\n    if (!compilerList.includes(compiler.displayName)) {\n      compilerList.push(compiler.displayName);\n    }\n  }\n\n  // Include empty / unused testSuites\n  for (let testsuite of globalUnusedTestsuiteList) {\n    const testsuiteName = path.basename(testsuite.displayName);\n    if (!testsuiteList.includes(testsuiteName)) {\n      testsuiteList.push(testsuiteName);\n    }\n  }\n\n  comboBoxList.compilers = compilerList;\n  comboBoxList.testsuites = testsuiteList;\n\n  return comboBoxList;\n}\n\n/**\n * Checks if the current Environment is part of a Project or not\n * @param enviroPath Path to Environment\n * @returns True if the Environment is part of a Project, False otherwise\n */\nexport function envIsEmbeddedInProject(enviroPath: string) {\n  for (let envData of environmentDataCache.values()) {\n    if (envData.buildDirectory === enviroPath && envData.projectPath !== \"\") {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Checks if the current Environment is part of a Project or not\n * @param enviroPath Path to Environment\n * @returns True if the Environment is part of a Project, False otherwise\n */\nexport function checkIfAnyProjectsAreOpened() {\n  for (let envData of environmentDataCache.values()) {\n    if (envData.projectPath !== \"\") {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Returns the Project file name and the Root path of the Project based\n * on the full path of the Project File\n * @param fullPath Full Path to the Project File\n */\nexport function getVcmRoot(fullPath: string) {\n  // pre-compile the regex once\n  const vcmRe = /(.*\\/)([^/]+\\.vcm)(?:\\/.*)?$/;\n\n  // use exec() instead of match() (sonarcloud)\n  const match = vcmRe.exec(fullPath);\n\n  if (match) {\n    // match[1] is the directory (with trailing slash), match[2] is the .vcm name\n    const rootPath = match[1].replace(/\\/$/, \"\");\n    const vcmName = match[2];\n    return { rootPath, vcmName };\n  }\n\n  return null;\n}\n/**\n * Opens the Project based on the Environment path if the Environment is part of a Project\n * @param enviroPath Path to the Environment\n */\nexport async function openProjectFromEnviroPath(enviroPath: string) {\n  for (let envData of environmentDataCache.values()) {\n    if (envData.buildDirectory === enviroPath) {\n      const result = getVcmRoot(envData.projectPath);\n      if (result) {\n        const { rootPath, vcmName } = result;\n        await openProjectInVcast(rootPath, vcmName);\n      }\n    }\n  }\n}\n\n/**\n * Checks if a Environment is build in mutle Testsuites\n * @param enviroName Name of the Environment\n * @returns True, if the Environment is build in multiple Testsuites, False otherwise\n */\nexport async function checkIfEnvironmentIsBuildMultipleTimes(\n  enviroName: string\n) {\n  let count = 0;\n  for (let envData of environmentDataCache.values()) {\n    const currentEnviroName = path.basename(envData.buildDirectory);\n    if (enviroName === currentEnviroName && envData.isBuilt === true) {\n      count++;\n    }\n  }\n  return count > 1;\n}\n\n/**\n * Deletes all build folders for an environment within a project except for the one\n * corresponding to the current Testsuite. When an environment is built in multiple\n * Testsuites, synchronization issues can occur during project updates. This function\n * removes the other build folders so that the project update can proceed with\n * only the current environment build.\n *\n * @param enviroPath - The file system path of the environment that is being updated.\n */\nexport async function deleteOtherBuildFolders(\n  enviroPath: string\n): Promise<void> {\n  const givenEnviroName = path.basename(enviroPath);\n  for (let envData of environmentDataCache.values()) {\n    const currentEnviroPath = envData.buildDirectory;\n    const currentEnviroName = path.basename(currentEnviroPath);\n    if (\n      givenEnviroName === currentEnviroName &&\n      currentEnviroPath !== enviroPath &&\n      envData.isBuilt === true\n    ) {\n      // Normalize path to use forward slashes for a consistent enviroNodeID\n      const normalizedCurrentEnviroPath = currentEnviroPath.replace(/\\\\/g, \"/\");\n      const enviroNodeID = \"vcast:\" + normalizedCurrentEnviroPath;\n\n      const enviroData: environmentNodeDataType = getEnviroNodeData(\n        normalizedCurrentEnviroPath\n      );\n\n      await cleanProjectEnvironment(\n        enviroPath,\n        enviroNodeID,\n        enviroData.projectPath,\n        enviroData.displayName\n      );\n    }\n  }\n}\n\n/**\n * Checks if all Testsuites from the project are also present in the test pane\n * If Testsuites are empty, they will be created here\n */\nexport function ensureTestsuiteNodes() {\n  globalUnusedTestsuiteList.forEach((item) => {\n    const parts = item.displayName.split(\"/\");\n    if (parts.length !== 2) {\n      vectorMessage(`Invalid testsuite format: ${item.displayName}`);\n      return;\n    }\n\n    const compilerName = parts[0];\n    const testsuiteName = parts[1];\n    const projectFile = item.projectFile;\n\n    if (!projectFile) {\n      vectorMessage(\n        `Testsuite \"${testsuiteName}\" could not be connected with a Project`\n      );\n      return;\n    }\n\n    // Find the project node from the projectFile\n    let projectNode: vcastTestItem | undefined =\n      globalProjectMap.get(projectFile);\n\n    if (!projectNode) {\n      vectorMessage(`No project node found for \"${projectFile}\"`);\n      return;\n    }\n\n    // Search for the compiler node only inside this project node\n    let compilerNode: vcastTestItem | undefined;\n    projectNode.children.forEach((child) => {\n      const testItem = child as vcastTestItem;\n      if (\n        testItem.nodeKind === nodeKind.compiler &&\n        typeof testItem.label === \"string\" &&\n        testItem.label === compilerName\n      ) {\n        compilerNode = testItem;\n      }\n    });\n\n    if (!compilerNode) {\n      vectorMessage(\n        `No compiler node found for \"${compilerName}\" in project \"${projectNode.label}\"`\n      );\n      return;\n    }\n\n    // Create the testsuite node if it doesn\u2019t exist\n    const testsuiteNodeId = `${compilerNode.id}/${testsuiteName}`;\n    let testsuiteNode = compilerNode.children.get(\n      testsuiteNodeId\n    ) as vcastTestItem;\n\n    if (!testsuiteNode) {\n      testsuiteNode = globalController.createTestItem(\n        testsuiteNodeId,\n        testsuiteName\n      ) as vcastTestItem;\n      testsuiteNode.nodeKind = nodeKind.testsuite;\n      compilerNode.children.add(testsuiteNode);\n    }\n  });\n}\n\n/**\n * Ensures that all compiler nodes from the globalUnusedCompilerList are present\n * in the test pane. Each item in globalUnusedCompilerList is expected to have a\n * displayName property (e.g. \"GNU\") and the name of the projectFile.\n * If a compiler node is not found, it is created.\n */\nexport function ensureCompilerNodes() {\n  globalUnusedCompilerList.forEach((item) => {\n    const compilerName = item.displayName; // e.g. \"GNU\"\n    const projectFile = item.projectFile; // e.g. \"/path/to/project.vcm\"\n\n    // Attempt to find the project node.\n    // If you have a globalProjectMap keyed by project file, use it:\n    let projectNode: vcastTestItem | undefined =\n      globalProjectMap.get(projectFile);\n    if (!projectNode) {\n      // If project node doesn't exist, create a new one.\n      // This gets triggered when we have a project without envs but with a compiler\n      const projectDisplayName = path.basename(projectFile);\n      projectNode = globalController.createTestItem(\n        projectFile,\n        projectDisplayName\n      ) as vcastTestItem;\n      projectNode.nodeKind = nodeKind.project;\n      globalController.items.add(projectNode);\n      globalProjectMap.set(projectFile, projectNode);\n    }\n\n    // If no project node exists, do nothing.\n    if (!projectNode) {\n      vectorMessage(\n        `Project node for \"${projectFile}\" not found. Skipping compiler \"${compilerName}\".`\n      );\n      return;\n    }\n\n    // Check if a compiler node with the given displayName already exists under the project node.\n    let compilerNode: vcastTestItem | undefined;\n    projectNode.children.forEach((child) => {\n      const testItem = child as vcastTestItem;\n      if (\n        testItem.nodeKind === nodeKind.compiler &&\n        typeof testItem.label === \"string\" &&\n        testItem.label === compilerName\n      ) {\n        compilerNode = testItem;\n      }\n    });\n\n    // If the compiler node doesn't exist, create and add it.\n    if (!compilerNode) {\n      // Construct an ID for the compiler node. For example, use the projectFile and compilerName.\n      const compilerNodeId = `${projectFile}/${compilerName}`;\n      compilerNode = globalController.createTestItem(\n        compilerNodeId,\n        compilerName\n      ) as vcastTestItem;\n      compilerNode.nodeKind = nodeKind.compiler;\n      projectNode.children.add(compilerNode);\n    }\n  });\n}\n\nexport function getLevelFromNodeId(path: string) {\n  const marker = \".vcm\";\n  const markerIndex = path.lastIndexOf(marker);\n\n  if (markerIndex === -1) {\n    // Marker not found; handle as needed.\n    return { projectName: \"\", level: \"\" };\n  }\n\n  // Determine the project name by finding the preceding slash (if any)\n  const slashBefore = path.lastIndexOf(\"/\", markerIndex);\n  let projectName;\n  if (slashBefore === -1) {\n    projectName = path.substring(0, markerIndex + marker.length);\n  } else {\n    projectName = path.substring(slashBefore + 1, markerIndex + marker.length);\n  }\n\n  // Start right after the marker; skip a slash if present\n  let remainderStart = markerIndex + marker.length;\n  if (path[remainderStart] === \"/\" || path[remainderStart] === \"\\\\\") {\n    remainderStart++;\n  }\n  const level = path.substring(remainderStart);\n\n  return { projectName, level };\n}\n", "import * as vscode from \"vscode\";\nimport * as fs1 from \"fs\";\nimport * as fs from \"fs/promises\";\nimport * as path from \"path\";\nimport { spawn } from \"child_process\";\n\nimport { globalController, globalProjectDataCache } from \"../../testPane\";\nimport { vectorMessage } from \"../../messagePane\";\nimport { normalizePath } from \"../../utilities\";\nimport { clicastCommandToUse } from \"../../vcastInstallation\";\n\n/**\n * Generates a new CFG file for the given compiler by invoking VectorCAST's clicast tool,\n * parses out the path of the generated CFG, copies it into the specified compilers directory,\n * and returns the full path to the copied file.\n *\n * @param compiler - The compiler template (e.g. 'VXSIM64_RTP_WORKBENCH_CPP').\n * @param projectCompilerPath - Absolute path to the 'compilers' directory in the project.\n * @returns The absolute file path of the copied CFG, or undefined if generation failed.\n */\nexport async function createNewCFGFromCompiler(\n  compiler: string,\n  projectCompilerPath: string\n): Promise<string | undefined> {\n  // Make sure compilers dir exists\n  if (!fs1.existsSync(projectCompilerPath)) {\n    await vscode.workspace.fs.createDirectory(\n      vscode.Uri.file(projectCompilerPath)\n    );\n  }\n\n  // spawn clicast *in* the compilers folder\n  const args = [\"-lc\", \"template\", compiler];\n\n  // This is checked at the beginning when initializing the data, but to be sure\n  if (!fs1.existsSync(clicastCommandToUse)) {\n    vectorMessage(`Clicast was not found. Cancelling compiler operation.`);\n    return;\n  }\n\n  const proc = spawn(clicastCommandToUse, args, {\n    cwd: projectCompilerPath,\n    stdio: [\"ignore\", \"inherit\", \"inherit\"],\n    windowsHide: true,\n  });\n\n  // wait for it to finish\n  const code: number = await new Promise((res) => proc.on(\"close\", res));\n  if (code !== 0) {\n    vscode.window.showErrorMessage(\n      `clicast exited with code ${code} for ${compiler}`\n    );\n    return;\n  }\n\n  // the default CFG is now at compilers/CCAST_.CFG\n  const generated = path.join(projectCompilerPath, \"CCAST_.CFG\");\n  if (!fs1.existsSync(generated)) {\n    vscode.window.showErrorMessage(`Expected CFG not found at ${generated}`);\n    return;\n  }\n\n  vectorMessage(`Generated and moved CFG to ${generated}`);\n  return generated;\n}\n/**\n * Searches the entire globalController for a test item with the specified id.\n * @param targetId The id of the test item to search for.\n * @returns The test item if found, otherwise undefined.\n */\nexport function findTestItemInController(\n  targetId: string\n): vscode.TestItem | undefined {\n  let found: vscode.TestItem | undefined;\n  globalController.items.forEach((item) => {\n    found ??= findTestItemRecursively(item, targetId);\n  });\n  return found;\n}\n\n/**\n * Recursive helper that searches a test item and its children for a given id.\n * @param item The test item to search.\n * @param targetId The id of the test item to search for.\n * @returns\n */\nfunction findTestItemRecursively(\n  item: vscode.TestItem,\n  targetId: string\n): vscode.TestItem | undefined {\n  if (item.id === targetId) {\n    return item;\n  }\n  let found: vscode.TestItem | undefined;\n  item.children.forEach((child) => {\n    found ??= findTestItemRecursively(item, targetId);\n  });\n  return found;\n}\n\n/**\n * Generates a cryptographically-strong random nonce string.\n *\n * We use this nonce to whitelist our injected <script> tags in the Webview's\n * Content-Security-Policy. By including a fresh, unpredictable nonce on each\n * load and referencing it both in the CSP header (`script-src 'nonce-\u2026'`)\n * and in the `<script nonce=\"\u2026\">` attributes, we ensure:\n *   1. Only the scripts we explicitly ship and inject can execute.\n *   2. Inline scripts or any third-party code not bearing the correct nonce\n *      are blocked by the browser sandbox.\n *\n * @returns a 32-character alphanumeric nonce\n */\nexport function getNonce(): string {\n  let text = \"\";\n  const chars =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 32; i++) {\n    text += chars.charAt(Math.floor(Math.random() * chars.length));\n  }\n  return text;\n}\n\n/**\n * Resolves the on\u2010disk base directory for our `src/manage/webviews` folder.\n *\n * 1. Tries the normal location under the installed extension:\n *      <extensionPath>/src/manage/webviews\n * 2. If that doesn\u2019t exist, checks if we're running in the E2E test harness\n *    under \"<...>/tests/internal/e2e/test/extension\". If so, strips off\n *    that suffix and uses the repo root to locate:\n *      <repoRoot>/src/manage/webviews\n * 3. If neither exists, throws an error.\n *\n * @param context The ExtensionContext, used to read `extensionPath`.\n * @returns The filesystem path to the `webviews` folder.\n * @throws If no valid `webviews` folder can be found.\n */\nexport function resolveWebviewBase(context: vscode.ExtensionContext): string {\n  // 1) Normal installed extension layout\n  const normal = path.join(context.extensionPath, \"src\", \"manage\", \"webviews\");\n  if (fs1.existsSync(normal)) {\n    return normal;\n  }\n\n  // 2) Fallback for E2E tests under tests/internal/e2e/test/extension\n  const marker = path.join(\"tests\", \"internal\", \"e2e\", \"test\", \"extension\");\n  const extPath = context.extensionPath;\n  const idx = extPath.indexOf(marker);\n  if (idx !== -1) {\n    const repoRoot = extPath.slice(0, idx);\n    const fallback = path.join(repoRoot, \"src\", \"manage\", \"webviews\");\n    if (fs1.existsSync(fallback)) {\n      return fallback;\n    }\n  }\n\n  throw new Error(\n    `Could not resolve webview base directory. Tried:\\n` +\n      `  ${normal}\\n` +\n      (marker && extPath.indexOf(marker) !== -1\n        ? `  ${path.join(extPath.slice(0, extPath.indexOf(marker)), \"src/manage/webviews\")}\\n`\n        : \"\") +\n      `Please ensure that 'src/manage/webviews' exists either under the extension path or under the repo root.`\n  );\n}\n\n/**\n * Adds environments that are part of a managed project (from globalProjectDataCache).\n * @param globalProjectDataCache A Map containing project data.\n * @param projectPathDirList A list to hold project directory paths.\n * @param environmentList A list to push environment data.\n * @param workspaceRoot The workspace root directory path.\n */\nexport function addManagedEnvironments(\n  projectPathDirList: string[],\n  environmentList: any[],\n  workspaceRoot: string\n): void {\n  for (const [projectPath, projectData] of globalProjectDataCache) {\n    vectorMessage(`Processing project: ${projectPath} ...`);\n    projectPathDirList.push(projectPath.split(\".vcm\")[0]);\n    for (const [buildDirectory, enviroData] of projectData) {\n      environmentList.push({\n        projectPath: normalizePath(projectPath),\n        buildDirectory: normalizePath(buildDirectory),\n        isBuilt: enviroData.isBuilt,\n        displayName: enviroData.displayName, // e.g. \"GNU/BlackBox/ENV\"\n        workspaceRoot: normalizePath(workspaceRoot),\n      });\n    }\n  }\n}\n\ninterface CompilerList {\n  [tag: string]: string;\n}\n\nexport const compilerTagList: CompilerList = {};\n\n/**\n * Runs `grep \"C_COMPILER_TAG\"` on the VectorCAST C_TEMPLATES.DAT file\n * and updates the exported `compilerList` in-place.\n */\nexport async function setCompilerList(): Promise<CompilerList> {\n  if (!process.env.VECTORCAST_DIR) {\n    throw new Error(\"VECTORCAST_DIR environment variable is not set\");\n  }\n\n  const datPath = normalizePath(\n    path.join(process.env.VECTORCAST_DIR, \"DATA\", \"C_TEMPLATES.DAT\")\n  );\n\n  const fileContents = await fs.readFile(datPath, \"utf-8\");\n\n  const lines = fileContents\n    .split(/\\r?\\n/)\n    .map((line) => line.trim())\n    .filter((line) => line.includes(\"C_COMPILER_TAG\"));\n\n  Object.keys(compilerTagList).forEach((key) => {\n    delete compilerTagList[key];\n  });\n\n  lines.forEach((line) => {\n    const parts = line.split(\": \").map((p) => p.trim());\n    const tag = parts[1];\n    const name = parts.length >= 3 ? parts.slice(2).join(\": \") : parts[1];\n    compilerTagList[name] = tag;\n  });\n\n  return compilerTagList;\n}\n\n// Simple list with ignored projects in case something goes wrong but we can still continue with other projects\nexport const ignoreEnvsInProject: string[] = [];\n", "import { normalizePath, quote } from \"./utilities\";\n\nexport interface environmentNodeDataType {\n  projectPath: string;\n  buildDirectory: string;\n  isBuilt: boolean;\n  displayName: string;\n  workspaceRoot: string;\n}\n\n// This is a lookup table for all environment nodes\n// in the test case tree.  The key is the environmentPath\n// and the data is an environmentDataType\nexport const environmentDataCache = new Map();\n\nexport function saveEnviroNodeData(\n  enviroPath: string,\n  data: environmentNodeDataType\n) {\n  // normalize the path since we use it as a key\n  environmentDataCache.set(normalizePath(enviroPath), data);\n}\n\nexport function getEnviroNodeData(enviroPath: string): environmentNodeDataType {\n  // normalize the path since we use it as a key\n  return environmentDataCache.get(normalizePath(enviroPath));\n}\n\nexport function clearEnviroDataCache() {\n  environmentDataCache.clear();\n}\n\nexport const compoundOnlyString = \" [compound only]\";\n\nexport interface testNodeType {\n  enviroNodeID: string;\n  enviroPath: string; // the full path including the enviro directory\n  enviroName: string; // the directory name\n  unitName: string;\n  functionName: string;\n  testName: string;\n  // initially will be used for coded-tests\n  testFile: string;\n  testStartLine: number;\n}\n// this is a lookup table for the nodes in the test tree\n// the key is the nodeID, the data is an testNodeType\nexport const testNodeCache = new Map();\n\n// This function is used to create the top-level environment\n// node in the cache, all the other nodes will inherit from\n// this one and add their own data\nexport function createTestNodeInCache(\n  enviroNodeID: string,\n  enviroPath: string,\n  enviroName: string,\n  unitName: string = \"\",\n  functionName: string = \"\",\n  testName: string = \"\",\n  testFile: string = \"\",\n  testStartLine: number = 1\n) {\n  let testNode: testNodeType = {\n    enviroNodeID: enviroNodeID,\n    enviroPath: enviroPath,\n    enviroName: enviroName,\n    unitName: unitName,\n    functionName: functionName,\n    testName: testName,\n    testFile: testFile,\n    testStartLine: testStartLine,\n  };\n  // set will over-write if nodeID exists\n  testNodeCache.set(enviroNodeID, testNode);\n}\n\nexport function addTestNodeToCache(nodeID: string, testNode: testNodeType) {\n  // set will over-write if nodeID exists\n  testNodeCache.set(nodeID, testNode);\n}\n\nexport function duplicateTestNode(nodeID: string) {\n  // this will create a copy of an existing test node\n  // this is ued for child nodes where we want the same enviro,\n  // unit etc for the lower levels\n  const existingNode = testNodeCache.get(nodeID);\n  return JSON.parse(JSON.stringify(existingNode));\n}\n\nexport function removeNodeFromCache(nodeID: string) {\n  testNodeCache.delete(nodeID);\n}\n\nexport function nodeIsInCache(nodeID: string) {\n  return testNodeCache.has(nodeID);\n}\n\nexport function clearTestNodeCache() {\n  testNodeCache.clear();\n}\n\nexport function getTestNode(nodeID: string): testNodeType {\n  return testNodeCache.get(nodeID);\n}\n\nexport function getEnviroNodeIDFromID(nodeID: string): string {\n  return testNodeCache.get(nodeID).enviroNodeID;\n}\n\nexport function getEnviroPathFromID(nodeID: string): string {\n  // Need to check first if the nodeID is in the cache, otherwise .get will throw an error\n  const node = testNodeCache.get(nodeID);\n  return node?.enviroPath;\n}\n\nexport function getEnviroNameFromID(nodeID: string): string {\n  return testNodeCache.get(nodeID).enviroName;\n}\n\nexport function getUnitNameFromID(nodeID: string): string {\n  return testNodeCache.get(nodeID).unitName;\n}\n\nexport function getFunctionNameFromID(nodeID: string): string {\n  return testNodeCache.get(nodeID).functionName;\n}\n\nexport function getTestNameFromID(nodeID: string): string {\n  const testName = testNodeCache.get(nodeID).testName;\n  return testName.replace(compoundOnlyString, \"\");\n}\n\nfunction getArgumentString(argString: string, usingServer: boolean) {\n  // This function will either quote or not quote the argument string\n  // based on whether the command is being run using the vcast data server\n  // For normal calls to clicast, we need to quote the subprogram and test strings, to\n  // \"protect\" special characters [ e.g. <,>,(,) ] from the shell.\n  // However, when the server is running we cannot do this as the server\n  // will interpret the quotes as part of the string.\n  //\n  // It is up to the caller to set the \"usingServer\" flag correctly, because\n  // even when the server is running, we sometimes call clicast directly\n  // for things like generate basis path etc.\n\n  if (usingServer) {\n    return argString;\n  } else {\n    return quote(argString);\n  }\n}\n\nexport function getClicastArgsFromTestNodeAsList(\n  testNode: testNodeType,\n  usingServer: boolean = false\n): string[] {\n  // this function will create the enviro, unit, subprogram, and test\n  // arguments as a list, since spawn for example requires an arg list.\n\n  let returnList = [];\n  returnList.push(`-e${testNode.enviroName}`);\n  if (testNode.unitName.length > 0 && testNode.unitName != \"not-used\")\n    returnList.push(`-u${testNode.unitName}`);\n\n  // we need the quotes on the names to handle <<COMPOUND>>/<<INIT>>/parenthesis\n  if (testNode.functionName.length > 0)\n    returnList.push(\n      `-s${getArgumentString(testNode.functionName, usingServer)}`\n    );\n  if (testNode.testName.length > 0) {\n    const nameToUse = testNode.testName.replace(compoundOnlyString, \"\");\n    returnList.push(`-t${getArgumentString(nameToUse, usingServer)}`);\n  }\n\n  return returnList;\n}\n\nexport function getClicastArgsFromTestNode(\n  testNode: testNodeType,\n  usingServer: boolean = false\n): string {\n  // this function will create the enviro, unit, subprogram,\n  // and test arg string for clicast calls that need a arg string\n\n  const argList = getClicastArgsFromTestNodeAsList(testNode, usingServer);\n  return argList.join(\" \");\n}\n", "import * as vscode from \"vscode\";\nimport { spawn } from \"child_process\";\n\nimport {\n  sendPortNumberToLanguageServer,\n  sendServerStateToLanguageServer,\n} from \"./client\";\n\nimport { useServerOption } from \"./configuration\";\n\nimport { errorLevel, vectorMessage } from \"./messagePane\";\nimport { refreshAllExtensionData } from \"./testPane\";\n\nimport {\n  getGlobalEnviroDataServerPath,\n  isEnviroDataServerAvailable,\n  toolVersionType,\n  vcastInstallationVersion,\n  vPythonCommandToUse,\n} from \"./vcastInstallation\";\n\nimport {\n  serverIsAlive,\n  setGLobalServerState,\n  setLogServerCommandsCallback,\n  setServerPort,\n  setTerminateServerCallback,\n  sendShutdownToServer,\n} from \"../src-common/vcastServer\";\n\nconst os = require(\"os\");\nconst fs = require(\"fs\");\n\nlet serverStatusBarObject: vscode.StatusBarItem;\n\nasync function terminateServerProcessing(errorText: string) {\n  // This functions gets called by server transmitCommand()\n  // when there is a fatal server error.  In this case, we\n  // stop the server, refresh the test pane, and display\n  // a pop up error message to tell the user we have fallen\n  // back to non server mode.\n\n  const errorMessage = `Fatal VectorCAST Data Server error, disabling server mode for this session.\\n   [${errorText}]`;\n  vectorMessage(errorMessage);\n\n  await stopServer();\n\n  await refreshAllExtensionData();\n\n  vscode.window.showErrorMessage(\n    errorMessage +\n      \"Disabling Server Mode for this Session.  \" +\n      \"The previous command was discarded, and the \" +\n      \"Testing Pane has been reloaded\"\n  );\n}\n\nfunction logServerCommands(text: string) {\n  // This function gets called by server - transmitCommand ()\n  // It is implemented as a callback because the server is\n  // used by both the core extension and the language server\n  vectorMessage(text, errorLevel.trace);\n}\n\nexport enum serverStateType {\n  stopped = \"stopped\",\n  running = \"running\",\n}\n\nlet enviroDataServerProcessState: serverStateType = serverStateType.stopped;\n\n// when we start a new server instance we save away the vcast version\n// so that we don't stop and restart if the tool version\n// has not changed when we see a \"start\" command\nlet serverVersion: toolVersionType = { version: 0, servicePack: 0 };\n\nlet serverProcessObject: any = undefined;\n// used to control the availability of the openLogFile command\nlet serverLogFilePath: string = \"\";\n\nexport function displayServerLog() {\n  // When the server is running the command:\n  // \"VectorCAST: Open the VectorCAST Data Server log\" will call this function\n  if (serverLogFilePath.length > 0) {\n    vscode.workspace.openTextDocument(serverLogFilePath).then((doc) => {\n      vscode.window.showTextDocument(doc);\n    });\n  }\n}\n\nexport async function deleteServerLog() {\n  if (fs.existsSync(serverLogFilePath)) {\n    fs.unlinkSync(serverLogFilePath);\n  }\n}\n\nasync function completeServerStartup(serverCWD: string, portNumber: number) {\n  // This function is called when the server has started and we have the port number\n  // Note that the \"started\" message is sent to the\n\n  setServerPort(portNumber);\n\n  if (await serverIsAlive()) {\n    vectorMessage(\n      `Started VectorCAST Data Server. Directory: ${serverCWD} | Port: ${portNumber} | PID: ${serverProcessObject.pid}`\n    );\n    enviroDataServerProcessState = serverStateType.running;\n    setGLobalServerState(true);\n    sendPortNumberToLanguageServer(portNumber);\n    sendServerStateToLanguageServer(true);\n    serverStatusBarObject.text = \"vDataServer On\";\n    serverVersion = vcastInstallationVersion;\n  } else {\n    vectorMessage(\n      `Error starting VectorCAST Data Server on port: ${portNumber}`\n    );\n    setGLobalServerState(false);\n    sendServerStateToLanguageServer(false);\n    serverStatusBarObject.text = \"vDataServer Off\";\n  }\n}\n\nfunction whereToStartServer(): string {\n  // if a workspace is open then we start the server in the root\n  // otherwise we start in the temp directory\n  let whatToReturn: string = \"\";\n  if (vscode.workspace.workspaceFolders) {\n    whatToReturn = vscode.workspace.workspaceFolders[0].uri.fsPath;\n  } else {\n    whatToReturn = os.tmpdir();\n  }\n  return whatToReturn;\n}\n\nasync function startServer() {\n  // This does the actual work of server startup\n\n  // we use spawn directly to control the detached and shell args\n  const vpythonArgs: string[] = [getGlobalEnviroDataServerPath()];\n  const serverCWD = whereToStartServer();\n  serverProcessObject = spawn(vPythonCommandToUse, vpythonArgs, {\n    shell: true,\n    cwd: serverCWD,\n  });\n\n  serverProcessObject.stdout.on(\"data\", function (data: any) {\n    const rawString = data.toString();\n    const lineArray = rawString.split(/[\\n\\r?]/);\n    for (const line of lineArray) {\n      // listen to the stdout to retrieve the port number\n      if (line.length > 0) {\n        // Note: this must match what is in vcastDataServer.py -> main()\n        if (line.startsWith(\" * vcastDataServer is starting on\")) {\n          const portString = line.split(\":\")[1];\n          const portNumber = parseInt(portString);\n          completeServerStartup(serverCWD, portNumber);\n        } else if (line.startsWith(\" * Server log file path:\")) {\n          serverLogFilePath = line.split(\"path:\")[1].trim();\n          // this call controls the availability of the \"openLogFile\" command\n          vscode.commands.executeCommand(\n            \"setContext\",\n            \"vectorcastTestExplorer.serverLogAvailable\",\n            fs.existsSync(serverLogFilePath)\n          );\n        }\n      }\n    }\n  });\n\n  serverProcessObject.on(\"exit\", function (exitCode: any) {\n    serverProcessObject = undefined;\n    if (exitCode == 0) {\n      vectorMessage(`VectorCAST Data Server exited successfully`);\n    } else {\n      vectorMessage(\n        `VectorCAST Data Server exited unexpectedly with code: ${exitCode}`\n      );\n    }\n    enviroDataServerProcessState = serverStateType.stopped;\n    serverStatusBarObject.text = \"vDataServer Off\";\n    setServerPort(0);\n    setGLobalServerState(false);\n  });\n}\n\nasync function stopServer() {\n  vectorMessage(\"Shutting down VectorCAST Data Server ...\");\n  // we send shutdown to the server, but it cannot respond because it \"ends\" itself\n  // which closes the socket ... which means we cannot read a response, so we just\n  // use the processID to check if it is \"gone\" ... which maybe is overkill\n\n  // failsafe check so that we don't get into an infinite loop\n  if (enviroDataServerProcessState == serverStateType.running) {\n    await sendShutdownToServer();\n    enviroDataServerProcessState = serverStateType.stopped;\n    serverStatusBarObject.text = \"vDataServer Off\";\n    setServerPort(0);\n    setGLobalServerState(false);\n    sendServerStateToLanguageServer(false);\n    // this call controls the availability of the \"openLogFile\" command\n    vscode.commands.executeCommand(\n      \"setContext\",\n      \"vectorcastTestExplorer.serverLogAvailable\",\n      false\n    );\n  }\n}\n\nexport async function serverProcessController(newState: serverStateType) {\n  //\n  // This function will be called to start and stop the vcast data server\n  // it should be called with the newState that the caller wants, and all\n  // of the edge cases will be handled here ... see inline comments\n  //\n  // Example call contexts\n  //     - initialization - to start the server\n  //     - user action to start or stop server\n  //     - useServer option change on or off\n  //\n\n  // if a server ia already running, check if is is the same version\n  // as the vcast installation, if so nothing needs to be done.\n  // There can be a miss-match if the server was started on initialization\n  // and then the user changes the vcast installation version\n  if (\n    enviroDataServerProcessState == serverStateType.running &&\n    newState == serverStateType.running\n  ) {\n    if (\n      vcastInstallationVersion.version == serverVersion.version &&\n      vcastInstallationVersion.servicePack == serverVersion.servicePack\n    ) {\n      vectorMessage(\"Using already running VectorCAST Data Server\");\n    } else {\n      await stopServer();\n    }\n  }\n\n  if (\n    enviroDataServerProcessState == serverStateType.running &&\n    newState == serverStateType.stopped\n  ) {\n    await stopServer();\n  }\n\n  if (\n    enviroDataServerProcessState == serverStateType.stopped &&\n    newState == serverStateType.running\n  ) {\n    await startServer();\n  }\n}\n\nexport async function toggleDataServerState() {\n  if (enviroDataServerProcessState == serverStateType.running) {\n    await serverProcessController(serverStateType.stopped);\n  } else {\n    await serverProcessController(serverStateType.running);\n  }\n}\n\nexport async function initializeServerState() {\n  // This function should be called:\n  //     - on startup\n  //     - when the vcast installation directory is changed\n  //     - when the useServer option is changed\n\n  if (useServerOption()) {\n    if (isEnviroDataServerAvailable()) {\n      serverStatusBarObject.show();\n      await serverProcessController(serverStateType.running);\n    } else {\n      serverStatusBarObject.hide();\n      await serverProcessController(serverStateType.stopped);\n    }\n  } else {\n    serverStatusBarObject.hide();\n    await serverProcessController(serverStateType.stopped);\n  }\n}\n\nexport async function initializeVcastDataServer() {\n  // This function is called once on extension startup to do\n  // all of the one-off server initialization tasks\n  setTerminateServerCallback(terminateServerProcessing);\n  setLogServerCommandsCallback(logServerCommands);\n\n  // we unconditionally create the status bar item and\n  // setup the callbacks but we only start the server\n  // and show the status bar if the vcast installation\n  // supports server mode\n  serverStatusBarObject = vscode.window.createStatusBarItem(\n    vscode.StatusBarAlignment.Left,\n    10\n  );\n  serverStatusBarObject.command =\n    \"vectorcastTestExplorer.toggleVcastServerState\";\n\n  // This takes care of starting the server and displaying\n  // the status bar item (if appropriate)\n  await initializeServerState();\n}\n"],
  "mappings": "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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/MA;AAAA,2CAAAE,SAAA;AAWA,IAAAA,QAAO,UAAU;AAAA;AAAA;;;ACXjB;AAAA;AAAA;AAcA,QAAI,KAAK;AACT,QAAI,UAAU,QAAQ,QAAQ;AAO9B,QAAI,sBAAsB;AAC1B,QAAI,mBAAmB;AAOvB,YAAQ,UAAU;AAClB,YAAQ,WAAW,EAAE,QAAQ,QAAQ;AACrC,YAAQ,cAAc;AACtB,YAAQ,YAAY;AACpB,YAAQ,aAAa,uBAAO,OAAO,IAAI;AACvC,YAAQ,SAAS;AACjB,YAAQ,QAAQ,uBAAO,OAAO,IAAI;AAGlC,iBAAa,QAAQ,YAAY,QAAQ,KAAK;AAS9C,aAAS,QAAS,MAAM;AACtB,UAAI,CAAC,QAAQ,OAAO,SAAS,UAAU;AACrC,eAAO;AAAA,MACT;AAGA,UAAI,QAAQ,oBAAoB,KAAK,IAAI;AACzC,UAAI,OAAO,SAAS,GAAG,MAAM,GAAG,YAAY;AAE5C,UAAI,QAAQ,KAAK,SAAS;AACxB,eAAO,KAAK;AAAA,MACd;AAGA,UAAI,SAAS,iBAAiB,KAAK,MAAM,EAAE,GAAG;AAC5C,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT;AASA,aAAS,YAAa,KAAK;AAEzB,UAAI,CAAC,OAAO,OAAO,QAAQ,UAAU;AACnC,eAAO;AAAA,MACT;AAEA,UAAI,OAAO,IAAI,QAAQ,GAAG,MAAM,KAC5B,QAAQ,OAAO,GAAG,IAClB;AAEJ,UAAI,CAAC,MAAM;AACT,eAAO;AAAA,MACT;AAGA,UAAI,KAAK,QAAQ,SAAS,MAAM,IAAI;AAClC,YAAIC,WAAU,QAAQ,QAAQ,IAAI;AAClC,YAAIA;AAAS,kBAAQ,eAAeA,SAAQ,YAAY;AAAA,MAC1D;AAEA,aAAO;AAAA,IACT;AASA,aAAS,UAAW,MAAM;AACxB,UAAI,CAAC,QAAQ,OAAO,SAAS,UAAU;AACrC,eAAO;AAAA,MACT;AAGA,UAAI,QAAQ,oBAAoB,KAAK,IAAI;AAGzC,UAAI,OAAO,SAAS,QAAQ,WAAW,MAAM,GAAG,YAAY;AAE5D,UAAI,CAAC,QAAQ,CAAC,KAAK,QAAQ;AACzB,eAAO;AAAA,MACT;AAEA,aAAO,KAAK;AAAA,IACd;AASA,aAAS,OAAQC,QAAM;AACrB,UAAI,CAACA,UAAQ,OAAOA,WAAS,UAAU;AACrC,eAAO;AAAA,MACT;AAGA,UAAIC,aAAY,QAAQ,OAAOD,MAAI,EAChC,YAAY,EACZ,OAAO,CAAC;AAEX,UAAI,CAACC,YAAW;AACd,eAAO;AAAA,MACT;AAEA,aAAO,QAAQ,MAAMA,eAAc;AAAA,IACrC;AAOA,aAAS,aAAc,YAAY,OAAO;AAExC,UAAI,aAAa,CAAC,SAAS,UAAU,QAAW,MAAM;AAEtD,aAAO,KAAK,EAAE,EAAE,QAAQ,SAAS,gBAAiB,MAAM;AACtD,YAAI,OAAO,GAAG;AACd,YAAI,OAAO,KAAK;AAEhB,YAAI,CAAC,QAAQ,CAAC,KAAK,QAAQ;AACzB;AAAA,QACF;AAGA,mBAAW,QAAQ;AAGnB,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,cAAIA,aAAY,KAAK;AAErB,cAAI,MAAMA,aAAY;AACpB,gBAAI,OAAO,WAAW,QAAQ,GAAG,MAAMA,aAAY,MAAM;AACzD,gBAAI,KAAK,WAAW,QAAQ,KAAK,MAAM;AAEvC,gBAAI,MAAMA,gBAAe,+BACtB,OAAO,MAAO,SAAS,MAAM,MAAMA,YAAW,OAAO,GAAG,EAAE,MAAM,iBAAkB;AAEnF;AAAA,YACF;AAAA,UACF;AAGA,gBAAMA,cAAa;AAAA,QACrB;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;;;AC3LA;AAAA,gDAAAC,SAAA;AAAA,IAAAA,QAAO,UAAU;AAOjB,aAAS,MAAM,IACf;AACE,UAAI,WAAW,OAAO,gBAAgB,aAClC,eAEA,OAAO,WAAW,YAAY,OAAO,QAAQ,YAAY,aACvD,QAAQ,WACR;AAGN,UAAI,UACJ;AACE,iBAAS,EAAE;AAAA,MACb,OAEA;AACE,mBAAW,IAAI,CAAC;AAAA,MAClB;AAAA,IACF;AAAA;AAAA;;;ACzBA;AAAA,gDAAAC,SAAA;AAAA,QAAI,QAAQ;AAGZ,IAAAA,QAAO,UAAU;AASjB,aAAS,MAAM,UACf;AACE,UAAI,UAAU;AAGd,YAAM,WAAW;AAAE,kBAAU;AAAA,MAAM,CAAC;AAEpC,aAAO,SAAS,eAAe,KAAK,QACpC;AACE,YAAI,SACJ;AACE,mBAAS,KAAK,MAAM;AAAA,QACtB,OAEA;AACE,gBAAM,SAAS,oBACf;AACE,qBAAS,KAAK,MAAM;AAAA,UACtB,CAAC;AAAA,QACH;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACjCA;AAAA,gDAAAC,SAAA;AACA,IAAAA,QAAO,UAAU;AAOjB,aAAS,MAAM,OACf;AACE,aAAO,KAAK,MAAM,IAAI,EAAE,QAAQ,MAAM,KAAK,KAAK,CAAC;AAGjD,YAAM,OAAO,CAAC;AAAA,IAChB;AAQA,aAAS,MAAM,KACf;AACE,UAAI,OAAO,KAAK,KAAK,QAAQ,YAC7B;AACE,aAAK,KAAK,KAAK;AAAA,MACjB;AAAA,IACF;AAAA;AAAA;;;AC5BA;AAAA,kDAAAC,SAAA;AAAA,QAAI,QAAQ;AAAZ,QACI,QAAQ;AAIZ,IAAAA,QAAO,UAAU;AAUjB,aAAS,QAAQ,MAAM,UAAU,OAAO,UACxC;AAEE,UAAI,MAAM,MAAM,eAAe,MAAM,aAAa,MAAM,SAAS,MAAM;AAEvE,YAAM,KAAK,OAAO,OAAO,UAAU,KAAK,KAAK,MAAM,SAAS,OAAO,QACnE;AAGE,YAAI,EAAE,OAAO,MAAM,OACnB;AACE;AAAA,QACF;AAGA,eAAO,MAAM,KAAK;AAElB,YAAI,OACJ;AAIE,gBAAM,KAAK;AAAA,QACb,OAEA;AACE,gBAAM,QAAQ,OAAO;AAAA,QACvB;AAGA,iBAAS,OAAO,MAAM,OAAO;AAAA,MAC/B,CAAC;AAAA,IACH;AAWA,aAAS,OAAO,UAAU,KAAK,MAAM,UACrC;AACE,UAAI;AAGJ,UAAI,SAAS,UAAU,GACvB;AACE,kBAAU,SAAS,MAAM,MAAM,SAAS;AAAA,MAC1C,OAGA;AACE,kBAAU,SAAS,MAAM,KAAK,MAAM,SAAS;AAAA,MAC/C;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;;;AC1EA;AAAA,gDAAAC,SAAA;AACA,IAAAA,QAAO,UAAU;AAWjB,aAAS,MAAM,MAAM,YACrB;AACE,UAAI,cAAc,CAAC,MAAM,QAAQ,IAAI,GACjC,YACF;AAAA,QACE,OAAW;AAAA,QACX,WAAW,eAAe,aAAa,OAAO,KAAK,IAAI,IAAI;AAAA,QAC3D,MAAW,CAAC;AAAA,QACZ,SAAW,cAAc,CAAC,IAAI,CAAC;AAAA,QAC/B,MAAW,cAAc,OAAO,KAAK,IAAI,EAAE,SAAS,KAAK;AAAA,MAC3D;AAGF,UAAI,YACJ;AAGE,kBAAU,UAAU,KAAK,cAAc,aAAa,SAAS,GAAG,GAChE;AACE,iBAAO,WAAW,KAAK,IAAI,KAAK,EAAE;AAAA,QACpC,CAAC;AAAA,MACH;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;;;ACpCA;AAAA,qDAAAC,SAAA;AAAA,QAAI,QAAQ;AAAZ,QACI,QAAQ;AAIZ,IAAAA,QAAO,UAAU;AAQjB,aAAS,WAAW,UACpB;AACE,UAAI,CAAC,OAAO,KAAK,KAAK,IAAI,EAAE,QAC5B;AACE;AAAA,MACF;AAGA,WAAK,QAAQ,KAAK;AAGlB,YAAM,IAAI;AAGV,YAAM,UAAU,MAAM,KAAK,OAAO;AAAA,IACpC;AAAA;AAAA;;;AC5BA;AAAA,+CAAAC,SAAA;AAAA,QAAI,UAAa;AAAjB,QACI,YAAa;AADjB,QAEI,aAAa;AAIjB,IAAAA,QAAO,UAAU;AAUjB,aAAS,SAAS,MAAM,UAAU,UAClC;AACE,UAAI,QAAQ,UAAU,IAAI;AAE1B,aAAO,MAAM,SAAS,MAAM,gBAAgB,MAAM,QAClD;AACE,gBAAQ,MAAM,UAAU,OAAO,SAAS,OAAO,QAC/C;AACE,cAAI,OACJ;AACE,qBAAS,OAAO,MAAM;AACtB;AAAA,UACF;AAGA,cAAI,OAAO,KAAK,MAAM,IAAI,EAAE,WAAW,GACvC;AACE,qBAAS,MAAM,MAAM,OAAO;AAC5B;AAAA,UACF;AAAA,QACF,CAAC;AAED,cAAM;AAAA,MACR;AAEA,aAAO,WAAW,KAAK,OAAO,QAAQ;AAAA,IACxC;AAAA;AAAA;;;AC1CA;AAAA,oDAAAC,SAAA;AAAA,QAAI,UAAa;AAAjB,QACI,YAAa;AADjB,QAEI,aAAa;AAIjB,IAAAA,QAAO,UAAU;AAEjB,IAAAA,QAAO,QAAQ,YAAa;AAC5B,IAAAA,QAAO,QAAQ,aAAa;AAW5B,aAAS,cAAc,MAAM,UAAU,YAAY,UACnD;AACE,UAAI,QAAQ,UAAU,MAAM,UAAU;AAEtC,cAAQ,MAAM,UAAU,OAAO,SAAS,gBAAgB,OAAO,QAC/D;AACE,YAAI,OACJ;AACE,mBAAS,OAAO,MAAM;AACtB;AAAA,QACF;AAEA,cAAM;AAGN,YAAI,MAAM,SAAS,MAAM,gBAAgB,MAAM,QAC/C;AACE,kBAAQ,MAAM,UAAU,OAAO,eAAe;AAC9C;AAAA,QACF;AAGA,iBAAS,MAAM,MAAM,OAAO;AAAA,MAC9B,CAAC;AAED,aAAO,WAAW,KAAK,OAAO,QAAQ;AAAA,IACxC;AAaA,aAAS,UAAU,GAAG,GACtB;AACE,aAAO,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI;AAAA,IAClC;AASA,aAAS,WAAW,GAAG,GACvB;AACE,aAAO,KAAK,UAAU,GAAG,CAAC;AAAA,IAC5B;AAAA;AAAA;;;AC1EA;AAAA,6CAAAC,SAAA;AAAA,QAAI,gBAAgB;AAGpB,IAAAA,QAAO,UAAU;AAUjB,aAAS,OAAO,MAAM,UAAU,UAChC;AACE,aAAO,cAAc,MAAM,UAAU,MAAM,QAAQ;AAAA,IACrD;AAAA;AAAA;;;AChBA;AAAA,4CAAAC,SAAA;AAAA,IAAAA,QAAO,UACP;AAAA,MACE,UAAgB;AAAA,MAChB,QAAgB;AAAA,MAChB,eAAgB;AAAA,IAClB;AAAA;AAAA;;;ACLA;AAAA,oDAAAC,SAAA;AACA,IAAAA,QAAO,UAAU,SAAS,KAAK,KAAK;AAElC,aAAO,KAAK,GAAG,EAAE,QAAQ,SAAS,MAClC;AACE,YAAI,QAAQ,IAAI,SAAS,IAAI;AAAA,MAC/B,CAAC;AAED,aAAO;AAAA,IACT;AAAA;AAAA;;;ACTA;AAAA,qDAAAC,SAAA;AAAA,QAAI,iBAAiB;AACrB,QAAIC,QAAO,QAAQ;AACnB,QAAIC,SAAO,QAAQ;AACnB,QAAIC,QAAO,QAAQ;AACnB,QAAIC,SAAQ,QAAQ;AACpB,QAAI,WAAW,QAAQ,OAAO;AAC9B,QAAIC,OAAK,QAAQ;AACjB,QAAI,SAAS,QAAQ,UAAU;AAC/B,QAAI,OAAO;AACX,QAAI,WAAW;AACf,QAAI,WAAW;AAGf,IAAAL,QAAO,UAAUM;AAGjB,IAAAL,MAAK,SAASK,WAAU,cAAc;AAUtC,aAASA,UAAS,SAAS;AACzB,UAAI,EAAE,gBAAgBA,YAAW;AAC/B,eAAO,IAAIA,UAAS,OAAO;AAAA,MAC7B;AAEA,WAAK,kBAAkB;AACvB,WAAK,eAAe;AACpB,WAAK,mBAAmB,CAAC;AAEzB,qBAAe,KAAK,IAAI;AAExB,gBAAU,WAAW,CAAC;AACtB,eAAS,UAAU,SAAS;AAC1B,aAAK,UAAU,QAAQ;AAAA,MACzB;AAAA,IACF;AAEA,IAAAA,UAAS,aAAa;AACtB,IAAAA,UAAS,uBAAuB;AAEhC,IAAAA,UAAS,UAAU,SAAS,SAAS,OAAO,OAAO,SAAS;AAE1D,gBAAU,WAAW,CAAC;AAGtB,UAAI,OAAO,WAAW,UAAU;AAC9B,kBAAU,EAAC,UAAU,QAAO;AAAA,MAC9B;AAEA,UAAIC,UAAS,eAAe,UAAU,OAAO,KAAK,IAAI;AAGtD,UAAI,OAAO,SAAS,UAAU;AAC5B,gBAAQ,KAAK;AAAA,MACf;AAGA,UAAIN,MAAK,QAAQ,KAAK,GAAG;AAGvB,aAAK,OAAO,IAAI,MAAM,2BAA2B,CAAC;AAClD;AAAA,MACF;AAEA,UAAI,SAAS,KAAK,iBAAiB,OAAO,OAAO,OAAO;AACxD,UAAI,SAAS,KAAK,iBAAiB;AAEnC,MAAAM,QAAO,MAAM;AACb,MAAAA,QAAO,KAAK;AACZ,MAAAA,QAAO,MAAM;AAGb,WAAK,aAAa,QAAQ,OAAO,OAAO;AAAA,IAC1C;AAEA,IAAAD,UAAS,UAAU,eAAe,SAAS,QAAQ,OAAO,SAAS;AACjE,UAAI,cAAc;AAMlB,UAAI,QAAQ,eAAe,MAAM;AAC/B,uBAAe,CAAC,QAAQ;AAAA,MAC1B,WAAW,OAAO,SAAS,KAAK,GAAG;AACjC,sBAAc,MAAM;AAAA,MACtB,WAAW,OAAO,UAAU,UAAU;AACpC,sBAAc,OAAO,WAAW,KAAK;AAAA,MACvC;AAEA,WAAK,gBAAgB;AAGrB,WAAK,mBACH,OAAO,WAAW,MAAM,IACxBA,UAAS,WAAW;AAGtB,UAAI,CAAC,SAAW,CAAC,MAAM,QAAQ,EAAE,MAAM,YAAY,MAAM,eAAe,aAAa,MAAM,EAAE,iBAAiB,SAAU;AACtH;AAAA,MACF;AAGA,UAAI,CAAC,QAAQ,aAAa;AACxB,aAAK,iBAAiB,KAAK,KAAK;AAAA,MAClC;AAAA,IACF;AAEA,IAAAA,UAAS,UAAU,mBAAmB,SAAS,OAAO,UAAU;AAE9D,UAAI,MAAM,eAAe,IAAI,GAAG;AAS9B,YAAI,MAAM,OAAO,UAAa,MAAM,OAAO,YAAY,MAAM,SAAS,QAAW;AAK/E,mBAAS,MAAM,MAAM,MAAM,KAAK,MAAM,QAAQ,MAAM,QAAQ,EAAE;AAAA,QAGhE,OAAO;AAEL,UAAAD,KAAG,KAAK,MAAM,MAAM,SAAS,KAAK,MAAM;AAEtC,gBAAI;AAEJ,gBAAI,KAAK;AACP,uBAAS,GAAG;AACZ;AAAA,YACF;AAGA,uBAAW,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ;AACpD,qBAAS,MAAM,QAAQ;AAAA,UACzB,CAAC;AAAA,QACH;AAAA,MAGF,WAAW,MAAM,eAAe,aAAa,GAAG;AAC9C,iBAAS,MAAM,CAAC,MAAM,QAAQ,iBAAiB;AAAA,MAGjD,WAAW,MAAM,eAAe,YAAY,GAAG;AAE7C,cAAM,GAAG,YAAY,SAAS,UAAU;AACtC,gBAAM,MAAM;AACZ,mBAAS,MAAM,CAAC,SAAS,QAAQ,iBAAiB;AAAA,QACpD,CAAC;AACD,cAAM,OAAO;AAAA,MAGf,OAAO;AACL,iBAAS,gBAAgB;AAAA,MAC3B;AAAA,IACF;AAEA,IAAAC,UAAS,UAAU,mBAAmB,SAAS,OAAO,OAAO,SAAS;AAIpE,UAAI,OAAO,QAAQ,UAAU,UAAU;AACrC,eAAO,QAAQ;AAAA,MACjB;AAEA,UAAI,qBAAqB,KAAK,uBAAuB,OAAO,OAAO;AACnE,UAAI,cAAc,KAAK,gBAAgB,OAAO,OAAO;AAErD,UAAI,WAAW;AACf,UAAI,UAAW;AAAA,QAEb,uBAAuB,CAAC,aAAa,WAAW,QAAQ,GAAG,EAAE,OAAO,sBAAsB,CAAC,CAAC;AAAA,QAE5F,gBAAgB,CAAC,EAAE,OAAO,eAAe,CAAC,CAAC;AAAA,MAC7C;AAGA,UAAI,OAAO,QAAQ,UAAU,UAAU;AACrC,iBAAS,SAAS,QAAQ,MAAM;AAAA,MAClC;AAEA,UAAI;AACJ,eAAS,QAAQ,SAAS;AACxB,YAAI,CAAC,QAAQ,eAAe,IAAI;AAAG;AACnC,iBAAS,QAAQ;AAGjB,YAAI,UAAU,MAAM;AAClB;AAAA,QACF;AAGA,YAAI,CAAC,MAAM,QAAQ,MAAM,GAAG;AAC1B,mBAAS,CAAC,MAAM;AAAA,QAClB;AAGA,YAAI,OAAO,QAAQ;AACjB,sBAAY,OAAO,OAAO,OAAO,KAAK,IAAI,IAAIA,UAAS;AAAA,QACzD;AAAA,MACF;AAEA,aAAO,OAAO,KAAK,YAAY,IAAIA,UAAS,aAAa,WAAWA,UAAS;AAAA,IAC/E;AAEA,IAAAA,UAAS,UAAU,yBAAyB,SAAS,OAAO,SAAS;AAEnE,UAAI,UACA;AAGJ,UAAI,OAAO,QAAQ,aAAa,UAAU;AAExC,mBAAWJ,OAAK,UAAU,QAAQ,QAAQ,EAAE,QAAQ,OAAO,GAAG;AAAA,MAChE,WAAW,QAAQ,YAAY,MAAM,QAAQ,MAAM,MAAM;AAIvD,mBAAWA,OAAK,SAAS,QAAQ,YAAY,MAAM,QAAQ,MAAM,IAAI;AAAA,MACvE,WAAW,MAAM,YAAY,MAAM,eAAe,aAAa,GAAG;AAEhE,mBAAWA,OAAK,SAAS,MAAM,OAAO,aAAa,QAAQ,EAAE;AAAA,MAC/D;AAEA,UAAI,UAAU;AACZ,6BAAqB,eAAe,WAAW;AAAA,MACjD;AAEA,aAAO;AAAA,IACT;AAEA,IAAAI,UAAS,UAAU,kBAAkB,SAAS,OAAO,SAAS;AAG5D,UAAI,cAAc,QAAQ;AAG1B,UAAI,CAAC,eAAe,MAAM,MAAM;AAC9B,sBAAc,KAAK,OAAO,MAAM,IAAI;AAAA,MACtC;AAGA,UAAI,CAAC,eAAe,MAAM,MAAM;AAC9B,sBAAc,KAAK,OAAO,MAAM,IAAI;AAAA,MACtC;AAGA,UAAI,CAAC,eAAe,MAAM,YAAY,MAAM,eAAe,aAAa,GAAG;AACzE,sBAAc,MAAM,QAAQ;AAAA,MAC9B;AAGA,UAAI,CAAC,gBAAgB,QAAQ,YAAY,QAAQ,WAAW;AAC1D,sBAAc,KAAK,OAAO,QAAQ,YAAY,QAAQ,QAAQ;AAAA,MAChE;AAGA,UAAI,CAAC,eAAe,OAAO,SAAS,UAAU;AAC5C,sBAAcA,UAAS;AAAA,MACzB;AAEA,aAAO;AAAA,IACT;AAEA,IAAAA,UAAS,UAAU,mBAAmB,WAAW;AAC/C,aAAO,SAAS,MAAM;AACpB,YAAI,SAASA,UAAS;AAEtB,YAAI,WAAY,KAAK,SAAS,WAAW;AACzC,YAAI,UAAU;AACZ,oBAAU,KAAK,cAAc;AAAA,QAC/B;AAEA,aAAK,MAAM;AAAA,MACb,EAAE,KAAK,IAAI;AAAA,IACb;AAEA,IAAAA,UAAS,UAAU,gBAAgB,WAAW;AAC5C,aAAO,OAAO,KAAK,YAAY,IAAI,OAAOA,UAAS;AAAA,IACrD;AAEA,IAAAA,UAAS,UAAU,aAAa,SAAS,aAAa;AACpD,UAAI;AACJ,UAAI,cAAc;AAAA,QAChB,gBAAgB,mCAAmC,KAAK,YAAY;AAAA,MACtE;AAEA,WAAK,UAAU,aAAa;AAC1B,YAAI,YAAY,eAAe,MAAM,GAAG;AACtC,sBAAY,OAAO,YAAY,KAAK,YAAY;AAAA,QAClD;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,IAAAA,UAAS,UAAU,cAAc,SAAS,UAAU;AAClD,WAAK,YAAY;AAAA,IACnB;AAEA,IAAAA,UAAS,UAAU,cAAc,WAAW;AAC1C,UAAI,CAAC,KAAK,WAAW;AACnB,aAAK,kBAAkB;AAAA,MACzB;AAEA,aAAO,KAAK;AAAA,IACd;AAEA,IAAAA,UAAS,UAAU,YAAY,WAAW;AACxC,UAAI,aAAa,IAAI,OAAO,MAAO,CAAE;AACrC,UAAI,WAAW,KAAK,YAAY;AAGhC,eAAS,IAAI,GAAG,MAAM,KAAK,SAAS,QAAQ,IAAI,KAAK,KAAK;AACxD,YAAI,OAAO,KAAK,SAAS,OAAO,YAAY;AAG1C,cAAG,OAAO,SAAS,KAAK,SAAS,EAAE,GAAG;AACpC,yBAAa,OAAO,OAAQ,CAAC,YAAY,KAAK,SAAS,EAAE,CAAC;AAAA,UAC5D,OAAM;AACJ,yBAAa,OAAO,OAAQ,CAAC,YAAY,OAAO,KAAK,KAAK,SAAS,EAAE,CAAC,CAAC;AAAA,UACzE;AAGA,cAAI,OAAO,KAAK,SAAS,OAAO,YAAY,KAAK,SAAS,GAAG,UAAW,GAAG,SAAS,SAAS,CAAE,MAAM,UAAU;AAC7G,yBAAa,OAAO,OAAQ,CAAC,YAAY,OAAO,KAAKA,UAAS,UAAU,CAAC,CAAE;AAAA,UAC7E;AAAA,QACF;AAAA,MACF;AAGA,aAAO,OAAO,OAAQ,CAAC,YAAY,OAAO,KAAK,KAAK,cAAc,CAAC,CAAC,CAAE;AAAA,IACxE;AAEA,IAAAA,UAAS,UAAU,oBAAoB,WAAW;AAGhD,UAAI,WAAW;AACf,eAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AAC3B,oBAAY,KAAK,MAAM,KAAK,OAAO,IAAI,EAAE,EAAE,SAAS,EAAE;AAAA,MACxD;AAEA,WAAK,YAAY;AAAA,IACnB;AAKA,IAAAA,UAAS,UAAU,gBAAgB,WAAW;AAC5C,UAAI,cAAc,KAAK,kBAAkB,KAAK;AAI9C,UAAI,KAAK,SAAS,QAAQ;AACxB,uBAAe,KAAK,cAAc,EAAE;AAAA,MACtC;AAGA,UAAI,CAAC,KAAK,eAAe,GAAG;AAI1B,aAAK,OAAO,IAAI,MAAM,oDAAoD,CAAC;AAAA,MAC7E;AAEA,aAAO;AAAA,IACT;AAKA,IAAAA,UAAS,UAAU,iBAAiB,WAAW;AAC7C,UAAI,iBAAiB;AAErB,UAAI,KAAK,iBAAiB,QAAQ;AAChC,yBAAiB;AAAA,MACnB;AAEA,aAAO;AAAA,IACT;AAEA,IAAAA,UAAS,UAAU,YAAY,SAAS,IAAI;AAC1C,UAAI,cAAc,KAAK,kBAAkB,KAAK;AAE9C,UAAI,KAAK,SAAS,QAAQ;AACxB,uBAAe,KAAK,cAAc,EAAE;AAAA,MACtC;AAEA,UAAI,CAAC,KAAK,iBAAiB,QAAQ;AACjC,gBAAQ,SAAS,GAAG,KAAK,MAAM,MAAM,WAAW,CAAC;AACjD;AAAA,MACF;AAEA,eAAS,SAAS,KAAK,kBAAkB,KAAK,kBAAkB,SAAS,KAAK,QAAQ;AACpF,YAAI,KAAK;AACP,aAAG,GAAG;AACN;AAAA,QACF;AAEA,eAAO,QAAQ,SAAS,QAAQ;AAC9B,yBAAe;AAAA,QACjB,CAAC;AAED,WAAG,MAAM,WAAW;AAAA,MACtB,CAAC;AAAA,IACH;AAEA,IAAAA,UAAS,UAAU,SAAS,SAAS,QAAQ,IAAI;AAC/C,UAAI,SACA,SACAE,YAAW,EAAC,QAAQ,OAAM;AAK9B,UAAI,OAAO,UAAU,UAAU;AAE7B,iBAAS,SAAS,MAAM;AACxB,kBAAU,SAAS;AAAA,UACjB,MAAM,OAAO;AAAA,UACb,MAAM,OAAO;AAAA,UACb,MAAM,OAAO;AAAA,UACb,UAAU,OAAO;AAAA,QACnB,GAAGA,SAAQ;AAAA,MAGb,OAAO;AAEL,kBAAU,SAAS,QAAQA,SAAQ;AAEnC,YAAI,CAAC,QAAQ,MAAM;AACjB,kBAAQ,OAAO,QAAQ,YAAY,WAAW,MAAM;AAAA,QACtD;AAAA,MACF;AAGA,cAAQ,UAAU,KAAK,WAAW,OAAO,OAAO;AAGhD,UAAI,QAAQ,YAAY,UAAU;AAChC,kBAAUJ,OAAM,QAAQ,OAAO;AAAA,MACjC,OAAO;AACL,kBAAUD,MAAK,QAAQ,OAAO;AAAA,MAChC;AAGA,WAAK,UAAU,SAAS,KAAK,QAAQ;AACnC,YAAI,OAAO,QAAQ,kBAAkB;AACnC,eAAK,OAAO,GAAG;AACf;AAAA,QACF;AAGA,YAAI,QAAQ;AACV,kBAAQ,UAAU,kBAAkB,MAAM;AAAA,QAC5C;AAEA,aAAK,KAAK,OAAO;AACjB,YAAI,IAAI;AACN,cAAI;AAEJ,cAAI,WAAW,SAAU,OAAO,UAAU;AACxC,oBAAQ,eAAe,SAAS,QAAQ;AACxC,oBAAQ,eAAe,YAAY,UAAU;AAE7C,mBAAO,GAAG,KAAK,MAAM,OAAO,QAAQ;AAAA,UACtC;AAEA,uBAAa,SAAS,KAAK,MAAM,IAAI;AAErC,kBAAQ,GAAG,SAAS,QAAQ;AAC5B,kBAAQ,GAAG,YAAY,UAAU;AAAA,QACnC;AAAA,MACF,EAAE,KAAK,IAAI,CAAC;AAEZ,aAAO;AAAA,IACT;AAEA,IAAAG,UAAS,UAAU,SAAS,SAAS,KAAK;AACxC,UAAI,CAAC,KAAK,OAAO;AACf,aAAK,QAAQ;AACb,aAAK,MAAM;AACX,aAAK,KAAK,SAAS,GAAG;AAAA,MACxB;AAAA,IACF;AAEA,IAAAA,UAAS,UAAU,WAAW,WAAY;AACxC,aAAO;AAAA,IACT;AAAA;AAAA;;;ACpfA;AAAA;AAAA;AAEA,QAAI,WAAW,QAAQ,OAAO;AAE9B,QAAI,gBAAgB;AAAA,MAClB,KAAK;AAAA,MACL,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,OAAO;AAAA,MACP,IAAI;AAAA,MACJ,KAAK;AAAA,IACP;AAEA,QAAI,iBAAiB,OAAO,UAAU,YAAY,SAAS,GAAG;AAC5D,aAAO,EAAE,UAAU,KAAK,UACtB,KAAK,QAAQ,GAAG,KAAK,SAAS,EAAE,MAAM,MAAM;AAAA,IAChD;AAOA,aAASG,gBAAeC,MAAK;AAC3B,UAAI,YAAY,OAAOA,SAAQ,WAAW,SAASA,IAAG,IAAIA,QAAO,CAAC;AAClE,UAAI,QAAQ,UAAU;AACtB,UAAI,WAAW,UAAU;AACzB,UAAI,OAAO,UAAU;AACrB,UAAI,OAAO,aAAa,YAAY,CAAC,YAAY,OAAO,UAAU,UAAU;AAC1E,eAAO;AAAA,MACT;AAEA,cAAQ,MAAM,MAAM,KAAK,CAAC,EAAE;AAG5B,iBAAW,SAAS,QAAQ,SAAS,EAAE;AACvC,aAAO,SAAS,IAAI,KAAK,cAAc,UAAU;AACjD,UAAI,CAAC,YAAY,UAAU,IAAI,GAAG;AAChC,eAAO;AAAA,MACT;AAEA,UAAI,QACF,OAAO,gBAAgB,QAAQ,QAAQ,KACvC,OAAO,QAAQ,QAAQ,KACvB,OAAO,kBAAkB,KACzB,OAAO,WAAW;AACpB,UAAI,SAAS,MAAM,QAAQ,KAAK,MAAM,IAAI;AAExC,gBAAQ,QAAQ,QAAQ;AAAA,MAC1B;AACA,aAAO;AAAA,IACT;AAUA,aAAS,YAAY,UAAU,MAAM;AACnC,UAAI,YACD,OAAO,qBAAqB,KAAK,OAAO,UAAU,GAAG,YAAY;AACpE,UAAI,CAAC,UAAU;AACb,eAAO;AAAA,MACT;AACA,UAAI,aAAa,KAAK;AACpB,eAAO;AAAA,MACT;AAEA,aAAO,SAAS,MAAM,OAAO,EAAE,MAAM,SAAS,OAAO;AACnD,YAAI,CAAC,OAAO;AACV,iBAAO;AAAA,QACT;AACA,YAAI,cAAc,MAAM,MAAM,cAAc;AAC5C,YAAI,sBAAsB,cAAc,YAAY,KAAK;AACzD,YAAI,kBAAkB,cAAc,SAAS,YAAY,EAAE,IAAI;AAC/D,YAAI,mBAAmB,oBAAoB,MAAM;AAC/C,iBAAO;AAAA,QACT;AAEA,YAAI,CAAC,QAAQ,KAAK,mBAAmB,GAAG;AAEtC,iBAAO,aAAa;AAAA,QACtB;AAEA,YAAI,oBAAoB,OAAO,CAAC,MAAM,KAAK;AAEzC,gCAAsB,oBAAoB,MAAM,CAAC;AAAA,QACnD;AAEA,eAAO,CAAC,eAAe,KAAK,UAAU,mBAAmB;AAAA,MAC3D,CAAC;AAAA,IACH;AASA,aAAS,OAAO,KAAK;AACnB,aAAO,QAAQ,IAAI,IAAI,YAAY,MAAM,QAAQ,IAAI,IAAI,YAAY,MAAM;AAAA,IAC7E;AAEA,YAAQ,iBAAiBD;AAAA;AAAA;;;AC3GzB;AAAA,sCAAAE,SAAA;AAIA,QAAI,IAAI;AACR,QAAI,IAAI,IAAI;AACZ,QAAI,IAAI,IAAI;AACZ,QAAI,IAAI,IAAI;AACZ,QAAI,IAAI,IAAI;AACZ,QAAI,IAAI,IAAI;AAgBZ,IAAAA,QAAO,UAAU,SAAS,KAAK,SAAS;AACtC,gBAAU,WAAW,CAAC;AACtB,UAAI,OAAO,OAAO;AAClB,UAAI,SAAS,YAAY,IAAI,SAAS,GAAG;AACvC,eAAOC,OAAM,GAAG;AAAA,MAClB,WAAW,SAAS,YAAY,SAAS,GAAG,GAAG;AAC7C,eAAO,QAAQ,OAAO,QAAQ,GAAG,IAAI,SAAS,GAAG;AAAA,MACnD;AACA,YAAM,IAAI;AAAA,QACR,0DACE,KAAK,UAAU,GAAG;AAAA,MACtB;AAAA,IACF;AAUA,aAASA,OAAM,KAAK;AAClB,YAAM,OAAO,GAAG;AAChB,UAAI,IAAI,SAAS,KAAK;AACpB;AAAA,MACF;AACA,UAAI,QAAQ,mIAAmI;AAAA,QAC7I;AAAA,MACF;AACA,UAAI,CAAC,OAAO;AACV;AAAA,MACF;AACA,UAAI,IAAI,WAAW,MAAM,EAAE;AAC3B,UAAI,QAAQ,MAAM,MAAM,MAAM,YAAY;AAC1C,cAAQ;AAAA,aACD;AAAA,aACA;AAAA,aACA;AAAA,aACA;AAAA,aACA;AACH,iBAAO,IAAI;AAAA,aACR;AAAA,aACA;AAAA,aACA;AACH,iBAAO,IAAI;AAAA,aACR;AAAA,aACA;AAAA,aACA;AACH,iBAAO,IAAI;AAAA,aACR;AAAA,aACA;AAAA,aACA;AAAA,aACA;AAAA,aACA;AACH,iBAAO,IAAI;AAAA,aACR;AAAA,aACA;AAAA,aACA;AAAA,aACA;AAAA,aACA;AACH,iBAAO,IAAI;AAAA,aACR;AAAA,aACA;AAAA,aACA;AAAA,aACA;AAAA,aACA;AACH,iBAAO,IAAI;AAAA,aACR;AAAA,aACA;AAAA,aACA;AAAA,aACA;AAAA,aACA;AACH,iBAAO;AAAA;AAEP,iBAAO;AAAA;AAAA,IAEb;AAUA,aAAS,SAAS,IAAI;AACpB,UAAI,QAAQ,KAAK,IAAI,EAAE;AACvB,UAAI,SAAS,GAAG;AACd,eAAO,KAAK,MAAM,KAAK,CAAC,IAAI;AAAA,MAC9B;AACA,UAAI,SAAS,GAAG;AACd,eAAO,KAAK,MAAM,KAAK,CAAC,IAAI;AAAA,MAC9B;AACA,UAAI,SAAS,GAAG;AACd,eAAO,KAAK,MAAM,KAAK,CAAC,IAAI;AAAA,MAC9B;AACA,UAAI,SAAS,GAAG;AACd,eAAO,KAAK,MAAM,KAAK,CAAC,IAAI;AAAA,MAC9B;AACA,aAAO,KAAK;AAAA,IACd;AAUA,aAAS,QAAQ,IAAI;AACnB,UAAI,QAAQ,KAAK,IAAI,EAAE;AACvB,UAAI,SAAS,GAAG;AACd,eAAO,OAAO,IAAI,OAAO,GAAG,KAAK;AAAA,MACnC;AACA,UAAI,SAAS,GAAG;AACd,eAAO,OAAO,IAAI,OAAO,GAAG,MAAM;AAAA,MACpC;AACA,UAAI,SAAS,GAAG;AACd,eAAO,OAAO,IAAI,OAAO,GAAG,QAAQ;AAAA,MACtC;AACA,UAAI,SAAS,GAAG;AACd,eAAO,OAAO,IAAI,OAAO,GAAG,QAAQ;AAAA,MACtC;AACA,aAAO,KAAK;AAAA,IACd;AAMA,aAAS,OAAO,IAAI,OAAO,GAAG,MAAM;AAClC,UAAI,WAAW,SAAS,IAAI;AAC5B,aAAO,KAAK,MAAM,KAAK,CAAC,IAAI,MAAM,QAAQ,WAAW,MAAM;AAAA,IAC7D;AAAA;AAAA;;;ACjKA;AAAA,8CAAAC,SAAA;AAMA,aAAS,MAAM,KAAK;AACnB,kBAAY,QAAQ;AACpB,kBAAY,UAAU;AACtB,kBAAY,SAAS;AACrB,kBAAY,UAAU;AACtB,kBAAY,SAAS;AACrB,kBAAY,UAAU;AACtB,kBAAY,WAAW;AACvB,kBAAY,UAAU;AAEtB,aAAO,KAAK,GAAG,EAAE,QAAQ,SAAO;AAC/B,oBAAY,OAAO,IAAI;AAAA,MACxB,CAAC;AAMD,kBAAY,QAAQ,CAAC;AACrB,kBAAY,QAAQ,CAAC;AAOrB,kBAAY,aAAa,CAAC;AAQ1B,eAAS,YAAY,WAAW;AAC/B,YAAI,OAAO;AAEX,iBAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAC1C,kBAAS,QAAQ,KAAK,OAAQ,UAAU,WAAW,CAAC;AACpD,kBAAQ;AAAA,QACT;AAEA,eAAO,YAAY,OAAO,KAAK,IAAI,IAAI,IAAI,YAAY,OAAO;AAAA,MAC/D;AACA,kBAAY,cAAc;AAS1B,eAAS,YAAY,WAAW;AAC/B,YAAI;AACJ,YAAI,iBAAiB;AACrB,YAAI;AACJ,YAAI;AAEJ,iBAAS,SAAS,MAAM;AAEvB,cAAI,CAAC,MAAM,SAAS;AACnB;AAAA,UACD;AAEA,gBAAMC,QAAO;AAGb,gBAAM,OAAO,OAAO,IAAI,KAAK,CAAC;AAC9B,gBAAM,KAAK,QAAQ,YAAY;AAC/B,UAAAA,MAAK,OAAO;AACZ,UAAAA,MAAK,OAAO;AACZ,UAAAA,MAAK,OAAO;AACZ,qBAAW;AAEX,eAAK,KAAK,YAAY,OAAO,KAAK,EAAE;AAEpC,cAAI,OAAO,KAAK,OAAO,UAAU;AAEhC,iBAAK,QAAQ,IAAI;AAAA,UAClB;AAGA,cAAI,QAAQ;AACZ,eAAK,KAAK,KAAK,GAAG,QAAQ,iBAAiB,CAAC,OAAOC,YAAW;AAE7D,gBAAI,UAAU,MAAM;AACnB,qBAAO;AAAA,YACR;AACA;AACA,kBAAM,YAAY,YAAY,WAAWA;AACzC,gBAAI,OAAO,cAAc,YAAY;AACpC,oBAAM,MAAM,KAAK;AACjB,sBAAQ,UAAU,KAAKD,OAAM,GAAG;AAGhC,mBAAK,OAAO,OAAO,CAAC;AACpB;AAAA,YACD;AACA,mBAAO;AAAA,UACR,CAAC;AAGD,sBAAY,WAAW,KAAKA,OAAM,IAAI;AAEtC,gBAAM,QAAQA,MAAK,OAAO,YAAY;AACtC,gBAAM,MAAMA,OAAM,IAAI;AAAA,QACvB;AAEA,cAAM,YAAY;AAClB,cAAM,YAAY,YAAY,UAAU;AACxC,cAAM,QAAQ,YAAY,YAAY,SAAS;AAC/C,cAAM,SAASE;AACf,cAAM,UAAU,YAAY;AAE5B,eAAO,eAAe,OAAO,WAAW;AAAA,UACvC,YAAY;AAAA,UACZ,cAAc;AAAA,UACd,KAAK,MAAM;AACV,gBAAI,mBAAmB,MAAM;AAC5B,qBAAO;AAAA,YACR;AACA,gBAAI,oBAAoB,YAAY,YAAY;AAC/C,gCAAkB,YAAY;AAC9B,6BAAe,YAAY,QAAQ,SAAS;AAAA,YAC7C;AAEA,mBAAO;AAAA,UACR;AAAA,UACA,KAAK,OAAK;AACT,6BAAiB;AAAA,UAClB;AAAA,QACD,CAAC;AAGD,YAAI,OAAO,YAAY,SAAS,YAAY;AAC3C,sBAAY,KAAK,KAAK;AAAA,QACvB;AAEA,eAAO;AAAA,MACR;AAEA,eAASA,QAAO,WAAW,WAAW;AACrC,cAAM,WAAW,YAAY,KAAK,aAAa,OAAO,cAAc,cAAc,MAAM,aAAa,SAAS;AAC9G,iBAAS,MAAM,KAAK;AACpB,eAAO;AAAA,MACR;AASA,eAAS,OAAO,YAAY;AAC3B,oBAAY,KAAK,UAAU;AAC3B,oBAAY,aAAa;AAEzB,oBAAY,QAAQ,CAAC;AACrB,oBAAY,QAAQ,CAAC;AAErB,YAAI;AACJ,cAAM,SAAS,OAAO,eAAe,WAAW,aAAa,IAAI,MAAM,QAAQ;AAC/E,cAAM,MAAM,MAAM;AAElB,aAAK,IAAI,GAAG,IAAI,KAAK,KAAK;AACzB,cAAI,CAAC,MAAM,IAAI;AAEd;AAAA,UACD;AAEA,uBAAa,MAAM,GAAG,QAAQ,OAAO,KAAK;AAE1C,cAAI,WAAW,OAAO,KAAK;AAC1B,wBAAY,MAAM,KAAK,IAAI,OAAO,MAAM,WAAW,MAAM,CAAC,IAAI,GAAG,CAAC;AAAA,UACnE,OAAO;AACN,wBAAY,MAAM,KAAK,IAAI,OAAO,MAAM,aAAa,GAAG,CAAC;AAAA,UAC1D;AAAA,QACD;AAAA,MACD;AAQA,eAAS,UAAU;AAClB,cAAM,aAAa;AAAA,UAClB,GAAG,YAAY,MAAM,IAAI,WAAW;AAAA,UACpC,GAAG,YAAY,MAAM,IAAI,WAAW,EAAE,IAAI,eAAa,MAAM,SAAS;AAAA,QACvE,EAAE,KAAK,GAAG;AACV,oBAAY,OAAO,EAAE;AACrB,eAAO;AAAA,MACR;AASA,eAAS,QAAQ,MAAM;AACtB,YAAI,KAAK,KAAK,SAAS,OAAO,KAAK;AAClC,iBAAO;AAAA,QACR;AAEA,YAAI;AACJ,YAAI;AAEJ,aAAK,IAAI,GAAG,MAAM,YAAY,MAAM,QAAQ,IAAI,KAAK,KAAK;AACzD,cAAI,YAAY,MAAM,GAAG,KAAK,IAAI,GAAG;AACpC,mBAAO;AAAA,UACR;AAAA,QACD;AAEA,aAAK,IAAI,GAAG,MAAM,YAAY,MAAM,QAAQ,IAAI,KAAK,KAAK;AACzD,cAAI,YAAY,MAAM,GAAG,KAAK,IAAI,GAAG;AACpC,mBAAO;AAAA,UACR;AAAA,QACD;AAEA,eAAO;AAAA,MACR;AASA,eAAS,YAAY,QAAQ;AAC5B,eAAO,OAAO,SAAS,EACrB,UAAU,GAAG,OAAO,SAAS,EAAE,SAAS,CAAC,EACzC,QAAQ,WAAW,GAAG;AAAA,MACzB;AASA,eAAS,OAAO,KAAK;AACpB,YAAI,eAAe,OAAO;AACzB,iBAAO,IAAI,SAAS,IAAI;AAAA,QACzB;AACA,eAAO;AAAA,MACR;AAMA,eAAS,UAAU;AAClB,gBAAQ,KAAK,uIAAuI;AAAA,MACrJ;AAEA,kBAAY,OAAO,YAAY,KAAK,CAAC;AAErC,aAAO;AAAA,IACR;AAEA,IAAAH,QAAO,UAAU;AAAA;AAAA;;;ACjRjB;AAAA,+CAAAI,SAAA;AAMA,YAAQ,aAAa;AACrB,YAAQ,OAAO;AACf,YAAQ,OAAO;AACf,YAAQ,YAAY;AACpB,YAAQ,UAAU,aAAa;AAC/B,YAAQ,WAAW,MAAM;AACxB,UAAI,SAAS;AAEb,aAAO,MAAM;AACZ,YAAI,CAAC,QAAQ;AACZ,mBAAS;AACT,kBAAQ,KAAK,uIAAuI;AAAA,QACrJ;AAAA,MACD;AAAA,IACD,GAAG;AAMH,YAAQ,SAAS;AAAA,MAChaAAS,YAAY;AAIpB,UAAI,OAAO,WAAW,eAAe,OAAO,YAAY,OAAO,QAAQ,SAAS,cAAc,OAAO,QAAQ,SAAS;AACrH,eAAO;AAAA,MACR;AAGA,UAAI,OAAO,cAAc,eAAe,UAAU,aAAa,UAAU,UAAU,YAAY,EAAE,MAAM,uBAAuB,GAAG;AAChI,eAAO;AAAA,MACR;AAIA,aAAQ,OAAO,aAAa,eAAe,SAAS,mBAAmB,SAAS,gBAAgB,SAAS,SAAS,gBAAgB,MAAM,oBAEtI,OAAO,WAAW,eAAe,OAAO,YAAY,OAAO,QAAQ,WAAY,OAAO,QAAQ,aAAa,OAAO,QAAQ,UAG1H,OAAO,cAAc,eAAe,UAAU,aAAa,UAAU,UAAU,YAAY,EAAE,MAAM,gBAAgB,KAAK,SAAS,OAAO,IAAI,EAAE,KAAK,MAEnJ,OAAO,cAAc,eAAe,UAAU,aAAa,UAAU,UAAU,YAAY,EAAE,MAAM,oBAAoB;AAAA,IAC1H;AAQA,aAAS,WAAW,MAAM;AACzB,WAAK,MAAM,KAAK,YAAY,OAAO,MAClC,KAAK,aACJ,KAAK,YAAY,QAAQ,OAC1B,KAAK,MACJ,KAAK,YAAY,QAAQ,OAC1B,MAAMA,QAAO,QAAQ,SAAS,KAAK,IAAI;AAExC,UAAI,CAAC,KAAK,WAAW;AACpB;AAAA,MACD;AAEA,YAAM,IAAI,YAAY,KAAK;AAC3B,WAAK,OAAO,GAAG,GAAG,GAAG,gBAAgB;AAKrC,UAAI,QAAQ;AACZ,UAAI,QAAQ;AACZ,WAAK,GAAG,QAAQ,eAAe,WAAS;AACvC,YAAI,UAAU,MAAM;AACnB;AAAA,QACD;AACA;AACA,YAAI,UAAU,MAAM;AAGnB,kBAAQ;AAAA,QACT;AAAA,MACD,CAAC;AAED,WAAK,OAAO,OAAO,GAAG,CAAC;AAAA,IACxB;AAUA,YAAQ,MAAM,QAAQ,SAAS,QAAQ,QAAQ,MAAM;AAAA,IAAC;AAQtD,aAAS,KAAK,YAAY;AACzB,UAAI;AACH,YAAI,YAAY;AACf,kBAAQ,QAAQ,QAAQ,SAAS,UAAU;AAAA,QAC5C,OAAO;AACN,kBAAQ,QAAQ,WAAW,OAAO;AAAA,QACnC;AAAA,MACD,SAAS,OAAP;AAAA,MAGF;AAAA,IACD;AAQA,aAAS,OAAO;AACf,UAAI;AACJ,UAAI;AACH,YAAI,QAAQ,QAAQ,QAAQ,OAAO;AAAA,MACpC,SAAS,OAAP;AAAA,MAGF;AAGA,UAAI,CAAC,KAAK,OAAO,YAAY,eAAe,SAAS,SAAS;AAC7D,YAAI,QAAQ,IAAI;AAAA,MACjB;AAEA,aAAO;AAAA,IACR;AAaA,aAAS,eAAe;AACvB,UAAI;AAGH,eAAO;AAAA,MACR,SAAS,OAAP;AAAA,MAGF;AAAA,IACD;AAEA,IAAAA,QAAO,UAAU,iBAAoB,OAAO;AAE5C,QAAM,EAAC,WAAU,IAAIA,QAAO;AAM5B,eAAW,IAAI,SAAU,GAAG;AAC3B,UAAI;AACH,eAAO,KAAK,UAAU,CAAC;AAAA,MACxB,SAAS,OAAP;AACD,eAAO,iCAAiC,MAAM;AAAA,MAC/C;AAAA,IACD;AAAA;AAAA;;;AC5QA;AAAA,4CAAAC,SAAA;AAAA;AAEA,IAAAA,QAAO,UAAU,CAAC,MAAM,OAAO,QAAQ,SAAS;AAC/C,YAAM,SAAS,KAAK,WAAW,GAAG,IAAI,KAAM,KAAK,WAAW,IAAI,MAAM;AACtE,YAAM,WAAW,KAAK,QAAQ,SAAS,IAAI;AAC3C,YAAM,qBAAqB,KAAK,QAAQ,IAAI;AAC5C,aAAO,aAAa,OAAO,uBAAuB,MAAM,WAAW;AAAA,IACpE;AAAA;AAAA;;;ACPA;AAAA,kDAAAC,SAAA;AAAA;AACA,QAAMC,MAAK,QAAQ;AACnB,QAAM,MAAM,QAAQ;AACpB,QAAM,UAAU;AAEhB,QAAM,EAAC,IAAG,IAAI;AAEd,QAAI;AACJ,QAAI,QAAQ,UAAU,KACrB,QAAQ,WAAW,KACnB,QAAQ,aAAa,KACrB,QAAQ,aAAa,GAAG;AACxB,mBAAa;AAAA,IACd,WAAW,QAAQ,OAAO,KACzB,QAAQ,QAAQ,KAChB,QAAQ,YAAY,KACpB,QAAQ,cAAc,GAAG;AACzB,mBAAa;AAAA,IACd;AAEA,QAAI,iBAAiB,KAAK;AACzB,UAAI,IAAI,gBAAgB,QAAQ;AAC/B,qBAAa;AAAA,MACd,WAAW,IAAI,gBAAgB,SAAS;AACvC,qBAAa;AAAA,MACd,OAAO;AACN,qBAAa,IAAI,YAAY,WAAW,IAAI,IAAI,KAAK,IAAI,SAAS,IAAI,aAAa,EAAE,GAAG,CAAC;AAAA,MAC1F;AAAA,IACD;AAEA,aAAS,eAAe,OAAO;AAC9B,UAAI,UAAU,GAAG;AAChB,eAAO;AAAA,MACR;AAEA,aAAO;AAAA,QACN;AAAA,QACA,UAAU;AAAA,QACV,QAAQ,SAAS;AAAA,QACjB,QAAQ,SAAS;AAAA,MAClB;AAAA,IACD;AAEA,aAAS,cAAc,YAAY,aAAa;AAC/C,UAAI,eAAe,GAAG;AACrB,eAAO;AAAA,MACR;AAEA,UAAI,QAAQ,WAAW,KACtB,QAAQ,YAAY,KACpB,QAAQ,iBAAiB,GAAG;AAC5B,eAAO;AAAA,MACR;AAEA,UAAI,QAAQ,WAAW,GAAG;AACzB,eAAO;AAAA,MACR;AAEA,UAAI,cAAc,CAAC,eAAe,eAAe,QAAW;AAC3D,eAAO;AAAA,MACR;AAEA,YAAM,MAAM,cAAc;AAE1B,UAAI,IAAI,SAAS,QAAQ;AACxB,eAAO;AAAA,MACR;AAEA,UAAI,QAAQ,aAAa,SAAS;AAGjC,cAAM,YAAYA,IAAG,QAAQ,EAAE,MAAM,GAAG;AACxC,YACC,OAAO,UAAU,EAAE,KAAK,MACxB,OAAO,UAAU,EAAE,KAAK,OACvB;AACD,iBAAO,OAAO,UAAU,EAAE,KAAK,QAAQ,IAAI;AAAA,QAC5C;AAEA,eAAO;AAAA,MACR;AAEA,UAAI,QAAQ,KAAK;AAChB,YAAI,CAAC,UAAU,YAAY,YAAY,aAAa,kBAAkB,WAAW,EAAE,KAAK,UAAQ,QAAQ,GAAG,KAAK,IAAI,YAAY,YAAY;AAC3I,iBAAO;AAAA,QACR;AAEA,eAAO;AAAA,MACR;AAEA,UAAI,sBAAsB,KAAK;AAC9B,eAAO,gCAAgC,KAAK,IAAI,gBAAgB,IAAI,IAAI;AAAA,MACzE;AAEA,UAAI,IAAI,cAAc,aAAa;AAClC,eAAO;AAAA,MACR;AAEA,UAAI,kBAAkB,KAAK;AAC1B,cAAM,UAAU,UAAU,IAAI,wBAAwB,IAAI,MAAM,GAAG,EAAE,IAAI,EAAE;AAE3E,gBAAQ,IAAI;AAAA,eACN;AACJ,mBAAO,WAAW,IAAI,IAAI;AAAA,eACtB;AACJ,mBAAO;AAAA;AAAA,MAGV;AAEA,UAAI,iBAAiB,KAAK,IAAI,IAAI,GAAG;AACpC,eAAO;AAAA,MACR;AAEA,UAAI,8DAA8D,KAAK,IAAI,IAAI,GAAG;AACjF,eAAO;AAAA,MACR;AAEA,UAAI,eAAe,KAAK;AACvB,eAAO;AAAA,MACR;AAEA,aAAO;AAAA,IACR;AAEA,aAAS,gBAAgBC,SAAQ;AAChC,YAAM,QAAQ,cAAcA,SAAQA,WAAUA,QAAO,KAAK;AAC1D,aAAO,eAAe,KAAK;AAAA,IAC5B;AAEA,IAAAF,QAAO,UAAU;AAAA,MAChB,eAAe;AAAA,MACf,QAAQ,eAAe,cAAc,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC;AAAA,MACzD,QAAQ,eAAe,cAAc,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC;AAAA,IAC1D;AAAA;AAAA;;;ACtIA;AAAA,4CAAAG,SAAA;AAIA,QAAM,MAAM,QAAQ;AACpB,QAAMC,QAAO,QAAQ;AAMrB,YAAQ,OAAO;AACf,YAAQ,MAAM;AACd,YAAQ,aAAa;AACrB,YAAQ,OAAO;AACf,YAAQ,OAAO;AACf,YAAQ,YAAY;AACpB,YAAQ,UAAUA,MAAK;AAAA,MACtB,MAAM;AAAA,MAAC;AAAA,MACP;AAAA,IACD;AAMA,YAAQ,SAAS,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAElC,QAAI;AAGH,YAAM,gBAAgB;AAEtB,UAAI,kBAAkB,cAAc,UAAU,eAAe,SAAS,GAAG;AACxE,gBAAQ,SAAS;AAAA,UAChB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,IACD,SAAS,OAAP;AAAA,IAEF;AAQA,YAAQ,cAAc,OAAO,KAAK,QAAQ,GAAG,EAAE,OAAO,SAAO;AAC5D,aAAO,WAAW,KAAK,GAAG;AAAA,IAC3B,CAAC,EAAE,OAAO,CAAC,KAAK,QAAQ;AAEvB,YAAM,OAAO,IACX,UAAU,CAAC,EACX,YAAY,EACZ,QAAQ,aAAa,CAAC,GAAG,MAAM;AAC/B,eAAO,EAAE,YAAY;AAAA,MACtB,CAAC;AAGF,UAAI,MAAM,QAAQ,IAAI;AACtB,UAAI,2BAA2B,KAAK,GAAG,GAAG;AACzC,cAAM;AAAA,MACP,WAAW,6BAA6B,KAAK,GAAG,GAAG;AAClD,cAAM;AAAA,MACP,WAAW,QAAQ,QAAQ;AAC1B,cAAM;AAAA,MACP,OAAO;AACN,cAAM,OAAO,GAAG;AAAA,MACjB;AAEA,UAAI,QAAQ;AACZ,aAAO;AAAA,IACR,GAAG,CAAC,CAAC;AAML,aAAS,YAAY;AACpB,aAAO,YAAY,QAAQ,cAC1B,QAAQ,QAAQ,YAAY,MAAM,IAClC,IAAI,OAAO,QAAQ,OAAO,EAAE;AAAA,IAC9B;AAQA,aAAS,WAAW,MAAM;AACzB,YAAM,EAAC,WAAW,MAAM,WAAAC,WAAS,IAAI;AAErC,UAAIA,YAAW;AACd,cAAM,IAAI,KAAK;AACf,cAAM,YAAY,YAAc,IAAI,IAAI,IAAI,SAAS;AACrD,cAAM,SAAS,KAAK,eAAe;AAEnC,aAAK,KAAK,SAAS,KAAK,GAAG,MAAM,IAAI,EAAE,KAAK,OAAO,MAAM;AACzD,aAAK,KAAK,YAAY,OAAOF,QAAO,QAAQ,SAAS,KAAK,IAAI,IAAI,SAAW;AAAA,MAC9E,OAAO;AACN,aAAK,KAAK,QAAQ,IAAI,OAAO,MAAM,KAAK;AAAA,MACzC;AAAA,IACD;AAEA,aAAS,UAAU;AAClB,UAAI,QAAQ,YAAY,UAAU;AACjC,eAAO;AAAA,MACR;AACA,aAAO,IAAI,KAAK,EAAE,YAAY,IAAI;AAAA,IACnC;AAMA,aAAS,OAAO,MAAM;AACrB,aAAO,QAAQ,OAAO,MAAMC,MAAK,OAAO,GAAG,IAAI,IAAI,IAAI;AAAA,IACxD;AAQA,aAAS,KAAK,YAAY;AACzB,UAAI,YAAY;AACf,gBAAQ,IAAI,QAAQ;AAAA,MACrB,OAAO;AAGN,eAAO,QAAQ,IAAI;AAAA,MACpB;AAAA,IACD;AASA,aAAS,OAAO;AACf,aAAO,QAAQ,IAAI;AAAA,IACpB;AASA,aAAS,KAAK,OAAO;AACpB,YAAM,cAAc,CAAC;AAErB,YAAM,OAAO,OAAO,KAAK,QAAQ,WAAW;AAC5C,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACrC,cAAM,YAAY,KAAK,MAAM,QAAQ,YAAY,KAAK;AAAA,MACvD;AAAA,IACD;AAEA,IAAAD,QAAO,UAAU,iBAAoB,OAAO;AAE5C,QAAM,EAAC,WAAU,IAAIA,QAAO;AAM5B,eAAW,IAAI,SAAU,GAAG;AAC3B,WAAK,YAAY,SAAS,KAAK;AAC/B,aAAOC,MAAK,QAAQ,GAAG,KAAK,WAAW,EACrC,MAAM,IAAI,EACV,IAAI,SAAO,IAAI,KAAK,CAAC,EACrB,KAAK,GAAG;AAAA,IACX;AAMA,eAAW,IAAI,SAAU,GAAG;AAC3B,WAAK,YAAY,SAAS,KAAK;AAC/B,aAAOA,MAAK,QAAQ,GAAG,KAAK,WAAW;AAAA,IACxC;AAAA;AAAA;;;ACtQA;AAAA,6CAAAE,SAAA;AAKA,QAAI,OAAO,YAAY,eAAe,QAAQ,SAAS,cAAc,QAAQ,YAAY,QAAQ,QAAQ,QAAQ;AAChH,MAAAA,QAAO,UAAU;AAAA,IAClB,OAAO;AACN,MAAAA,QAAO,UAAU;AAAA,IAClB;AAAA;AAAA;;;ACTA;AAAA,oDAAAC,SAAA;AAAA,QAAI;AAEJ,IAAAA,QAAO,UAAU,WAAY;AAC3B,UAAI,CAAC,OAAO;AACV,YAAI;AAEF,kBAAQ,cAAiB,kBAAkB;AAAA,QAC7C,SACO,OAAP;AAAA,QAAsB;AACtB,YAAI,OAAO,UAAU,YAAY;AAC/B,kBAAQ,WAAY;AAAA,UAAQ;AAAA,QAC9B;AAAA,MACF;AACA,YAAM,MAAM,MAAM,SAAS;AAAA,IAC7B;AAAA;AAAA;;;ACdA;AAAA,oDAAAC,SAAA;AAAA,QAAIC,OAAM,QAAQ;AAClB,QAAIC,OAAMD,KAAI;AACd,QAAIE,QAAO,QAAQ;AACnB,QAAIC,SAAQ,QAAQ;AACpB,QAAI,WAAW,QAAQ,UAAU;AACjC,QAAI,SAAS,QAAQ;AACrB,QAAI,QAAQ;AAIZ,KAAC,SAAS,+BAA+B;AACvC,UAAI,gBAAgB,OAAO,YAAY;AACvC,UAAI,mBAAmB,OAAO,WAAW,eAAe,OAAO,aAAa;AAC5E,UAAI,cAAcC,YAAW,MAAM,iBAAiB;AACpD,UAAI,CAAC,kBAAkB,oBAAoB,CAAC,cAAc;AACxD,gBAAQ,KAAK,sEAAsE;AAAA,MACrF;AAAA,IACF,GAAE;AAGF,QAAI,eAAe;AACnB,QAAI;AACF,aAAO,IAAIH,KAAI,EAAE,CAAC;AAAA,IACpB,SACO,OAAP;AACE,qBAAe,MAAM,SAAS;AAAA,IAChC;AAGA,QAAI,qBAAqB;AAAA,MACvB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAGA,QAAI,SAAS,CAAC,SAAS,WAAW,WAAW,SAAS,UAAU,SAAS;AACzE,QAAI,gBAAgB,uBAAO,OAAO,IAAI;AACtC,WAAO,QAAQ,SAAU,OAAO;AAC9B,oBAAc,SAAS,SAAU,MAAM,MAAM,MAAM;AACjD,aAAK,cAAc,KAAK,OAAO,MAAM,MAAM,IAAI;AAAA,MACjD;AAAA,IACF,CAAC;AAGD,QAAI,kBAAkB;AAAA,MACpB;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,QAAI,mBAAmB;AAAA,MACrB;AAAA,MACA;AAAA,IACF;AACA,QAAI,wBAAwB;AAAA,MAC1B;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,QAAI,6BAA6B;AAAA,MAC/B;AAAA,MACA;AAAA,IACF;AACA,QAAI,qBAAqB;AAAA,MACvB;AAAA,MACA;AAAA,IACF;AAGA,QAAI,UAAU,SAAS,UAAU,WAAWI;AAG5C,aAAS,oBAAoB,SAAS,kBAAkB;AAEtD,eAAS,KAAK,IAAI;AAClB,WAAK,iBAAiB,OAAO;AAC7B,WAAK,WAAW;AAChB,WAAK,SAAS;AACd,WAAK,UAAU;AACf,WAAK,iBAAiB;AACtB,WAAK,aAAa,CAAC;AACnB,WAAK,qBAAqB;AAC1B,WAAK,sBAAsB,CAAC;AAG5B,UAAI,kBAAkB;AACpB,aAAK,GAAG,YAAY,gBAAgB;AAAA,MACtC;AAGA,UAAIC,QAAO;AACX,WAAK,oBAAoB,SAAU,UAAU;AAC3C,YAAI;AACF,UAAAA,MAAK,iBAAiB,QAAQ;AAAA,QAChC,SACO,OAAP;AACE,UAAAA,MAAK,KAAK,SAAS,iBAAiB,mBAClC,QAAQ,IAAI,iBAAiB,EAAE,MAAa,CAAC,CAAC;AAAA,QAClD;AAAA,MACF;AAGA,WAAK,gBAAgB;AAAA,IACvB;AACA,wBAAoB,YAAY,OAAO,OAAO,SAAS,SAAS;AAEhE,wBAAoB,UAAU,QAAQ,WAAY;AAChD,qBAAe,KAAK,eAAe;AACnC,WAAK,gBAAgB,MAAM;AAC3B,WAAK,KAAK,OAAO;AAAA,IACnB;AAEA,wBAAoB,UAAU,UAAU,SAAU,OAAO;AACvD,qBAAe,KAAK,iBAAiB,KAAK;AAC1C,cAAQ,KAAK,MAAM,KAAK;AACxB,aAAO;AAAA,IACT;AAGA,wBAAoB,UAAU,QAAQ,SAAU,MAAM,UAAU,UAAU;AAExE,UAAI,KAAK,SAAS;AAChB,cAAM,IAAI,mBAAmB;AAAA,MAC/B;AAGA,UAAI,CAACC,UAAS,IAAI,KAAK,CAACC,UAAS,IAAI,GAAG;AACtC,cAAM,IAAI,UAAU,+CAA+C;AAAA,MACrE;AACA,UAAIJ,YAAW,QAAQ,GAAG;AACxB,mBAAW;AACX,mBAAW;AAAA,MACb;AAIA,UAAI,KAAK,WAAW,GAAG;AACrB,YAAI,UAAU;AACZ,mBAAS;AAAA,QACX;AACA;AAAA,MACF;AAEA,UAAI,KAAK,qBAAqB,KAAK,UAAU,KAAK,SAAS,eAAe;AACxE,aAAK,sBAAsB,KAAK;AAChC,aAAK,oBAAoB,KAAK,EAAE,MAAY,SAAmB,CAAC;AAChE,aAAK,gBAAgB,MAAM,MAAM,UAAU,QAAQ;AAAA,MACrD,OAEK;AACH,aAAK,KAAK,SAAS,IAAI,2BAA2B,CAAC;AACnD,aAAK,MAAM;AAAA,MACb;AAAA,IACF;AAGA,wBAAoB,UAAU,MAAM,SAAU,MAAM,UAAU,UAAU;AAEtE,UAAIA,YAAW,IAAI,GAAG;AACpB,mBAAW;AACX,eAAO,WAAW;AAAA,MACpB,WACSA,YAAW,QAAQ,GAAG;AAC7B,mBAAW;AACX,mBAAW;AAAA,MACb;AAGA,UAAI,CAAC,MAAM;AACT,aAAK,SAAS,KAAK,UAAU;AAC7B,aAAK,gBAAgB,IAAI,MAAM,MAAM,QAAQ;AAAA,MAC/C,OACK;AACH,YAAIE,QAAO;AACX,YAAI,iBAAiB,KAAK;AAC1B,aAAK,MAAM,MAAM,UAAU,WAAY;AACrC,UAAAA,MAAK,SAAS;AACd,yBAAe,IAAI,MAAM,MAAM,QAAQ;AAAA,QACzC,CAAC;AACD,aAAK,UAAU;AAAA,MACjB;AAAA,IACF;AAGA,wBAAoB,UAAU,YAAY,SAAU,MAAM,OAAO;AAC/D,WAAK,SAAS,QAAQ,QAAQ;AAC9B,WAAK,gBAAgB,UAAU,MAAM,KAAK;AAAA,IAC5C;AAGA,wBAAoB,UAAU,eAAe,SAAU,MAAM;AAC3D,aAAO,KAAK,SAAS,QAAQ;AAC7B,WAAK,gBAAgB,aAAa,IAAI;AAAA,IACxC;AAGA,wBAAoB,UAAU,aAAa,SAAU,OAAO,UAAU;AACpE,UAAIA,QAAO;AAGX,eAAS,iBAAiB,QAAQ;AAChC,eAAO,WAAW,KAAK;AACvB,eAAO,eAAe,WAAW,OAAO,OAAO;AAC/C,eAAO,YAAY,WAAW,OAAO,OAAO;AAAA,MAC9C;AAGA,eAAS,WAAW,QAAQ;AAC1B,YAAIA,MAAK,UAAU;AACjB,uBAAaA,MAAK,QAAQ;AAAA,QAC5B;AACA,QAAAA,MAAK,WAAW,WAAW,WAAY;AACrC,UAAAA,MAAK,KAAK,SAAS;AACnB,qBAAW;AAAA,QACb,GAAG,KAAK;AACR,yBAAiB,MAAM;AAAA,MACzB;AAGA,eAAS,aAAa;AAEpB,YAAIA,MAAK,UAAU;AACjB,uBAAaA,MAAK,QAAQ;AAC1B,UAAAA,MAAK,WAAW;AAAA,QAClB;AAGA,QAAAA,MAAK,eAAe,SAAS,UAAU;AACvC,QAAAA,MAAK,eAAe,SAAS,UAAU;AACvC,QAAAA,MAAK,eAAe,YAAY,UAAU;AAC1C,QAAAA,MAAK,eAAe,SAAS,UAAU;AACvC,YAAI,UAAU;AACZ,UAAAA,MAAK,eAAe,WAAW,QAAQ;AAAA,QACzC;AACA,YAAI,CAACA,MAAK,QAAQ;AAChB,UAAAA,MAAK,gBAAgB,eAAe,UAAU,UAAU;AAAA,QAC1D;AAAA,MACF;AAGA,UAAI,UAAU;AACZ,aAAK,GAAG,WAAW,QAAQ;AAAA,MAC7B;AAGA,UAAI,KAAK,QAAQ;AACf,mBAAW,KAAK,MAAM;AAAA,MACxB,OACK;AACH,aAAK,gBAAgB,KAAK,UAAU,UAAU;AAAA,MAChD;AAGA,WAAK,GAAG,UAAU,gBAAgB;AAClC,WAAK,GAAG,SAAS,UAAU;AAC3B,WAAK,GAAG,SAAS,UAAU;AAC3B,WAAK,GAAG,YAAY,UAAU;AAC9B,WAAK,GAAG,SAAS,UAAU;AAE3B,aAAO;AAAA,IACT;AAGA;AAAA,MACE;AAAA,MAAgB;AAAA,MAChB;AAAA,MAAc;AAAA,IAChB,EAAE,QAAQ,SAAU,QAAQ;AAC1B,0BAAoB,UAAU,UAAU,SAAU,GAAG,GAAG;AACtD,eAAO,KAAK,gBAAgB,QAAQ,GAAG,CAAC;AAAA,MAC1C;AAAA,IACF,CAAC;AAGD,KAAC,WAAW,cAAc,QAAQ,EAAE,QAAQ,SAAU,UAAU;AAC9D,aAAO,eAAe,oBAAoB,WAAW,UAAU;AAAA,QAC7D,KAAK,WAAY;AAAE,iBAAO,KAAK,gBAAgB;AAAA,QAAW;AAAA,MAC5D,CAAC;AAAA,IACH,CAAC;AAED,wBAAoB,UAAU,mBAAmB,SAAU,SAAS;AAElE,UAAI,CAAC,QAAQ,SAAS;AACpB,gBAAQ,UAAU,CAAC;AAAA,MACrB;AAKA,UAAI,QAAQ,MAAM;AAEhB,YAAI,CAAC,QAAQ,UAAU;AACrB,kBAAQ,WAAW,QAAQ;AAAA,QAC7B;AACA,eAAO,QAAQ;AAAA,MACjB;AAGA,UAAI,CAAC,QAAQ,YAAY,QAAQ,MAAM;AACrC,YAAI,YAAY,QAAQ,KAAK,QAAQ,GAAG;AACxC,YAAI,YAAY,GAAG;AACjB,kBAAQ,WAAW,QAAQ;AAAA,QAC7B,OACK;AACH,kBAAQ,WAAW,QAAQ,KAAK,UAAU,GAAG,SAAS;AACtD,kBAAQ,SAAS,QAAQ,KAAK,UAAU,SAAS;AAAA,QACnD;AAAA,MACF;AAAA,IACF;AAIA,wBAAoB,UAAU,kBAAkB,WAAY;AAE1D,UAAI,WAAW,KAAK,SAAS;AAC7B,UAAI,iBAAiB,KAAK,SAAS,gBAAgB;AACnD,UAAI,CAAC,gBAAgB;AACnB,cAAM,IAAI,UAAU,0BAA0B,QAAQ;AAAA,MACxD;AAIA,UAAI,KAAK,SAAS,QAAQ;AACxB,YAAI,SAAS,SAAS,MAAM,GAAG,EAAE;AACjC,aAAK,SAAS,QAAQ,KAAK,SAAS,OAAO;AAAA,MAC7C;AAGA,UAAI,UAAU,KAAK,kBACb,eAAe,QAAQ,KAAK,UAAU,KAAK,iBAAiB;AAClE,cAAQ,gBAAgB;AACxB,eAAS,SAAS,QAAQ;AACxB,gBAAQ,GAAG,OAAO,cAAc,MAAM;AAAA,MACxC;AAIA,WAAK,cAAc,MAAM,KAAK,KAAK,SAAS,IAAI,IAC9CN,KAAI,OAAO,KAAK,QAAQ,IAGxB,KAAK,SAAS;AAIhB,UAAI,KAAK,aAAa;AAEpB,YAAI,IAAI;AACR,YAAIM,QAAO;AACX,YAAI,UAAU,KAAK;AACnB,SAAC,SAAS,UAAU,OAAO;AAGzB,cAAI,YAAYA,MAAK,iBAAiB;AAGpC,gBAAI,OAAO;AACT,cAAAA,MAAK,KAAK,SAAS,KAAK;AAAA,YAC1B,WAES,IAAI,QAAQ,QAAQ;AAC3B,kBAAI,SAAS,QAAQ;AAErB,kBAAI,CAAC,QAAQ,UAAU;AACrB,wBAAQ,MAAM,OAAO,MAAM,OAAO,UAAU,SAAS;AAAA,cACvD;AAAA,YACF,WAESA,MAAK,QAAQ;AACpB,sBAAQ,IAAI;AAAA,YACd;AAAA,UACF;AAAA,QACF,GAAE;AAAA,MACJ;AAAA,IACF;AAGA,wBAAoB,UAAU,mBAAmB,SAAU,UAAU;AAEnE,UAAI,aAAa,SAAS;AAC1B,UAAI,KAAK,SAAS,gBAAgB;AAChC,aAAK,WAAW,KAAK;AAAA,UACnB,KAAK,KAAK;AAAA,UACV,SAAS,SAAS;AAAA,UAClB;AAAA,QACF,CAAC;AAAA,MACH;AAUA,UAAI,WAAW,SAAS,QAAQ;AAChC,UAAI,CAAC,YAAY,KAAK,SAAS,oBAAoB,SAC/C,aAAa,OAAO,cAAc,KAAK;AACzC,iBAAS,cAAc,KAAK;AAC5B,iBAAS,YAAY,KAAK;AAC1B,aAAK,KAAK,YAAY,QAAQ;AAG9B,aAAK,sBAAsB,CAAC;AAC5B;AAAA,MACF;AAGA,qBAAe,KAAK,eAAe;AAEnC,eAAS,QAAQ;AAIjB,UAAI,EAAE,KAAK,iBAAiB,KAAK,SAAS,cAAc;AACtD,cAAM,IAAI,sBAAsB;AAAA,MAClC;AAGA,UAAI;AACJ,UAAI,iBAAiB,KAAK,SAAS;AACnC,UAAI,gBAAgB;AAClB,yBAAiB,OAAO,OAAO;AAAA,UAE7B,MAAM,SAAS,IAAI,UAAU,MAAM;AAAA,QACrC,GAAG,KAAK,SAAS,OAAO;AAAA,MAC1B;AAMA,UAAI,SAAS,KAAK,SAAS;AAC3B,WAAK,eAAe,OAAO,eAAe,QAAQ,KAAK,SAAS,WAAW,UAKtE,eAAe,OAAQ,CAAC,iBAAiB,KAAK,KAAK,SAAS,MAAM,GAAG;AACxE,aAAK,SAAS,SAAS;AAEvB,aAAK,sBAAsB,CAAC;AAC5B,8BAAsB,cAAc,KAAK,SAAS,OAAO;AAAA,MAC3D;AAGA,UAAI,oBAAoB,sBAAsB,WAAW,KAAK,SAAS,OAAO;AAG9E,UAAI,kBAAkB,SAAS,KAAK,WAAW;AAC/C,UAAI,cAAc,qBAAqB,gBAAgB;AACvD,UAAI,aAAa,QAAQ,KAAK,QAAQ,IAAI,KAAK,cAC7CN,KAAI,OAAO,OAAO,OAAO,iBAAiB,EAAE,MAAM,YAAY,CAAC,CAAC;AAGlE,UAAI,cAAc,WAAW,UAAU,UAAU;AACjD,YAAM,kBAAkB,YAAY,IAAI;AACxC,WAAK,cAAc;AACnB,sBAAgB,aAAa,KAAK,QAAQ;AAI1C,UAAI,YAAY,aAAa,gBAAgB,YAC1C,YAAY,aAAa,YACzB,YAAY,SAAS,eACrB,CAAC,YAAY,YAAY,MAAM,WAAW,GAAG;AAC9C,8BAAsB,0CAA0C,KAAK,SAAS,OAAO;AAAA,MACvF;AAGA,UAAII,YAAW,cAAc,GAAG;AAC9B,YAAI,kBAAkB;AAAA,UACpB,SAAS,SAAS;AAAA,UAClB;AAAA,QACF;AACA,YAAI,iBAAiB;AAAA,UACnB,KAAK;AAAA,UACL;AAAA,UACA,SAAS;AAAA,QACX;AACA,uBAAe,KAAK,UAAU,iBAAiB,cAAc;AAC7D,aAAK,iBAAiB,KAAK,QAAQ;AAAA,MACrC;AAGA,WAAK,gBAAgB;AAAA,IACvB;AAGA,aAAS,KAAK,WAAW;AAEvB,UAAIK,WAAU;AAAA,QACZ,cAAc;AAAA,QACd,eAAe,KAAK,OAAO;AAAA,MAC7B;AAGA,UAAI,kBAAkB,CAAC;AACvB,aAAO,KAAK,SAAS,EAAE,QAAQ,SAAU,QAAQ;AAC/C,YAAI,WAAW,SAAS;AACxB,YAAI,iBAAiB,gBAAgB,YAAY,UAAU;AAC3D,YAAI,kBAAkBA,SAAQ,UAAU,OAAO,OAAO,cAAc;AAGpE,iBAAS,QAAQ,OAAO,SAAS,UAAU;AAEzC,cAAI,MAAM,KAAK,GAAG;AAChB,oBAAQ,gBAAgB,KAAK;AAAA,UAC/B,WACSF,UAAS,KAAK,GAAG;AACxB,oBAAQ,gBAAgB,SAAS,KAAK,CAAC;AAAA,UACzC,OACK;AACH,uBAAW;AACX,sBAAU,YAAY,KAAK;AAC3B,oBAAQ,EAAE,SAAmB;AAAA,UAC/B;AACA,cAAIH,YAAW,OAAO,GAAG;AACvB,uBAAW;AACX,sBAAU;AAAA,UACZ;AAGA,oBAAU,OAAO,OAAO;AAAA,YACtB,cAAcK,SAAQ;AAAA,YACtB,eAAeA,SAAQ;AAAA,UACzB,GAAG,OAAO,OAAO;AACjB,kBAAQ,kBAAkB;AAC1B,cAAI,CAACF,UAAS,QAAQ,IAAI,KAAK,CAACA,UAAS,QAAQ,QAAQ,GAAG;AAC1D,oBAAQ,WAAW;AAAA,UACrB;AAEA,iBAAO,MAAM,QAAQ,UAAU,UAAU,mBAAmB;AAC5D,gBAAM,WAAW,OAAO;AACxB,iBAAO,IAAI,oBAAoB,SAAS,QAAQ;AAAA,QAClD;AAGA,iBAAS,IAAI,OAAO,SAAS,UAAU;AACrC,cAAI,iBAAiB,gBAAgB,QAAQ,OAAO,SAAS,QAAQ;AACrE,yBAAe,IAAI;AACnB,iBAAO;AAAA,QACT;AAGA,eAAO,iBAAiB,iBAAiB;AAAA,UACvC,SAAS,EAAE,OAAO,SAAS,cAAc,MAAM,YAAY,MAAM,UAAU,KAAK;AAAA,UAChF,KAAK,EAAE,OAAO,KAAK,cAAc,MAAM,YAAY,MAAM,UAAU,KAAK;AAAA,QAC1E,CAAC;AAAA,MACH,CAAC;AACD,aAAOE;AAAA,IACT;AAEA,aAASJ,QAAO;AAAA,IAAc;AAE9B,aAAS,SAAS,OAAO;AACvB,UAAI;AAEJ,UAAI,cAAc;AAChB,iBAAS,IAAIJ,KAAI,KAAK;AAAA,MACxB,OACK;AAEH,iBAAS,YAAYD,KAAI,MAAM,KAAK,CAAC;AACrC,YAAI,CAACO,UAAS,OAAO,QAAQ,GAAG;AAC9B,gBAAM,IAAI,gBAAgB,EAAE,MAAM,CAAC;AAAA,QACrC;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAEA,aAAS,WAAW,UAAU,MAAM;AAElC,aAAO,eAAe,IAAIN,KAAI,UAAU,IAAI,IAAI,SAASD,KAAI,QAAQ,MAAM,QAAQ,CAAC;AAAA,IACtF;AAEA,aAAS,YAAY,OAAO;AAC1B,UAAI,MAAM,KAAK,MAAM,QAAQ,KAAK,CAAC,oBAAoB,KAAK,MAAM,QAAQ,GAAG;AAC3E,cAAM,IAAI,gBAAgB,EAAE,OAAO,MAAM,QAAQ,MAAM,CAAC;AAAA,MAC1D;AACA,UAAI,MAAM,KAAK,MAAM,IAAI,KAAK,CAAC,2BAA2B,KAAK,MAAM,IAAI,GAAG;AAC1E,cAAM,IAAI,gBAAgB,EAAE,OAAO,MAAM,QAAQ,MAAM,CAAC;AAAA,MAC1D;AACA,aAAO;AAAA,IACT;AAEA,aAAS,gBAAgB,WAAW,QAAQ;AAC1C,UAAIU,UAAS,UAAU,CAAC;AACxB,eAAS,OAAO,oBAAoB;AAClC,QAAAA,QAAO,OAAO,UAAU;AAAA,MAC1B;AAGA,UAAIA,QAAO,SAAS,WAAW,GAAG,GAAG;AACnC,QAAAA,QAAO,WAAWA,QAAO,SAAS,MAAM,GAAG,EAAE;AAAA,MAC/C;AAEA,UAAIA,QAAO,SAAS,IAAI;AACtB,QAAAA,QAAO,OAAO,OAAOA,QAAO,IAAI;AAAA,MAClC;AAEA,MAAAA,QAAO,OAAOA,QAAO,SAASA,QAAO,WAAWA,QAAO,SAASA,QAAO;AAEvE,aAAOA;AAAA,IACT;AAEA,aAAS,sBAAsB,OAAO,SAAS;AAC7C,UAAI;AACJ,eAAS,UAAU,SAAS;AAC1B,YAAI,MAAM,KAAK,MAAM,GAAG;AACtB,sBAAY,QAAQ;AACpB,iBAAO,QAAQ;AAAA,QACjB;AAAA,MACF;AACA,aAAQ,cAAc,QAAQ,OAAO,cAAc,cACjD,SAAY,OAAO,SAAS,EAAE,KAAK;AAAA,IACvC;AAEA,aAAS,gBAAgB,MAAM,SAAS,WAAW;AAEjD,eAAS,YAAY,YAAY;AAE/B,YAAIN,YAAW,MAAM,iBAAiB,GAAG;AACvC,gBAAM,kBAAkB,MAAM,KAAK,WAAW;AAAA,QAChD;AACA,eAAO,OAAO,MAAM,cAAc,CAAC,CAAC;AACpC,aAAK,OAAO;AACZ,aAAK,UAAU,KAAK,QAAQ,UAAU,OAAO,KAAK,MAAM,UAAU;AAAA,MACpE;AAGA,kBAAY,YAAY,KAAK,aAAa,OAAO;AACjD,aAAO,iBAAiB,YAAY,WAAW;AAAA,QAC7C,aAAa;AAAA,UACX,OAAO;AAAA,UACP,YAAY;AAAA,QACd;AAAA,QACA,MAAM;AAAA,UACJ,OAAO,YAAY,OAAO;AAAA,UAC1B,YAAY;AAAA,QACd;AAAA,MACF,CAAC;AACD,aAAO;AAAA,IACT;AAEA,aAAS,eAAe,SAAS,OAAO;AACtC,eAAS,SAAS,QAAQ;AACxB,gBAAQ,eAAe,OAAO,cAAc,MAAM;AAAA,MACpD;AACA,cAAQ,GAAG,SAASC,KAAI;AACxB,cAAQ,QAAQ,KAAK;AAAA,IACvB;AAEA,aAAS,YAAY,WAAW,QAAQ;AACtC,aAAOE,UAAS,SAAS,KAAKA,UAAS,MAAM,CAAC;AAC9C,UAAI,MAAM,UAAU,SAAS,OAAO,SAAS;AAC7C,aAAO,MAAM,KAAK,UAAU,SAAS,OAAO,UAAU,SAAS,MAAM;AAAA,IACvE;AAEA,aAASA,UAAS,OAAO;AACvB,aAAO,OAAO,UAAU,YAAY,iBAAiB;AAAA,IACvD;AAEA,aAASH,YAAW,OAAO;AACzB,aAAO,OAAO,UAAU;AAAA,IAC1B;AAEA,aAASI,UAAS,OAAO;AACvB,aAAO,OAAO,UAAU,YAAa,YAAY;AAAA,IACnD;AAEA,aAAS,MAAM,OAAO;AACpB,aAAOP,QAAO,iBAAiBA;AAAA,IACjC;AAGA,IAAAF,QAAO,UAAU,KAAK,EAAE,MAAMG,OAAM,OAAOC,OAAM,CAAC;AAClD,IAAAJ,QAAO,QAAQ,OAAO;AAAA;AAAA;;;AC7qBtB;AAAA,8EAAAY,SAAA;AAAA,cAAUA,QAAO,UAAU;AAE3B,QAAI;AAEJ,QAAI,OAAO,YAAY,YACnB,QAAQ,OACR,QAAQ,IAAI,cACZ,cAAc,KAAK,QAAQ,IAAI,UAAU,GAAG;AAC9C,cAAQ,WAAY;AAClB,YAAI,OAAO,MAAM,UAAU,MAAM,KAAK,WAAW,CAAC;AAClD,aAAK,QAAQ,QAAQ;AACrB,gBAAQ,IAAI,MAAM,SAAS,IAAI;AAAA,MACjC;AAAA,IACF,OAAO;AACL,cAAQ,WAAY;AAAA,MAAC;AAAA,IACvB;AAIA,YAAQ,sBAAsB;AAE9B,QAAI,aAAa;AACjB,QAAI,mBAAmB,OAAO,oBACD;AAG7B,QAAI,4BAA4B;AAEhC,QAAI,wBAAwB,aAAa;AAGzC,QAAI,KAAK,QAAQ,KAAK,CAAC;AACvB,QAAI,SAAS,QAAQ,SAAS,CAAC;AAC/B,QAAI,MAAM,QAAQ,MAAM,CAAC;AACzB,QAAI,IAAI;AAER,QAAI,mBAAmB;AAQvB,QAAI,wBAAwB;AAAA,MAC1B,CAAC,OAAO,CAAC;AAAA,MACT,CAAC,OAAO,UAAU;AAAA,MAClB,CAAC,kBAAkB,qBAAqB;AAAA,IAC1C;AAEA,aAAS,WAAY,OAAO;AAC1B,eAASC,KAAI,GAAGA,KAAI,sBAAsB,QAAQA,MAAK;AACrD,YAAI,QAAQ,sBAAsBA,IAAG;AACrC,YAAI,MAAM,sBAAsBA,IAAG;AACnC,gBAAQ,MACL,MAAM,QAAQ,GAAG,EAAE,KAAK,QAAQ,QAAQ,MAAM,GAAG,EACjD,MAAM,QAAQ,GAAG,EAAE,KAAK,QAAQ,QAAQ,MAAM,GAAG;AAAA,MACtD;AACA,aAAO;AAAA,IACT;AAQA,QAAI,oBAAoB;AACxB,QAAI,qBAAqB;AACzB,QAAI,yBAAyB;AAC7B,QAAI,0BAA0B;AAM9B,QAAI,uBAAuB;AAC3B,QAAI,wBAAwB,kBAAkB,mBAAmB;AAKjE,QAAI,cAAc;AAClB,QAAI,eAAe,MAAM,IAAI,qBAAqB,UACzB,IAAI,qBAAqB,UACzB,IAAI,qBAAqB;AAElD,QAAI,mBAAmB;AACvB,QAAI,oBAAoB,MAAM,IAAI,0BAA0B,UAC9B,IAAI,0BAA0B,UAC9B,IAAI,0BAA0B;AAK5D,QAAI,uBAAuB;AAC3B,QAAI,wBAAwB,QAAQ,IAAI,qBACZ,MAAM,IAAI,wBAAwB;AAE9D,QAAI,4BAA4B;AAChC,QAAI,6BAA6B,QAAQ,IAAI,0BACZ,MAAM,IAAI,wBAAwB;AAMnE,QAAI,aAAa;AACjB,QAAI,cAAc,UAAU,IAAI,wBACd,WAAW,IAAI,wBAAwB;AAEzD,QAAI,kBAAkB;AACtB,QAAI,mBAAmB,WAAW,IAAI,6BACf,WAAW,IAAI,6BAA6B;AAKnE,QAAI,kBAAkB;AACtB,QAAI,mBAAmB,mBAAmB;AAM1C,QAAI,QAAQ;AACZ,QAAI,SAAS,YAAY,IAAI,mBAChB,WAAW,IAAI,mBAAmB;AAW/C,QAAI,OAAO;AACX,QAAI,YAAY,OAAO,IAAI,eACX,IAAI,cAAc,MAClB,IAAI,SAAS;AAE7B,QAAI,QAAQ,MAAM,YAAY;AAK9B,QAAI,aAAa,aAAa,IAAI,oBACjB,IAAI,mBAAmB,MACvB,IAAI,SAAS;AAE9B,QAAI,QAAQ;AACZ,QAAI,SAAS,MAAM,aAAa;AAEhC,QAAI,OAAO;AACX,QAAI,QAAQ;AAKZ,QAAI,wBAAwB;AAC5B,QAAI,yBAAyB,IAAI,0BAA0B;AAC3D,QAAI,mBAAmB;AACvB,QAAI,oBAAoB,IAAI,qBAAqB;AAEjD,QAAI,cAAc;AAClB,QAAI,eAAe,cAAc,IAAI,oBAAoB,aAC1B,IAAI,oBAAoB,aACxB,IAAI,oBAAoB,SAC5B,IAAI,cAAc,OAC1B,IAAI,SAAS;AAGhC,QAAI,mBAAmB;AACvB,QAAI,oBAAoB,cAAc,IAAI,yBAAyB,aAC/B,IAAI,yBAAyB,aAC7B,IAAI,yBAAyB,SACjC,IAAI,mBAAmB,OAC/B,IAAI,SAAS;AAGrC,QAAI,SAAS;AACb,QAAI,UAAU,MAAM,IAAI,QAAQ,SAAS,IAAI,eAAe;AAC5D,QAAI,cAAc;AAClB,QAAI,eAAe,MAAM,IAAI,QAAQ,SAAS,IAAI,oBAAoB;AAItE,QAAI,SAAS;AACb,QAAI,UAAU,wBACY,4BAA4B,oBACtB,4BAA4B,sBAC5B,4BAA4B;AAK5D,QAAI,YAAY;AAChB,QAAI,aAAa;AAEjB,QAAI,YAAY;AAChB,QAAI,aAAa,WAAW,IAAI,aAAa;AAC7C,OAAG,aAAa,IAAI,OAAO,IAAI,YAAY,GAAG;AAC9C,WAAO,aAAa,IAAI,OAAO,WAAW,IAAI,UAAU,GAAG,GAAG;AAC9D,QAAI,mBAAmB;AAEvB,QAAI,QAAQ;AACZ,QAAI,SAAS,MAAM,IAAI,aAAa,IAAI,eAAe;AACvD,QAAI,aAAa;AACjB,QAAI,cAAc,MAAM,IAAI,aAAa,IAAI,oBAAoB;AAIjE,QAAI,YAAY;AAChB,QAAI,aAAa;AAEjB,QAAI,YAAY;AAChB,QAAI,aAAa,WAAW,IAAI,aAAa;AAC7C,OAAG,aAAa,IAAI,OAAO,IAAI,YAAY,GAAG;AAC9C,WAAO,aAAa,IAAI,OAAO,WAAW,IAAI,UAAU,GAAG,GAAG;AAC9D,QAAI,mBAAmB;AAEvB,QAAI,QAAQ;AACZ,QAAI,SAAS,MAAM,IAAI,aAAa,IAAI,eAAe;AACvD,QAAI,aAAa;AACjB,QAAI,cAAc,MAAM,IAAI,aAAa,IAAI,oBAAoB;AAGjE,QAAI,kBAAkB;AACtB,QAAI,mBAAmB,MAAM,IAAI,QAAQ,UAAU,aAAa;AAChE,QAAI,aAAa;AACjB,QAAI,cAAc,MAAM,IAAI,QAAQ,UAAU,YAAY;AAI1D,QAAI,iBAAiB;AACrB,QAAI,kBAAkB,WAAW,IAAI,QACf,UAAU,aAAa,MAAM,IAAI,eAAe;AAGtE,OAAG,kBAAkB,IAAI,OAAO,IAAI,iBAAiB,GAAG;AACxD,WAAO,kBAAkB,IAAI,OAAO,WAAW,IAAI,eAAe,GAAG,GAAG;AACxE,QAAI,wBAAwB;AAM5B,QAAI,cAAc;AAClB,QAAI,eAAe,WAAW,IAAI,eAAe,gBAExB,IAAI,eAAe;AAG5C,QAAI,mBAAmB;AACvB,QAAI,oBAAoB,WAAW,IAAI,oBAAoB,gBAE7B,IAAI,oBAAoB;AAItD,QAAI,OAAO;AACX,QAAI,QAAQ;AAIZ,SAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,YAAM,GAAG,IAAI,EAAE;AACf,UAAI,CAAC,GAAG,IAAI;AACV,WAAG,KAAK,IAAI,OAAO,IAAI,EAAE;AAQzB,eAAO,KAAK,IAAI,OAAO,WAAW,IAAI,EAAE,CAAC;AAAA,MAC3C;AAAA,IACF;AAbS;AAeT,YAAQ,QAAQC;AAChB,aAASA,OAAO,SAAS,SAAS;AAChC,UAAI,CAAC,WAAW,OAAO,YAAY,UAAU;AAC3C,kBAAU;AAAA,UACR,OAAO,CAAC,CAAC;AAAA,UACT,mBAAmB;AAAA,QACrB;AAAA,MACF;AAEA,UAAI,mBAAmB,QAAQ;AAC7B,eAAO;AAAA,MACT;AAEA,UAAI,OAAO,YAAY,UAAU;AAC/B,eAAO;AAAA,MACT;AAEA,UAAI,QAAQ,SAAS,YAAY;AAC/B,eAAO;AAAA,MACT;AAEA,UAAI,IAAI,QAAQ,QAAQ,OAAO,SAAS,OAAO;AAC/C,UAAI,CAAC,EAAE,KAAK,OAAO,GAAG;AACpB,eAAO;AAAA,MACT;AAEA,UAAI;AACF,eAAO,IAAI,OAAO,SAAS,OAAO;AAAA,MACpC,SAAS,IAAP;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,YAAQ,QAAQ;AAChB,aAAS,MAAO,SAAS,SAAS;AAChC,UAAI,IAAIA,OAAM,SAAS,OAAO;AAC9B,aAAO,IAAI,EAAE,UAAU;AAAA,IACzB;AAEA,YAAQ,QAAQ;AAChB,aAAS,MAAO,SAAS,SAAS;AAChC,UAAI,IAAIA,OAAM,QAAQ,KAAK,EAAE,QAAQ,UAAU,EAAE,GAAG,OAAO;AAC3D,aAAO,IAAI,EAAE,UAAU;AAAA,IACzB;AAEA,YAAQ,SAAS;AAEjB,aAAS,OAAQ,SAAS,SAAS;AACjC,UAAI,CAAC,WAAW,OAAO,YAAY,UAAU;AAC3C,kBAAU;AAAA,UACR,OAAO,CAAC,CAAC;AAAA,UACT,mBAAmB;AAAA,QACrB;AAAA,MACF;AACA,UAAI,mBAAmB,QAAQ;AAC7B,YAAI,QAAQ,UAAU,QAAQ,OAAO;AACnC,iBAAO;AAAA,QACT,OAAO;AACL,oBAAU,QAAQ;AAAA,QACpB;AAAA,MACF,WAAW,OAAO,YAAY,UAAU;AACtC,cAAM,IAAI,UAAU,sBAAsB,OAAO;AAAA,MACnD;AAEA,UAAI,QAAQ,SAAS,YAAY;AAC/B,cAAM,IAAI,UAAU,4BAA4B,aAAa,aAAa;AAAA,MAC5E;AAEA,UAAI,EAAE,gBAAgB,SAAS;AAC7B,eAAO,IAAI,OAAO,SAAS,OAAO;AAAA,MACpC;AAEA,YAAM,UAAU,SAAS,OAAO;AAChC,WAAK,UAAU;AACf,WAAK,QAAQ,CAAC,CAAC,QAAQ;AAEvB,UAAI,IAAI,QAAQ,KAAK,EAAE,MAAM,QAAQ,QAAQ,OAAO,SAAS,OAAO,KAAK;AAEzE,UAAI,CAAC,GAAG;AACN,cAAM,IAAI,UAAU,sBAAsB,OAAO;AAAA,MACnD;AAEA,WAAK,MAAM;AAGX,WAAK,QAAQ,CAAC,EAAE;AAChB,WAAK,QAAQ,CAAC,EAAE;AAChB,WAAK,QAAQ,CAAC,EAAE;AAEhB,UAAI,KAAK,QAAQ,oBAAoB,KAAK,QAAQ,GAAG;AACnD,cAAM,IAAI,UAAU,uBAAuB;AAAA,MAC7C;AAEA,UAAI,KAAK,QAAQ,oBAAoB,KAAK,QAAQ,GAAG;AACnD,cAAM,IAAI,UAAU,uBAAuB;AAAA,MAC7C;AAEA,UAAI,KAAK,QAAQ,oBAAoB,KAAK,QAAQ,GAAG;AACnD,cAAM,IAAI,UAAU,uBAAuB;AAAA,MAC7C;AAGA,UAAI,CAAC,EAAE,IAAI;AACT,aAAK,aAAa,CAAC;AAAA,MACrB,OAAO;AACL,aAAK,aAAa,EAAE,GAAG,MAAM,GAAG,EAAE,IAAI,SAAU,IAAI;AAClD,cAAI,WAAW,KAAK,EAAE,GAAG;AACvB,gBAAI,MAAM,CAAC;AACX,gBAAI,OAAO,KAAK,MAAM,kBAAkB;AACtC,qBAAO;AAAA,YACT;AAAA,UACF;AACA,iBAAO;AAAA,QACT,CAAC;AAAA,MACH;AAEA,WAAK,QAAQ,EAAE,KAAK,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC;AACvC,WAAK,OAAO;AAAA,IACd;AAEA,WAAO,UAAU,SAAS,WAAY;AACpC,WAAK,UAAU,KAAK,QAAQ,MAAM,KAAK,QAAQ,MAAM,KAAK;AAC1D,UAAI,KAAK,WAAW,QAAQ;AAC1B,aAAK,WAAW,MAAM,KAAK,WAAW,KAAK,GAAG;AAAA,MAChD;AACA,aAAO,KAAK;AAAA,IACd;AAEA,WAAO,UAAU,WAAW,WAAY;AACtC,aAAO,KAAK;AAAA,IACd;AAEA,WAAO,UAAU,UAAU,SAAU,OAAO;AAC1C,YAAM,kBAAkB,KAAK,SAAS,KAAK,SAAS,KAAK;AACzD,UAAI,EAAE,iBAAiB,SAAS;AAC9B,gBAAQ,IAAI,OAAO,OAAO,KAAK,OAAO;AAAA,MACxC;AAEA,aAAO,KAAK,YAAY,KAAK,KAAK,KAAK,WAAW,KAAK;AAAA,IACzD;AAEA,WAAO,UAAU,cAAc,SAAU,OAAO;AAC9C,UAAI,EAAE,iBAAiB,SAAS;AAC9B,gBAAQ,IAAI,OAAO,OAAO,KAAK,OAAO;AAAA,MACxC;AAEA,aAAO,mBAAmB,KAAK,OAAO,MAAM,KAAK,KAC1C,mBAAmB,KAAK,OAAO,MAAM,KAAK,KAC1C,mBAAmB,KAAK,OAAO,MAAM,KAAK;AAAA,IACnD;AAEA,WAAO,UAAU,aAAa,SAAU,OAAO;AAC7C,UAAI,EAAE,iBAAiB,SAAS;AAC9B,gBAAQ,IAAI,OAAO,OAAO,KAAK,OAAO;AAAA,MACxC;AAGA,UAAI,KAAK,WAAW,UAAU,CAAC,MAAM,WAAW,QAAQ;AACtD,eAAO;AAAA,MACT,WAAW,CAAC,KAAK,WAAW,UAAU,MAAM,WAAW,QAAQ;AAC7D,eAAO;AAAA,MACT,WAAW,CAAC,KAAK,WAAW,UAAU,CAAC,MAAM,WAAW,QAAQ;AAC9D,eAAO;AAAA,MACT;AAEA,UAAID,KAAI;AACR,SAAG;AACD,YAAI,IAAI,KAAK,WAAWA;AACxB,YAAI,IAAI,MAAM,WAAWA;AACzB,cAAM,sBAAsBA,IAAG,GAAG,CAAC;AACnC,YAAI,MAAM,UAAa,MAAM,QAAW;AACtC,iBAAO;AAAA,QACT,WAAW,MAAM,QAAW;AAC1B,iBAAO;AAAA,QACT,WAAW,MAAM,QAAW;AAC1B,iBAAO;AAAA,QACT,WAAW,MAAM,GAAG;AAClB;AAAA,QACF,OAAO;AACL,iBAAO,mBAAmB,GAAG,CAAC;AAAA,QAChC;AAAA,MACF,SAAS,EAAEA;AAAA,IACb;AAIA,WAAO,UAAU,MAAM,SAAU,SAAS,YAAY;AACpD,cAAQ;AAAA,aACD;AACH,eAAK,WAAW,SAAS;AACzB,eAAK,QAAQ;AACb,eAAK,QAAQ;AACb,eAAK;AACL,eAAK,IAAI,OAAO,UAAU;AAC1B;AAAA,aACG;AACH,eAAK,WAAW,SAAS;AACzB,eAAK,QAAQ;AACb,eAAK;AACL,eAAK,IAAI,OAAO,UAAU;AAC1B;AAAA,aACG;AAIH,eAAK,WAAW,SAAS;AACzB,eAAK,IAAI,SAAS,UAAU;AAC5B,eAAK,IAAI,OAAO,UAAU;AAC1B;AAAA,aAGG;AACH,cAAI,KAAK,WAAW,WAAW,GAAG;AAChC,iBAAK,IAAI,SAAS,UAAU;AAAA,UAC9B;AACA,eAAK,IAAI,OAAO,UAAU;AAC1B;AAAA,aAEG;AAKH,cAAI,KAAK,UAAU,KACf,KAAK,UAAU,KACf,KAAK,WAAW,WAAW,GAAG;AAChC,iBAAK;AAAA,UACP;AACA,eAAK,QAAQ;AACb,eAAK,QAAQ;AACb,eAAK,aAAa,CAAC;AACnB;AAAA,aACG;AAKH,cAAI,KAAK,UAAU,KAAK,KAAK,WAAW,WAAW,GAAG;AACpD,iBAAK;AAAA,UACP;AACA,eAAK,QAAQ;AACb,eAAK,aAAa,CAAC;AACnB;AAAA,aACG;AAKH,cAAI,KAAK,WAAW,WAAW,GAAG;AAChC,iBAAK;AAAA,UACP;AACA,eAAK,aAAa,CAAC;AACnB;AAAA,aAGG;AACH,cAAI,KAAK,WAAW,WAAW,GAAG;AAChC,iBAAK,aAAa,CAAC,CAAC;AAAA,UACtB,OAAO;AACL,gBAAIA,KAAI,KAAK,WAAW;AACxB,mBAAO,EAAEA,MAAK,GAAG;AACf,kBAAI,OAAO,KAAK,WAAWA,QAAO,UAAU;AAC1C,qBAAK,WAAWA;AAChB,gBAAAA,KAAI;AAAA,cACN;AAAA,YACF;AACA,gBAAIA,OAAM,IAAI;AAEZ,mBAAK,WAAW,KAAK,CAAC;AAAA,YACxB;AAAA,UACF;AACA,cAAI,YAAY;AAGd,gBAAI,KAAK,WAAW,OAAO,YAAY;AACrC,kBAAI,MAAM,KAAK,WAAW,EAAE,GAAG;AAC7B,qBAAK,aAAa,CAAC,YAAY,CAAC;AAAA,cAClC;AAAA,YACF,OAAO;AACL,mBAAK,aAAa,CAAC,YAAY,CAAC;AAAA,YAClC;AAAA,UACF;AACA;AAAA;AAGA,gBAAM,IAAI,MAAM,iCAAiC,OAAO;AAAA;AAE5D,WAAK,OAAO;AACZ,WAAK,MAAM,KAAK;AAChB,aAAO;AAAA,IACT;AAEA,YAAQ,MAAM;AACd,aAAS,IAAK,SAAS,SAAS,OAAO,YAAY;AACjD,UAAI,OAAQ,UAAW,UAAU;AAC/B,qBAAa;AACb,gBAAQ;AAAA,MACV;AAEA,UAAI;AACF,eAAO,IAAI,OAAO,SAAS,KAAK,EAAE,IAAI,SAAS,UAAU,EAAE;AAAA,MAC7D,SAAS,IAAP;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,YAAQ,OAAO;AACf,aAAS,KAAM,UAAU,UAAU;AACjC,UAAI,GAAG,UAAU,QAAQ,GAAG;AAC1B,eAAO;AAAA,MACT,OAAO;AACL,YAAI,KAAKC,OAAM,QAAQ;AACvB,YAAI,KAAKA,OAAM,QAAQ;AACvB,YAAI,SAAS;AACb,YAAI,GAAG,WAAW,UAAU,GAAG,WAAW,QAAQ;AAChD,mBAAS;AACT,cAAI,gBAAgB;AAAA,QACtB;AACA,iBAAS,OAAO,IAAI;AAClB,cAAI,QAAQ,WAAW,QAAQ,WAAW,QAAQ,SAAS;AACzD,gBAAI,GAAG,SAAS,GAAG,MAAM;AACvB,qBAAO,SAAS;AAAA,YAClB;AAAA,UACF;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,YAAQ,qBAAqB;AAE7B,QAAI,UAAU;AACd,aAAS,mBAAoB,GAAG,GAAG;AACjC,UAAI,OAAO,QAAQ,KAAK,CAAC;AACzB,UAAI,OAAO,QAAQ,KAAK,CAAC;AAEzB,UAAI,QAAQ,MAAM;AAChB,YAAI,CAAC;AACL,YAAI,CAAC;AAAA,MACP;AAEA,aAAO,MAAM,IAAI,IACZ,QAAQ,CAAC,OAAQ,KACjB,QAAQ,CAAC,OAAQ,IAClB,IAAI,IAAI,KACR;AAAA,IACN;AAEA,YAAQ,sBAAsB;AAC9B,aAAS,oBAAqB,GAAG,GAAG;AAClC,aAAO,mBAAmB,GAAG,CAAC;AAAA,IAChC;AAEA,YAAQ,QAAQ;AAChB,aAAS,MAAO,GAAG,OAAO;AACxB,aAAO,IAAI,OAAO,GAAG,KAAK,EAAE;AAAA,IAC9B;AAEA,YAAQ,QAAQ;AAChB,aAAS,MAAO,GAAG,OAAO;AACxB,aAAO,IAAI,OAAO,GAAG,KAAK,EAAE;AAAA,IAC9B;AAEA,YAAQ,QAAQ;AAChB,aAAS,MAAO,GAAG,OAAO;AACxB,aAAO,IAAI,OAAO,GAAG,KAAK,EAAE;AAAA,IAC9B;AAEA,YAAQ,UAAU;AAClB,aAAS,QAAS,GAAG,GAAG,OAAO;AAC7B,aAAO,IAAI,OAAO,GAAG,KAAK,EAAE,QAAQ,IAAI,OAAO,GAAG,KAAK,CAAC;AAAA,IAC1D;AAEA,YAAQ,eAAe;AACvB,aAAS,aAAc,GAAG,GAAG;AAC3B,aAAO,QAAQ,GAAG,GAAG,IAAI;AAAA,IAC3B;AAEA,YAAQ,WAAW;AACnB,aAAS,SAAU,GAAG,GAAG,OAAO;AAC9B,aAAO,QAAQ,GAAG,GAAG,KAAK;AAAA,IAC5B;AAEA,YAAQ,OAAO;AACf,aAAS,KAAM,MAAM,OAAO;AAC1B,aAAO,KAAK,KAAK,SAAU,GAAG,GAAG;AAC/B,eAAO,QAAQ,QAAQ,GAAG,GAAG,KAAK;AAAA,MACpC,CAAC;AAAA,IACH;AAEA,YAAQ,QAAQ;AAChB,aAAS,MAAO,MAAM,OAAO;AAC3B,aAAO,KAAK,KAAK,SAAU,GAAG,GAAG;AAC/B,eAAO,QAAQ,SAAS,GAAG,GAAG,KAAK;AAAA,MACrC,CAAC;AAAA,IACH;AAEA,YAAQ,KAAK;AACb,aAAS,GAAI,GAAG,GAAG,OAAO;AACxB,aAAO,QAAQ,GAAG,GAAG,KAAK,IAAI;AAAA,IAChC;AAEA,YAAQ,KAAK;AACb,aAAS,GAAI,GAAG,GAAG,OAAO;AACxB,aAAO,QAAQ,GAAG,GAAG,KAAK,IAAI;AAAA,IAChC;AAEA,YAAQ,KAAK;AACb,aAAS,GAAI,GAAG,GAAG,OAAO;AACxB,aAAO,QAAQ,GAAG,GAAG,KAAK,MAAM;AAAA,IAClC;AAEA,YAAQ,MAAM;AACd,aAAS,IAAK,GAAG,GAAG,OAAO;AACzB,aAAO,QAAQ,GAAG,GAAG,KAAK,MAAM;AAAA,IAClC;AAEA,YAAQ,MAAM;AACd,aAAS,IAAK,GAAG,GAAG,OAAO;AACzB,aAAO,QAAQ,GAAG,GAAG,KAAK,KAAK;AAAA,IACjC;AAEA,YAAQ,MAAM;AACd,aAAS,IAAK,GAAG,GAAG,OAAO;AACzB,aAAO,QAAQ,GAAG,GAAG,KAAK,KAAK;AAAA,IACjC;AAEA,YAAQ,MAAM;AACd,aAAS,IAAK,GAAG,IAAI,GAAG,OAAO;AAC7B,cAAQ;AAAA,aACD;AACH,cAAI,OAAO,MAAM;AACf,gBAAI,EAAE;AACR,cAAI,OAAO,MAAM;AACf,gBAAI,EAAE;AACR,iBAAO,MAAM;AAAA,aAEV;AACH,cAAI,OAAO,MAAM;AACf,gBAAI,EAAE;AACR,cAAI,OAAO,MAAM;AACf,gBAAI,EAAE;AACR,iBAAO,MAAM;AAAA,aAEV;AAAA,aACA;AAAA,aACA;AACH,iBAAO,GAAG,GAAG,GAAG,KAAK;AAAA,aAElB;AACH,iBAAO,IAAI,GAAG,GAAG,KAAK;AAAA,aAEnB;AACH,iBAAO,GAAG,GAAG,GAAG,KAAK;AAAA,aAElB;AACH,iBAAO,IAAI,GAAG,GAAG,KAAK;AAAA,aAEnB;AACH,iBAAO,GAAG,GAAG,GAAG,KAAK;AAAA,aAElB;AACH,iBAAO,IAAI,GAAG,GAAG,KAAK;AAAA;AAGtB,gBAAM,IAAI,UAAU,uBAAuB,EAAE;AAAA;AAAA,IAEnD;AAEA,YAAQ,aAAa;AACrB,aAAS,WAAY,MAAM,SAAS;AAClC,UAAI,CAAC,WAAW,OAAO,YAAY,UAAU;AAC3C,kBAAU;AAAA,UACR,OAAO,CAAC,CAAC;AAAA,UACT,mBAAmB;AAAA,QACrB;AAAA,MACF;AAEA,UAAI,gBAAgB,YAAY;AAC9B,YAAI,KAAK,UAAU,CAAC,CAAC,QAAQ,OAAO;AAClC,iBAAO;AAAA,QACT,OAAO;AACL,iBAAO,KAAK;AAAA,QACd;AAAA,MACF;AAEA,UAAI,EAAE,gBAAgB,aAAa;AACjC,eAAO,IAAI,WAAW,MAAM,OAAO;AAAA,MACrC;AAEA,aAAO,KAAK,KAAK,EAAE,MAAM,KAAK,EAAE,KAAK,GAAG;AACxC,YAAM,cAAc,MAAM,OAAO;AACjC,WAAK,UAAU;AACf,WAAK,QAAQ,CAAC,CAAC,QAAQ;AACvB,WAAK,MAAM,IAAI;AAEf,UAAI,KAAK,WAAW,KAAK;AACvB,aAAK,QAAQ;AAAA,MACf,OAAO;AACL,aAAK,QAAQ,KAAK,WAAW,KAAK,OAAO;AAAA,MAC3C;AAEA,YAAM,QAAQ,IAAI;AAAA,IACpB;AAEA,QAAI,MAAM,CAAC;AACX,eAAW,UAAU,QAAQ,SAAU,MAAM;AAC3C,UAAI,IAAI,KAAK,QAAQ,QAAQ,OAAO,mBAAmB,OAAO;AAC9D,UAAI,IAAI,KAAK,MAAM,CAAC;AAEpB,UAAI,CAAC,GAAG;AACN,cAAM,IAAI,UAAU,yBAAyB,IAAI;AAAA,MACnD;AAEA,WAAK,WAAW,EAAE;AAClB,UAAI,KAAK,aAAa,KAAK;AACzB,aAAK,WAAW;AAAA,MAClB;AAGA,UAAI,CAAC,EAAE,IAAI;AACT,aAAK,SAAS;AAAA,MAChB,OAAO;AACL,aAAK,SAAS,IAAI,OAAO,EAAE,IAAI,KAAK,QAAQ,KAAK;AAAA,MACnD;AAAA,IACF;AAEA,eAAW,UAAU,WAAW,WAAY;AAC1C,aAAO,KAAK;AAAA,IACd;AAEA,eAAW,UAAU,OAAO,SAAU,SAAS;AAC7C,YAAM,mBAAmB,SAAS,KAAK,QAAQ,KAAK;AAEpD,UAAI,KAAK,WAAW,KAAK;AACvB,eAAO;AAAA,MACT;AAEA,UAAI,OAAO,YAAY,UAAU;AAC/B,kBAAU,IAAI,OAAO,SAAS,KAAK,OAAO;AAAA,MAC5C;AAEA,aAAO,IAAI,SAAS,KAAK,UAAU,KAAK,QAAQ,KAAK,OAAO;AAAA,IAC9D;AAEA,eAAW,UAAU,aAAa,SAAU,MAAM,SAAS;AACzD,UAAI,EAAE,gBAAgB,aAAa;AACjC,cAAM,IAAI,UAAU,0BAA0B;AAAA,MAChD;AAEA,UAAI,CAAC,WAAW,OAAO,YAAY,UAAU;AAC3C,kBAAU;AAAA,UACR,OAAO,CAAC,CAAC;AAAA,UACT,mBAAmB;AAAA,QACrB;AAAA,MACF;AAEA,UAAI;AAEJ,UAAI,KAAK,aAAa,IAAI;AACxB,mBAAW,IAAIC,OAAM,KAAK,OAAO,OAAO;AACxC,eAAO,UAAU,KAAK,OAAO,UAAU,OAAO;AAAA,MAChD,WAAW,KAAK,aAAa,IAAI;AAC/B,mBAAW,IAAIA,OAAM,KAAK,OAAO,OAAO;AACxC,eAAO,UAAU,KAAK,QAAQ,UAAU,OAAO;AAAA,MACjD;AAEA,UAAI,2BACD,KAAK,aAAa,QAAQ,KAAK,aAAa,SAC5C,KAAK,aAAa,QAAQ,KAAK,aAAa;AAC/C,UAAI,2BACD,KAAK,aAAa,QAAQ,KAAK,aAAa,SAC5C,KAAK,aAAa,QAAQ,KAAK,aAAa;AAC/C,UAAI,aAAa,KAAK,OAAO,YAAY,KAAK,OAAO;AACrD,UAAI,gCACD,KAAK,aAAa,QAAQ,KAAK,aAAa,UAC5C,KAAK,aAAa,QAAQ,KAAK,aAAa;AAC/C,UAAI,6BACF,IAAI,KAAK,QAAQ,KAAK,KAAK,QAAQ,OAAO,OACxC,KAAK,aAAa,QAAQ,KAAK,aAAa,SAC7C,KAAK,aAAa,QAAQ,KAAK,aAAa;AAC/C,UAAI,gCACF,IAAI,KAAK,QAAQ,KAAK,KAAK,QAAQ,OAAO,OACxC,KAAK,aAAa,QAAQ,KAAK,aAAa,SAC7C,KAAK,aAAa,QAAQ,KAAK,aAAa;AAE/C,aAAO,2BAA2B,2BAC/B,cAAc,gCACf,8BAA8B;AAAA,IAClC;AAEA,YAAQ,QAAQA;AAChB,aAASA,OAAO,OAAO,SAAS;AAC9B,UAAI,CAAC,WAAW,OAAO,YAAY,UAAU;AAC3C,kBAAU;AAAA,UACR,OAAO,CAAC,CAAC;AAAA,UACT,mBAAmB;AAAA,QACrB;AAAA,MACF;AAEA,UAAI,iBAAiBA,QAAO;AAC1B,YAAI,MAAM,UAAU,CAAC,CAAC,QAAQ,SAC1B,MAAM,sBAAsB,CAAC,CAAC,QAAQ,mBAAmB;AAC3D,iBAAO;AAAA,QACT,OAAO;AACL,iBAAO,IAAIA,OAAM,MAAM,KAAK,OAAO;AAAA,QACrC;AAAA,MACF;AAEA,UAAI,iBAAiB,YAAY;AAC/B,eAAO,IAAIA,OAAM,MAAM,OAAO,OAAO;AAAA,MACvC;AAEA,UAAI,EAAE,gBAAgBA,SAAQ;AAC5B,eAAO,IAAIA,OAAM,OAAO,OAAO;AAAA,MACjC;AAEA,WAAK,UAAU;AACf,WAAK,QAAQ,CAAC,CAAC,QAAQ;AACvB,WAAK,oBAAoB,CAAC,CAAC,QAAQ;AAKnC,WAAK,MAAM,MACR,KAAK,EACL,MAAM,KAAK,EACX,KAAK,GAAG;AAGX,WAAK,MAAM,KAAK,IAAI,MAAM,IAAI,EAAE,IAAI,SAAUC,QAAO;AACnD,eAAO,KAAK,WAAWA,OAAM,KAAK,CAAC;AAAA,MACrC,GAAG,IAAI,EAAE,OAAO,SAAU,GAAG;AAE3B,eAAO,EAAE;AAAA,MACX,CAAC;AAED,UAAI,CAAC,KAAK,IAAI,QAAQ;AACpB,cAAM,IAAI,UAAU,2BAA2B,KAAK,GAAG;AAAA,MACzD;AAEA,WAAK,OAAO;AAAA,IACd;AAEA,IAAAD,OAAM,UAAU,SAAS,WAAY;AACnC,WAAK,QAAQ,KAAK,IAAI,IAAI,SAAU,OAAO;AACzC,eAAO,MAAM,KAAK,GAAG,EAAE,KAAK;AAAA,MAC9B,CAAC,EAAE,KAAK,IAAI,EAAE,KAAK;AACnB,aAAO,KAAK;AAAA,IACd;AAEA,IAAAA,OAAM,UAAU,WAAW,WAAY;AACrC,aAAO,KAAK;AAAA,IACd;AAEA,IAAAA,OAAM,UAAU,aAAa,SAAU,OAAO;AAC5C,UAAI,QAAQ,KAAK,QAAQ;AAEzB,UAAI,KAAK,QAAQ,OAAO,oBAAoB,OAAO;AACnD,cAAQ,MAAM,QAAQ,IAAI,aAAa;AACvC,YAAM,kBAAkB,KAAK;AAE7B,cAAQ,MAAM,QAAQ,OAAO,iBAAiB,qBAAqB;AACnE,YAAM,mBAAmB,OAAO,OAAO,eAAe;AAGtD,cAAQ,MAAM,QAAQ,OAAO,YAAY,gBAAgB;AAGzD,cAAQ,MAAM,QAAQ,OAAO,YAAY,gBAAgB;AAIzD,UAAI,SAAS,QAAQ,OAAO,mBAAmB,OAAO;AACtD,UAAI,MAAM,MAAM,MAAM,GAAG,EAAE,IAAI,SAAU,MAAM;AAC7C,eAAO,gBAAgB,MAAM,KAAK,OAAO;AAAA,MAC3C,GAAG,IAAI,EAAE,KAAK,GAAG,EAAE,MAAM,KAAK;AAC9B,UAAI,KAAK,QAAQ,OAAO;AAEtB,cAAM,IAAI,OAAO,SAAU,MAAM;AAC/B,iBAAO,CAAC,CAAC,KAAK,MAAM,MAAM;AAAA,QAC5B,CAAC;AAAA,MACH;AACA,YAAM,IAAI,IAAI,SAAU,MAAM;AAC5B,eAAO,IAAI,WAAW,MAAM,KAAK,OAAO;AAAA,MAC1C,GAAG,IAAI;AAEP,aAAO;AAAA,IACT;AAEA,IAAAA,OAAM,UAAU,aAAa,SAAU,OAAO,SAAS;AACrD,UAAI,EAAE,iBAAiBA,SAAQ;AAC7B,cAAM,IAAI,UAAU,qBAAqB;AAAA,MAC3C;AAEA,aAAO,KAAK,IAAI,KAAK,SAAU,iBAAiB;AAC9C,eAAO,gBAAgB,MAAM,SAAU,gBAAgB;AACrD,iBAAO,MAAM,IAAI,KAAK,SAAU,kBAAkB;AAChD,mBAAO,iBAAiB,MAAM,SAAU,iBAAiB;AACvD,qBAAO,eAAe,WAAW,iBAAiB,OAAO;AAAA,YAC3D,CAAC;AAAA,UACH,CAAC;AAAA,QACH,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAGA,YAAQ,gBAAgB;AACxB,aAAS,cAAe,OAAO,SAAS;AACtC,aAAO,IAAIA,OAAM,OAAO,OAAO,EAAE,IAAI,IAAI,SAAU,MAAM;AACvD,eAAO,KAAK,IAAI,SAAU,GAAG;AAC3B,iBAAO,EAAE;AAAA,QACX,CAAC,EAAE,KAAK,GAAG,EAAE,KAAK,EAAE,MAAM,GAAG;AAAA,MAC/B,CAAC;AAAA,IACH;AAKA,aAAS,gBAAiB,MAAM,SAAS;AACvC,YAAM,QAAQ,MAAM,OAAO;AAC3B,aAAO,cAAc,MAAM,OAAO;AAClC,YAAM,SAAS,IAAI;AACnB,aAAO,cAAc,MAAM,OAAO;AAClC,YAAM,UAAU,IAAI;AACpB,aAAO,eAAe,MAAM,OAAO;AACnC,YAAM,UAAU,IAAI;AACpB,aAAO,aAAa,MAAM,OAAO;AACjC,YAAM,SAAS,IAAI;AACnB,aAAO;AAAA,IACT;AAEA,aAAS,IAAK,IAAI;AAChB,aAAO,CAAC,MAAM,GAAG,YAAY,MAAM,OAAO,OAAO;AAAA,IACnD;AAQA,aAAS,cAAe,MAAM,SAAS;AACrC,aAAO,KAAK,KAAK,EAAE,MAAM,KAAK,EAAE,IAAI,SAAUE,OAAM;AAClD,eAAO,aAAaA,OAAM,OAAO;AAAA,MACnC,CAAC,EAAE,KAAK,GAAG;AAAA,IACb;AAEA,aAAS,aAAc,MAAM,SAAS;AACpC,UAAI,IAAI,QAAQ,QAAQ,OAAO,cAAc,OAAO;AACpD,aAAO,KAAK,QAAQ,GAAG,SAAU,GAAG,GAAG,GAAG,GAAG,IAAI;AAC/C,cAAM,SAAS,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE;AACnC,YAAI;AAEJ,YAAI,IAAI,CAAC,GAAG;AACV,gBAAM;AAAA,QACR,WAAW,IAAI,CAAC,GAAG;AACjB,gBAAM,OAAO,IAAI,YAAY,CAAC,IAAI,KAAK;AAAA,QACzC,WAAW,IAAI,CAAC,GAAG;AAEjB,gBAAM,OAAO,IAAI,MAAM,IAAI,SAAS,IAAI,OAAO,CAAC,IAAI,KAAK;AAAA,QAC3D,WAAW,IAAI;AACb,gBAAM,mBAAmB,EAAE;AAC3B,gBAAM,OAAO,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,KACrC,OAAO,IAAI,OAAO,CAAC,IAAI,KAAK;AAAA,QACpC,OAAO;AAEL,gBAAM,OAAO,IAAI,MAAM,IAAI,MAAM,IAC3B,OAAO,IAAI,OAAO,CAAC,IAAI,KAAK;AAAA,QACpC;AAEA,cAAM,gBAAgB,GAAG;AACzB,eAAO;AAAA,MACT,CAAC;AAAA,IACH;AAQA,aAAS,cAAe,MAAM,SAAS;AACrC,aAAO,KAAK,KAAK,EAAE,MAAM,KAAK,EAAE,IAAI,SAAUA,OAAM;AAClD,eAAO,aAAaA,OAAM,OAAO;AAAA,MACnC,CAAC,EAAE,KAAK,GAAG;AAAA,IACb;AAEA,aAAS,aAAc,MAAM,SAAS;AACpC,YAAM,SAAS,MAAM,OAAO;AAC5B,UAAI,IAAI,QAAQ,QAAQ,OAAO,cAAc,OAAO;AACpD,aAAO,KAAK,QAAQ,GAAG,SAAU,GAAG,GAAG,GAAG,GAAG,IAAI;AAC/C,cAAM,SAAS,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE;AACnC,YAAI;AAEJ,YAAI,IAAI,CAAC,GAAG;AACV,gBAAM;AAAA,QACR,WAAW,IAAI,CAAC,GAAG;AACjB,gBAAM,OAAO,IAAI,YAAY,CAAC,IAAI,KAAK;AAAA,QACzC,WAAW,IAAI,CAAC,GAAG;AACjB,cAAI,MAAM,KAAK;AACb,kBAAM,OAAO,IAAI,MAAM,IAAI,SAAS,IAAI,OAAO,CAAC,IAAI,KAAK;AAAA,UAC3D,OAAO;AACL,kBAAM,OAAO,IAAI,MAAM,IAAI,UAAU,CAAC,IAAI,KAAK;AAAA,UACjD;AAAA,QACF,WAAW,IAAI;AACb,gBAAM,mBAAmB,EAAE;AAC3B,cAAI,MAAM,KAAK;AACb,gBAAI,MAAM,KAAK;AACb,oBAAM,OAAO,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,KACrC,OAAO,IAAI,MAAM,IAAI,OAAO,CAAC,IAAI;AAAA,YACzC,OAAO;AACL,oBAAM,OAAO,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,KACrC,OAAO,IAAI,OAAO,CAAC,IAAI,KAAK;AAAA,YACpC;AAAA,UACF,OAAO;AACL,kBAAM,OAAO,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,KACrC,QAAQ,CAAC,IAAI,KAAK;AAAA,UAC1B;AAAA,QACF,OAAO;AACL,gBAAM,OAAO;AACb,cAAI,MAAM,KAAK;AACb,gBAAI,MAAM,KAAK;AACb,oBAAM,OAAO,IAAI,MAAM,IAAI,MAAM,IAC3B,OAAO,IAAI,MAAM,IAAI,OAAO,CAAC,IAAI;AAAA,YACzC,OAAO;AACL,oBAAM,OAAO,IAAI,MAAM,IAAI,MAAM,IAC3B,OAAO,IAAI,OAAO,CAAC,IAAI,KAAK;AAAA,YACpC;AAAA,UACF,OAAO;AACL,kBAAM,OAAO,IAAI,MAAM,IAAI,MAAM,IAC3B,QAAQ,CAAC,IAAI,KAAK;AAAA,UAC1B;AAAA,QACF;AAEA,cAAM,gBAAgB,GAAG;AACzB,eAAO;AAAA,MACT,CAAC;AAAA,IACH;AAEA,aAAS,eAAgB,MAAM,SAAS;AACtC,YAAM,kBAAkB,MAAM,OAAO;AACrC,aAAO,KAAK,MAAM,KAAK,EAAE,IAAI,SAAUA,OAAM;AAC3C,eAAO,cAAcA,OAAM,OAAO;AAAA,MACpC,CAAC,EAAE,KAAK,GAAG;AAAA,IACb;AAEA,aAAS,cAAe,MAAM,SAAS;AACrC,aAAO,KAAK,KAAK;AACjB,UAAI,IAAI,QAAQ,QAAQ,OAAO,eAAe,OAAO;AACrD,aAAO,KAAK,QAAQ,GAAG,SAAU,KAAK,MAAM,GAAG,GAAG,GAAG,IAAI;AACvD,cAAM,UAAU,MAAM,KAAK,MAAM,GAAG,GAAG,GAAG,EAAE;AAC5C,YAAI,KAAK,IAAI,CAAC;AACd,YAAI,KAAK,MAAM,IAAI,CAAC;AACpB,YAAI,KAAK,MAAM,IAAI,CAAC;AACpB,YAAI,OAAO;AAEX,YAAI,SAAS,OAAO,MAAM;AACxB,iBAAO;AAAA,QACT;AAEA,YAAI,IAAI;AACN,cAAI,SAAS,OAAO,SAAS,KAAK;AAEhC,kBAAM;AAAA,UACR,OAAO;AAEL,kBAAM;AAAA,UACR;AAAA,QACF,WAAW,QAAQ,MAAM;AAGvB,cAAI,IAAI;AACN,gBAAI;AAAA,UACN;AACA,cAAI;AAEJ,cAAI,SAAS,KAAK;AAIhB,mBAAO;AACP,gBAAI,IAAI;AACN,kBAAI,CAAC,IAAI;AACT,kBAAI;AACJ,kBAAI;AAAA,YACN,OAAO;AACL,kBAAI,CAAC,IAAI;AACT,kBAAI;AAAA,YACN;AAAA,UACF,WAAW,SAAS,MAAM;AAGxB,mBAAO;AACP,gBAAI,IAAI;AACN,kBAAI,CAAC,IAAI;AAAA,YACX,OAAO;AACL,kBAAI,CAAC,IAAI;AAAA,YACX;AAAA,UACF;AAEA,gBAAM,OAAO,IAAI,MAAM,IAAI,MAAM;AAAA,QACnC,WAAW,IAAI;AACb,gBAAM,OAAO,IAAI,YAAY,CAAC,IAAI,KAAK;AAAA,QACzC,WAAW,IAAI;AACb,gBAAM,OAAO,IAAI,MAAM,IAAI,SAAS,IAAI,OAAO,CAAC,IAAI,KAAK;AAAA,QAC3D;AAEA,cAAM,iBAAiB,GAAG;AAE1B,eAAO;AAAA,MACT,CAAC;AAAA,IACH;AAIA,aAAS,aAAc,MAAM,SAAS;AACpC,YAAM,gBAAgB,MAAM,OAAO;AAEnC,aAAO,KAAK,KAAK,EAAE,QAAQ,OAAO,OAAO,EAAE;AAAA,IAC7C;AAOA,aAAS,cAAe,IACtB,MAAM,IAAI,IAAI,IAAI,KAAK,IACvB,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI;AACzB,UAAI,IAAI,EAAE,GAAG;AACX,eAAO;AAAA,MACT,WAAW,IAAI,EAAE,GAAG;AAClB,eAAO,OAAO,KAAK;AAAA,MACrB,WAAW,IAAI,EAAE,GAAG;AAClB,eAAO,OAAO,KAAK,MAAM,KAAK;AAAA,MAChC,OAAO;AACL,eAAO,OAAO;AAAA,MAChB;AAEA,UAAI,IAAI,EAAE,GAAG;AACX,aAAK;AAAA,MACP,WAAW,IAAI,EAAE,GAAG;AAClB,aAAK,OAAO,CAAC,KAAK,KAAK;AAAA,MACzB,WAAW,IAAI,EAAE,GAAG;AAClB,aAAK,MAAM,KAAK,OAAO,CAAC,KAAK,KAAK;AAAA,MACpC,WAAW,KAAK;AACd,aAAK,OAAO,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM;AAAA,MAC/C,OAAO;AACL,aAAK,OAAO;AAAA,MACd;AAEA,cAAQ,OAAO,MAAM,IAAI,KAAK;AAAA,IAChC;AAGA,IAAAF,OAAM,UAAU,OAAO,SAAU,SAAS;AACxC,UAAI,CAAC,SAAS;AACZ,eAAO;AAAA,MACT;AAEA,UAAI,OAAO,YAAY,UAAU;AAC/B,kBAAU,IAAI,OAAO,SAAS,KAAK,OAAO;AAAA,MAC5C;AAEA,eAASF,KAAI,GAAGA,KAAI,KAAK,IAAI,QAAQA,MAAK;AACxC,YAAI,QAAQ,KAAK,IAAIA,KAAI,SAAS,KAAK,OAAO,GAAG;AAC/C,iBAAO;AAAA,QACT;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAEA,aAAS,QAAS,KAAK,SAAS,SAAS;AACvC,eAASA,KAAI,GAAGA,KAAI,IAAI,QAAQA,MAAK;AACnC,YAAI,CAAC,IAAIA,IAAG,KAAK,OAAO,GAAG;AACzB,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,UAAI,QAAQ,WAAW,UAAU,CAAC,QAAQ,mBAAmB;AAM3D,aAAKA,KAAI,GAAGA,KAAI,IAAI,QAAQA,MAAK;AAC/B,gBAAM,IAAIA,IAAG,MAAM;AACnB,cAAI,IAAIA,IAAG,WAAW,KAAK;AACzB;AAAA,UACF;AAEA,cAAI,IAAIA,IAAG,OAAO,WAAW,SAAS,GAAG;AACvC,gBAAI,UAAU,IAAIA,IAAG;AACrB,gBAAI,QAAQ,UAAU,QAAQ,SAC1B,QAAQ,UAAU,QAAQ,SAC1B,QAAQ,UAAU,QAAQ,OAAO;AACnC,qBAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AAGA,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT;AAEA,YAAQ,YAAY;AACpB,aAAS,UAAW,SAAS,OAAO,SAAS;AAC3C,UAAI;AACF,gBAAQ,IAAIE,OAAM,OAAO,OAAO;AAAA,MAClC,SAAS,IAAP;AACA,eAAO;AAAA,MACT;AACA,aAAO,MAAM,KAAK,OAAO;AAAA,IAC3B;AAEA,YAAQ,gBAAgB;AACxB,aAAS,cAAe,UAAU,OAAO,SAAS;AAChD,UAAI,MAAM;AACV,UAAI,QAAQ;AACZ,UAAI;AACF,YAAI,WAAW,IAAIA,OAAM,OAAO,OAAO;AAAA,MACzC,SAAS,IAAP;AACA,eAAO;AAAA,MACT;AACA,eAAS,QAAQ,SAAU,GAAG;AAC5B,YAAI,SAAS,KAAK,CAAC,GAAG;AAEpB,cAAI,CAAC,OAAO,MAAM,QAAQ,CAAC,MAAM,IAAI;AAEnC,kBAAM;AACN,oBAAQ,IAAI,OAAO,KAAK,OAAO;AAAA,UACjC;AAAA,QACF;AAAA,MACF,CAAC;AACD,aAAO;AAAA,IACT;AAEA,YAAQ,gBAAgB;AACxB,aAAS,cAAe,UAAU,OAAO,SAAS;AAChD,UAAI,MAAM;AACV,UAAI,QAAQ;AACZ,UAAI;AACF,YAAI,WAAW,IAAIA,OAAM,OAAO,OAAO;AAAA,MACzC,SAAS,IAAP;AACA,eAAO;AAAA,MACT;AACA,eAAS,QAAQ,SAAU,GAAG;AAC5B,YAAI,SAAS,KAAK,CAAC,GAAG;AAEpB,cAAI,CAAC,OAAO,MAAM,QAAQ,CAAC,MAAM,GAAG;AAElC,kBAAM;AACN,oBAAQ,IAAI,OAAO,KAAK,OAAO;AAAA,UACjC;AAAA,QACF;AAAA,MACF,CAAC;AACD,aAAO;AAAA,IACT;AAEA,YAAQ,aAAa;AACrB,aAAS,WAAY,OAAO,OAAO;AACjC,cAAQ,IAAIA,OAAM,OAAO,KAAK;AAE9B,UAAI,SAAS,IAAI,OAAO,OAAO;AAC/B,UAAI,MAAM,KAAK,MAAM,GAAG;AACtB,eAAO;AAAA,MACT;AAEA,eAAS,IAAI,OAAO,SAAS;AAC7B,UAAI,MAAM,KAAK,MAAM,GAAG;AACtB,eAAO;AAAA,MACT;AAEA,eAAS;AACT,eAASF,KAAI,GAAGA,KAAI,MAAM,IAAI,QAAQ,EAAEA,IAAG;AACzC,YAAI,cAAc,MAAM,IAAIA;AAE5B,oBAAY,QAAQ,SAAU,YAAY;AAExC,cAAI,UAAU,IAAI,OAAO,WAAW,OAAO,OAAO;AAClD,kBAAQ,WAAW;AAAA,iBACZ;AACH,kBAAI,QAAQ,WAAW,WAAW,GAAG;AACnC,wBAAQ;AAAA,cACV,OAAO;AACL,wBAAQ,WAAW,KAAK,CAAC;AAAA,cAC3B;AACA,sBAAQ,MAAM,QAAQ,OAAO;AAAA,iBAE1B;AAAA,iBACA;AACH,kBAAI,CAAC,UAAU,GAAG,QAAQ,OAAO,GAAG;AAClC,yBAAS;AAAA,cACX;AACA;AAAA,iBACG;AAAA,iBACA;AAEH;AAAA;AAGA,oBAAM,IAAI,MAAM,2BAA2B,WAAW,QAAQ;AAAA;AAAA,QAEpE,CAAC;AAAA,MACH;AAEA,UAAI,UAAU,MAAM,KAAK,MAAM,GAAG;AAChC,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT;AAEA,YAAQ,aAAa;AACrB,aAAS,WAAY,OAAO,SAAS;AACnC,UAAI;AAGF,eAAO,IAAIE,OAAM,OAAO,OAAO,EAAE,SAAS;AAAA,MAC5C,SAAS,IAAP;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAGA,YAAQ,MAAM;AACd,aAAS,IAAK,SAAS,OAAO,SAAS;AACrC,aAAO,QAAQ,SAAS,OAAO,KAAK,OAAO;AAAA,IAC7C;AAGA,YAAQ,MAAM;AACd,aAAS,IAAK,SAAS,OAAO,SAAS;AACrC,aAAO,QAAQ,SAAS,OAAO,KAAK,OAAO;AAAA,IAC7C;AAEA,YAAQ,UAAU;AAClB,aAAS,QAAS,SAAS,OAAO,MAAM,SAAS;AAC/C,gBAAU,IAAI,OAAO,SAAS,OAAO;AACrC,cAAQ,IAAIA,OAAM,OAAO,OAAO;AAEhC,UAAI,MAAM,OAAO,MAAM,MAAM;AAC7B,cAAQ;AAAA,aACD;AACH,iBAAO;AACP,kBAAQ;AACR,iBAAO;AACP,iBAAO;AACP,kBAAQ;AACR;AAAA,aACG;AACH,iBAAO;AACP,kBAAQ;AACR,iBAAO;AACP,iBAAO;AACP,kBAAQ;AACR;AAAA;AAEA,gBAAM,IAAI,UAAU,uCAAuC;AAAA;AAI/D,UAAI,UAAU,SAAS,OAAO,OAAO,GAAG;AACtC,eAAO;AAAA,MACT;AAKA,eAASF,KAAI,GAAGA,KAAI,MAAM,IAAI,QAAQ,EAAEA,IAAG;AACzC,YAAI,cAAc,MAAM,IAAIA;AAE5B,YAAI,OAAO;AACX,YAAI,MAAM;AAEV,oBAAY,QAAQ,SAAU,YAAY;AACxC,cAAI,WAAW,WAAW,KAAK;AAC7B,yBAAa,IAAI,WAAW,SAAS;AAAA,UACvC;AACA,iBAAO,QAAQ;AACf,gBAAM,OAAO;AACb,cAAI,KAAK,WAAW,QAAQ,KAAK,QAAQ,OAAO,GAAG;AACjD,mBAAO;AAAA,UACT,WAAW,KAAK,WAAW,QAAQ,IAAI,QAAQ,OAAO,GAAG;AACvD,kBAAM;AAAA,UACR;AAAA,QACF,CAAC;AAID,YAAI,KAAK,aAAa,QAAQ,KAAK,aAAa,OAAO;AACrD,iBAAO;AAAA,QACT;AAIA,aAAK,CAAC,IAAI,YAAY,IAAI,aAAa,SACnC,MAAM,SAAS,IAAI,MAAM,GAAG;AAC9B,iBAAO;AAAA,QACT,WAAW,IAAI,aAAa,SAAS,KAAK,SAAS,IAAI,MAAM,GAAG;AAC9D,iBAAO;AAAA,QACT;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAEA,YAAQ,aAAa;AACrB,aAAS,WAAY,SAAS,SAAS;AACrC,UAAI,SAASC,OAAM,SAAS,OAAO;AACnC,aAAQ,UAAU,OAAO,WAAW,SAAU,OAAO,aAAa;AAAA,IACpE;AAEA,YAAQ,aAAa;AACrB,aAAS,WAAY,IAAI,IAAI,SAAS;AACpC,WAAK,IAAIC,OAAM,IAAI,OAAO;AAC1B,WAAK,IAAIA,OAAM,IAAI,OAAO;AAC1B,aAAO,GAAG,WAAW,EAAE;AAAA,IACzB;AAEA,YAAQ,SAAS;AACjB,aAAS,OAAQ,SAAS;AACxB,UAAI,mBAAmB,QAAQ;AAC7B,eAAO;AAAA,MACT;AAEA,UAAI,OAAO,YAAY,UAAU;AAC/B,eAAO;AAAA,MACT;AAEA,UAAI,QAAQ,QAAQ,MAAM,OAAO,OAAO;AAExC,UAAI,SAAS,MAAM;AACjB,eAAO;AAAA,MACT;AAEA,aAAOD,OAAM,MAAM,KACjB,OAAO,MAAM,MAAM,OACnB,OAAO,MAAM,MAAM,IAAI;AAAA,IAC3B;AAAA;AAAA;;;ACp/CA;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,aAAS,QAAQ,OAAO;AACpB,aAAO,UAAU,QAAQ,UAAU;AAAA,IACvC;AACA,YAAQ,UAAU;AAClB,aAAS,OAAO,OAAO;AACnB,aAAO,OAAO,UAAU,YAAY,iBAAiB;AAAA,IACzD;AACA,YAAQ,SAAS;AACjB,aAAS,OAAO,OAAO;AACnB,aAAO,OAAO,UAAU,YAAY,iBAAiB;AAAA,IACzD;AACA,YAAQ,SAAS;AACjB,aAAS,MAAM,OAAO;AAClB,aAAO,iBAAiB;AAAA,IAC5B;AACA,YAAQ,QAAQ;AAChB,aAAS,KAAK,OAAO;AACjB,aAAO,OAAO,UAAU;AAAA,IAC5B;AACA,YAAQ,OAAO;AACf,aAAS,MAAM,OAAO;AAClB,aAAO,MAAM,QAAQ,KAAK;AAAA,IAC9B;AACA,YAAQ,QAAQ;AAChB,aAAS,YAAY,OAAO;AACxB,aAAO,MAAM,KAAK,KAAK,MAAM,MAAM,UAAQ,OAAO,IAAI,CAAC;AAAA,IAC3D;AACA,YAAQ,cAAc;AAAA;AAAA;;;ACjCtB;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,KAAK;AAIX,QAAI;AACJ,KAAC,SAAUI,aAAY;AAEnB,MAAAA,YAAW,aAAa;AACxB,MAAAA,YAAW,iBAAiB;AAC5B,MAAAA,YAAW,iBAAiB;AAC5B,MAAAA,YAAW,gBAAgB;AAC3B,MAAAA,YAAW,gBAAgB;AAC3B,MAAAA,YAAW,mBAAmB;AAC9B,MAAAA,YAAW,iBAAiB;AAC5B,MAAAA,YAAW,uBAAuB;AAClC,MAAAA,YAAW,mBAAmB;AAE9B,MAAAA,YAAW,mBAAmB;AAE9B,MAAAA,YAAW,oBAAoB;AAC/B,MAAAA,YAAW,mBAAmB;AAAA,IAClC,GAAG,aAAa,QAAQ,eAAe,QAAQ,aAAa,CAAC,EAAE;AAK/D,QAAM,gBAAN,cAA4B,MAAM;AAAA,MAC9B,YAAY,MAAM,SAAS,MAAM;AAC7B,cAAM,OAAO;AACb,aAAK,OAAO,GAAG,OAAO,IAAI,IAAI,OAAO,WAAW;AAChD,aAAK,OAAO;AACZ,eAAO,eAAe,MAAM,cAAc,SAAS;AAAA,MACvD;AAAA,MACA,SAAS;AACL,eAAO;AAAA,UACH,MAAM,KAAK;AAAA,UACX,SAAS,KAAK;AAAA,UACd,MAAM,KAAK;AAAA,QACf;AAAA,MACJ;AAAA,IACJ;AACA,YAAQ,gBAAgB;AAIxB,QAAM,sBAAN,MAA0B;AAAA,MACtB,YAAY,SAAS,iBAAiB;AAClC,aAAK,UAAU;AACf,aAAK,kBAAkB;AAAA,MAC3B;AAAA,MACA,IAAI,SAAS;AACT,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,IAAI,iBAAiB;AACjB,eAAO,KAAK;AAAA,MAChB;AAAA,IACJ;AACA,YAAQ,sBAAsB;AAI9B,QAAM,eAAN,cAA2B,oBAAoB;AAAA,MAC3C,YAAY,QAAQ;AAChB,cAAM,QAAQ,CAAC;AACf,aAAK,IAAI;AAAA,MACb;AAAA,IACJ;AACA,YAAQ,eAAe;AACvB,QAAM,cAAN,cAA0B,oBAAoB;AAAA,MAC1C,YAAY,QAAQ;AAChB,cAAM,QAAQ,CAAC;AACf,aAAK,IAAI;AAAA,MACb;AAAA,IACJ;AACA,YAAQ,cAAc;AACtB,QAAM,eAAN,cAA2B,oBAAoB;AAAA,MAC3C,YAAY,QAAQ;AAChB,cAAM,QAAQ,CAAC;AACf,aAAK,IAAI;AAAA,MACb;AAAA,IACJ;AACA,YAAQ,eAAe;AACvB,QAAM,eAAN,cAA2B,oBAAoB;AAAA,MAC3C,YAAY,QAAQ;AAChB,cAAM,QAAQ,CAAC;AACf,aAAK,IAAI;AAAA,MACb;AAAA,IACJ;AACA,YAAQ,eAAe;AACvB,QAAM,eAAN,cAA2B,oBAAoB;AAAA,MAC3C,YAAY,QAAQ;AAChB,cAAM,QAAQ,CAAC;AACf,aAAK,IAAI;AAAA,MACb;AAAA,IACJ;AACA,YAAQ,eAAe;AACvB,QAAM,eAAN,cAA2B,oBAAoB;AAAA,MAC3C,YAAY,QAAQ;AAChB,cAAM,QAAQ,CAAC;AACf,aAAK,IAAI;AAAA,MACb;AAAA,IACJ;AACA,YAAQ,eAAe;AACvB,QAAM,eAAN,cAA2B,oBAAoB;AAAA,MAC3C,YAAY,QAAQ;AAChB,cAAM,QAAQ,CAAC;AACf,aAAK,IAAI;AAAA,MACb;AAAA,IACJ;AACA,YAAQ,eAAe;AACvB,QAAM,eAAN,cAA2B,oBAAoB;AAAA,MAC3C,YAAY,QAAQ;AAChB,cAAM,QAAQ,CAAC;AACf,aAAK,IAAI;AAAA,MACb;AAAA,IACJ;AACA,YAAQ,eAAe;AACvB,QAAM,eAAN,cAA2B,oBAAoB;AAAA,MAC3C,YAAY,QAAQ;AAChB,cAAM,QAAQ,CAAC;AACf,aAAK,IAAI;AAAA,MACb;AAAA,IACJ;AACA,YAAQ,eAAe;AACvB,QAAM,eAAN,cAA2B,oBAAoB;AAAA,MAC3C,YAAY,QAAQ;AAChB,cAAM,QAAQ,CAAC;AACf,aAAK,IAAI;AAAA,MACb;AAAA,IACJ;AACA,YAAQ,eAAe;AACvB,QAAM,eAAN,cAA2B,oBAAoB;AAAA,MAC3C,YAAY,QAAQ;AAChB,cAAM,QAAQ,CAAC;AACf,aAAK,IAAI;AAAA,MACb;AAAA,IACJ;AACA,YAAQ,eAAe;AACvB,QAAM,mBAAN,cAA+B,oBAAoB;AAAA,MAC/C,YAAY,QAAQ;AAChB,cAAM,QAAQ,CAAC;AACf,aAAK,IAAI;AAAA,MACb;AAAA,IACJ;AACA,YAAQ,mBAAmB;AAC3B,QAAM,oBAAN,cAAgC,oBAAoB;AAAA,MAChD,YAAY,QAAQ;AAChB,cAAM,QAAQ,CAAC;AACf,aAAK,IAAI;AAAA,MACb;AAAA,IACJ;AACA,YAAQ,oBAAoB;AAC5B,QAAM,oBAAN,cAAgC,oBAAoB;AAAA,MAChD,YAAY,QAAQ;AAChB,cAAM,QAAQ,CAAC;AACf,aAAK,IAAI;AAAA,MACb;AAAA,IACJ;AACA,YAAQ,oBAAoB;AAC5B,QAAM,oBAAN,cAAgC,oBAAoB;AAAA,MAChD,YAAY,QAAQ;AAChB,cAAM,QAAQ,CAAC;AACf,aAAK,IAAI;AAAA,MACb;AAAA,IACJ;AACA,YAAQ,oBAAoB;AAC5B,QAAM,oBAAN,cAAgC,oBAAoB;AAAA,MAChD,YAAY,QAAQ;AAChB,cAAM,QAAQ,CAAC;AACf,aAAK,IAAI;AAAA,MACb;AAAA,IACJ;AACA,YAAQ,oBAAoB;AAC5B,QAAM,oBAAN,cAAgC,oBAAoB;AAAA,MAChD,YAAY,QAAQ;AAChB,cAAM,QAAQ,CAAC;AACf,aAAK,IAAI;AAAA,MACb;AAAA,IACJ;AACA,YAAQ,oBAAoB;AAC5B,QAAM,oBAAN,cAAgC,oBAAoB;AAAA,MAChD,YAAY,QAAQ;AAChB,cAAM,QAAQ,CAAC;AACf,aAAK,IAAI;AAAA,MACb;AAAA,IACJ;AACA,YAAQ,oBAAoB;AAC5B,QAAM,oBAAN,cAAgC,oBAAoB;AAAA,MAChD,YAAY,QAAQ;AAChB,cAAM,QAAQ,CAAC;AACf,aAAK,IAAI;AAAA,MACb;AAAA,IACJ;AACA,YAAQ,oBAAoB;AAC5B,QAAM,oBAAN,cAAgC,oBAAoB;AAAA,MAChD,YAAY,QAAQ;AAChB,cAAM,QAAQ,CAAC;AACf,aAAK,IAAI;AAAA,MACb;AAAA,IACJ;AACA,YAAQ,oBAAoB;AAC5B,QAAM,oBAAN,cAAgC,oBAAoB;AAAA,MAChD,YAAY,QAAQ;AAChB,cAAM,QAAQ,CAAC;AACf,aAAK,IAAI;AAAA,MACb;AAAA,IACJ;AACA,YAAQ,oBAAoB;AAC5B,QAAM,oBAAN,cAAgC,oBAAoB;AAAA,MAChD,YAAY,QAAQ;AAChB,cAAM,QAAQ,CAAC;AACf,aAAK,IAAI;AAAA,MACb;AAAA,IACJ;AACA,YAAQ,oBAAoB;AAI5B,aAAS,iBAAiB,SAAS;AAC/B,UAAI,YAAY;AAChB,aAAO,aAAa,GAAG,OAAO,UAAU,MAAM,MAAM,GAAG,OAAO,UAAU,EAAE,KAAK,GAAG,OAAO,UAAU,EAAE;AAAA,IACzG;AACA,YAAQ,mBAAmB;AAI3B,aAAS,sBAAsB,SAAS;AACpC,UAAI,YAAY;AAChB,aAAO,aAAa,GAAG,OAAO,UAAU,MAAM,KAAK,QAAQ,OAAO;AAAA,IACtE;AACA,YAAQ,wBAAwB;AAIhC,aAAS,kBAAkB,SAAS;AAChC,UAAI,YAAY;AAChB,aAAO,cAAc,UAAU,WAAW,UAAU,CAAC,CAAC,UAAU,WAAW,GAAG,OAAO,UAAU,EAAE,KAAK,GAAG,OAAO,UAAU,EAAE,KAAK,UAAU,OAAO;AAAA,IACtJ;AACA,YAAQ,oBAAoB;AAAA;AAAA;;;ACpP5B;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAI;AACJ,KAAC,SAAUC,aAAY;AACnB,eAAS,OAAO,MAAM;AAClB,eAAO;AAAA,UACH,SAAS;AAAA,QACb;AAAA,MACJ;AACA,MAAAA,YAAW,SAAS;AAAA,IACxB,GAAG,aAAa,QAAQ,eAAe,QAAQ,aAAa,CAAC,EAAE;AAC/D,QAAI;AACJ,KAAC,SAAUC,QAAO;AACd,YAAM,cAAc,EAAE,UAAU;AAAA,MAAE,EAAE;AACpC,MAAAA,OAAM,OAAO,WAAY;AAAE,eAAO;AAAA,MAAa;AAAA,IACnD,GAAG,QAAQ,QAAQ,UAAU,QAAQ,QAAQ,CAAC,EAAE;AAChD,QAAM,eAAN,MAAmB;AAAA,MACf,IAAI,UAAU,UAAU,MAAM,QAAQ;AAClC,YAAI,CAAC,KAAK,YAAY;AAClB,eAAK,aAAa,CAAC;AACnB,eAAK,YAAY,CAAC;AAAA,QACtB;AACA,aAAK,WAAW,KAAK,QAAQ;AAC7B,aAAK,UAAU,KAAK,OAAO;AAC3B,YAAI,MAAM,QAAQ,MAAM,GAAG;AACvB,iBAAO,KAAK,EAAE,SAAS,MAAM,KAAK,OAAO,UAAU,OAAO,EAAE,CAAC;AAAA,QACjE;AAAA,MACJ;AAAA,MACA,OAAO,UAAU,UAAU,MAAM;AAC7B,YAAI,CAAC,KAAK,YAAY;AAClB;AAAA,QACJ;AACA,YAAI,oCAAoC;AACxC,iBAAS,IAAI,GAAG,MAAM,KAAK,WAAW,QAAQ,IAAI,KAAK,KAAK;AACxD,cAAI,KAAK,WAAW,OAAO,UAAU;AACjC,gBAAI,KAAK,UAAU,OAAO,SAAS;AAE/B,mBAAK,WAAW,OAAO,GAAG,CAAC;AAC3B,mBAAK,UAAU,OAAO,GAAG,CAAC;AAC1B;AAAA,YACJ,OACK;AACD,kDAAoC;AAAA,YACxC;AAAA,UACJ;AAAA,QACJ;AACA,YAAI,mCAAmC;AACnC,gBAAM,IAAI,MAAM,mFAAmF;AAAA,QACvG;AAAA,MACJ;AAAA,MACA,UAAU,MAAM;AACZ,YAAI,CAAC,KAAK,YAAY;AAClB,iBAAO,CAAC;AAAA,QACZ;AACA,YAAI,MAAM,CAAC,GAAG,YAAY,KAAK,WAAW,MAAM,CAAC,GAAG,WAAW,KAAK,UAAU,MAAM,CAAC;AACrF,iBAAS,IAAI,GAAG,MAAM,UAAU,QAAQ,IAAI,KAAK,KAAK;AAClD,cAAI;AACA,gBAAI,KAAK,UAAU,GAAG,MAAM,SAAS,IAAI,IAAI,CAAC;AAAA,UAClD,SACO,GAAP;AACI,oBAAQ,MAAM,CAAC;AAAA,UACnB;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA,MACA,UAAU;AACN,eAAO,CAAC,KAAK,cAAc,KAAK,WAAW,WAAW;AAAA,MAC1D;AAAA,MACA,UAAU;AACN,aAAK,aAAa;AAClB,aAAK,YAAY;AAAA,MACrB;AAAA,IACJ;AACA,QAAM,UAAN,MAAc;AAAA,MACV,YAAY,UAAU;AAClB,aAAK,WAAW;AAAA,MACpB;AAAA,MAKA,IAAI,QAAQ;AACR,YAAI,CAAC,KAAK,QAAQ;AACd,eAAK,SAAS,CAAC,UAAU,UAAU,gBAAgB;AAC/C,gBAAI,CAAC,KAAK,YAAY;AAClB,mBAAK,aAAa,IAAI,aAAa;AAAA,YACvC;AACA,gBAAI,KAAK,YAAY,KAAK,SAAS,sBAAsB,KAAK,WAAW,QAAQ,GAAG;AAChF,mBAAK,SAAS,mBAAmB,IAAI;AAAA,YACzC;AACA,iBAAK,WAAW,IAAI,UAAU,QAAQ;AACtC,gBAAI;AACJ,qBAAS;AAAA,cACL,SAAS,MAAM;AACX,qBAAK,WAAW,OAAO,UAAU,QAAQ;AACzC,uBAAO,UAAU,QAAQ;AACzB,oBAAI,KAAK,YAAY,KAAK,SAAS,wBAAwB,KAAK,WAAW,QAAQ,GAAG;AAClF,uBAAK,SAAS,qBAAqB,IAAI;AAAA,gBAC3C;AAAA,cACJ;AAAA,YACJ;AACA,gBAAI,MAAM,QAAQ,WAAW,GAAG;AAC5B,0BAAY,KAAK,MAAM;AAAA,YAC3B;AACA,mBAAO;AAAA,UACX;AAAA,QACJ;AACA,eAAO,KAAK;AAAA,MAChB;AAAA,MAKA,KAAK,OAAO;AACR,YAAI,KAAK,YAAY;AACjB,eAAK,WAAW,OAAO,KAAK,KAAK,YAAY,KAAK;AAAA,QACtD;AAAA,MACJ;AAAA,MACA,UAAU;AACN,YAAI,KAAK,YAAY;AACjB,eAAK,WAAW,QAAQ;AACxB,eAAK,aAAa;AAAA,QACtB;AAAA,MACJ;AAAA,IACJ;AACA,YAAQ,QAAQ,WAAY;AAAA,IAAE;AAC9B,YAAQ,UAAU;AAAA;AAAA;;;AClIlB;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,WAAW;AACjB,QAAMC,MAAK;AACX,QAAI,cAAc;AAClB,QAAI,KAAK,OAAO,KAAK,MAAM,OAAO,EAAE;AACpC,QAAI,KAAK,OAAO,KAAK,MAAM,OAAO,EAAE;AACpC,QAAIC,QAAO;AACX,QAAM,gBAAN,MAAoB;AAAA,MAChB,YAAY,WAAW,QAAQ;AAC3B,aAAK,WAAW;AAChB,aAAK,QAAQ;AACb,aAAK,SAAS,OAAO,YAAY,WAAW;AAAA,MAChD;AAAA,MACA,OAAO,OAAO;AACV,YAAI,WAAW;AACf,YAAI,OAAQ,UAAW,UAAU;AAC7B,cAAI,MAAM;AACV,cAAI,YAAY,OAAO,WAAW,KAAK,KAAK,QAAQ;AACpD,qBAAW,OAAO,YAAY,SAAS;AACvC,mBAAS,MAAM,KAAK,GAAG,WAAW,KAAK,QAAQ;AAAA,QACnD;AACA,YAAI,KAAK,OAAO,SAAS,KAAK,SAAS,SAAS,QAAQ;AACpD,mBAAS,KAAK,KAAK,QAAQ,KAAK,OAAO,GAAG,SAAS,MAAM;AAAA,QAC7D,OACK;AACD,cAAI,WAAW,KAAK,MAAM,KAAK,QAAQ,SAAS,UAAU,WAAW,IAAI,KAAK;AAC9E,cAAI,KAAK,UAAU,GAAG;AAClB,iBAAK,SAAS,OAAO,YAAY,OAAO;AACxC,qBAAS,KAAK,KAAK,QAAQ,GAAG,GAAG,SAAS,MAAM;AAAA,UACpD,OACK;AACD,iBAAK,SAAS,OAAO,OAAO,CAAC,KAAK,OAAO,MAAM,GAAG,KAAK,KAAK,GAAG,QAAQ,GAAG,OAAO;AAAA,UACrF;AAAA,QACJ;AACA,aAAK,SAAS,SAAS;AAAA,MAC3B;AAAA,MACA,iBAAiB;AACb,YAAI,SAAS;AACb,YAAI,UAAU;AACd,eAAO,UAAU,IAAI,KAAK,UAAU,KAAK,OAAO,aAAa,MAAM,KAAK,OAAO,UAAU,OAAO,MAAM,KAAK,OAAO,UAAU,OAAO,MAAM,KAAK,OAAO,UAAU,OAAO,KAAK;AACvK;AAAA,QACJ;AAEA,YAAI,UAAU,KAAK,KAAK,OAAO;AAC3B,iBAAO;AAAA,QACX;AACA,iBAAS,uBAAO,OAAO,IAAI;AAC3B,YAAI,UAAU,KAAK,OAAO,SAAS,SAAS,GAAG,OAAO,EAAE,MAAMA,KAAI;AAClE,gBAAQ,QAAQ,CAAC,WAAW;AACxB,cAAI,QAAQ,OAAO,QAAQ,GAAG;AAC9B,cAAI,UAAU,IAAI;AACd,kBAAM,IAAI,MAAM,oDAAoD;AAAA,UACxE;AACA,cAAI,MAAM,OAAO,OAAO,GAAG,KAAK;AAChC,cAAI,QAAQ,OAAO,OAAO,QAAQ,CAAC,EAAE,KAAK;AAC1C,iBAAO,OAAO;AAAA,QAClB,CAAC;AACD,YAAI,YAAY,UAAU;AAC1B,aAAK,SAAS,KAAK,OAAO,MAAM,SAAS;AACzC,aAAK,QAAQ,KAAK,QAAQ;AAC1B,eAAO;AAAA,MACX;AAAA,MACA,eAAe,QAAQ;AACnB,YAAI,KAAK,QAAQ,QAAQ;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,KAAK,OAAO,SAAS,KAAK,UAAU,GAAG,MAAM;AAC1D,YAAI,YAAY;AAChB,aAAK,OAAO,KAAK,KAAK,QAAQ,GAAG,SAAS;AAC1C,aAAK,QAAQ,KAAK,QAAQ;AAC1B,eAAO;AAAA,MACX;AAAA,MACA,IAAI,gBAAgB;AAChB,eAAO,KAAK;AAAA,MAChB;AAAA,IACJ;AACA,QAAI;AACJ,KAAC,SAAUC,gBAAe;AACtB,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,aAAaF,IAAG,KAAK,UAAU,MAAM,KAAKA,IAAG,KAAK,UAAU,OAAO,KACtEA,IAAG,KAAK,UAAU,OAAO,KAAKA,IAAG,KAAK,UAAU,OAAO,KAAKA,IAAG,KAAK,UAAU,gBAAgB;AAAA,MACtG;AACA,MAAAE,eAAc,KAAK;AAAA,IACvB,GAAG,gBAAgB,QAAQ,kBAAkB,QAAQ,gBAAgB,CAAC,EAAE;AACxE,QAAM,wBAAN,MAA4B;AAAA,MACxB,cAAc;AACV,aAAK,eAAe,IAAI,SAAS,QAAQ;AACzC,aAAK,eAAe,IAAI,SAAS,QAAQ;AACzC,aAAK,wBAAwB,IAAI,SAAS,QAAQ;AAAA,MACtD;AAAA,MACA,UAAU;AACN,aAAK,aAAa,QAAQ;AAC1B,aAAK,aAAa,QAAQ;AAAA,MAC9B;AAAA,MACA,IAAI,UAAU;AACV,eAAO,KAAK,aAAa;AAAA,MAC7B;AAAA,MACA,UAAU,OAAO;AACb,aAAK,aAAa,KAAK,KAAK,QAAQ,KAAK,CAAC;AAAA,MAC9C;AAAA,MACA,IAAI,UAAU;AACV,eAAO,KAAK,aAAa;AAAA,MAC7B;AAAA,MACA,YAAY;AACR,aAAK,aAAa,KAAK,MAAS;AAAA,MACpC;AAAA,MACA,IAAI,mBAAmB;AACnB,eAAO,KAAK,sBAAsB;AAAA,MACtC;AAAA,MACA,mBAAmB,MAAM;AACrB,aAAK,sBAAsB,KAAK,IAAI;AAAA,MACxC;AAAA,MACA,QAAQ,OAAO;AACX,YAAI,iBAAiB,OAAO;AACxB,iBAAO;AAAA,QACX,OACK;AACD,iBAAO,IAAI,MAAM,kCAAkCF,IAAG,OAAO,MAAM,OAAO,IAAI,MAAM,UAAU,WAAW;AAAA,QAC7G;AAAA,MACJ;AAAA,IACJ;AACA,YAAQ,wBAAwB;AAChC,QAAM,sBAAN,cAAkC,sBAAsB;AAAA,MACpD,YAAY,UAAU,WAAW,QAAQ;AACrC,cAAM;AACN,aAAK,WAAW;AAChB,aAAK,SAAS,IAAI,cAAc,QAAQ;AACxC,aAAK,yBAAyB;AAAA,MAClC;AAAA,MACA,IAAI,sBAAsB,SAAS;AAC/B,aAAK,yBAAyB;AAAA,MAClC;AAAA,MACA,IAAI,wBAAwB;AACxB,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,OAAO,UAAU;AACb,aAAK,oBAAoB;AACzB,aAAK,eAAe;AACpB,aAAK,sBAAsB;AAC3B,aAAK,WAAW;AAChB,aAAK,SAAS,GAAG,QAAQ,CAAC,SAAS;AAC/B,eAAK,OAAO,IAAI;AAAA,QACpB,CAAC;AACD,aAAK,SAAS,GAAG,SAAS,CAAC,UAAU,KAAK,UAAU,KAAK,CAAC;AAC1D,aAAK,SAAS,GAAG,SAAS,MAAM,KAAK,UAAU,CAAC;AAAA,MACpD;AAAA,MACA,OAAO,MAAM;AACT,aAAK,OAAO,OAAO,IAAI;AACvB,eAAO,MAAM;AACT,cAAI,KAAK,sBAAsB,IAAI;AAC/B,gBAAI,UAAU,KAAK,OAAO,eAAe;AACzC,gBAAI,CAAC,SAAS;AACV;AAAA,YACJ;AACA,gBAAI,gBAAgB,QAAQ;AAC5B,gBAAI,CAAC,eAAe;AAChB,oBAAM,IAAI,MAAM,gDAAgD;AAAA,YACpE;AACA,gBAAI,SAAS,SAAS,aAAa;AACnC,gBAAI,MAAM,MAAM,GAAG;AACf,oBAAM,IAAI,MAAM,wCAAwC;AAAA,YAC5D;AACA,iBAAK,oBAAoB;AAAA,UAG7B;AACA,cAAI,MAAM,KAAK,OAAO,eAAe,KAAK,iBAAiB;AAC3D,cAAI,QAAQ,MAAM;AAEd,iBAAK,uBAAuB;AAC5B;AAAA,UACJ;AACA,eAAK,yBAAyB;AAC9B,eAAK,oBAAoB;AACzB,eAAK;AACL,cAAI,OAAO,KAAK,MAAM,GAAG;AACzB,eAAK,SAAS,IAAI;AAAA,QACtB;AAAA,MACJ;AAAA,MACA,2BAA2B;AACvB,YAAI,KAAK,qBAAqB;AAC1B,uBAAa,KAAK,mBAAmB;AACrC,eAAK,sBAAsB;AAAA,QAC/B;AAAA,MACJ;AAAA,MACA,yBAAyB;AACrB,aAAK,yBAAyB;AAC9B,YAAI,KAAK,0BAA0B,GAAG;AAClC;AAAA,QACJ;AACA,aAAK,sBAAsB,WAAW,CAAC,OAAO,YAAY;AACtD,eAAK,sBAAsB;AAC3B,cAAI,UAAU,KAAK,cAAc;AAC7B,iBAAK,mBAAmB,EAAE,cAAc,OAAO,aAAa,QAAQ,CAAC;AACrE,iBAAK,uBAAuB;AAAA,UAChC;AAAA,QACJ,GAAG,KAAK,wBAAwB,KAAK,cAAc,KAAK,sBAAsB;AAAA,MAClF;AAAA,IACJ;AACA,YAAQ,sBAAsB;AAC9B,QAAM,mBAAN,cAA+B,sBAAsB;AAAA,MACjD,YAAYG,UAAS;AACjB,cAAM;AACN,aAAK,UAAUA;AACf,YAAI,eAAe,KAAK;AACxB,qBAAa,GAAG,SAAS,CAAC,UAAU,KAAK,UAAU,KAAK,CAAC;AACzD,qBAAa,GAAG,SAAS,MAAM,KAAK,UAAU,CAAC;AAAA,MACnD;AAAA,MACA,OAAO,UAAU;AACb,aAAK,QAAQ,GAAG,WAAW,QAAQ;AAAA,MACvC;AAAA,IACJ;AACA,YAAQ,mBAAmB;AAC3B,QAAM,sBAAN,cAAkC,oBAAoB;AAAA,MAClD,YAAY,QAAQ,WAAW,SAAS;AACpC,cAAM,QAAQ,QAAQ;AAAA,MAC1B;AAAA,IACJ;AACA,YAAQ,sBAAsB;AAAA;AAAA;;;AChO9B;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,WAAW;AACjB,QAAMC,MAAK;AACX,QAAI,gBAAgB;AACpB,QAAIC,QAAO;AACX,QAAI;AACJ,KAAC,SAAUC,gBAAe;AACtB,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,aAAaF,IAAG,KAAK,UAAU,OAAO,KAAKA,IAAG,KAAK,UAAU,OAAO,KACvEA,IAAG,KAAK,UAAU,OAAO,KAAKA,IAAG,KAAK,UAAU,KAAK;AAAA,MAC7D;AACA,MAAAE,eAAc,KAAK;AAAA,IACvB,GAAG,gBAAgB,QAAQ,kBAAkB,QAAQ,gBAAgB,CAAC,EAAE;AACxE,QAAM,wBAAN,MAA4B;AAAA,MACxB,cAAc;AACV,aAAK,eAAe,IAAI,SAAS,QAAQ;AACzC,aAAK,eAAe,IAAI,SAAS,QAAQ;AAAA,MAC7C;AAAA,MACA,UAAU;AACN,aAAK,aAAa,QAAQ;AAC1B,aAAK,aAAa,QAAQ;AAAA,MAC9B;AAAA,MACA,IAAI,UAAU;AACV,eAAO,KAAK,aAAa;AAAA,MAC7B;AAAA,MACA,UAAU,OAAO,SAAS,OAAO;AAC7B,aAAK,aAAa,KAAK,CAAC,KAAK,QAAQ,KAAK,GAAG,SAAS,KAAK,CAAC;AAAA,MAChE;AAAA,MACA,IAAI,UAAU;AACV,eAAO,KAAK,aAAa;AAAA,MAC7B;AAAA,MACA,YAAY;AACR,aAAK,aAAa,KAAK,MAAS;AAAA,MACpC;AAAA,MACA,QAAQ,OAAO;AACX,YAAI,iBAAiB,OAAO;AACxB,iBAAO;AAAA,QACX,OACK;AACD,iBAAO,IAAI,MAAM,kCAAkCF,IAAG,OAAO,MAAM,OAAO,IAAI,MAAM,UAAU,WAAW;AAAA,QAC7G;AAAA,MACJ;AAAA,IACJ;AACA,YAAQ,wBAAwB;AAChC,QAAM,sBAAN,cAAkC,sBAAsB;AAAA,MACpD,YAAY,UAAU,WAAW,QAAQ;AACrC,cAAM;AACN,aAAK,WAAW;AAChB,aAAK,WAAW;AAChB,aAAK,aAAa;AAClB,aAAK,SAAS,GAAG,SAAS,CAAC,UAAU,KAAK,UAAU,KAAK,CAAC;AAC1D,aAAK,SAAS,GAAG,SAAS,MAAM,KAAK,UAAU,CAAC;AAAA,MACpD;AAAA,MACA,MAAM,KAAK;AACP,YAAI,OAAO,KAAK,UAAU,GAAG;AAC7B,YAAI,gBAAgB,OAAO,WAAW,MAAM,KAAK,QAAQ;AACzD,YAAI,UAAU;AAAA,UACV;AAAA,UAAe,cAAc,SAAS;AAAA,UAAGC;AAAA,UACzCA;AAAA,QACJ;AACA,YAAI;AAEA,eAAK,SAAS,MAAM,QAAQ,KAAK,EAAE,GAAG,OAAO;AAE7C,eAAK,SAAS,MAAM,MAAM,KAAK,QAAQ;AACvC,eAAK,aAAa;AAAA,QACtB,SACO,OAAP;AACI,eAAK;AACL,eAAK,UAAU,OAAO,KAAK,KAAK,UAAU;AAAA,QAC9C;AAAA,MACJ;AAAA,IACJ;AACA,YAAQ,sBAAsB;AAC9B,QAAM,mBAAN,cAA+B,sBAAsB;AAAA,MACjD,YAAYE,UAAS;AACjB,cAAM;AACN,aAAK,UAAUA;AACf,aAAK,aAAa;AAClB,aAAK,QAAQ,CAAC;AACd,aAAK,UAAU;AACf,YAAI,eAAe,KAAK;AACxB,qBAAa,GAAG,SAAS,CAAC,UAAU,KAAK,UAAU,KAAK,CAAC;AACzD,qBAAa,GAAG,SAAS,MAAM,KAAK,SAAS;AAAA,MACjD;AAAA,MACA,MAAM,KAAK;AACP,YAAI,CAAC,KAAK,WAAW,KAAK,MAAM,WAAW,GAAG;AAE1C,eAAK,eAAe,GAAG;AAAA,QAC3B,OACK;AACD,eAAK,MAAM,KAAK,GAAG;AAAA,QACvB;AAAA,MACJ;AAAA,MACA,eAAe,KAAK;AAChB,YAAI;AACA,cAAI,KAAK,QAAQ,MAAM;AACnB,iBAAK,UAAU;AACf,iBAAK,QAAQ,KAAK,KAAK,QAAW,QAAW,CAAC,UAAU;AACpD,mBAAK,UAAU;AACf,kBAAI,OAAO;AACP,qBAAK;AACL,qBAAK,UAAU,OAAO,KAAK,KAAK,UAAU;AAAA,cAC9C,OACK;AACD,qBAAK,aAAa;AAAA,cACtB;AACA,kBAAI,KAAK,MAAM,SAAS,GAAG;AACvB,qBAAK,eAAe,KAAK,MAAM,MAAM,CAAC;AAAA,cAC1C;AAAA,YACJ,CAAC;AAAA,UACL;AAAA,QACJ,SACO,OAAP;AACI,eAAK;AACL,eAAK,UAAU,OAAO,KAAK,KAAK,UAAU;AAAA,QAC9C;AAAA,MACJ;AAAA,IACJ;AACA,YAAQ,mBAAmB;AAC3B,QAAM,sBAAN,cAAkC,sBAAsB;AAAA,MACpD,YAAY,QAAQ,WAAW,QAAQ;AACnC,cAAM;AACN,aAAK,SAAS;AACd,aAAK,QAAQ,CAAC;AACd,aAAK,UAAU;AACf,aAAK,WAAW;AAChB,aAAK,aAAa;AAClB,aAAK,OAAO,GAAG,SAAS,CAAC,UAAU,KAAK,UAAU,KAAK,CAAC;AACxD,aAAK,OAAO,GAAG,SAAS,MAAM,KAAK,UAAU,CAAC;AAAA,MAClD;AAAA,MACA,MAAM,KAAK;AACP,YAAI,CAAC,KAAK,WAAW,KAAK,MAAM,WAAW,GAAG;AAE1C,eAAK,eAAe,GAAG;AAAA,QAC3B,OACK;AACD,eAAK,MAAM,KAAK,GAAG;AAAA,QACvB;AAAA,MACJ;AAAA,MACA,eAAe,KAAK;AAChB,YAAI,OAAO,KAAK,UAAU,GAAG;AAC7B,YAAI,gBAAgB,OAAO,WAAW,MAAM,KAAK,QAAQ;AACzD,YAAI,UAAU;AAAA,UACV;AAAA,UAAe,cAAc,SAAS;AAAA,UAAGF;AAAA,UACzCA;AAAA,QACJ;AACA,YAAI;AAEA,eAAK,UAAU;AACf,eAAK,OAAO,MAAM,QAAQ,KAAK,EAAE,GAAG,SAAS,CAAC,UAAU;AACpD,gBAAI,OAAO;AACP,mBAAK,YAAY,OAAO,GAAG;AAAA,YAC/B;AACA,gBAAI;AAEA,mBAAK,OAAO,MAAM,MAAM,KAAK,UAAU,CAACG,WAAU;AAC9C,qBAAK,UAAU;AACf,oBAAIA,QAAO;AACP,uBAAK,YAAYA,QAAO,GAAG;AAAA,gBAC/B,OACK;AACD,uBAAK,aAAa;AAAA,gBACtB;AACA,oBAAI,KAAK,MAAM,SAAS,GAAG;AACvB,uBAAK,eAAe,KAAK,MAAM,MAAM,CAAC;AAAA,gBAC1C;AAAA,cACJ,CAAC;AAAA,YACL,SACOA,QAAP;AACI,mBAAK,YAAYA,QAAO,GAAG;AAAA,YAC/B;AAAA,UACJ,CAAC;AAAA,QACL,SACO,OAAP;AACI,eAAK,YAAY,OAAO,GAAG;AAAA,QAC/B;AAAA,MACJ;AAAA,MACA,YAAY,OAAO,KAAK;AACpB,aAAK;AACL,aAAK,UAAU,OAAO,KAAK,KAAK,UAAU;AAAA,MAC9C;AAAA,IACJ;AACA,YAAQ,sBAAsB;AAAA;AAAA;;;AC7L9B;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,WAAW;AACjB,QAAMC,MAAK;AACX,QAAI;AACJ,KAAC,SAAUC,oBAAmB;AAC1B,MAAAA,mBAAkB,OAAO,OAAO,OAAO;AAAA,QACnC,yBAAyB;AAAA,QACzB,yBAAyB,SAAS,MAAM;AAAA,MAC5C,CAAC;AACD,MAAAA,mBAAkB,YAAY,OAAO,OAAO;AAAA,QACxC,yBAAyB;AAAA,QACzB,yBAAyB,SAAS,MAAM;AAAA,MAC5C,CAAC;AACD,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,cAAc,cAAcA,mBAAkB,QAC9C,cAAcA,mBAAkB,aAC/BD,IAAG,QAAQ,UAAU,uBAAuB,KAAK,CAAC,CAAC,UAAU;AAAA,MACzE;AACA,MAAAC,mBAAkB,KAAK;AAAA,IAC3B,GAAG,oBAAoB,QAAQ,sBAAsB,QAAQ,oBAAoB,CAAC,EAAE;AACpF,QAAM,gBAAgB,OAAO,OAAO,SAAU,UAAU,SAAS;AAC7D,UAAI,SAAS,WAAW,SAAS,KAAK,OAAO,GAAG,CAAC;AACjD,aAAO,EAAE,UAAU;AAAE,qBAAa,MAAM;AAAA,MAAG,EAAE;AAAA,IACjD,CAAC;AACD,QAAM,eAAN,MAAmB;AAAA,MACf,cAAc;AACV,aAAK,eAAe;AAAA,MACxB;AAAA,MACA,SAAS;AACL,YAAI,CAAC,KAAK,cAAc;AACpB,eAAK,eAAe;AACpB,cAAI,KAAK,UAAU;AACf,iBAAK,SAAS,KAAK,MAAS;AAC5B,iBAAK,WAAW;AAAA,UACpB;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,IAAI,0BAA0B;AAC1B,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,IAAI,0BAA0B;AAC1B,YAAI,KAAK,cAAc;AACnB,iBAAO;AAAA,QACX;AACA,YAAI,CAAC,KAAK,UAAU;AAChB,eAAK,WAAW,IAAI,SAAS,QAAQ;AAAA,QACzC;AACA,eAAO,KAAK,SAAS;AAAA,MACzB;AAAA,IACJ;AACA,QAAMC,2BAAN,MAA8B;AAAA,MAC1B,IAAI,QAAQ;AACR,YAAI,CAAC,KAAK,QAAQ;AAGd,eAAK,SAAS,IAAI,aAAa;AAAA,QACnC;AACA,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,SAAS;AACL,YAAI,CAAC,KAAK,QAAQ;AAId,eAAK,SAAS,kBAAkB;AAAA,QACpC,OACK;AACD,eAAK,OAAO,OAAO;AAAA,QACvB;AAAA,MACJ;AAAA,MACA,UAAU;AACN,aAAK,OAAO;AAAA,MAChB;AAAA,IACJ;AACA,YAAQ,0BAA0BA;AAAA;AAAA;;;AChFlC;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAI;AACJ,KAAC,SAAUC,QAAO;AACd,MAAAA,OAAM,OAAO;AACb,MAAAA,OAAM,QAAQ;AACd,MAAAA,OAAM,OAAO;AAAA,IACjB,GAAG,QAAQ,QAAQ,UAAU,QAAQ,QAAQ,CAAC,EAAE;AAChD,QAAM,YAAN,MAAgB;AAAA,MACZ,cAAc;AACV,aAAK,OAAO,oBAAI,IAAI;AACpB,aAAK,QAAQ;AACb,aAAK,QAAQ;AACb,aAAK,QAAQ;AAAA,MACjB;AAAA,MACA,QAAQ;AACJ,aAAK,KAAK,MAAM;AAChB,aAAK,QAAQ;AACb,aAAK,QAAQ;AACb,aAAK,QAAQ;AAAA,MACjB;AAAA,MACA,UAAU;AACN,eAAO,CAAC,KAAK,SAAS,CAAC,KAAK;AAAA,MAChC;AAAA,MACA,IAAI,OAAO;AACP,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,IAAI,KAAK;AACL,eAAO,KAAK,KAAK,IAAI,GAAG;AAAA,MAC5B;AAAA,MACA,IAAI,KAAK;AACL,cAAM,OAAO,KAAK,KAAK,IAAI,GAAG;AAC9B,YAAI,CAAC,MAAM;AACP,iBAAO;AAAA,QACX;AACA,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,IAAI,KAAK,OAAO,QAAQ,MAAM,MAAM;AAChC,YAAI,OAAO,KAAK,KAAK,IAAI,GAAG;AAC5B,YAAI,MAAM;AACN,eAAK,QAAQ;AACb,cAAI,UAAU,MAAM,MAAM;AACtB,iBAAK,MAAM,MAAM,KAAK;AAAA,UAC1B;AAAA,QACJ,OACK;AACD,iBAAO,EAAE,KAAK,OAAO,MAAM,QAAW,UAAU,OAAU;AAC1D,kBAAQ;AAAA,iBACC,MAAM;AACP,mBAAK,YAAY,IAAI;AACrB;AAAA,iBACC,MAAM;AACP,mBAAK,aAAa,IAAI;AACtB;AAAA,iBACC,MAAM;AACP,mBAAK,YAAY,IAAI;AACrB;AAAA;AAEA,mBAAK,YAAY,IAAI;AACrB;AAAA;AAER,eAAK,KAAK,IAAI,KAAK,IAAI;AACvB,eAAK;AAAA,QACT;AAAA,MACJ;AAAA,MACA,OAAO,KAAK;AACR,cAAM,OAAO,KAAK,KAAK,IAAI,GAAG;AAC9B,YAAI,CAAC,MAAM;AACP,iBAAO;AAAA,QACX;AACA,aAAK,KAAK,OAAO,GAAG;AACpB,aAAK,WAAW,IAAI;AACpB,aAAK;AACL,eAAO;AAAA,MACX;AAAA,MACA,QAAQ;AACJ,YAAI,CAAC,KAAK,SAAS,CAAC,KAAK,OAAO;AAC5B,iBAAO;AAAA,QACX;AACA,YAAI,CAAC,KAAK,SAAS,CAAC,KAAK,OAAO;AAC5B,gBAAM,IAAI,MAAM,cAAc;AAAA,QAClC;AACA,cAAM,OAAO,KAAK;AAClB,aAAK,KAAK,OAAO,KAAK,GAAG;AACzB,aAAK,WAAW,IAAI;AACpB,aAAK;AACL,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,QAAQ,YAAY,SAAS;AACzB,YAAI,UAAU,KAAK;AACnB,eAAO,SAAS;AACZ,cAAI,SAAS;AACT,uBAAW,KAAK,OAAO,EAAE,QAAQ,OAAO,QAAQ,KAAK,IAAI;AAAA,UAC7D,OACK;AACD,uBAAW,QAAQ,OAAO,QAAQ,KAAK,IAAI;AAAA,UAC/C;AACA,oBAAU,QAAQ;AAAA,QACtB;AAAA,MACJ;AAAA,MACA,eAAe,YAAY,SAAS;AAChC,YAAI,UAAU,KAAK;AACnB,eAAO,SAAS;AACZ,cAAI,SAAS;AACT,uBAAW,KAAK,OAAO,EAAE,QAAQ,OAAO,QAAQ,KAAK,IAAI;AAAA,UAC7D,OACK;AACD,uBAAW,QAAQ,OAAO,QAAQ,KAAK,IAAI;AAAA,UAC/C;AACA,oBAAU,QAAQ;AAAA,QACtB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,YAAI,SAAS,CAAC;AACd,YAAI,UAAU,KAAK;AACnB,eAAO,SAAS;AACZ,iBAAO,KAAK,QAAQ,KAAK;AACzB,oBAAU,QAAQ;AAAA,QACtB;AACA,eAAO;AAAA,MACX;AAAA,MACA,OAAO;AACH,YAAI,SAAS,CAAC;AACd,YAAI,UAAU,KAAK;AACnB,eAAO,SAAS;AACZ,iBAAO,KAAK,QAAQ,GAAG;AACvB,oBAAU,QAAQ;AAAA,QACtB;AACA,eAAO;AAAA,MACX;AAAA,MAwCA,aAAa,MAAM;AAEf,YAAI,CAAC,KAAK,SAAS,CAAC,KAAK,OAAO;AAC5B,eAAK,QAAQ;AAAA,QACjB,WACS,CAAC,KAAK,OAAO;AAClB,gBAAM,IAAI,MAAM,cAAc;AAAA,QAClC,OACK;AACD,eAAK,OAAO,KAAK;AACjB,eAAK,MAAM,WAAW;AAAA,QAC1B;AACA,aAAK,QAAQ;AAAA,MACjB;AAAA,MACA,YAAY,MAAM;AAEd,YAAI,CAAC,KAAK,SAAS,CAAC,KAAK,OAAO;AAC5B,eAAK,QAAQ;AAAA,QACjB,WACS,CAAC,KAAK,OAAO;AAClB,gBAAM,IAAI,MAAM,cAAc;AAAA,QAClC,OACK;AACD,eAAK,WAAW,KAAK;AACrB,eAAK,MAAM,OAAO;AAAA,QACtB;AACA,aAAK,QAAQ;AAAA,MACjB;AAAA,MACA,WAAW,MAAM;AACb,YAAI,SAAS,KAAK,SAAS,SAAS,KAAK,OAAO;AAC5C,eAAK,QAAQ;AACb,eAAK,QAAQ;AAAA,QACjB,WACS,SAAS,KAAK,OAAO;AAC1B,eAAK,QAAQ,KAAK;AAAA,QACtB,WACS,SAAS,KAAK,OAAO;AAC1B,eAAK,QAAQ,KAAK;AAAA,QACtB,OACK;AACD,gBAAM,OAAO,KAAK;AAClB,gBAAM,WAAW,KAAK;AACtB,cAAI,CAAC,QAAQ,CAAC,UAAU;AACpB,kBAAM,IAAI,MAAM,cAAc;AAAA,UAClC;AACA,eAAK,WAAW;AAChB,mBAAS,OAAO;AAAA,QACpB;AAAA,MACJ;AAAA,MACA,MAAM,MAAM,OAAO;AACf,YAAI,CAAC,KAAK,SAAS,CAAC,KAAK,OAAO;AAC5B,gBAAM,IAAI,MAAM,cAAc;AAAA,QAClC;AACA,YAAK,UAAU,MAAM,SAAS,UAAU,MAAM,MAAO;AACjD;AAAA,QACJ;AACA,YAAI,UAAU,MAAM,OAAO;AACvB,cAAI,SAAS,KAAK,OAAO;AACrB;AAAA,UACJ;AACA,gBAAM,OAAO,KAAK;AAClB,gBAAM,WAAW,KAAK;AAEtB,cAAI,SAAS,KAAK,OAAO;AAGrB,qBAAS,OAAO;AAChB,iBAAK,QAAQ;AAAA,UACjB,OACK;AAED,iBAAK,WAAW;AAChB,qBAAS,OAAO;AAAA,UACpB;AAEA,eAAK,WAAW;AAChB,eAAK,OAAO,KAAK;AACjB,eAAK,MAAM,WAAW;AACtB,eAAK,QAAQ;AAAA,QACjB,WACS,UAAU,MAAM,MAAM;AAC3B,cAAI,SAAS,KAAK,OAAO;AACrB;AAAA,UACJ;AACA,gBAAM,OAAO,KAAK;AAClB,gBAAM,WAAW,KAAK;AAEtB,cAAI,SAAS,KAAK,OAAO;AAGrB,iBAAK,WAAW;AAChB,iBAAK,QAAQ;AAAA,UACjB,OACK;AAED,iBAAK,WAAW;AAChB,qBAAS,OAAO;AAAA,UACpB;AACA,eAAK,OAAO;AACZ,eAAK,WAAW,KAAK;AACrB,eAAK,MAAM,OAAO;AAClB,eAAK,QAAQ;AAAA,QACjB;AAAA,MACJ;AAAA,IACJ;AACA,YAAQ,YAAY;AAAA;AAAA;;;ACtRpB;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,SAAS,QAAQ;AACvB,QAAM,OAAO,QAAQ;AACrB,QAAM,WAAW,QAAQ;AACzB,QAAM,QAAQ,QAAQ;AACtB,QAAM,kBAAkB;AACxB,QAAM,kBAAkB;AACxB,aAAS,yBAAyB;AAC9B,YAAM,eAAe,SAAS,YAAY,EAAE,EAAE,SAAS,KAAK;AAC5D,UAAI,QAAQ,aAAa,SAAS;AAC9B,eAAO,+BAA+B;AAAA,MAC1C,OACK;AAED,eAAO,OAAO,KAAK,KAAK,OAAO,GAAG,UAAU,mBAAmB;AAAA,MACnE;AAAA,IACJ;AACA,YAAQ,yBAAyB;AACjC,aAAS,0BAA0B,UAAU,WAAW,SAAS;AAC7D,UAAI;AACJ,UAAI,YAAY,IAAI,QAAQ,CAAC,SAAS,YAAY;AAC9C,yBAAiB;AAAA,MACrB,CAAC;AACD,aAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,YAAI,SAAS,MAAM,aAAa,CAAC,WAAW;AACxC,iBAAO,MAAM;AACb,yBAAe;AAAA,YACX,IAAI,gBAAgB,oBAAoB,QAAQ,QAAQ;AAAA,YACxD,IAAI,gBAAgB,oBAAoB,QAAQ,QAAQ;AAAA,UAC5D,CAAC;AAAA,QACL,CAAC;AACD,eAAO,GAAG,SAAS,MAAM;AACzB,eAAO,OAAO,UAAU,MAAM;AAC1B,iBAAO,eAAe,SAAS,MAAM;AACrC,kBAAQ;AAAA,YACJ,aAAa,MAAM;AAAE,qBAAO;AAAA,YAAW;AAAA,UAC3C,CAAC;AAAA,QACL,CAAC;AAAA,MACL,CAAC;AAAA,IACL;AACA,YAAQ,4BAA4B;AACpC,aAAS,0BAA0B,UAAU,WAAW,SAAS;AAC7D,YAAM,SAAS,MAAM,iBAAiB,QAAQ;AAC9C,aAAO;AAAA,QACH,IAAI,gBAAgB,oBAAoB,QAAQ,QAAQ;AAAA,QACxD,IAAI,gBAAgB,oBAAoB,QAAQ,QAAQ;AAAA,MAC5D;AAAA,IACJ;AACA,YAAQ,4BAA4B;AAAA;AAAA;;;ACrDpC;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,QAAQ,QAAQ;AACtB,QAAM,kBAAkB;AACxB,QAAM,kBAAkB;AACxB,aAAS,4BAA4B,MAAM,WAAW,SAAS;AAC3D,UAAI;AACJ,UAAI,YAAY,IAAI,QAAQ,CAAC,SAAS,YAAY;AAC9C,yBAAiB;AAAA,MACrB,CAAC;AACD,aAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,YAAI,SAAS,MAAM,aAAa,CAAC,WAAW;AACxC,iBAAO,MAAM;AACb,yBAAe;AAAA,YACX,IAAI,gBAAgB,oBAAoB,QAAQ,QAAQ;AAAA,YACxD,IAAI,gBAAgB,oBAAoB,QAAQ,QAAQ;AAAA,UAC5D,CAAC;AAAA,QACL,CAAC;AACD,eAAO,GAAG,SAAS,MAAM;AACzB,eAAO,OAAO,MAAM,aAAa,MAAM;AACnC,iBAAO,eAAe,SAAS,MAAM;AACrC,kBAAQ;AAAA,YACJ,aAAa,MAAM;AAAE,qBAAO;AAAA,YAAW;AAAA,UAC3C,CAAC;AAAA,QACL,CAAC;AAAA,MACL,CAAC;AAAA,IACL;AACA,YAAQ,8BAA8B;AACtC,aAAS,4BAA4B,MAAM,WAAW,SAAS;AAC3D,YAAM,SAAS,MAAM,iBAAiB,MAAM,WAAW;AACvD,aAAO;AAAA,QACH,IAAI,gBAAgB,oBAAoB,QAAQ,QAAQ;AAAA,QACxD,IAAI,gBAAgB,oBAAoB,QAAQ,QAAQ;AAAA,MAC5D;AAAA,IACJ;AACA,YAAQ,8BAA8B;AAAA;AAAA;;;ACvCtC;AAAA;AAAA;AAMA,aAASC,UAAS,GAAG;AACjB,eAAS,KAAK;AAAG,YAAI,CAAC,QAAQ,eAAe,CAAC;AAAG,kBAAQ,KAAK,EAAE;AAAA,IACpE;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAMC,MAAK;AACX,QAAM,aAAa;AACnB,YAAQ,cAAc,WAAW;AACjC,YAAQ,eAAe,WAAW;AAClC,YAAQ,eAAe,WAAW;AAClC,YAAQ,eAAe,WAAW;AAClC,YAAQ,eAAe,WAAW;AAClC,YAAQ,eAAe,WAAW;AAClC,YAAQ,eAAe,WAAW;AAClC,YAAQ,eAAe,WAAW;AAClC,YAAQ,eAAe,WAAW;AAClC,YAAQ,eAAe,WAAW;AAClC,YAAQ,eAAe,WAAW;AAClC,YAAQ,gBAAgB,WAAW;AACnC,YAAQ,aAAa,WAAW;AAChC,YAAQ,mBAAmB,WAAW;AACtC,YAAQ,oBAAoB,WAAW;AACvC,YAAQ,oBAAoB,WAAW;AACvC,YAAQ,oBAAoB,WAAW;AACvC,YAAQ,oBAAoB,WAAW;AACvC,YAAQ,oBAAoB,WAAW;AACvC,YAAQ,oBAAoB,WAAW;AACvC,YAAQ,oBAAoB,WAAW;AACvC,YAAQ,oBAAoB,WAAW;AACvC,YAAQ,oBAAoB,WAAW;AACvC,YAAQ,oBAAoB,WAAW;AACvC,QAAM,kBAAkB;AACxB,YAAQ,gBAAgB,gBAAgB;AACxC,YAAQ,sBAAsB,gBAAgB;AAC9C,YAAQ,mBAAmB,gBAAgB;AAC3C,YAAQ,sBAAsB,gBAAgB;AAC9C,QAAM,kBAAkB;AACxB,YAAQ,gBAAgB,gBAAgB;AACxC,YAAQ,sBAAsB,gBAAgB;AAC9C,YAAQ,mBAAmB,gBAAgB;AAC3C,YAAQ,sBAAsB,gBAAgB;AAC9C,QAAM,WAAW;AACjB,YAAQ,aAAa,SAAS;AAC9B,YAAQ,QAAQ,SAAS;AACzB,YAAQ,UAAU,SAAS;AAC3B,QAAM,iBAAiB;AACvB,YAAQ,0BAA0B,eAAe;AACjD,YAAQ,oBAAoB,eAAe;AAC3C,QAAM,cAAc;AACpB,IAAAD,UAAS,qBAAwB;AACjC,IAAAA,UAAS,uBAA0B;AACnC,QAAI;AACJ,KAAC,SAAUE,qBAAoB;AAC3B,MAAAA,oBAAmB,OAAO,IAAI,WAAW,iBAAiB,iBAAiB;AAAA,IAC/E,GAAG,uBAAuB,qBAAqB,CAAC,EAAE;AAClD,YAAQ,aAAa,OAAO,OAAO;AAAA,MAC/B,OAAO,MAAM;AAAA,MAAE;AAAA,MACf,MAAM,MAAM;AAAA,MAAE;AAAA,MACd,MAAM,MAAM;AAAA,MAAE;AAAA,MACd,KAAK,MAAM;AAAA,MAAE;AAAA,IACjB,CAAC;AACD,QAAI;AACJ,KAAC,SAAUC,QAAO;AACd,MAAAA,OAAMA,OAAM,SAAS,KAAK;AAC1B,MAAAA,OAAMA,OAAM,cAAc,KAAK;AAC/B,MAAAA,OAAMA,OAAM,aAAa,KAAK;AAAA,IAClC,GAAG,QAAQ,QAAQ,UAAU,QAAQ,QAAQ,CAAC,EAAE;AAChD,KAAC,SAAUA,QAAO;AACd,eAAS,WAAW,OAAO;AACvB,gBAAQ,MAAM,YAAY;AAC1B,gBAAQ;AAAA,eACC;AACD,mBAAOA,OAAM;AAAA,eACZ;AACD,mBAAOA,OAAM;AAAA,eACZ;AACD,mBAAOA,OAAM;AAAA;AAEb,mBAAOA,OAAM;AAAA;AAAA,MAEzB;AACA,MAAAA,OAAM,aAAa;AACnB,eAASC,UAAS,OAAO;AACrB,gBAAQ;AAAA,eACCD,OAAM;AACP,mBAAO;AAAA,eACNA,OAAM;AACP,mBAAO;AAAA,eACNA,OAAM;AACP,mBAAO;AAAA;AAEP,mBAAO;AAAA;AAAA,MAEnB;AACA,MAAAA,OAAM,WAAWC;AAAA,IACrB,GAAG,QAAQ,QAAQ,UAAU,QAAQ,QAAQ,CAAC,EAAE;AAChD,QAAI;AACJ,KAAC,SAAUC,cAAa;AACpB,MAAAA,aAAY,UAAU;AACtB,MAAAA,aAAY,UAAU;AAAA,IAC1B,GAAG,cAAc,QAAQ,gBAAgB,QAAQ,cAAc,CAAC,EAAE;AAClE,KAAC,SAAUA,cAAa;AACpB,eAAS,WAAW,OAAO;AACvB,gBAAQ,MAAM,YAAY;AAC1B,YAAI,UAAU,QAAQ;AAClB,iBAAOA,aAAY;AAAA,QACvB,OACK;AACD,iBAAOA,aAAY;AAAA,QACvB;AAAA,MACJ;AACA,MAAAA,aAAY,aAAa;AAAA,IAC7B,GAAG,cAAc,QAAQ,gBAAgB,QAAQ,cAAc,CAAC,EAAE;AAClE,QAAI;AACJ,KAAC,SAAUC,uBAAsB;AAC7B,MAAAA,sBAAqB,OAAO,IAAI,WAAW,iBAAiB,wBAAwB;AAAA,IACxF,GAAG,uBAAuB,QAAQ,yBAAyB,QAAQ,uBAAuB,CAAC,EAAE;AAC7F,QAAI;AACJ,KAAC,SAAUC,uBAAsB;AAC7B,MAAAA,sBAAqB,OAAO,IAAI,WAAW,iBAAiB,wBAAwB;AAAA,IACxF,GAAG,uBAAuB,QAAQ,yBAAyB,QAAQ,uBAAuB,CAAC,EAAE;AAC7F,QAAI;AACJ,KAAC,SAAUC,mBAAkB;AAIzB,MAAAA,kBAAiBA,kBAAiB,YAAY,KAAK;AAInD,MAAAA,kBAAiBA,kBAAiB,cAAc,KAAK;AAIrD,MAAAA,kBAAiBA,kBAAiB,sBAAsB,KAAK;AAAA,IACjE,GAAG,mBAAmB,QAAQ,qBAAqB,QAAQ,mBAAmB,CAAC,EAAE;AACjF,QAAM,kBAAN,cAA8B,MAAM;AAAA,MAChC,YAAY,MAAM,SAAS;AACvB,cAAM,OAAO;AACb,aAAK,OAAO;AACZ,eAAO,eAAe,MAAM,gBAAgB,SAAS;AAAA,MACzD;AAAA,IACJ;AACA,YAAQ,kBAAkB;AAC1B,QAAI;AACJ,KAAC,SAAUC,qBAAoB;AAC3B,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,aAAaR,IAAG,KAAK,UAAU,kBAAkB;AAAA,MAC5D;AACA,MAAAQ,oBAAmB,KAAK;AAAA,IAC5B,GAAG,qBAAqB,QAAQ,uBAAuB,QAAQ,qBAAqB,CAAC,EAAE;AACvF,QAAI;AACJ,KAAC,SAAUC,kBAAiB;AACxB,MAAAA,iBAAgBA,iBAAgB,SAAS,KAAK;AAC9C,MAAAA,iBAAgBA,iBAAgB,eAAe,KAAK;AACpD,MAAAA,iBAAgBA,iBAAgB,YAAY,KAAK;AACjD,MAAAA,iBAAgBA,iBAAgB,cAAc,KAAK;AAAA,IACvD,GAAG,oBAAoB,kBAAkB,CAAC,EAAE;AAC5C,aAAS,yBAAyB,eAAe,eAAe,QAAQ,UAAU;AAC9E,UAAI,iBAAiB;AACrB,UAAI,4BAA4B;AAChC,UAAI,+BAA+B;AACnC,YAAM,UAAU;AAChB,UAAI,qBAAqB;AACzB,UAAI,kBAAkB,uBAAO,OAAO,IAAI;AACxC,UAAI,0BAA0B;AAC9B,UAAI,uBAAuB,uBAAO,OAAO,IAAI;AAC7C,UAAI;AACJ,UAAI,eAAe,IAAI,YAAY,UAAU;AAC7C,UAAI,mBAAmB,uBAAO,OAAO,IAAI;AACzC,UAAI,gBAAgB,uBAAO,OAAO,IAAI;AACtC,UAAI,QAAQ,MAAM;AAClB,UAAI,cAAc,YAAY;AAC9B,UAAI;AACJ,UAAI,QAAQ,gBAAgB;AAC5B,UAAI,eAAe,IAAI,SAAS,QAAQ;AACxC,UAAI,eAAe,IAAI,SAAS,QAAQ;AACxC,UAAI,+BAA+B,IAAI,SAAS,QAAQ;AACxD,UAAI,iBAAiB,IAAI,SAAS,QAAQ;AAC1C,eAAS,sBAAsB,IAAI;AAC/B,eAAO,SAAS,GAAG,SAAS;AAAA,MAChC;AACA,eAAS,uBAAuB,IAAI;AAChC,YAAI,OAAO,MAAM;AACb,iBAAO,kBAAkB,EAAE,8BAA8B,SAAS;AAAA,QACtE,OACK;AACD,iBAAO,SAAS,GAAG,SAAS;AAAA,QAChC;AAAA,MACJ;AACA,eAAS,6BAA6B;AAClC,eAAO,UAAU,EAAE,2BAA2B,SAAS;AAAA,MAC3D;AACA,eAAS,kBAAkB,OAAO,SAAS;AACvC,YAAI,WAAW,iBAAiB,OAAO,GAAG;AACtC,gBAAM,IAAI,sBAAsB,QAAQ,EAAE,GAAG,OAAO;AAAA,QACxD,WACS,WAAW,kBAAkB,OAAO,GAAG;AAC5C,gBAAM,IAAI,uBAAuB,QAAQ,EAAE,GAAG,OAAO;AAAA,QACzD,OACK;AACD,gBAAM,IAAI,2BAA2B,GAAG,OAAO;AAAA,QACnD;AAAA,MACJ;AACA,eAAS,mBAAmB,UAAU;AAClC,eAAO;AAAA,MACX;AACA,eAAS,cAAc;AACnB,eAAO,UAAU,gBAAgB;AAAA,MACrC;AACA,eAAS,WAAW;AAChB,eAAO,UAAU,gBAAgB;AAAA,MACrC;AACA,eAAS,aAAa;AAClB,eAAO,UAAU,gBAAgB;AAAA,MACrC;AACA,eAAS,eAAe;AACpB,YAAI,UAAU,gBAAgB,OAAO,UAAU,gBAAgB,WAAW;AACtE,kBAAQ,gBAAgB;AACxB,uBAAa,KAAK,MAAS;AAAA,QAC/B;AAAA,MAEJ;AACA;AACA,eAAS,iBAAiB,OAAO;AAC7B,qBAAa,KAAK,CAAC,OAAO,QAAW,MAAS,CAAC;AAAA,MACnD;AACA,eAAS,kBAAkB,MAAM;AAC7B,qBAAa,KAAK,IAAI;AAAA,MAC1B;AACA,oBAAc,QAAQ,YAAY;AAClC,oBAAc,QAAQ,gBAAgB;AACtC,oBAAc,QAAQ,YAAY;AAClC,oBAAc,QAAQ,iBAAiB;AACvC,eAAS,sBAAsB;AAC3B,YAAI,SAAS,aAAa,SAAS,GAAG;AAClC;AAAA,QACJ;AACA,gBAAQ,aAAa,MAAM;AACvB,kBAAQ;AACR,8BAAoB;AAAA,QACxB,CAAC;AAAA,MACL;AACA,eAAS,sBAAsB;AAC3B,YAAI,aAAa,SAAS,GAAG;AACzB;AAAA,QACJ;AACA,YAAI,UAAU,aAAa,MAAM;AACjC,YAAI;AACA,cAAI,WAAW,iBAAiB,OAAO,GAAG;AACtC,0BAAc,OAAO;AAAA,UACzB,WACS,WAAW,sBAAsB,OAAO,GAAG;AAChD,+BAAmB,OAAO;AAAA,UAC9B,WACS,WAAW,kBAAkB,OAAO,GAAG;AAC5C,2BAAe,OAAO;AAAA,UAC1B,OACK;AACD,iCAAqB,OAAO;AAAA,UAChC;AAAA,QACJ,UACA;AACI,8BAAoB;AAAA,QACxB;AAAA,MACJ;AACA,UAAI,WAAW,CAAC,YAAY;AACxB,YAAI;AAGA,cAAI,WAAW,sBAAsB,OAAO,KAAK,QAAQ,WAAW,mBAAmB,KAAK,QAAQ;AAChG,gBAAI,MAAM,sBAAsB,QAAQ,OAAO,EAAE;AACjD,gBAAI,WAAW,aAAa,IAAI,GAAG;AACnC,gBAAI,WAAW,iBAAiB,QAAQ,GAAG;AACvC,kBAAI,WAAW,YAAY,SAAS,qBAAqB,SAAS,mBAAmB,UAAU,kBAAkB,IAAI,mBAAmB,QAAQ;AAChJ,kBAAI,aAAa,SAAS,UAAU,UAAU,SAAS,WAAW,SAAS;AACvE,6BAAa,OAAO,GAAG;AACvB,yBAAS,KAAK,SAAS;AACvB,qCAAqB,UAAU,QAAQ,QAAQ,KAAK,IAAI,CAAC;AACzD,8BAAc,MAAM,QAAQ;AAC5B;AAAA,cACJ;AAAA,YACJ;AAAA,UACJ;AACA,4BAAkB,cAAc,OAAO;AAAA,QAC3C,UACA;AACI,8BAAoB;AAAA,QACxB;AAAA,MACJ;AACA,eAAS,cAAc,gBAAgB;AACnC,YAAI,WAAW,GAAG;AAGd;AAAA,QACJ;AACA,iBAAS,MAAM,eAAe,QAAQC,YAAW;AAC7C,cAAI,UAAU;AAAA,YACV,SAAS;AAAA,YACT,IAAI,eAAe;AAAA,UACvB;AACA,cAAI,yBAAyB,WAAW,eAAe;AACnD,oBAAQ,QAAQ,cAAc,OAAO;AAAA,UACzC,OACK;AACD,oBAAQ,SAAS,kBAAkB,SAAS,OAAO;AAAA,UACvD;AACA,+BAAqB,SAAS,QAAQA,UAAS;AAC/C,wBAAc,MAAM,OAAO;AAAA,QAC/B;AACA,iBAAS,WAAW,OAAO,QAAQA,YAAW;AAC1C,cAAI,UAAU;AAAA,YACV,SAAS;AAAA,YACT,IAAI,eAAe;AAAA,YACnB,OAAO,MAAM,OAAO;AAAA,UACxB;AACA,+BAAqB,SAAS,QAAQA,UAAS;AAC/C,wBAAc,MAAM,OAAO;AAAA,QAC/B;AACA,iBAAS,aAAa,QAAQ,QAAQA,YAAW;AAG7C,cAAI,WAAW,QAAQ;AACnB,qBAAS;AAAA,UACb;AACA,cAAI,UAAU;AAAA,YACV,SAAS;AAAA,YACT,IAAI,eAAe;AAAA,YACnB;AAAA,UACJ;AACA,+BAAqB,SAAS,QAAQA,UAAS;AAC/C,wBAAc,MAAM,OAAO;AAAA,QAC/B;AACA,6BAAqB,cAAc;AACnC,YAAI,UAAU,gBAAgB,eAAe;AAC7C,YAAI;AACJ,YAAI;AACJ,YAAI,SAAS;AACT,iBAAO,QAAQ;AACf,2BAAiB,QAAQ;AAAA,QAC7B;AACA,YAAI,YAAY,KAAK,IAAI;AACzB,YAAI,kBAAkB,oBAAoB;AACtC,cAAI,qBAAqB,IAAI,eAAe,wBAAwB;AACpE,cAAI,WAAW,OAAO,eAAe,EAAE;AACvC,wBAAc,YAAY;AAC1B,cAAI;AACA,gBAAI;AACJ,gBAAI,eAAe,WAAW,UAAW,SAAS,UAAU,KAAK,mBAAmB,GAAI;AACpF,8BAAgB,iBACV,eAAe,mBAAmB,KAAK,IACvC,mBAAmB,eAAe,QAAQ,mBAAmB,KAAK;AAAA,YAC5E,WACSV,IAAG,MAAM,eAAe,MAAM,MAAM,SAAS,UAAU,KAAK,iBAAiB,IAAI;AACtF,8BAAgB,iBACV,eAAe,GAAG,eAAe,QAAQ,mBAAmB,KAAK,IACjE,mBAAmB,eAAe,QAAQ,GAAG,eAAe,QAAQ,mBAAmB,KAAK;AAAA,YACtG,OACK;AACD,8BAAgB,iBACV,eAAe,eAAe,QAAQ,mBAAmB,KAAK,IAC9D,mBAAmB,eAAe,QAAQ,eAAe,QAAQ,mBAAmB,KAAK;AAAA,YACnG;AACA,gBAAI,UAAU;AACd,gBAAI,CAAC,eAAe;AAChB,qBAAO,cAAc;AACrB,2BAAa,eAAe,eAAe,QAAQ,SAAS;AAAA,YAChE,WACS,QAAQ,MAAM;AACnB,sBAAQ,KAAK,CAAC,kBAAkB;AAC5B,uBAAO,cAAc;AACrB,sBAAM,eAAe,eAAe,QAAQ,SAAS;AAAA,cACzD,GAAG,WAAS;AACR,uBAAO,cAAc;AACrB,oBAAI,iBAAiB,WAAW,eAAe;AAC3C,6BAAW,OAAO,eAAe,QAAQ,SAAS;AAAA,gBACtD,WACS,SAASA,IAAG,OAAO,MAAM,OAAO,GAAG;AACxC,6BAAW,IAAI,WAAW,cAAc,WAAW,WAAW,eAAe,WAAW,eAAe,+BAA+B,MAAM,SAAS,GAAG,eAAe,QAAQ,SAAS;AAAA,gBAC5L,OACK;AACD,6BAAW,IAAI,WAAW,cAAc,WAAW,WAAW,eAAe,WAAW,eAAe,2DAA2D,GAAG,eAAe,QAAQ,SAAS;AAAA,gBACzM;AAAA,cACJ,CAAC;AAAA,YACL,OACK;AACD,qBAAO,cAAc;AACrB,oBAAM,eAAe,eAAe,QAAQ,SAAS;AAAA,YACzD;AAAA,UACJ,SACO,OAAP;AACI,mBAAO,cAAc;AACrB,gBAAI,iBAAiB,WAAW,eAAe;AAC3C,oBAAM,OAAO,eAAe,QAAQ,SAAS;AAAA,YACjD,WACS,SAASA,IAAG,OAAO,MAAM,OAAO,GAAG;AACxC,yBAAW,IAAI,WAAW,cAAc,WAAW,WAAW,eAAe,WAAW,eAAe,+BAA+B,MAAM,SAAS,GAAG,eAAe,QAAQ,SAAS;AAAA,YAC5L,OACK;AACD,yBAAW,IAAI,WAAW,cAAc,WAAW,WAAW,eAAe,WAAW,eAAe,2DAA2D,GAAG,eAAe,QAAQ,SAAS;AAAA,YACzM;AAAA,UACJ;AAAA,QACJ,OACK;AACD,qBAAW,IAAI,WAAW,cAAc,WAAW,WAAW,gBAAgB,oBAAoB,eAAe,QAAQ,GAAG,eAAe,QAAQ,SAAS;AAAA,QAChK;AAAA,MACJ;AACA,eAAS,eAAe,iBAAiB;AACrC,YAAI,WAAW,GAAG;AAEd;AAAA,QACJ;AACA,YAAI,gBAAgB,OAAO,MAAM;AAC7B,cAAI,gBAAgB,OAAO;AACvB,mBAAO,MAAM;AAAA,EAAqD,KAAK,UAAU,gBAAgB,OAAO,QAAW,CAAC,GAAG;AAAA,UAC3H,OACK;AACD,mBAAO,MAAM,8EAA8E;AAAA,UAC/F;AAAA,QACJ,OACK;AACD,cAAI,MAAM,OAAO,gBAAgB,EAAE;AACnC,cAAI,kBAAkB,iBAAiB;AACvC,gCAAsB,iBAAiB,eAAe;AACtD,cAAI,iBAAiB;AACjB,mBAAO,iBAAiB;AACxB,gBAAI;AACA,kBAAI,gBAAgB,OAAO;AACvB,oBAAI,QAAQ,gBAAgB;AAC5B,gCAAgB,OAAO,IAAI,WAAW,cAAc,MAAM,MAAM,MAAM,SAAS,MAAM,IAAI,CAAC;AAAA,cAC9F,WACS,gBAAgB,WAAW,QAAQ;AACxC,gCAAgB,QAAQ,gBAAgB,MAAM;AAAA,cAClD,OACK;AACD,sBAAM,IAAI,MAAM,sBAAsB;AAAA,cAC1C;AAAA,YACJ,SACO,OAAP;AACI,kBAAI,MAAM,SAAS;AACf,uBAAO,MAAM,qBAAqB,gBAAgB,gCAAgC,MAAM,SAAS;AAAA,cACrG,OACK;AACD,uBAAO,MAAM,qBAAqB,gBAAgB,8BAA8B;AAAA,cACpF;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AACA,eAAS,mBAAmB,SAAS;AACjC,YAAI,WAAW,GAAG;AAEd;AAAA,QACJ;AACA,YAAI,OAAO;AACX,YAAI;AACJ,YAAI,QAAQ,WAAW,mBAAmB,KAAK,QAAQ;AACnD,gCAAsB,CAAC,WAAW;AAC9B,gBAAI,KAAK,OAAO;AAChB,gBAAI,SAAS,cAAc,OAAO,EAAE;AACpC,gBAAI,QAAQ;AACR,qBAAO,OAAO;AAAA,YAClB;AAAA,UACJ;AAAA,QACJ,OACK;AACD,cAAI,UAAU,qBAAqB,QAAQ;AAC3C,cAAI,SAAS;AACT,kCAAsB,QAAQ;AAC9B,mBAAO,QAAQ;AAAA,UACnB;AAAA,QACJ;AACA,YAAI,uBAAuB,yBAAyB;AAChD,cAAI;AACA,sCAA0B,OAAO;AACjC,gBAAI,QAAQ,WAAW,UAAW,SAAS,UAAU,KAAK,mBAAmB,GAAI;AAC7E,oCAAsB,oBAAoB,IAAI,wBAAwB,QAAQ,MAAM;AAAA,YACxF,WACSA,IAAG,MAAM,QAAQ,MAAM,MAAM,SAAS,UAAU,KAAK,iBAAiB,IAAI;AAC/E,oCAAsB,oBAAoB,GAAG,QAAQ,MAAM,IAAI,wBAAwB,QAAQ,QAAQ,GAAG,QAAQ,MAAM;AAAA,YAC5H,OACK;AACD,oCAAsB,oBAAoB,QAAQ,MAAM,IAAI,wBAAwB,QAAQ,QAAQ,QAAQ,MAAM;AAAA,YACtH;AAAA,UACJ,SACO,OAAP;AACI,gBAAI,MAAM,SAAS;AACf,qBAAO,MAAM,yBAAyB,QAAQ,gCAAgC,MAAM,SAAS;AAAA,YACjG,OACK;AACD,qBAAO,MAAM,yBAAyB,QAAQ,8BAA8B;AAAA,YAChF;AAAA,UACJ;AAAA,QACJ,OACK;AACD,uCAA6B,KAAK,OAAO;AAAA,QAC7C;AAAA,MACJ;AACA,eAAS,qBAAqB,SAAS;AACnC,YAAI,CAAC,SAAS;AACV,iBAAO,MAAM,yBAAyB;AACtC;AAAA,QACJ;AACA,eAAO,MAAM;AAAA,EAA6E,KAAK,UAAU,SAAS,MAAM,CAAC,GAAG;AAE5H,YAAI,kBAAkB;AACtB,YAAIA,IAAG,OAAO,gBAAgB,EAAE,KAAKA,IAAG,OAAO,gBAAgB,EAAE,GAAG;AAChE,cAAI,MAAM,OAAO,gBAAgB,EAAE;AACnC,cAAI,kBAAkB,iBAAiB;AACvC,cAAI,iBAAiB;AACjB,4BAAgB,OAAO,IAAI,MAAM,mEAAmE,CAAC;AAAA,UACzG;AAAA,QACJ;AAAA,MACJ;AACA,eAAS,oBAAoB,SAAS;AAClC,YAAI,UAAU,MAAM,OAAO,CAAC,QAAQ;AAChC;AAAA,QACJ;AACA,YAAI,gBAAgB,YAAY,MAAM;AAClC,cAAI,OAAO;AACX,cAAI,UAAU,MAAM,WAAW,QAAQ,QAAQ;AAC3C,mBAAO,WAAW,KAAK,UAAU,QAAQ,QAAQ,MAAM,CAAC;AAAA;AAAA;AAAA,UAC5D;AACA,iBAAO,IAAI,oBAAoB,QAAQ,aAAa,QAAQ,SAAS,IAAI;AAAA,QAC7E,OACK;AACD,wBAAc,gBAAgB,OAAO;AAAA,QACzC;AAAA,MACJ;AACA,eAAS,yBAAyB,SAAS;AACvC,YAAI,UAAU,MAAM,OAAO,CAAC,QAAQ;AAChC;AAAA,QACJ;AACA,YAAI,gBAAgB,YAAY,MAAM;AAClC,cAAI,OAAO;AACX,cAAI,UAAU,MAAM,SAAS;AACzB,gBAAI,QAAQ,QAAQ;AAChB,qBAAO,WAAW,KAAK,UAAU,QAAQ,QAAQ,MAAM,CAAC;AAAA;AAAA;AAAA,YAC5D,OACK;AACD,qBAAO;AAAA,YACX;AAAA,UACJ;AACA,iBAAO,IAAI,yBAAyB,QAAQ,YAAY,IAAI;AAAA,QAChE,OACK;AACD,wBAAc,qBAAqB,OAAO;AAAA,QAC9C;AAAA,MACJ;AACA,eAAS,qBAAqB,SAAS,QAAQ,WAAW;AACtD,YAAI,UAAU,MAAM,OAAO,CAAC,QAAQ;AAChC;AAAA,QACJ;AACA,YAAI,gBAAgB,YAAY,MAAM;AAClC,cAAI,OAAO;AACX,cAAI,UAAU,MAAM,SAAS;AACzB,gBAAI,QAAQ,SAAS,QAAQ,MAAM,MAAM;AACrC,qBAAO,eAAe,KAAK,UAAU,QAAQ,MAAM,MAAM,MAAM,CAAC;AAAA;AAAA;AAAA,YACpE,OACK;AACD,kBAAI,QAAQ,QAAQ;AAChB,uBAAO,WAAW,KAAK,UAAU,QAAQ,QAAQ,MAAM,CAAC;AAAA;AAAA;AAAA,cAC5D,WACS,QAAQ,UAAU,QAAQ;AAC/B,uBAAO;AAAA,cACX;AAAA,YACJ;AAAA,UACJ;AACA,iBAAO,IAAI,qBAAqB,aAAa,QAAQ,iCAAiC,KAAK,IAAI,IAAI,eAAe,IAAI;AAAA,QAC1H,OACK;AACD,wBAAc,iBAAiB,OAAO;AAAA,QAC1C;AAAA,MACJ;AACA,eAAS,qBAAqB,SAAS;AACnC,YAAI,UAAU,MAAM,OAAO,CAAC,QAAQ;AAChC;AAAA,QACJ;AACA,YAAI,gBAAgB,YAAY,MAAM;AAClC,cAAI,OAAO;AACX,cAAI,UAAU,MAAM,WAAW,QAAQ,QAAQ;AAC3C,mBAAO,WAAW,KAAK,UAAU,QAAQ,QAAQ,MAAM,CAAC;AAAA;AAAA;AAAA,UAC5D;AACA,iBAAO,IAAI,qBAAqB,QAAQ,aAAa,QAAQ,SAAS,IAAI;AAAA,QAC9E,OACK;AACD,wBAAc,mBAAmB,OAAO;AAAA,QAC5C;AAAA,MACJ;AACA,eAAS,0BAA0B,SAAS;AACxC,YAAI,UAAU,MAAM,OAAO,CAAC,UAAU,QAAQ,WAAW,qBAAqB,KAAK,QAAQ;AACvF;AAAA,QACJ;AACA,YAAI,gBAAgB,YAAY,MAAM;AAClC,cAAI,OAAO;AACX,cAAI,UAAU,MAAM,SAAS;AACzB,gBAAI,QAAQ,QAAQ;AAChB,qBAAO,WAAW,KAAK,UAAU,QAAQ,QAAQ,MAAM,CAAC;AAAA;AAAA;AAAA,YAC5D,OACK;AACD,qBAAO;AAAA,YACX;AAAA,UACJ;AACA,iBAAO,IAAI,0BAA0B,QAAQ,YAAY,IAAI;AAAA,QACjE,OACK;AACD,wBAAc,wBAAwB,OAAO;AAAA,QACjD;AAAA,MACJ;AACA,eAAS,sBAAsB,SAAS,iBAAiB;AACrD,YAAI,UAAU,MAAM,OAAO,CAAC,QAAQ;AAChC;AAAA,QACJ;AACA,YAAI,gBAAgB,YAAY,MAAM;AAClC,cAAI,OAAO;AACX,cAAI,UAAU,MAAM,SAAS;AACzB,gBAAI,QAAQ,SAAS,QAAQ,MAAM,MAAM;AACrC,qBAAO,eAAe,KAAK,UAAU,QAAQ,MAAM,MAAM,MAAM,CAAC;AAAA;AAAA;AAAA,YACpE,OACK;AACD,kBAAI,QAAQ,QAAQ;AAChB,uBAAO,WAAW,KAAK,UAAU,QAAQ,QAAQ,MAAM,CAAC;AAAA;AAAA;AAAA,cAC5D,WACS,QAAQ,UAAU,QAAQ;AAC/B,uBAAO;AAAA,cACX;AAAA,YACJ;AAAA,UACJ;AACA,cAAI,iBAAiB;AACjB,gBAAI,QAAQ,QAAQ,QAAQ,oBAAoB,QAAQ,MAAM,YAAY,QAAQ,MAAM,WAAW;AACnG,mBAAO,IAAI,sBAAsB,gBAAgB,aAAa,QAAQ,WAAW,KAAK,IAAI,IAAI,gBAAgB,gBAAgB,SAAS,IAAI;AAAA,UAC/I,OACK;AACD,mBAAO,IAAI,qBAAqB,QAAQ,uCAAuC,IAAI;AAAA,UACvF;AAAA,QACJ,OACK;AACD,wBAAc,oBAAoB,OAAO;AAAA,QAC7C;AAAA,MACJ;AACA,eAAS,cAAc,MAAM,SAAS;AAClC,YAAI,CAAC,UAAU,UAAU,MAAM,KAAK;AAChC;AAAA,QACJ;AACA,cAAM,aAAa;AAAA,UACf,cAAc;AAAA,UACd;AAAA,UACA;AAAA,UACA,WAAW,KAAK,IAAI;AAAA,QACxB;AACA,eAAO,IAAI,UAAU;AAAA,MACzB;AACA,eAAS,0BAA0B;AAC/B,YAAI,SAAS,GAAG;AACZ,gBAAM,IAAI,gBAAgB,iBAAiB,QAAQ,uBAAuB;AAAA,QAC9E;AACA,YAAI,WAAW,GAAG;AACd,gBAAM,IAAI,gBAAgB,iBAAiB,UAAU,yBAAyB;AAAA,QAClF;AAAA,MACJ;AACA,eAAS,mBAAmB;AACxB,YAAI,YAAY,GAAG;AACf,gBAAM,IAAI,gBAAgB,iBAAiB,kBAAkB,iCAAiC;AAAA,QAClG;AAAA,MACJ;AACA,eAAS,sBAAsB;AAC3B,YAAI,CAAC,YAAY,GAAG;AAChB,gBAAM,IAAI,MAAM,sBAAsB;AAAA,QAC1C;AAAA,MACJ;AACA,eAAS,gBAAgB,OAAO;AAC5B,YAAI,UAAU,QAAQ;AAClB,iBAAO;AAAA,QACX,OACK;AACD,iBAAO;AAAA,QACX;AAAA,MACJ;AACA,eAAS,qBAAqB,MAAM,QAAQ;AACxC,YAAI;AACJ,YAAI,iBAAiB,KAAK;AAC1B,gBAAQ;AAAA,eACC;AACD,qBAAS;AACT;AAAA,eACC;AACD,qBAAS,gBAAgB,OAAO,EAAE;AAClC;AAAA;AAEA,qBAAS,CAAC;AACV,qBAAS,IAAI,GAAG,IAAI,OAAO,UAAU,IAAI,gBAAgB,KAAK;AAC1D,qBAAO,KAAK,gBAAgB,OAAO,EAAE,CAAC;AAAA,YAC1C;AACA,gBAAI,OAAO,SAAS,gBAAgB;AAChC,uBAAS,IAAI,OAAO,QAAQ,IAAI,gBAAgB,KAAK;AACjD,uBAAO,KAAK,IAAI;AAAA,cACpB;AAAA,YACJ;AACA;AAAA;AAER,eAAO;AAAA,MACX;AACA,UAAI,aAAa;AAAA,QACb,kBAAkB,CAAC,SAAS,WAAW;AACnC,kCAAwB;AACxB,cAAI;AACJ,cAAI;AACJ,cAAIA,IAAG,OAAO,IAAI,GAAG;AACjB,qBAAS;AACT,oBAAQ,OAAO;AAAA,mBACN;AACD,gCAAgB;AAChB;AAAA,mBACC;AACD,gCAAgB,OAAO;AACvB;AAAA;AAEA,gCAAgB;AAChB;AAAA;AAAA,UAEZ,OACK;AACD,qBAAS,KAAK;AACd,4BAAgB,qBAAqB,MAAM,MAAM;AAAA,UACrD;AACA,cAAI,sBAAsB;AAAA,YACtB,SAAS;AAAA,YACT;AAAA,YACA,QAAQ;AAAA,UACZ;AACA,mCAAyB,mBAAmB;AAC5C,wBAAc,MAAM,mBAAmB;AAAA,QAC3C;AAAA,QACA,gBAAgB,CAAC,MAAM,YAAY;AAC/B,kCAAwB;AACxB,cAAIA,IAAG,KAAK,IAAI,GAAG;AACf,sCAA0B;AAAA,UAC9B,WACS,SAAS;AACd,gBAAIA,IAAG,OAAO,IAAI,GAAG;AACjB,mCAAqB,QAAQ,EAAE,MAAM,QAAW,QAAQ;AAAA,YAC5D,OACK;AACD,mCAAqB,KAAK,UAAU,EAAE,MAAM,QAAQ;AAAA,YACxD;AAAA,UACJ;AAAA,QACJ;AAAA,QACA,aAAa,CAAC,SAAS,WAAW;AAC9B,kCAAwB;AACxB,8BAAoB;AACpB,cAAI;AACJ,cAAI;AACJ,cAAI,QAAQ;AACZ,cAAIA,IAAG,OAAO,IAAI,GAAG;AACjB,qBAAS;AACT,oBAAQ,OAAO;AAAA,mBACN;AACD,gCAAgB;AAChB;AAAA,mBACC;AAED,oBAAI,eAAe,kBAAkB,GAAG,OAAO,EAAE,GAAG;AAChD,kCAAgB;AAChB,0BAAQ,OAAO;AAAA,gBACnB,OACK;AACD,kCAAgB,gBAAgB,OAAO,EAAE;AAAA,gBAC7C;AACA;AAAA;AAEA,sBAAM,OAAO,OAAO,SAAS;AAC7B,oBAAI,eAAe,kBAAkB,GAAG,OAAO,KAAK,GAAG;AACnD,0BAAQ,OAAO;AACf,sBAAI,OAAO,WAAW,GAAG;AACrB,oCAAgB,gBAAgB,OAAO,EAAE;AAAA,kBAC7C,OACK;AACD,oCAAgB,OAAO,MAAM,GAAG,IAAI,EAAE,IAAI,WAAS,gBAAgB,KAAK,CAAC;AAAA,kBAC7E;AAAA,gBACJ,OACK;AACD,kCAAgB,OAAO,IAAI,WAAS,gBAAgB,KAAK,CAAC;AAAA,gBAC9D;AACA;AAAA;AAAA,UAEZ,OACK;AACD,qBAAS,KAAK;AACd,4BAAgB,qBAAqB,MAAM,MAAM;AACjD,gBAAI,iBAAiB,KAAK;AAC1B,oBAAQ,eAAe,kBAAkB,GAAG,OAAO,eAAe,IAAI,OAAO,kBAAkB;AAAA,UACnG;AACA,cAAI,KAAK;AACT,cAAI,SAAS,IAAI,QAAQ,CAAC,SAAS,WAAW;AAC1C,gBAAI,iBAAiB;AAAA,cACjB,SAAS;AAAA,cACT;AAAA,cACA;AAAA,cACA,QAAQ;AAAA,YACZ;AACA,gBAAI,kBAAkB,EAAE,QAAgB,YAAY,KAAK,IAAI,GAAG,SAAS,OAAO;AAChF,gCAAoB,cAAc;AAClC,gBAAI;AACA,4BAAc,MAAM,cAAc;AAAA,YACtC,SACO,GAAP;AAEI,8BAAgB,OAAO,IAAI,WAAW,cAAc,WAAW,WAAW,mBAAmB,EAAE,UAAU,EAAE,UAAU,gBAAgB,CAAC;AACtI,gCAAkB;AAAA,YACtB;AACA,gBAAI,iBAAiB;AACjB,+BAAiB,OAAO,EAAE,KAAK;AAAA,YACnC;AAAA,UACJ,CAAC;AACD,cAAI,OAAO;AACP,kBAAM,wBAAwB,MAAM;AAChC,yBAAW,iBAAiB,mBAAmB,MAAM,EAAE,GAAG,CAAC;AAAA,YAC/D,CAAC;AAAA,UACL;AACA,iBAAO;AAAA,QACX;AAAA,QACA,WAAW,CAAC,MAAM,YAAY;AAC1B,kCAAwB;AACxB,cAAIA,IAAG,KAAK,IAAI,GAAG;AACf,iCAAqB;AAAA,UACzB,WACS,SAAS;AACd,gBAAIA,IAAG,OAAO,IAAI,GAAG;AACjB,8BAAgB,QAAQ,EAAE,MAAM,QAAW,QAAQ;AAAA,YACvD,OACK;AACD,8BAAgB,KAAK,UAAU,EAAE,MAAM,QAAQ;AAAA,YACnD;AAAA,UACJ;AAAA,QACJ;AAAA,QACA,OAAO,CAAC,QAAQ,SAAS,mCAAmC;AACxD,cAAI,oBAAoB;AACxB,cAAI,eAAe,YAAY;AAC/B,cAAI,mCAAmC,QAAQ;AAC3C,gBAAIA,IAAG,QAAQ,8BAA8B,GAAG;AAC5C,kCAAoB;AAAA,YACxB,OACK;AACD,kCAAoB,+BAA+B,oBAAoB;AACvE,6BAAe,+BAA+B,eAAe,YAAY;AAAA,YAC7E;AAAA,UACJ;AACA,kBAAQ;AACR,wBAAc;AACd,cAAI,UAAU,MAAM,KAAK;AACrB,qBAAS;AAAA,UACb,OACK;AACD,qBAAS;AAAA,UACb;AACA,cAAI,qBAAqB,CAAC,SAAS,KAAK,CAAC,WAAW,GAAG;AACnD,uBAAW,iBAAiB,qBAAqB,MAAM,EAAE,OAAO,MAAM,SAAS,MAAM,EAAE,CAAC;AAAA,UAC5F;AAAA,QACJ;AAAA,QACA,SAAS,aAAa;AAAA,QACtB,SAAS,aAAa;AAAA,QACtB,yBAAyB,6BAA6B;AAAA,QACtD,WAAW,eAAe;AAAA,QAC1B,SAAS,MAAM;AACX,cAAI,WAAW,GAAG;AACd;AAAA,UACJ;AACA,kBAAQ,gBAAgB;AACxB,yBAAe,KAAK,MAAS;AAC7B,cAAI,QAAQ,IAAI,MAAM,0BAA0B;AAChD,iBAAO,KAAK,gBAAgB,EAAE,QAAQ,CAAC,QAAQ;AAC3C,6BAAiB,KAAK,OAAO,KAAK;AAAA,UACtC,CAAC;AACD,6BAAmB,uBAAO,OAAO,IAAI;AACrC,0BAAgB,uBAAO,OAAO,IAAI;AAClC,yBAAe,IAAI,YAAY,UAAU;AAEzC,cAAIA,IAAG,KAAK,cAAc,OAAO,GAAG;AAChC,0BAAc,QAAQ;AAAA,UAC1B;AACA,cAAIA,IAAG,KAAK,cAAc,OAAO,GAAG;AAChC,0BAAc,QAAQ;AAAA,UAC1B;AAAA,QACJ;AAAA,QACA,QAAQ,MAAM;AACV,kCAAwB;AACxB,2BAAiB;AACjB,kBAAQ,gBAAgB;AACxB,wBAAc,OAAO,QAAQ;AAAA,QACjC;AAAA,QACA,SAAS,MAAM;AACX,kBAAQ,IAAI,SAAS;AAAA,QACzB;AAAA,MACJ;AACA,iBAAW,eAAe,qBAAqB,MAAM,CAAC,WAAW;AAC7D,YAAI,UAAU,MAAM,OAAO,CAAC,QAAQ;AAChC;AAAA,QACJ;AACA,eAAO,IAAI,OAAO,SAAS,UAAU,MAAM,UAAU,OAAO,UAAU,MAAS;AAAA,MACnF,CAAC;AACD,aAAO;AAAA,IACX;AACA,aAAS,gBAAgB,OAAO;AAC5B,aAAO,MAAM,WAAW,UAAU,MAAM,SAAS;AAAA,IACrD;AACA,aAAS,gBAAgB,OAAO;AAC5B,aAAO,MAAM,UAAU,UAAU,MAAM,QAAQ;AAAA,IACnD;AACA,aAAS,wBAAwB,OAAO,QAAQ,QAAQ,UAAU;AAC9D,UAAI,CAAC,QAAQ;AACT,iBAAS,QAAQ;AAAA,MACrB;AACA,UAAI,SAAS,gBAAgB,KAAK,IAAI,QAAQ,IAAI,gBAAgB,oBAAoB,KAAK;AAC3F,UAAI,SAAS,gBAAgB,MAAM,IAAI,SAAS,IAAI,gBAAgB,oBAAoB,MAAM;AAC9F,aAAO,yBAAyB,QAAQ,QAAQ,QAAQ,QAAQ;AAAA,IACpE;AACA,YAAQ,0BAA0B;AAAA;AAAA;;;AC15BlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASW,UAwBA,OA2BA,UAwBA,cA4BA,OA8BA,kBAyBA,mBA2BA,kBAmBA,cAsCA,8BAwBA,oBAuBA,YAyCA,SA8BA,UAwCA,kBAiBA,YAqBA,YAsBA,YAqBA,eAiBP,oBA2BA,iBAoGO,wBAuBA,iCAwBA,kBA6BA,YAqBA,eAcA,oBAgCA,kBAsBA,gBAeA,gBAaA,cAoBA,OAiBA,sBAkBA,sBAwBA,uBAmBA,mBAkBA,YA6BA,mBA8BP,gBAgDO,gBA6DA,mBAsBA,YA+BA,UAyBA,mBAsBP,cA2BO,KACA,cAkFA,wBAgBP,kBA2GA;AAp6CJ;AAAA;AAAA;AAUA,KAAC,SAAUW,WAAU;AAMjB,eAAS,OAAO,MAAM,WAAW;AAC7B,eAAO,EAAE,MAAY,UAAqB;AAAA,MAC9C;AACA,MAAAA,UAAS,SAAS;AAIlB,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,GAAG,cAAc,SAAS,KAAK,GAAG,OAAO,UAAU,IAAI,KAAK,GAAG,OAAO,UAAU,SAAS;AAAA,MACpG;AACA,MAAAA,UAAS,KAAK;AAAA,IAClB,GAAG,aAAa,WAAW,CAAC,EAAE;AAM9B,KAAC,SAAUC,QAAO;AACd,eAAS,OAAO,KAAK,KAAK,OAAO,MAAM;AACnC,YAAI,GAAG,OAAO,GAAG,KAAK,GAAG,OAAO,GAAG,KAAK,GAAG,OAAO,KAAK,KAAK,GAAG,OAAO,IAAI,GAAG;AACzE,iBAAO,EAAE,OAAO,SAAS,OAAO,KAAK,GAAG,GAAG,KAAK,SAAS,OAAO,OAAO,IAAI,EAAE;AAAA,QACjF,WACS,SAAS,GAAG,GAAG,KAAK,SAAS,GAAG,GAAG,GAAG;AAC3C,iBAAO,EAAE,OAAO,KAAK,KAAK,IAAI;AAAA,QAClC,OACK;AACD,gBAAM,IAAI,MAAM,gDAAgD,MAAM,OAAO,MAAM,OAAO,QAAQ,OAAO,OAAO,GAAG;AAAA,QACvH;AAAA,MACJ;AACA,MAAAA,OAAM,SAAS;AAIf,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,GAAG,cAAc,SAAS,KAAK,SAAS,GAAG,UAAU,KAAK,KAAK,SAAS,GAAG,UAAU,GAAG;AAAA,MACnG;AACA,MAAAA,OAAM,KAAK;AAAA,IACf,GAAG,UAAU,QAAQ,CAAC,EAAE;AAMxB,KAAC,SAAUC,WAAU;AAMjB,eAAS,OAAO,KAAK,OAAO;AACxB,eAAO,EAAE,KAAU,MAAa;AAAA,MACpC;AACA,MAAAA,UAAS,SAAS;AAIlB,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,GAAG,QAAQ,SAAS,KAAK,MAAM,GAAG,UAAU,KAAK,MAAM,GAAG,OAAO,UAAU,GAAG,KAAK,GAAG,UAAU,UAAU,GAAG;AAAA,MACxH;AACA,MAAAA,UAAS,KAAK;AAAA,IAClB,GAAG,aAAa,WAAW,CAAC,EAAE;AAM9B,KAAC,SAAUC,eAAc;AAQrB,eAAS,OAAO,WAAW,aAAa,sBAAsB,sBAAsB;AAChF,eAAO,EAAE,WAAsB,aAA0B,sBAA4C,qBAA2C;AAAA,MACpJ;AACA,MAAAA,cAAa,SAAS;AAItB,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,GAAG,QAAQ,SAAS,KAAK,MAAM,GAAG,UAAU,WAAW,KAAK,GAAG,OAAO,UAAU,SAAS,MACxF,MAAM,GAAG,UAAU,oBAAoB,KAAK,GAAG,UAAU,UAAU,oBAAoB,OACvF,MAAM,GAAG,UAAU,oBAAoB,KAAK,GAAG,UAAU,UAAU,oBAAoB;AAAA,MACnG;AACA,MAAAA,cAAa,KAAK;AAAA,IACtB,GAAG,iBAAiB,eAAe,CAAC,EAAE;AAMtC,KAAC,SAAUC,QAAO;AAId,eAAS,OAAO,KAAK,OAAO,MAAM,OAAO;AACrC,eAAO;AAAA,UACH;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACJ;AAAA,MACJ;AACA,MAAAA,OAAM,SAAS;AAIf,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,GAAG,OAAO,UAAU,GAAG,KACvB,GAAG,OAAO,UAAU,KAAK,KACzB,GAAG,OAAO,UAAU,IAAI,KACxB,GAAG,OAAO,UAAU,KAAK;AAAA,MACpC;AACA,MAAAA,OAAM,KAAK;AAAA,IACf,GAAG,UAAU,QAAQ,CAAC,EAAE;AAMxB,KAAC,SAAUC,mBAAkB;AAIzB,eAAS,OAAO,OAAO,OAAO;AAC1B,eAAO;AAAA,UACH;AAAA,UACA;AAAA,QACJ;AAAA,MACJ;AACA,MAAAA,kBAAiB,SAAS;AAI1B,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,MAAM,GAAG,UAAU,KAAK,KAAK,MAAM,GAAG,UAAU,KAAK;AAAA,MAChE;AACA,MAAAA,kBAAiB,KAAK;AAAA,IAC1B,GAAG,qBAAqB,mBAAmB,CAAC,EAAE;AAM9C,KAAC,SAAUC,oBAAmB;AAI1B,eAAS,OAAO,OAAO,UAAU,qBAAqB;AAClD,eAAO;AAAA,UACH;AAAA,UACA;AAAA,UACA;AAAA,QACJ;AAAA,MACJ;AACA,MAAAA,mBAAkB,SAAS;AAI3B,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,GAAG,OAAO,UAAU,KAAK,MACxB,GAAG,UAAU,UAAU,QAAQ,KAAK,SAAS,GAAG,SAAS,OACzD,GAAG,UAAU,UAAU,mBAAmB,KAAK,GAAG,WAAW,UAAU,qBAAqB,SAAS,EAAE;AAAA,MACnH;AACA,MAAAA,mBAAkB,KAAK;AAAA,IAC3B,GAAG,sBAAsB,oBAAoB,CAAC,EAAE;AAKhD,KAAC,SAAUC,mBAAkB;AAIzB,MAAAA,kBAAiB,aAAa;AAI9B,MAAAA,kBAAiB,aAAa;AAI9B,MAAAA,kBAAiB,YAAY;AAAA,IACjC,GAAG,qBAAqB,mBAAmB,CAAC,EAAE;AAM9C,KAAC,SAAUC,eAAc;AAIrB,eAAS,OAAO,WAAW,SAAS,gBAAgB,cAAc,MAAM;AACpE,YAAI,SAAS;AAAA,UACT;AAAA,UACA;AAAA,QACJ;AACA,YAAI,GAAG,QAAQ,cAAc,GAAG;AAC5B,iBAAO,iBAAiB;AAAA,QAC5B;AACA,YAAI,GAAG,QAAQ,YAAY,GAAG;AAC1B,iBAAO,eAAe;AAAA,QAC1B;AACA,YAAI,GAAG,QAAQ,IAAI,GAAG;AAClB,iBAAO,OAAO;AAAA,QAClB;AACA,eAAO;AAAA,MACX;AACA,MAAAA,cAAa,SAAS;AAItB,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,GAAG,OAAO,UAAU,SAAS,KAAK,GAAG,OAAO,UAAU,SAAS,MAC9D,GAAG,UAAU,UAAU,cAAc,KAAK,GAAG,OAAO,UAAU,cAAc,OAC5E,GAAG,UAAU,UAAU,YAAY,KAAK,GAAG,OAAO,UAAU,YAAY,OACxE,GAAG,UAAU,UAAU,IAAI,KAAK,GAAG,OAAO,UAAU,IAAI;AAAA,MACpE;AACA,MAAAA,cAAa,KAAK;AAAA,IACtB,GAAG,iBAAiB,eAAe,CAAC,EAAE;AAMtC,KAAC,SAAUC,+BAA8B;AAIrC,eAAS,OAAO,UAAU,SAAS;AAC/B,eAAO;AAAA,UACH;AAAA,UACA;AAAA,QACJ;AAAA,MACJ;AACA,MAAAA,8BAA6B,SAAS;AAItC,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,GAAG,QAAQ,SAAS,KAAK,SAAS,GAAG,UAAU,QAAQ,KAAK,GAAG,OAAO,UAAU,OAAO;AAAA,MAClG;AACA,MAAAA,8BAA6B,KAAK;AAAA,IACtC,GAAG,iCAAiC,+BAA+B,CAAC,EAAE;AAKtE,KAAC,SAAUC,qBAAoB;AAI3B,MAAAA,oBAAmB,QAAQ;AAI3B,MAAAA,oBAAmB,UAAU;AAI7B,MAAAA,oBAAmB,cAAc;AAIjC,MAAAA,oBAAmB,OAAO;AAAA,IAC9B,GAAG,uBAAuB,qBAAqB,CAAC,EAAE;AAMlD,KAAC,SAAUC,aAAY;AAInB,eAAS,OAAO,OAAO,SAAS,UAAU,MAAM,QAAQ,oBAAoB;AACxE,YAAI,SAAS,EAAE,OAAc,QAAiB;AAC9C,YAAI,GAAG,QAAQ,QAAQ,GAAG;AACtB,iBAAO,WAAW;AAAA,QACtB;AACA,YAAI,GAAG,QAAQ,IAAI,GAAG;AAClB,iBAAO,OAAO;AAAA,QAClB;AACA,YAAI,GAAG,QAAQ,MAAM,GAAG;AACpB,iBAAO,SAAS;AAAA,QACpB;AACA,YAAI,GAAG,QAAQ,kBAAkB,GAAG;AAChC,iBAAO,qBAAqB;AAAA,QAChC;AACA,eAAO;AAAA,MACX;AACA,MAAAA,YAAW,SAAS;AAIpB,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,GAAG,QAAQ,SAAS,KACpB,MAAM,GAAG,UAAU,KAAK,KACxB,GAAG,OAAO,UAAU,OAAO,MAC1B,GAAG,OAAO,UAAU,QAAQ,KAAK,GAAG,UAAU,UAAU,QAAQ,OAChE,GAAG,OAAO,UAAU,IAAI,KAAK,GAAG,OAAO,UAAU,IAAI,KAAK,GAAG,UAAU,UAAU,IAAI,OACrF,GAAG,OAAO,UAAU,MAAM,KAAK,GAAG,UAAU,UAAU,MAAM,OAC5D,GAAG,UAAU,UAAU,kBAAkB,KAAK,GAAG,WAAW,UAAU,oBAAoB,6BAA6B,EAAE;AAAA,MACrI;AACA,MAAAA,YAAW,KAAK;AAAA,IACpB,GAAG,eAAe,aAAa,CAAC,EAAE;AAMlC,KAAC,SAAUC,UAAS;AAIhB,eAAS,OAAO,OAAO,SAAS;AAC5B,YAAI,OAAO,CAAC;AACZ,iBAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC1C,eAAK,KAAK,KAAK,UAAU;AAAA,QAC7B;AACA,YAAI,SAAS,EAAE,OAAc,QAAiB;AAC9C,YAAI,GAAG,QAAQ,IAAI,KAAK,KAAK,SAAS,GAAG;AACrC,iBAAO,YAAY;AAAA,QACvB;AACA,eAAO;AAAA,MACX;AACA,MAAAA,SAAQ,SAAS;AAIjB,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,GAAG,QAAQ,SAAS,KAAK,GAAG,OAAO,UAAU,KAAK,KAAK,GAAG,OAAO,UAAU,OAAO;AAAA,MAC7F;AACA,MAAAA,SAAQ,KAAK;AAAA,IACjB,GAAG,YAAY,UAAU,CAAC,EAAE;AAM5B,KAAC,SAAUC,WAAU;AAMjB,eAAS,QAAQ,OAAO,SAAS;AAC7B,eAAO,EAAE,OAAc,QAAiB;AAAA,MAC5C;AACA,MAAAA,UAAS,UAAU;AAMnB,eAAS,OAAO,UAAU,SAAS;AAC/B,eAAO,EAAE,OAAO,EAAE,OAAO,UAAU,KAAK,SAAS,GAAG,QAAiB;AAAA,MACzE;AACA,MAAAA,UAAS,SAAS;AAKlB,eAAS,IAAI,OAAO;AAChB,eAAO,EAAE,OAAc,SAAS,GAAG;AAAA,MACvC;AACA,MAAAA,UAAS,MAAM;AACf,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,GAAG,cAAc,SAAS,KAC1B,GAAG,OAAO,UAAU,OAAO,KAC3B,MAAM,GAAG,UAAU,KAAK;AAAA,MACnC;AACA,MAAAA,UAAS,KAAK;AAAA,IAClB,GAAG,aAAa,WAAW,CAAC,EAAE;AAM9B,KAAC,SAAUC,mBAAkB;AAIzB,eAAS,OAAO,cAAc,OAAO;AACjC,eAAO,EAAE,cAA4B,MAAa;AAAA,MACtD;AACA,MAAAA,kBAAiB,SAAS;AAC1B,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,GAAG,QAAQ,SAAS,KACpB,gCAAgC,GAAG,UAAU,YAAY,KACzD,MAAM,QAAQ,UAAU,KAAK;AAAA,MACxC;AACA,MAAAA,kBAAiB,KAAK;AAAA,IAC1B,GAAG,qBAAqB,mBAAmB,CAAC,EAAE;AAE9C,KAAC,SAAUC,aAAY;AACnB,eAAS,OAAO,KAAK,SAAS;AAC1B,YAAI,SAAS;AAAA,UACT,MAAM;AAAA,UACN;AAAA,QACJ;AACA,YAAI,YAAY,WAAW,QAAQ,cAAc,UAAU,QAAQ,mBAAmB,SAAS;AAC3F,iBAAO,UAAU;AAAA,QACrB;AACA,eAAO;AAAA,MACX;AACA,MAAAA,YAAW,SAAS;AACpB,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,aAAa,UAAU,SAAS,YAAY,GAAG,OAAO,UAAU,GAAG,MACrE,UAAU,YAAY,WACjB,UAAU,QAAQ,cAAc,UAAU,GAAG,QAAQ,UAAU,QAAQ,SAAS,OAAO,UAAU,QAAQ,mBAAmB,UAAU,GAAG,QAAQ,UAAU,QAAQ,cAAc;AAAA,MAC/L;AACA,MAAAA,YAAW,KAAK;AAAA,IACpB,GAAG,eAAe,aAAa,CAAC,EAAE;AAElC,KAAC,SAAUC,aAAY;AACnB,eAAS,OAAO,QAAQ,QAAQ,SAAS;AACrC,YAAI,SAAS;AAAA,UACT,MAAM;AAAA,UACN;AAAA,UACA;AAAA,QACJ;AACA,YAAI,YAAY,WAAW,QAAQ,cAAc,UAAU,QAAQ,mBAAmB,SAAS;AAC3F,iBAAO,UAAU;AAAA,QACrB;AACA,eAAO;AAAA,MACX;AACA,MAAAA,YAAW,SAAS;AACpB,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,aAAa,UAAU,SAAS,YAAY,GAAG,OAAO,UAAU,MAAM,KAAK,GAAG,OAAO,UAAU,MAAM,MACvG,UAAU,YAAY,WACjB,UAAU,QAAQ,cAAc,UAAU,GAAG,QAAQ,UAAU,QAAQ,SAAS,OAAO,UAAU,QAAQ,mBAAmB,UAAU,GAAG,QAAQ,UAAU,QAAQ,cAAc;AAAA,MAC/L;AACA,MAAAA,YAAW,KAAK;AAAA,IACpB,GAAG,eAAe,aAAa,CAAC,EAAE;AAElC,KAAC,SAAUC,aAAY;AACnB,eAAS,OAAO,KAAK,SAAS;AAC1B,YAAI,SAAS;AAAA,UACT,MAAM;AAAA,UACN;AAAA,QACJ;AACA,YAAI,YAAY,WAAW,QAAQ,cAAc,UAAU,QAAQ,sBAAsB,SAAS;AAC9F,iBAAO,UAAU;AAAA,QACrB;AACA,eAAO;AAAA,MACX;AACA,MAAAA,YAAW,SAAS;AACpB,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,aAAa,UAAU,SAAS,YAAY,GAAG,OAAO,UAAU,GAAG,MACrE,UAAU,YAAY,WACjB,UAAU,QAAQ,cAAc,UAAU,GAAG,QAAQ,UAAU,QAAQ,SAAS,OAAO,UAAU,QAAQ,sBAAsB,UAAU,GAAG,QAAQ,UAAU,QAAQ,iBAAiB;AAAA,MACrM;AACA,MAAAA,YAAW,KAAK;AAAA,IACpB,GAAG,eAAe,aAAa,CAAC,EAAE;AAElC,KAAC,SAAUC,gBAAe;AACtB,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,cACF,UAAU,YAAY,UAAU,UAAU,oBAAoB,YAC9D,UAAU,oBAAoB,UAAU,UAAU,gBAAgB,MAAM,SAAU,QAAQ;AACvF,cAAI,GAAG,OAAO,OAAO,IAAI,GAAG;AACxB,mBAAO,WAAW,GAAG,MAAM,KAAK,WAAW,GAAG,MAAM,KAAK,WAAW,GAAG,MAAM;AAAA,UACjF,OACK;AACD,mBAAO,iBAAiB,GAAG,MAAM;AAAA,UACrC;AAAA,QACJ,CAAC;AAAA,MACT;AACA,MAAAA,eAAc,KAAK;AAAA,IACvB,GAAG,kBAAkB,gBAAgB,CAAC,EAAE;AACxC,IAAI,qBAAoC,WAAY;AAChD,eAASC,oBAAmB,OAAO;AAC/B,aAAK,QAAQ;AAAA,MACjB;AACA,MAAAA,oBAAmB,UAAU,SAAS,SAAU,UAAU,SAAS;AAC/D,aAAK,MAAM,KAAK,SAAS,OAAO,UAAU,OAAO,CAAC;AAAA,MACtD;AACA,MAAAA,oBAAmB,UAAU,UAAU,SAAU,OAAO,SAAS;AAC7D,aAAK,MAAM,KAAK,SAAS,QAAQ,OAAO,OAAO,CAAC;AAAA,MACpD;AACA,MAAAA,oBAAmB,UAAU,SAAS,SAAU,OAAO;AACnD,aAAK,MAAM,KAAK,SAAS,IAAI,KAAK,CAAC;AAAA,MACvC;AACA,MAAAA,oBAAmB,UAAU,MAAM,SAAU,MAAM;AAC/C,aAAK,MAAM,KAAK,IAAI;AAAA,MACxB;AACA,MAAAA,oBAAmB,UAAU,MAAM,WAAY;AAC3C,eAAO,KAAK;AAAA,MAChB;AACA,MAAAA,oBAAmB,UAAU,QAAQ,WAAY;AAC7C,aAAK,MAAM,OAAO,GAAG,KAAK,MAAM,MAAM;AAAA,MAC1C;AACA,aAAOA;AAAA,IACX,EAAE;AAIF,IAAI,kBAAiC,WAAY;AAC7C,eAASC,iBAAgB,eAAe;AACpC,YAAI,QAAQ;AACZ,aAAK,mBAAmB,uBAAO,OAAO,IAAI;AAC1C,YAAI,eAAe;AACf,eAAK,iBAAiB;AACtB,cAAI,cAAc,iBAAiB;AAC/B,0BAAc,gBAAgB,QAAQ,SAAU,QAAQ;AACpD,kBAAI,iBAAiB,GAAG,MAAM,GAAG;AAC7B,oBAAI,iBAAiB,IAAI,mBAAmB,OAAO,KAAK;AACxD,sBAAM,iBAAiB,OAAO,aAAa,OAAO;AAAA,cACtD;AAAA,YACJ,CAAC;AAAA,UACL,WACS,cAAc,SAAS;AAC5B,mBAAO,KAAK,cAAc,OAAO,EAAE,QAAQ,SAAU,KAAK;AACtD,kBAAI,iBAAiB,IAAI,mBAAmB,cAAc,QAAQ,IAAI;AACtE,oBAAM,iBAAiB,OAAO;AAAA,YAClC,CAAC;AAAA,UACL;AAAA,QACJ;AAAA,MACJ;AACA,aAAO,eAAeA,iBAAgB,WAAW,QAAQ;AAAA,QAKrD,KAAK,WAAY;AACb,iBAAO,KAAK;AAAA,QAChB;AAAA,QACA,YAAY;AAAA,QACZ,cAAc;AAAA,MAClB,CAAC;AACD,MAAAA,iBAAgB,UAAU,oBAAoB,SAAU,KAAK;AACzD,YAAI,gCAAgC,GAAG,GAAG,GAAG;AACzC,cAAI,CAAC,KAAK,gBAAgB;AACtB,iBAAK,iBAAiB;AAAA,cAClB,iBAAiB,CAAC;AAAA,YACtB;AAAA,UACJ;AACA,cAAI,CAAC,KAAK,eAAe,iBAAiB;AACtC,kBAAM,IAAI,MAAM,wDAAwD;AAAA,UAC5E;AACA,cAAI,eAAe;AACnB,cAAI,SAAS,KAAK,iBAAiB,aAAa;AAChD,cAAI,CAAC,QAAQ;AACT,gBAAI,QAAQ,CAAC;AACb,gBAAI,mBAAmB;AAAA,cACnB;AAAA,cACA;AAAA,YACJ;AACA,iBAAK,eAAe,gBAAgB,KAAK,gBAAgB;AACzD,qBAAS,IAAI,mBAAmB,KAAK;AACrC,iBAAK,iBAAiB,aAAa,OAAO;AAAA,UAC9C;AACA,iBAAO;AAAA,QACX,OACK;AACD,cAAI,CAAC,KAAK,gBAAgB;AACtB,iBAAK,iBAAiB;AAAA,cAClB,SAAS,uBAAO,OAAO,IAAI;AAAA,YAC/B;AAAA,UACJ;AACA,cAAI,CAAC,KAAK,eAAe,SAAS;AAC9B,kBAAM,IAAI,MAAM,gEAAgE;AAAA,UACpF;AACA,cAAI,SAAS,KAAK,iBAAiB;AACnC,cAAI,CAAC,QAAQ;AACT,gBAAI,QAAQ,CAAC;AACb,iBAAK,eAAe,QAAQ,OAAO;AACnC,qBAAS,IAAI,mBAAmB,KAAK;AACrC,iBAAK,iBAAiB,OAAO;AAAA,UACjC;AACA,iBAAO;AAAA,QACX;AAAA,MACJ;AACA,MAAAA,iBAAgB,UAAU,aAAa,SAAU,KAAK,SAAS;AAC3D,aAAK,qBAAqB;AAC1B,aAAK,eAAe,gBAAgB,KAAK,WAAW,OAAO,KAAK,OAAO,CAAC;AAAA,MAC5E;AACA,MAAAA,iBAAgB,UAAU,aAAa,SAAU,QAAQ,QAAQ,SAAS;AACtE,aAAK,qBAAqB;AAC1B,aAAK,eAAe,gBAAgB,KAAK,WAAW,OAAO,QAAQ,QAAQ,OAAO,CAAC;AAAA,MACvF;AACA,MAAAA,iBAAgB,UAAU,aAAa,SAAU,KAAK,SAAS;AAC3D,aAAK,qBAAqB;AAC1B,aAAK,eAAe,gBAAgB,KAAK,WAAW,OAAO,KAAK,OAAO,CAAC;AAAA,MAC5E;AACA,MAAAA,iBAAgB,UAAU,uBAAuB,WAAY;AACzD,YAAI,CAAC,KAAK,kBAAkB,CAAC,KAAK,eAAe,iBAAiB;AAC9D,gBAAM,IAAI,MAAM,wDAAwD;AAAA,QAC5E;AAAA,MACJ;AACA,aAAOA;AAAA,IACX,EAAE;AAOF,KAAC,SAAUC,yBAAwB;AAK/B,eAAS,OAAO,KAAK;AACjB,eAAO,EAAE,IAAS;AAAA,MACtB;AACA,MAAAA,wBAAuB,SAAS;AAIhC,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,GAAG,QAAQ,SAAS,KAAK,GAAG,OAAO,UAAU,GAAG;AAAA,MAC3D;AACA,MAAAA,wBAAuB,KAAK;AAAA,IAChC,GAAG,2BAA2B,yBAAyB,CAAC,EAAE;AAM1D,KAAC,SAAUC,kCAAiC;AAMxC,eAAS,OAAO,KAAK,SAAS;AAC1B,eAAO,EAAE,KAAU,QAAiB;AAAA,MACxC;AACA,MAAAA,iCAAgC,SAAS;AAIzC,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,GAAG,QAAQ,SAAS,KAAK,GAAG,OAAO,UAAU,GAAG,MAAM,UAAU,YAAY,QAAQ,GAAG,OAAO,UAAU,OAAO;AAAA,MAC1H;AACA,MAAAA,iCAAgC,KAAK;AAAA,IACzC,GAAG,oCAAoC,kCAAkC,CAAC,EAAE;AAM5E,KAAC,SAAUC,mBAAkB;AAQzB,eAAS,OAAO,KAAK,YAAY,SAAS,MAAM;AAC5C,eAAO,EAAE,KAAU,YAAwB,SAAkB,KAAW;AAAA,MAC5E;AACA,MAAAA,kBAAiB,SAAS;AAI1B,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,GAAG,QAAQ,SAAS,KAAK,GAAG,OAAO,UAAU,GAAG,KAAK,GAAG,OAAO,UAAU,UAAU,KAAK,GAAG,OAAO,UAAU,OAAO,KAAK,GAAG,OAAO,UAAU,IAAI;AAAA,MAC3J;AACA,MAAAA,kBAAiB,KAAK;AAAA,IAC1B,GAAG,qBAAqB,mBAAmB,CAAC,EAAE;AAS9C,KAAC,SAAUC,aAAY;AAInB,MAAAA,YAAW,YAAY;AAIvB,MAAAA,YAAW,WAAW;AAAA,IAC1B,GAAG,eAAe,aAAa,CAAC,EAAE;AAClC,KAAC,SAAUA,aAAY;AAInB,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,cAAcA,YAAW,aAAa,cAAcA,YAAW;AAAA,MAC1E;AACA,MAAAA,YAAW,KAAK;AAAA,IACpB,GAAG,eAAe,aAAa,CAAC,EAAE;AAElC,KAAC,SAAUC,gBAAe;AAItB,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,GAAG,cAAc,KAAK,KAAK,WAAW,GAAG,UAAU,IAAI,KAAK,GAAG,OAAO,UAAU,KAAK;AAAA,MAChG;AACA,MAAAA,eAAc,KAAK;AAAA,IACvB,GAAG,kBAAkB,gBAAgB,CAAC,EAAE;AAKxC,KAAC,SAAUC,qBAAoB;AAC3B,MAAAA,oBAAmB,OAAO;AAC1B,MAAAA,oBAAmB,SAAS;AAC5B,MAAAA,oBAAmB,WAAW;AAC9B,MAAAA,oBAAmB,cAAc;AACjC,MAAAA,oBAAmB,QAAQ;AAC3B,MAAAA,oBAAmB,WAAW;AAC9B,MAAAA,oBAAmB,QAAQ;AAC3B,MAAAA,oBAAmB,YAAY;AAC/B,MAAAA,oBAAmB,SAAS;AAC5B,MAAAA,oBAAmB,WAAW;AAC9B,MAAAA,oBAAmB,OAAO;AAC1B,MAAAA,oBAAmB,QAAQ;AAC3B,MAAAA,oBAAmB,OAAO;AAC1B,MAAAA,oBAAmB,UAAU;AAC7B,MAAAA,oBAAmB,UAAU;AAC7B,MAAAA,oBAAmB,QAAQ;AAC3B,MAAAA,oBAAmB,OAAO;AAC1B,MAAAA,oBAAmB,YAAY;AAC/B,MAAAA,oBAAmB,SAAS;AAC5B,MAAAA,oBAAmB,aAAa;AAChC,MAAAA,oBAAmB,WAAW;AAC9B,MAAAA,oBAAmB,SAAS;AAC5B,MAAAA,oBAAmB,QAAQ;AAC3B,MAAAA,oBAAmB,WAAW;AAC9B,MAAAA,oBAAmB,gBAAgB;AAAA,IACvC,GAAG,uBAAuB,qBAAqB,CAAC,EAAE;AAMlD,KAAC,SAAUC,mBAAkB;AAIzB,MAAAA,kBAAiB,YAAY;AAW7B,MAAAA,kBAAiB,UAAU;AAAA,IAC/B,GAAG,qBAAqB,mBAAmB,CAAC,EAAE;AAM9C,KAAC,SAAUC,iBAAgB;AAKvB,eAAS,OAAO,OAAO;AACnB,eAAO,EAAE,MAAa;AAAA,MAC1B;AACA,MAAAA,gBAAe,SAAS;AAAA,IAC5B,GAAG,mBAAmB,iBAAiB,CAAC,EAAE;AAM1C,KAAC,SAAUC,iBAAgB;AAOvB,eAAS,OAAO,OAAO,cAAc;AACjC,eAAO,EAAE,OAAO,QAAQ,QAAQ,CAAC,GAAG,cAAc,CAAC,CAAC,aAAa;AAAA,MACrE;AACA,MAAAA,gBAAe,SAAS;AAAA,IAC5B,GAAG,mBAAmB,iBAAiB,CAAC,EAAE;AAE1C,KAAC,SAAUC,eAAc;AAMrB,eAAS,cAAc,WAAW;AAC9B,eAAO,UAAU,QAAQ,yBAAyB,MAAM;AAAA,MAC5D;AACA,MAAAA,cAAa,gBAAgB;AAI7B,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,GAAG,OAAO,SAAS,KAAM,GAAG,cAAc,SAAS,KAAK,GAAG,OAAO,UAAU,QAAQ,KAAK,GAAG,OAAO,UAAU,KAAK;AAAA,MAC7H;AACA,MAAAA,cAAa,KAAK;AAAA,IACtB,GAAG,iBAAiB,eAAe,CAAC,EAAE;AAEtC,KAAC,SAAUC,QAAO;AAId,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,CAAC,CAAC,aAAa,GAAG,cAAc,SAAS,MAAM,cAAc,GAAG,UAAU,QAAQ,KACrF,aAAa,GAAG,UAAU,QAAQ,KAClC,GAAG,WAAW,UAAU,UAAU,aAAa,EAAE,OAAO,MAAM,UAAU,UAAU,MAAM,GAAG,MAAM,KAAK;AAAA,MAC9G;AACA,MAAAA,OAAM,KAAK;AAAA,IACf,GAAG,UAAU,QAAQ,CAAC,EAAE;AAMxB,KAAC,SAAUC,uBAAsB;AAO7B,eAAS,OAAO,OAAO,eAAe;AAClC,eAAO,gBAAgB,EAAE,OAAc,cAA6B,IAAI,EAAE,MAAa;AAAA,MAC3F;AACA,MAAAA,sBAAqB,SAAS;AAC9B;AAAA,IACJ,GAAG,yBAAyB,uBAAuB,CAAC,EAAE;AAMtD,KAAC,SAAUC,uBAAsB;AAC7B,eAAS,OAAO,OAAO,eAAe;AAClC,YAAI,aAAa,CAAC;AAClB,iBAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC1C,qBAAW,KAAK,KAAK,UAAU;AAAA,QACnC;AACA,YAAI,SAAS,EAAE,MAAa;AAC5B,YAAI,GAAG,QAAQ,aAAa,GAAG;AAC3B,iBAAO,gBAAgB;AAAA,QAC3B;AACA,YAAI,GAAG,QAAQ,UAAU,GAAG;AACxB,iBAAO,aAAa;AAAA,QACxB,OACK;AACD,iBAAO,aAAa,CAAC;AAAA,QACzB;AACA,eAAO;AAAA,MACX;AACA,MAAAA,sBAAqB,SAAS;AAAA,IAClC,GAAG,yBAAyB,uBAAuB,CAAC,EAAE;AAKtD,KAAC,SAAUC,wBAAuB;AAI9B,MAAAA,uBAAsB,OAAO;AAI7B,MAAAA,uBAAsB,OAAO;AAI7B,MAAAA,uBAAsB,QAAQ;AAAA,IAClC,GAAG,0BAA0B,wBAAwB,CAAC,EAAE;AAMxD,KAAC,SAAUC,oBAAmB;AAK1B,eAAS,OAAO,OAAO,MAAM;AACzB,YAAI,SAAS,EAAE,MAAa;AAC5B,YAAI,GAAG,OAAO,IAAI,GAAG;AACjB,iBAAO,OAAO;AAAA,QAClB;AACA,eAAO;AAAA,MACX;AACA,MAAAA,mBAAkB,SAAS;AAAA,IAC/B,GAAG,sBAAsB,oBAAoB,CAAC,EAAE;AAKhD,KAAC,SAAUC,aAAY;AACnB,MAAAA,YAAW,OAAO;AAClB,MAAAA,YAAW,SAAS;AACpB,MAAAA,YAAW,YAAY;AACvB,MAAAA,YAAW,UAAU;AACrB,MAAAA,YAAW,QAAQ;AACnB,MAAAA,YAAW,SAAS;AACpB,MAAAA,YAAW,WAAW;AACtB,MAAAA,YAAW,QAAQ;AACnB,MAAAA,YAAW,cAAc;AACzB,MAAAA,YAAW,OAAO;AAClB,MAAAA,YAAW,YAAY;AACvB,MAAAA,YAAW,WAAW;AACtB,MAAAA,YAAW,WAAW;AACtB,MAAAA,YAAW,WAAW;AACtB,MAAAA,YAAW,SAAS;AACpB,MAAAA,YAAW,SAAS;AACpB,MAAAA,YAAW,UAAU;AACrB,MAAAA,YAAW,QAAQ;AACnB,MAAAA,YAAW,SAAS;AACpB,MAAAA,YAAW,MAAM;AACjB,MAAAA,YAAW,OAAO;AAClB,MAAAA,YAAW,aAAa;AACxB,MAAAA,YAAW,SAAS;AACpB,MAAAA,YAAW,QAAQ;AACnB,MAAAA,YAAW,WAAW;AACtB,MAAAA,YAAW,gBAAgB;AAAA,IAC/B,GAAG,eAAe,aAAa,CAAC,EAAE;AAElC,KAAC,SAAUC,oBAAmB;AAU1B,eAAS,OAAO,MAAM,MAAM,OAAO,KAAK,eAAe;AACnD,YAAI,SAAS;AAAA,UACT;AAAA,UACA;AAAA,UACA,UAAU,EAAE,KAAU,MAAa;AAAA,QACvC;AACA,YAAI,eAAe;AACf,iBAAO,gBAAgB;AAAA,QAC3B;AACA,eAAO;AAAA,MACX;AACA,MAAAA,mBAAkB,SAAS;AAAA,IAC/B,GAAG,sBAAsB,oBAAoB,CAAC,EAAE;AAOhD,IAAI,iBAAgC,WAAY;AAC5C,eAASC,kBAAiB;AAAA,MAC1B;AACA,aAAOA;AAAA,IACX,EAAE;AAEF,KAAC,SAAUA,iBAAgB;AAWvB,eAAS,OAAO,MAAM,QAAQ,MAAM,OAAO,gBAAgB,UAAU;AACjE,YAAI,SAAS;AAAA,UACT;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACJ;AACA,YAAI,aAAa,QAAQ;AACrB,iBAAO,WAAW;AAAA,QACtB;AACA,eAAO;AAAA,MACX;AACA,MAAAA,gBAAe,SAAS;AAIxB,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,aACH,GAAG,OAAO,UAAU,IAAI,KAAK,GAAG,OAAO,UAAU,IAAI,KACrD,MAAM,GAAG,UAAU,KAAK,KAAK,MAAM,GAAG,UAAU,cAAc,MAC7D,UAAU,WAAW,UAAU,GAAG,OAAO,UAAU,MAAM,OACzD,UAAU,eAAe,UAAU,GAAG,QAAQ,UAAU,UAAU,OAClE,UAAU,aAAa,UAAU,MAAM,QAAQ,UAAU,QAAQ;AAAA,MAC1E;AACA,MAAAA,gBAAe,KAAK;AAAA,IACxB,GAAG,mBAAmB,iBAAiB,CAAC,EAAE;AAK1C,KAAC,SAAUC,iBAAgB;AAIvB,MAAAA,gBAAe,WAAW;AAI1B,MAAAA,gBAAe,WAAW;AAY1B,MAAAA,gBAAe,kBAAkB;AAWjC,MAAAA,gBAAe,iBAAiB;AAahC,MAAAA,gBAAe,kBAAkB;AAMjC,MAAAA,gBAAe,SAAS;AAIxB,MAAAA,gBAAe,wBAAwB;AAAA,IAC3C,GAAG,mBAAmB,iBAAiB,CAAC,EAAE;AAM1C,KAAC,SAAUC,oBAAmB;AAI1B,eAAS,OAAO,aAAa,MAAM;AAC/B,YAAI,SAAS,EAAE,YAAyB;AACxC,YAAI,SAAS,UAAU,SAAS,MAAM;AAClC,iBAAO,OAAO;AAAA,QAClB;AACA,eAAO;AAAA,MACX;AACA,MAAAA,mBAAkB,SAAS;AAI3B,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,GAAG,QAAQ,SAAS,KAAK,GAAG,WAAW,UAAU,aAAa,WAAW,EAAE,MAAM,UAAU,SAAS,UAAU,GAAG,WAAW,UAAU,MAAM,GAAG,MAAM;AAAA,MAChK;AACA,MAAAA,mBAAkB,KAAK;AAAA,IAC3B,GAAG,sBAAsB,oBAAoB,CAAC,EAAE;AAEhD,KAAC,SAAUC,aAAY;AACnB,eAAS,OAAO,OAAO,eAAe,MAAM;AACxC,YAAI,SAAS,EAAE,MAAa;AAC5B,YAAI,QAAQ,GAAG,aAAa,GAAG;AAC3B,iBAAO,UAAU;AAAA,QACrB,OACK;AACD,iBAAO,OAAO;AAAA,QAClB;AACA,YAAI,SAAS,QAAW;AACpB,iBAAO,OAAO;AAAA,QAClB;AACA,eAAO;AAAA,MACX;AACA,MAAAA,YAAW,SAAS;AACpB,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,aAAa,GAAG,OAAO,UAAU,KAAK,MACxC,UAAU,gBAAgB,UAAU,GAAG,WAAW,UAAU,aAAa,WAAW,EAAE,OACtF,UAAU,SAAS,UAAU,GAAG,OAAO,UAAU,IAAI,OACrD,UAAU,SAAS,UAAU,UAAU,YAAY,YACnD,UAAU,YAAY,UAAU,QAAQ,GAAG,UAAU,OAAO,OAC5D,UAAU,SAAS,UAAU,cAAc,GAAG,UAAU,IAAI;AAAA,MACrE;AACA,MAAAA,YAAW,KAAK;AAAA,IACpB,GAAG,eAAe,aAAa,CAAC,EAAE;AAMlC,KAAC,SAAUC,WAAU;AAIjB,eAAS,OAAO,OAAO,MAAM;AACzB,YAAI,SAAS,EAAE,MAAa;AAC5B,YAAI,GAAG,QAAQ,IAAI;AACf,iBAAO,OAAO;AAClB,eAAO;AAAA,MACX;AACA,MAAAA,UAAS,SAAS;AAIlB,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,GAAG,QAAQ,SAAS,KAAK,MAAM,GAAG,UAAU,KAAK,MAAM,GAAG,UAAU,UAAU,OAAO,KAAK,QAAQ,GAAG,UAAU,OAAO;AAAA,MACjI;AACA,MAAAA,UAAS,KAAK;AAAA,IAClB,GAAG,aAAa,WAAW,CAAC,EAAE;AAM9B,KAAC,SAAUC,oBAAmB;AAI1B,eAAS,OAAO,SAAS,cAAc;AACnC,eAAO,EAAE,SAAkB,aAA2B;AAAA,MAC1D;AACA,MAAAA,mBAAkB,SAAS;AAI3B,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,GAAG,QAAQ,SAAS,KAAK,GAAG,OAAO,UAAU,OAAO,KAAK,GAAG,QAAQ,UAAU,YAAY;AAAA,MACrG;AACA,MAAAA,mBAAkB,KAAK;AAAA,IAC3B,GAAG,sBAAsB,oBAAoB,CAAC,EAAE;AAKhD,IAAI,eAA8B,WAAY;AAC1C,eAASC,gBAAe;AAAA,MACxB;AACA,aAAOA;AAAA,IACX,EAAE;AAMF,KAAC,SAAUA,eAAc;AAIrB,eAAS,OAAO,OAAO,QAAQ,MAAM;AACjC,eAAO,EAAE,OAAc,QAAgB,KAAW;AAAA,MACtD;AACA,MAAAA,cAAa,SAAS;AAItB,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,GAAG,QAAQ,SAAS,KAAK,MAAM,GAAG,UAAU,KAAK,MAAM,GAAG,UAAU,UAAU,MAAM,KAAK,GAAG,OAAO,UAAU,MAAM;AAAA,MAC9H;AACA,MAAAA,cAAa,KAAK;AAAA,IACtB,GAAG,iBAAiB,eAAe,CAAC,EAAE;AAC/B,IAAI,MAAM,CAAC,MAAM,QAAQ,IAAI;AAEpC,KAAC,SAAUC,eAAc;AAOrB,eAAS,OAAO,KAAK,YAAY,SAAS,SAAS;AAC/C,eAAO,IAAI,iBAAiB,KAAK,YAAY,SAAS,OAAO;AAAA,MACjE;AACA,MAAAA,cAAa,SAAS;AAItB,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,GAAG,QAAQ,SAAS,KAAK,GAAG,OAAO,UAAU,GAAG,MAAM,GAAG,UAAU,UAAU,UAAU,KAAK,GAAG,OAAO,UAAU,UAAU,MAAM,GAAG,OAAO,UAAU,SAAS,KAC7J,GAAG,KAAK,UAAU,OAAO,KAAK,GAAG,KAAK,UAAU,UAAU,KAAK,GAAG,KAAK,UAAU,QAAQ,IAAI,OAAO;AAAA,MAC/G;AACA,MAAAA,cAAa,KAAK;AAClB,eAASC,YAAWC,WAAU,OAAO;AACjC,YAAI,OAAOA,UAAS,QAAQ;AAC5B,YAAI,cAAc,UAAU,OAAO,SAAU,GAAG,GAAG;AAC/C,cAAI,OAAO,EAAE,MAAM,MAAM,OAAO,EAAE,MAAM,MAAM;AAC9C,cAAI,SAAS,GAAG;AACZ,mBAAO,EAAE,MAAM,MAAM,YAAY,EAAE,MAAM,MAAM;AAAA,UACnD;AACA,iBAAO;AAAA,QACX,CAAC;AACD,YAAI,qBAAqB,KAAK;AAC9B,iBAAS,IAAI,YAAY,SAAS,GAAG,KAAK,GAAG,KAAK;AAC9C,cAAI,IAAI,YAAY;AACpB,cAAI,cAAcA,UAAS,SAAS,EAAE,MAAM,KAAK;AACjD,cAAI,YAAYA,UAAS,SAAS,EAAE,MAAM,GAAG;AAC7C,cAAI,aAAa,oBAAoB;AACjC,mBAAO,KAAK,UAAU,GAAG,WAAW,IAAI,EAAE,UAAU,KAAK,UAAU,WAAW,KAAK,MAAM;AAAA,UAC7F,OACK;AACD,kBAAM,IAAI,MAAM,kBAAkB;AAAA,UACtC;AACA,+BAAqB;AAAA,QACzB;AACA,eAAO;AAAA,MACX;AACA,MAAAF,cAAa,aAAaC;AAC1B,eAAS,UAAU,MAAM,SAAS;AAC9B,YAAI,KAAK,UAAU,GAAG;AAElB,iBAAO;AAAA,QACX;AACA,YAAI,IAAK,KAAK,SAAS,IAAK;AAC5B,YAAI,OAAO,KAAK,MAAM,GAAG,CAAC;AAC1B,YAAI,QAAQ,KAAK,MAAM,CAAC;AACxB,kBAAU,MAAM,OAAO;AACvB,kBAAU,OAAO,OAAO;AACxB,YAAI,UAAU;AACd,YAAI,WAAW;AACf,YAAI,IAAI;AACR,eAAO,UAAU,KAAK,UAAU,WAAW,MAAM,QAAQ;AACrD,cAAI,MAAM,QAAQ,KAAK,UAAU,MAAM,SAAS;AAChD,cAAI,OAAO,GAAG;AAEV,iBAAK,OAAO,KAAK;AAAA,UACrB,OACK;AAED,iBAAK,OAAO,MAAM;AAAA,UACtB;AAAA,QACJ;AACA,eAAO,UAAU,KAAK,QAAQ;AAC1B,eAAK,OAAO,KAAK;AAAA,QACrB;AACA,eAAO,WAAW,MAAM,QAAQ;AAC5B,eAAK,OAAO,MAAM;AAAA,QACtB;AACA,eAAO;AAAA,MACX;AAAA,IACJ,GAAG,iBAAiB,eAAe,CAAC,EAAE;AAKtC,KAAC,SAAUE,yBAAwB;AAK/B,MAAAA,wBAAuB,SAAS;AAIhC,MAAAA,wBAAuB,aAAa;AAIpC,MAAAA,wBAAuB,WAAW;AAAA,IACtC,GAAG,2BAA2B,yBAAyB,CAAC,EAAE;AAC1D,IAAI,mBAAkC,WAAY;AAC9C,eAASC,kBAAiB,KAAK,YAAY,SAAS,SAAS;AACzD,aAAK,OAAO;AACZ,aAAK,cAAc;AACnB,aAAK,WAAW;AAChB,aAAK,WAAW;AAChB,aAAK,eAAe;AAAA,MACxB;AACA,aAAO,eAAeA,kBAAiB,WAAW,OAAO;AAAA,QACrD,KAAK,WAAY;AACb,iBAAO,KAAK;AAAA,QAChB;AAAA,QACA,YAAY;AAAA,QACZ,cAAc;AAAA,MAClB,CAAC;AACD,aAAO,eAAeA,kBAAiB,WAAW,cAAc;AAAA,QAC5D,KAAK,WAAY;AACb,iBAAO,KAAK;AAAA,QAChB;AAAA,QACA,YAAY;AAAA,QACZ,cAAc;AAAA,MAClB,CAAC;AACD,aAAO,eAAeA,kBAAiB,WAAW,WAAW;AAAA,QACzD,KAAK,WAAY;AACb,iBAAO,KAAK;AAAA,QAChB;AAAA,QACA,YAAY;AAAA,QACZ,cAAc;AAAA,MAClB,CAAC;AACD,MAAAA,kBAAiB,UAAU,UAAU,SAAU,OAAO;AAClD,YAAI,OAAO;AACP,cAAI,QAAQ,KAAK,SAAS,MAAM,KAAK;AACrC,cAAI,MAAM,KAAK,SAAS,MAAM,GAAG;AACjC,iBAAO,KAAK,SAAS,UAAU,OAAO,GAAG;AAAA,QAC7C;AACA,eAAO,KAAK;AAAA,MAChB;AACA,MAAAA,kBAAiB,UAAU,SAAS,SAAU,OAAO,SAAS;AAC1D,aAAK,WAAW,MAAM;AACtB,aAAK,WAAW;AAChB,aAAK,eAAe;AAAA,MACxB;AACA,MAAAA,kBAAiB,UAAU,iBAAiB,WAAY;AACpD,YAAI,KAAK,iBAAiB,MAAM;AAC5B,cAAI,cAAc,CAAC;AACnB,cAAI,OAAO,KAAK;AAChB,cAAI,cAAc;AAClB,mBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAClC,gBAAI,aAAa;AACb,0BAAY,KAAK,CAAC;AAClB,4BAAc;AAAA,YAClB;AACA,gBAAI,KAAK,KAAK,OAAO,CAAC;AACtB,0BAAe,OAAO,QAAQ,OAAO;AACrC,gBAAI,OAAO,QAAQ,IAAI,IAAI,KAAK,UAAU,KAAK,OAAO,IAAI,CAAC,MAAM,MAAM;AACnE;AAAA,YACJ;AAAA,UACJ;AACA,cAAI,eAAe,KAAK,SAAS,GAAG;AAChC,wBAAY,KAAK,KAAK,MAAM;AAAA,UAChC;AACA,eAAK,eAAe;AAAA,QACxB;AACA,eAAO,KAAK;AAAA,MAChB;AACA,MAAAA,kBAAiB,UAAU,aAAa,SAAU,QAAQ;AACtD,iBAAS,KAAK,IAAI,KAAK,IAAI,QAAQ,KAAK,SAAS,MAAM,GAAG,CAAC;AAC3D,YAAI,cAAc,KAAK,eAAe;AACtC,YAAI,MAAM,GAAG,OAAO,YAAY;AAChC,YAAI,SAAS,GAAG;AACZ,iBAAO,SAAS,OAAO,GAAG,MAAM;AAAA,QACpC;AACA,eAAO,MAAM,MAAM;AACf,cAAI,MAAM,KAAK,OAAO,MAAM,QAAQ,CAAC;AACrC,cAAI,YAAY,OAAO,QAAQ;AAC3B,mBAAO;AAAA,UACX,OACK;AACD,kBAAM,MAAM;AAAA,UAChB;AAAA,QACJ;AAGA,YAAI,OAAO,MAAM;AACjB,eAAO,SAAS,OAAO,MAAM,SAAS,YAAY,KAAK;AAAA,MAC3D;AACA,MAAAA,kBAAiB,UAAU,WAAW,SAAU,UAAU;AACtD,YAAI,cAAc,KAAK,eAAe;AACtC,YAAI,SAAS,QAAQ,YAAY,QAAQ;AACrC,iBAAO,KAAK,SAAS;AAAA,QACzB,WACS,SAAS,OAAO,GAAG;AACxB,iBAAO;AAAA,QACX;AACA,YAAI,aAAa,YAAY,SAAS;AACtC,YAAI,iBAAkB,SAAS,OAAO,IAAI,YAAY,SAAU,YAAY,SAAS,OAAO,KAAK,KAAK,SAAS;AAC/G,eAAO,KAAK,IAAI,KAAK,IAAI,aAAa,SAAS,WAAW,cAAc,GAAG,UAAU;AAAA,MACzF;AACA,aAAO,eAAeA,kBAAiB,WAAW,aAAa;AAAA,QAC3D,KAAK,WAAY;AACb,iBAAO,KAAK,eAAe,EAAE;AAAA,QACjC;AAAA,QACA,YAAY;AAAA,QACZ,cAAc;AAAA,MAClB,CAAC;AACD,aAAOA;AAAA,IACX,EAAE;AAEF,KAAC,SAAUC,KAAI;AACX,UAAIC,YAAW,OAAO,UAAU;AAChC,eAAS,QAAQ,OAAO;AACpB,eAAO,OAAO,UAAU;AAAA,MAC5B;AACA,MAAAD,IAAG,UAAU;AACb,eAASE,WAAU,OAAO;AACtB,eAAO,OAAO,UAAU;AAAA,MAC5B;AACA,MAAAF,IAAG,YAAYE;AACf,eAAS,QAAQ,OAAO;AACpB,eAAO,UAAU,QAAQ,UAAU;AAAA,MACvC;AACA,MAAAF,IAAG,UAAU;AACb,eAAS,OAAO,OAAO;AACnB,eAAOC,UAAS,KAAK,KAAK,MAAM;AAAA,MACpC;AACA,MAAAD,IAAG,SAAS;AACZ,eAAS,OAAO,OAAO;AACnB,eAAOC,UAAS,KAAK,KAAK,MAAM;AAAA,MACpC;AACA,MAAAD,IAAG,SAAS;AACZ,eAAS,KAAK,OAAO;AACjB,eAAOC,UAAS,KAAK,KAAK,MAAM;AAAA,MACpC;AACA,MAAAD,IAAG,OAAO;AACV,eAAS,cAAc,OAAO;AAI1B,eAAO,UAAU,QAAQ,OAAO,UAAU;AAAA,MAC9C;AACA,MAAAA,IAAG,gBAAgB;AACnB,eAAS,WAAW,OAAO,OAAO;AAC9B,eAAO,MAAM,QAAQ,KAAK,KAAK,MAAM,MAAM,KAAK;AAAA,MACpD;AACA,MAAAA,IAAG,aAAa;AAAA,IACpB,GAAG,OAAO,KAAK,CAAC,EAAE;AAAA;AAAA;;;AC18ClB,IAAAG,cAAA;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,aAAS,QAAQ,OAAO;AACpB,aAAO,UAAU,QAAQ,UAAU;AAAA,IACvC;AACA,YAAQ,UAAU;AAClB,aAAS,OAAO,OAAO;AACnB,aAAO,OAAO,UAAU,YAAY,iBAAiB;AAAA,IACzD;AACA,YAAQ,SAAS;AACjB,aAAS,OAAO,OAAO;AACnB,aAAO,OAAO,UAAU,YAAY,iBAAiB;AAAA,IACzD;AACA,YAAQ,SAAS;AACjB,aAAS,MAAM,OAAO;AAClB,aAAO,iBAAiB;AAAA,IAC5B;AACA,YAAQ,QAAQ;AAChB,aAAS,KAAK,OAAO;AACjB,aAAO,OAAO,UAAU;AAAA,IAC5B;AACA,YAAQ,OAAO;AACf,aAAS,MAAM,OAAO;AAClB,aAAO,MAAM,QAAQ,KAAK;AAAA,IAC9B;AACA,YAAQ,QAAQ;AAChB,aAAS,YAAY,OAAO;AACxB,aAAO,MAAM,KAAK,KAAK,MAAM,MAAM,UAAQ,OAAO,IAAI,CAAC;AAAA,IAC3D;AACA,YAAQ,cAAc;AACtB,aAAS,WAAW,OAAO,OAAO;AAC9B,aAAO,MAAM,QAAQ,KAAK,KAAK,MAAM,MAAM,KAAK;AAAA,IACpD;AACA,YAAQ,aAAa;AACrB,aAAS,SAAS,OAAO;AACrB,aAAO,SAAS,KAAK,MAAM,IAAI;AAAA,IACnC;AACA,YAAQ,WAAW;AAAA;AAAA;;;ACzCnB;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,mBAAmB;AASzB,QAAI;AACJ,KAAC,SAAUC,wBAAuB;AAC9B,MAAAA,uBAAsB,OAAO,IAAI,iBAAiB,YAAY,6BAA6B;AAAA,IAC/F,GAAG,wBAAwB,QAAQ,0BAA0B,QAAQ,wBAAwB,CAAC,EAAE;AAAA;AAAA;;;AClBhG;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,mBAAmB;AASzB,QAAI;AACJ,KAAC,SAAUC,wBAAuB;AAC9B,MAAAA,uBAAsB,OAAO,IAAI,iBAAiB,YAAY,6BAA6B;AAAA,IAC/F,GAAG,wBAAwB,QAAQ,0BAA0B,QAAQ,wBAAwB,CAAC,EAAE;AAAA;AAAA;;;AClBhG;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,mBAAmB;AAIzB,QAAI;AACJ,KAAC,SAAUC,0BAAyB;AAChC,MAAAA,yBAAwB,OAAO,IAAI,iBAAiB,aAAa,4BAA4B;AAAA,IACjG,GAAG,0BAA0B,QAAQ,4BAA4B,QAAQ,0BAA0B,CAAC,EAAE;AAKtG,QAAI;AACJ,KAAC,SAAUC,wCAAuC;AAC9C,MAAAA,uCAAsC,OAAO,IAAI,iBAAiB,iBAAiB,qCAAqC;AAAA,IAC5H,GAAG,wCAAwC,QAAQ,0CAA0C,QAAQ,wCAAwC,CAAC,EAAE;AAAA;AAAA;;;ACrBhJ;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,mBAAmB;AAUzB,QAAI;AACJ,KAAC,SAAUC,uBAAsB;AAC7B,MAAAA,sBAAqB,OAAO,IAAI,iBAAiB,YAAY,yBAAyB;AAAA,IAC1F,GAAG,uBAAuB,QAAQ,yBAAyB,QAAQ,uBAAuB,CAAC,EAAE;AAAA;AAAA;;;ACnB7F;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,mBAAmB;AAOzB,QAAI;AACJ,KAAC,SAAUC,uBAAsB;AAC7B,MAAAA,sBAAqB,OAAO,IAAI,iBAAiB,YAAY,4BAA4B;AAAA,IAC7F,GAAG,uBAAuB,QAAQ,yBAAyB,QAAQ,uBAAuB,CAAC,EAAE;AAO7F,QAAI;AACJ,KAAC,SAAUC,2BAA0B;AACjC,MAAAA,0BAAyB,OAAO,IAAI,iBAAiB,YAAY,gCAAgC;AAAA,IACrG,GAAG,2BAA2B,QAAQ,6BAA6B,QAAQ,2BAA2B,CAAC,EAAE;AAAA;AAAA;;;AC1BzG;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,mBAAmB;AAIzB,QAAIC;AACJ,KAAC,SAAUA,mBAAkB;AAIzB,MAAAA,kBAAiB,aAAa;AAI9B,MAAAA,kBAAiB,aAAa;AAI9B,MAAAA,kBAAiB,YAAY;AAAA,IACjC,GAAGA,oBAAmB,QAAQ,qBAAqB,QAAQ,mBAAmB,CAAC,EAAE;AAOjF,QAAI;AACJ,KAAC,SAAUC,sBAAqB;AAC5B,MAAAA,qBAAoB,OAAO,IAAI,iBAAiB,YAAY,2BAA2B;AAAA,IAC3F,GAAG,sBAAsB,QAAQ,wBAAwB,QAAQ,sBAAsB,CAAC,EAAE;AAAA;AAAA;;;AClC1F;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,mBAAmB;AAUzB,QAAI;AACJ,KAAC,SAAUC,qBAAoB;AAC3B,MAAAA,oBAAmB,OAAO,IAAI,iBAAiB,YAAY,0BAA0B;AAAA,IACzF,GAAG,qBAAqB,QAAQ,uBAAuB,QAAQ,qBAAqB,CAAC,EAAE;AAAA;AAAA;;;ACnBvF;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAMC,MAAK;AACX,QAAM,mBAAmB;AACzB,QAAM,4BAA4B;AAClC,YAAQ,wBAAwB,0BAA0B;AAC1D,QAAM,4BAA4B;AAClC,YAAQ,wBAAwB,0BAA0B;AAC1D,QAAM,8BAA8B;AACpC,YAAQ,0BAA0B,4BAA4B;AAC9D,YAAQ,wCAAwC,4BAA4B;AAC5E,QAAM,2BAA2B;AACjC,YAAQ,uBAAuB,yBAAyB;AACxD,QAAM,2BAA2B;AACjC,YAAQ,uBAAuB,yBAAyB;AACxD,YAAQ,2BAA2B,yBAAyB;AAC5D,QAAM,0BAA0B;AAChC,YAAQ,sBAAsB,wBAAwB;AACtD,QAAM,yBAAyB;AAC/B,YAAQ,qBAAqB,uBAAuB;AAGpD,QAAI;AACJ,KAAC,SAAUC,iBAAgB;AACvB,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAOD,IAAG,OAAO,UAAU,QAAQ,KAAKA,IAAG,OAAO,UAAU,MAAM,KAAKA,IAAG,OAAO,UAAU,OAAO;AAAA,MACtG;AACA,MAAAC,gBAAe,KAAK;AAAA,IACxB,GAAG,iBAAiB,QAAQ,mBAAmB,QAAQ,iBAAiB,CAAC,EAAE;AAK3E,QAAI;AACJ,KAAC,SAAUC,sBAAqB;AAC5B,MAAAA,qBAAoB,OAAO,IAAI,iBAAiB,YAAY,2BAA2B;AAAA,IAC3F,GAAG,sBAAsB,QAAQ,wBAAwB,QAAQ,sBAAsB,CAAC,EAAE;AAK1F,QAAI;AACJ,KAAC,SAAUC,wBAAuB;AAC9B,MAAAA,uBAAsB,OAAO,IAAI,iBAAiB,YAAY,6BAA6B;AAAA,IAC/F,GAAG,wBAAwB,QAAQ,0BAA0B,QAAQ,wBAAwB,CAAC,EAAE;AAChG,QAAI;AACJ,KAAC,SAAUC,wBAAuB;AAI9B,MAAAA,uBAAsB,SAAS;AAI/B,MAAAA,uBAAsB,SAAS;AAI/B,MAAAA,uBAAsB,SAAS;AAAA,IACnC,GAAG,wBAAwB,QAAQ,0BAA0B,QAAQ,wBAAwB,CAAC,EAAE;AAChG,QAAI;AACJ,KAAC,SAAUC,sBAAqB;AAK5B,MAAAA,qBAAoB,QAAQ;AAK5B,MAAAA,qBAAoB,gBAAgB;AAMpC,MAAAA,qBAAoB,wBAAwB;AAK5C,MAAAA,qBAAoB,OAAO;AAAA,IAC/B,GAAG,sBAAsB,QAAQ,wBAAwB,QAAQ,sBAAsB,CAAC,EAAE;AAK1F,QAAI;AACJ,KAAC,SAAUC,uBAAsB;AAI7B,MAAAA,sBAAqB,OAAO;AAK5B,MAAAA,sBAAqB,OAAO;AAM5B,MAAAA,sBAAqB,cAAc;AAAA,IACvC,GAAG,uBAAuB,QAAQ,yBAAyB,QAAQ,uBAAuB,CAAC,EAAE;AAQ7F,QAAI;AACJ,KAAC,SAAUC,oBAAmB;AAC1B,MAAAA,mBAAkB,OAAO,IAAI,iBAAiB,YAAY,YAAY;AAAA,IAC1E,GAAG,oBAAoB,QAAQ,sBAAsB,QAAQ,oBAAoB,CAAC,EAAE;AAIpF,QAAI;AACJ,KAAC,SAAUC,kBAAiB;AAMxB,MAAAA,iBAAgB,yBAAyB;AAAA,IAC7C,GAAG,kBAAkB,QAAQ,oBAAoB,QAAQ,kBAAkB,CAAC,EAAE;AAM9E,QAAI;AACJ,KAAC,SAAUC,0BAAyB;AAChC,MAAAA,yBAAwB,OAAO,IAAI,iBAAiB,iBAAiB,aAAa;AAAA,IACtF,GAAG,0BAA0B,QAAQ,4BAA4B,QAAQ,0BAA0B,CAAC,EAAE;AAQtG,QAAI;AACJ,KAAC,SAAUC,kBAAiB;AACxB,MAAAA,iBAAgB,OAAO,IAAI,iBAAiB,aAAa,UAAU;AAAA,IACvE,GAAG,kBAAkB,QAAQ,oBAAoB,QAAQ,kBAAkB,CAAC,EAAE;AAM9E,QAAI;AACJ,KAAC,SAAUC,mBAAkB;AACzB,MAAAA,kBAAiB,OAAO,IAAI,iBAAiB,kBAAkB,MAAM;AAAA,IACzE,GAAG,mBAAmB,QAAQ,qBAAqB,QAAQ,mBAAmB,CAAC,EAAE;AAOjF,QAAI;AACJ,KAAC,SAAUC,qCAAoC;AAC3C,MAAAA,oCAAmC,OAAO,IAAI,iBAAiB,iBAAiB,kCAAkC;AAAA,IACtH,GAAG,qCAAqC,QAAQ,uCAAuC,QAAQ,qCAAqC,CAAC,EAAE;AAKvI,QAAI;AACJ,KAAC,SAAUC,cAAa;AAIpB,MAAAA,aAAY,QAAQ;AAIpB,MAAAA,aAAY,UAAU;AAItB,MAAAA,aAAY,OAAO;AAInB,MAAAA,aAAY,MAAM;AAAA,IACtB,GAAG,cAAc,QAAQ,gBAAgB,QAAQ,cAAc,CAAC,EAAE;AAKlE,QAAI;AACJ,KAAC,SAAUC,0BAAyB;AAChC,MAAAA,yBAAwB,OAAO,IAAI,iBAAiB,iBAAiB,oBAAoB;AAAA,IAC7F,GAAG,0BAA0B,QAAQ,4BAA4B,QAAQ,0BAA0B,CAAC,EAAE;AAKtG,QAAI;AACJ,KAAC,SAAUC,qBAAoB;AAC3B,MAAAA,oBAAmB,OAAO,IAAI,iBAAiB,YAAY,2BAA2B;AAAA,IAC1F,GAAG,qBAAqB,QAAQ,uBAAuB,QAAQ,qBAAqB,CAAC,EAAE;AAKvF,QAAI;AACJ,KAAC,SAAUC,yBAAwB;AAC/B,MAAAA,wBAAuB,OAAO,IAAI,iBAAiB,iBAAiB,mBAAmB;AAAA,IAC3F,GAAG,yBAAyB,QAAQ,2BAA2B,QAAQ,yBAAyB,CAAC,EAAE;AAMnG,QAAI;AACJ,KAAC,SAAUC,6BAA4B;AACnC,MAAAA,4BAA2B,OAAO,IAAI,iBAAiB,iBAAiB,iBAAiB;AAAA,IAC7F,GAAG,6BAA6B,QAAQ,+BAA+B,QAAQ,6BAA6B,CAAC,EAAE;AAW/G,QAAI;AACJ,KAAC,SAAUC,kCAAiC;AACxC,MAAAA,iCAAgC,OAAO,IAAI,iBAAiB,iBAAiB,sBAAsB;AAAA,IACvG,GAAG,kCAAkC,QAAQ,oCAAoC,QAAQ,kCAAkC,CAAC,EAAE;AAK9H,QAAI;AACJ,KAAC,SAAUC,oCAAmC;AAC1C,MAAAA,mCAAkC,OAAO,IAAI,iBAAiB,iBAAiB,wBAAwB;AAAA,IAC3G,GAAG,oCAAoC,QAAQ,sCAAsC,QAAQ,oCAAoC,CAAC,EAAE;AAUpI,QAAI;AACJ,KAAC,SAAUC,mCAAkC;AACzC,MAAAA,kCAAiC,OAAO,IAAI,iBAAiB,iBAAiB,uBAAuB;AAAA,IACzG,GAAG,mCAAmC,QAAQ,qCAAqC,QAAQ,mCAAmC,CAAC,EAAE;AAKjI,QAAI;AACJ,KAAC,SAAUC,kCAAiC;AACxC,MAAAA,iCAAgC,OAAO,IAAI,iBAAiB,iBAAiB,sBAAsB;AAAA,IACvG,GAAG,kCAAkC,QAAQ,oCAAoC,QAAQ,kCAAkC,CAAC,EAAE;AAK9H,QAAI;AACJ,KAAC,SAAUC,mCAAkC;AACzC,MAAAA,kCAAiC,OAAO,IAAI,iBAAiB,iBAAiB,uBAAuB;AAAA,IACzG,GAAG,mCAAmC,QAAQ,qCAAqC,QAAQ,mCAAmC,CAAC,EAAE;AASjI,QAAI;AACJ,KAAC,SAAUC,uCAAsC;AAC7C,MAAAA,sCAAqC,OAAO,IAAI,iBAAiB,YAAY,gCAAgC;AAAA,IACjH,GAAG,uCAAuC,QAAQ,yCAAyC,QAAQ,uCAAuC,CAAC,EAAE;AAM7I,QAAI;AACJ,KAAC,SAAUC,oCAAmC;AAC1C,MAAAA,mCAAkC,OAAO,IAAI,iBAAiB,iBAAiB,iCAAiC;AAAA,IACpH,GAAG,oCAAoC,QAAQ,sCAAsC,QAAQ,oCAAoC,CAAC,EAAE;AAIpI,QAAI;AACJ,KAAC,SAAUC,iBAAgB;AAIvB,MAAAA,gBAAe,UAAU;AAIzB,MAAAA,gBAAe,UAAU;AAIzB,MAAAA,gBAAe,UAAU;AAAA,IAC7B,GAAG,iBAAiB,QAAQ,mBAAmB,QAAQ,iBAAiB,CAAC,EAAE;AAC3E,QAAI;AACJ,KAAC,SAAUC,YAAW;AAIlB,MAAAA,WAAU,SAAS;AAInB,MAAAA,WAAU,SAAS;AAInB,MAAAA,WAAU,SAAS;AAAA,IACvB,GAAG,YAAY,QAAQ,cAAc,QAAQ,YAAY,CAAC,EAAE;AAM5D,QAAI;AACJ,KAAC,SAAUC,iCAAgC;AACvC,MAAAA,gCAA+B,OAAO,IAAI,iBAAiB,iBAAiB,iCAAiC;AAAA,IACjH,GAAG,iCAAiC,QAAQ,mCAAmC,QAAQ,iCAAiC,CAAC,EAAE;AAI3H,QAAI;AACJ,KAAC,SAAUC,wBAAuB;AAK9B,MAAAA,uBAAsB,UAAU;AAKhC,MAAAA,uBAAsB,mBAAmB;AAIzC,MAAAA,uBAAsB,kCAAkC;AAAA,IAC5D,GAAG,wBAAwB,QAAQ,0BAA0B,QAAQ,wBAAwB,CAAC,EAAE;AAYhG,QAAI;AACJ,KAAC,SAAUC,oBAAmB;AAC1B,MAAAA,mBAAkB,OAAO,IAAI,iBAAiB,YAAY,yBAAyB;AAAA,IACvF,GAAG,oBAAoB,QAAQ,sBAAsB,QAAQ,oBAAoB,CAAC,EAAE;AAMpF,QAAI;AACJ,KAAC,SAAUC,2BAA0B;AACjC,MAAAA,0BAAyB,OAAO,IAAI,iBAAiB,YAAY,wBAAwB;AAAA,IAC7F,GAAG,2BAA2B,QAAQ,6BAA6B,QAAQ,2BAA2B,CAAC,EAAE;AAOzG,QAAI;AACJ,KAAC,SAAUC,eAAc;AACrB,MAAAA,cAAa,OAAO,IAAI,iBAAiB,YAAY,oBAAoB;AAAA,IAC7E,GAAG,eAAe,QAAQ,iBAAiB,QAAQ,eAAe,CAAC,EAAE;AACrE,QAAI;AACJ,KAAC,SAAUC,uBAAsB;AAC7B,MAAAA,sBAAqB,OAAO,IAAI,iBAAiB,YAAY,4BAA4B;AAAA,IAC7F,GAAG,uBAAuB,QAAQ,yBAAyB,QAAQ,uBAAuB,CAAC,EAAE;AAS7F,QAAI;AACJ,KAAC,SAAUC,oBAAmB;AAC1B,MAAAA,mBAAkB,OAAO,IAAI,iBAAiB,YAAY,yBAAyB;AAAA,IACvF,GAAG,oBAAoB,QAAQ,sBAAsB,QAAQ,oBAAoB,CAAC,EAAE;AAOpF,QAAI;AACJ,KAAC,SAAUC,oBAAmB;AAC1B,MAAAA,mBAAkB,OAAO,IAAI,iBAAiB,YAAY,yBAAyB;AAAA,IACvF,GAAG,oBAAoB,QAAQ,sBAAsB,QAAQ,oBAAoB,CAAC,EAAE;AAQpF,QAAI;AACJ,KAAC,SAAUC,2BAA0B;AACjC,MAAAA,0BAAyB,OAAO,IAAI,iBAAiB,YAAY,gCAAgC;AAAA,IACrG,GAAG,2BAA2B,QAAQ,6BAA6B,QAAQ,2BAA2B,CAAC,EAAE;AAQzG,QAAI;AACJ,KAAC,SAAUC,wBAAuB;AAC9B,MAAAA,uBAAsB,OAAO,IAAI,iBAAiB,YAAY,6BAA6B;AAAA,IAC/F,GAAG,wBAAwB,QAAQ,0BAA0B,QAAQ,wBAAwB,CAAC,EAAE;AAQhG,QAAI;AACJ,KAAC,SAAUC,yBAAwB;AAC/B,MAAAA,wBAAuB,OAAO,IAAI,iBAAiB,YAAY,kBAAkB;AAAA,IACrF,GAAG,yBAAyB,QAAQ,2BAA2B,QAAQ,yBAAyB,CAAC,EAAE;AAInG,QAAI;AACJ,KAAC,SAAUC,oBAAmB;AAC1B,MAAAA,mBAAkB,OAAO,IAAI,iBAAiB,YAAY,yBAAyB;AAAA,IACvF,GAAG,oBAAoB,QAAQ,sBAAsB,QAAQ,oBAAoB,CAAC,EAAE;AAIpF,QAAI;AACJ,KAAC,SAAUC,kBAAiB;AACxB,MAAAA,iBAAgB,OAAO,IAAI,iBAAiB,YAAY,uBAAuB;AAAA,IACnF,GAAG,kBAAkB,QAAQ,oBAAoB,QAAQ,kBAAkB,CAAC,EAAE;AAI9E,QAAI;AACJ,KAAC,SAAUC,yBAAwB;AAC/B,MAAAA,wBAAuB,OAAO,IAAI,iBAAiB,YAAY,kBAAkB;AAAA,IACrF,GAAG,yBAAyB,QAAQ,2BAA2B,QAAQ,yBAAyB,CAAC,EAAE;AAInG,QAAI;AACJ,KAAC,SAAUC,4BAA2B;AAClC,MAAAA,2BAA0B,OAAO,IAAI,iBAAiB,YAAY,yBAAyB;AAAA,IAC/F,GAAG,4BAA4B,QAAQ,8BAA8B,QAAQ,4BAA4B,CAAC,EAAE;AAI5G,QAAI;AACJ,KAAC,SAAUC,iCAAgC;AACvC,MAAAA,gCAA+B,OAAO,IAAI,iBAAiB,YAAY,8BAA8B;AAAA,IACzG,GAAG,iCAAiC,QAAQ,mCAAmC,QAAQ,iCAAiC,CAAC,EAAE;AAI3H,QAAI;AACJ,KAAC,SAAUC,kCAAiC;AACxC,MAAAA,iCAAgC,OAAO,IAAI,iBAAiB,YAAY,+BAA+B;AAAA,IAC3G,GAAG,kCAAkC,QAAQ,oCAAoC,QAAQ,kCAAkC,CAAC,EAAE;AAI9H,QAAI;AACJ,KAAC,SAAUC,gBAAe;AACtB,MAAAA,eAAc,OAAO,IAAI,iBAAiB,YAAY,qBAAqB;AAAA,IAC/E,GAAG,gBAAgB,QAAQ,kBAAkB,QAAQ,gBAAgB,CAAC,EAAE;AAIxE,QAAI;AACJ,KAAC,SAAUC,uBAAsB;AAC7B,MAAAA,sBAAqB,OAAO,IAAI,iBAAiB,YAAY,4BAA4B;AAAA,IAC7F,GAAG,uBAAuB,QAAQ,yBAAyB,QAAQ,uBAAuB,CAAC,EAAE;AAI7F,QAAI;AACJ,KAAC,SAAUC,sBAAqB;AAC5B,MAAAA,qBAAoB,OAAO,IAAI,iBAAiB,YAAY,2BAA2B;AAAA,IAC3F,GAAG,sBAAsB,QAAQ,wBAAwB,QAAQ,sBAAsB,CAAC,EAAE;AAM1F,QAAI;AACJ,KAAC,SAAUC,6BAA4B;AACnC,MAAAA,4BAA2B,OAAO,IAAI,iBAAiB,YAAY,sBAAsB;AAAA,IAC7F,GAAG,6BAA6B,QAAQ,+BAA+B,QAAQ,6BAA6B,CAAC,EAAE;AAK/G,QAAI;AACJ,KAAC,SAAUC,wBAAuB;AAC9B,MAAAA,uBAAsB,OAAO,IAAI,iBAAiB,YAAY,0BAA0B;AAAA,IAC5F,GAAG,wBAAwB,QAAQ,0BAA0B,QAAQ,wBAAwB,CAAC,EAAE;AAIhG,QAAI;AACJ,KAAC,SAAUC,4BAA2B;AAClC,MAAAA,2BAA0B,OAAO,IAAI,iBAAiB,YAAY,qBAAqB;AAAA,IAC3F,GAAG,4BAA4B,QAAQ,8BAA8B,QAAQ,4BAA4B,CAAC,EAAE;AAAA;AAAA;;;AC9hB5G,IAAAC,gBAAA;AAAA;AAAA;AAKA,aAASC,UAAS,GAAG;AACjB,eAAS,KAAK;AAAG,YAAI,CAAC,QAAQ,eAAe,CAAC;AAAG,kBAAQ,KAAK,EAAE;AAAA,IACpE;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,mBAAmB;AACzB,YAAQ,aAAa,iBAAiB;AACtC,YAAQ,gBAAgB,iBAAiB;AACzC,YAAQ,oBAAoB,iBAAiB;AAC7C,YAAQ,0BAA0B,iBAAiB;AACnD,YAAQ,aAAa,iBAAiB;AACtC,YAAQ,QAAQ,iBAAiB;AACjC,YAAQ,UAAU,iBAAiB;AACnC,YAAQ,QAAQ,iBAAiB;AACjC,YAAQ,cAAc,iBAAiB;AACvC,YAAQ,uBAAuB,iBAAiB;AAChD,YAAQ,uBAAuB,iBAAiB;AAChD,YAAQ,cAAc,iBAAiB;AACvC,YAAQ,eAAe,iBAAiB;AACxC,YAAQ,mBAAmB,iBAAiB;AAC5C,YAAQ,oBAAoB,iBAAiB;AAC7C,YAAQ,gBAAgB,iBAAiB;AACzC,YAAQ,gBAAgB,iBAAiB;AACzC,YAAQ,qBAAqB,iBAAiB;AAC9C,YAAQ,sBAAsB,iBAAiB;AAC/C,YAAQ,sBAAsB,iBAAiB;AAC/C,YAAQ,mBAAmB,iBAAiB;AAC5C,YAAQ,mBAAmB,iBAAiB;AAC5C,YAAQ,4BAA4B,iBAAiB;AACrD,YAAQ,4BAA4B,iBAAiB;AACrD,YAAQ,yBAAyB,iBAAiB;AAClD,YAAQ,8BAA8B,iBAAiB;AACvD,YAAQ,8BAA8B,iBAAiB;AACvD,IAAAA,UAAS,yCAAsC;AAC/C,IAAAA,UAAS,kBAAqB;AAC9B,aAAS,yBAAyB,QAAQ,QAAQ,QAAQ,UAAU;AAChE,aAAO,iBAAiB,wBAAwB,QAAQ,QAAQ,QAAQ,QAAQ;AAAA,IACpF;AACA,YAAQ,2BAA2B;AAAA;AAAA;;;AC1CnC,IAAAC,cAAA;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,aAAS,QAAQ,OAAO;AACpB,aAAO,UAAU,QAAQ,UAAU;AAAA,IACvC;AACA,YAAQ,UAAU;AAClB,aAAS,OAAO,OAAO;AACnB,aAAO,OAAO,UAAU,YAAY,iBAAiB;AAAA,IACzD;AACA,YAAQ,SAAS;AACjB,aAAS,OAAO,OAAO;AACnB,aAAO,OAAO,UAAU,YAAY,iBAAiB;AAAA,IACzD;AACA,YAAQ,SAAS;AACjB,aAAS,MAAM,OAAO;AAClB,aAAO,iBAAiB;AAAA,IAC5B;AACA,YAAQ,QAAQ;AAChB,aAAS,KAAK,OAAO;AACjB,aAAO,OAAO,UAAU;AAAA,IAC5B;AACA,YAAQ,OAAO;AACf,aAAS,MAAM,OAAO;AAClB,aAAO,MAAM,QAAQ,KAAK;AAAA,IAC9B;AACA,YAAQ,QAAQ;AAChB,aAAS,YAAY,OAAO;AACxB,aAAO,MAAM,KAAK,KAAK,MAAM,MAAM,UAAQ,OAAO,IAAI,CAAC;AAAA,IAC3D;AACA,YAAQ,cAAc;AACtB,aAAS,WAAW,OAAO,OAAO;AAC9B,aAAO,MAAM,QAAQ,KAAK,KAAK,MAAM,MAAM,KAAK;AAAA,IACpD;AACA,YAAQ,aAAa;AACrB,aAAS,SAAS,OAAO;AACrB,aAAO,SAAS,KAAK,MAAM,IAAI;AAAA,IACnC;AACA,YAAQ,WAAW;AAAA;AAAA;;;ACzCnB;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,OAAO,QAAQ;AACrB,QAAM,yBAAN,cAAqC,KAAK,eAAe;AAAA,MACrD,YAAY,OAAO;AACf,cAAM,KAAK;AAAA,MACf;AAAA,IACJ;AACA,YAAQ,UAAU;AAAA;AAAA;;;ACZlB;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,OAAO,QAAQ;AACrB,QAAM,mBAAN,cAA+B,KAAK,SAAS;AAAA,MACzC,YAAY,OAAO;AACf,cAAM,KAAK;AAAA,MACf;AAAA,IACJ;AACA,YAAQ,UAAU;AAAA;AAAA;;;ACZlB;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,OAAO,QAAQ;AACrB,QAAM,uBAAN,cAAmC,KAAK,aAAa;AAAA,MACjD,YAAY,OAAO,QAAQ;AACvB,cAAM,OAAO,MAAM;AAAA,MACvB;AAAA,IACJ;AACA,YAAQ,UAAU;AAAA;AAAA;;;ACZlB;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,OAAO,QAAQ;AACrB,QAAM,QAAQ;AACd,QAAMC,MAAK;AACX,QAAM,2BAA2B;AACjC,QAAM,qBAAqB;AAC3B,QAAM,yBAAyB;AAC/B,aAAS,gBAAgB,cAAc;AACnC,YAAM,gBAAgB,CAAC,UAAU,MAAM,SAAS;AAChD,YAAM,gBAAgB,gBAAgB;AACtC,eAAS,MAAM,OAAO;AAClB,eAAO,cAAc,KAAK;AAAA,MAC9B;AACA,eAAS,yBAAyB,cAAc;AAC5C,eAAO;AAAA,UACH,KAAK,cAAc,aAAa,GAAG;AAAA,QACvC;AAAA,MACJ;AACA,eAAS,kCAAkC,cAAc;AACrD,eAAO;AAAA,UACH,KAAK,cAAc,aAAa,GAAG;AAAA,UACnC,SAAS,aAAa;AAAA,QAC1B;AAAA,MACJ;AACA,eAAS,yBAAyB,cAAc;AAC5C,eAAO;AAAA,UACH,cAAc;AAAA,YACV,KAAK,cAAc,aAAa,GAAG;AAAA,YACnC,YAAY,aAAa;AAAA,YACzB,SAAS,aAAa;AAAA,YACtB,MAAM,aAAa,QAAQ;AAAA,UAC/B;AAAA,QACJ;AAAA,MACJ;AACA,eAAS,0BAA0B,OAAO;AACtC,YAAI,YAAY;AAChB,eAAO,CAAC,CAAC,UAAU,YAAY,CAAC,CAAC,UAAU;AAAA,MAC/C;AACA,eAAS,eAAe,OAAO;AAC3B,YAAI,YAAY;AAChB,eAAO,CAAC,CAAC,UAAU,OAAO,CAAC,CAAC,UAAU;AAAA,MAC1C;AACA,eAAS,2BAA2B,KAAK;AACrC,YAAI,eAAe,GAAG,GAAG;AACrB,cAAI,SAAS;AAAA,YACT,cAAc;AAAA,cACV,KAAK,cAAc,IAAI,GAAG;AAAA,cAC1B,SAAS,IAAI;AAAA,YACjB;AAAA,YACA,gBAAgB,CAAC,EAAE,MAAM,IAAI,QAAQ,EAAE,CAAC;AAAA,UAC5C;AACA,iBAAO;AAAA,QACX,WACS,0BAA0B,GAAG,GAAG;AACrC,cAAIC,YAAW,IAAI;AACnB,cAAI,SAAS;AAAA,YACT,cAAc;AAAA,cACV,KAAK,cAAcA,UAAS,GAAG;AAAA,cAC/B,SAASA,UAAS;AAAA,YACtB;AAAA,YACA,gBAAgB,IAAI,eAAe,IAAI,CAAC,WAAW;AAC/C,kBAAI,QAAQ,OAAO;AACnB,qBAAO;AAAA,gBACH,OAAO;AAAA,kBACH,OAAO,EAAE,MAAM,MAAM,MAAM,MAAM,WAAW,MAAM,MAAM,UAAU;AAAA,kBAClE,KAAK,EAAE,MAAM,MAAM,IAAI,MAAM,WAAW,MAAM,IAAI,UAAU;AAAA,gBAChE;AAAA,gBACA,aAAa,OAAO;AAAA,gBACpB,MAAM,OAAO;AAAA,cACjB;AAAA,YACJ,CAAC;AAAA,UACL;AACA,iBAAO;AAAA,QACX,OACK;AACD,gBAAM,MAAM,4CAA4C;AAAA,QAC5D;AAAA,MACJ;AACA,eAAS,0BAA0B,cAAc;AAC7C,eAAO;AAAA,UACH,cAAc,yBAAyB,YAAY;AAAA,QACvD;AAAA,MACJ;AACA,eAAS,yBAAyB,cAAc,iBAAiB,OAAO;AACpE,YAAI,SAAS;AAAA,UACT,cAAc,kCAAkC,YAAY;AAAA,QAChE;AACA,YAAI,gBAAgB;AAChB,iBAAO,OAAO,aAAa,QAAQ;AAAA,QACvC;AACA,eAAO;AAAA,MACX;AACA,eAAS,yBAAyB,QAAQ;AACtC,gBAAQ;AAAA,eACC,KAAK,uBAAuB;AAC7B,mBAAO,MAAM,uBAAuB;AAAA,eACnC,KAAK,uBAAuB;AAC7B,mBAAO,MAAM,uBAAuB;AAAA,eACnC,KAAK,uBAAuB;AAC7B,mBAAO,MAAM,uBAAuB;AAAA;AAE5C,eAAO,MAAM,uBAAuB;AAAA,MACxC;AACA,eAAS,6BAA6B,OAAO;AACzC,eAAO;AAAA,UACH,cAAc,yBAAyB,MAAM,QAAQ;AAAA,UACrD,QAAQ,yBAAyB,MAAM,MAAM;AAAA,QACjD;AAAA,MACJ;AACA,eAAS,6BAA6B,cAAc,UAAU;AAC1D,eAAO;AAAA,UACH,cAAc,yBAAyB,YAAY;AAAA,UACnD,UAAU,iBAAiB,QAAQ;AAAA,QACvC;AAAA,MACJ;AACA,eAAS,cAAc,aAAa;AAChC,gBAAQ;AAAA,eACC,KAAK,sBAAsB;AAC5B,mBAAO,MAAM,sBAAsB;AAAA,eAClC,KAAK,sBAAsB;AAC5B,mBAAO,MAAM,sBAAsB;AAAA;AAEnC,mBAAO,MAAM,sBAAsB;AAAA;AAAA,MAE/C;AACA,eAAS,mBAAmB,cAAc,UAAU,SAAS;AACzD,eAAO;AAAA,UACH,cAAc,yBAAyB,YAAY;AAAA,UACnD,UAAU,iBAAiB,QAAQ;AAAA,UACnC,SAAS;AAAA,YACL,aAAa,cAAc,QAAQ,WAAW;AAAA,YAC9C,kBAAkB,QAAQ;AAAA,UAC9B;AAAA,QACJ;AAAA,MACJ;AACA,eAAS,iBAAiB,UAAU;AAChC,eAAO,EAAE,MAAM,SAAS,MAAM,WAAW,SAAS,UAAU;AAAA,MAChE;AACA,eAAS,WAAW,OAAO;AACvB,YAAI,UAAU,QAAQ;AAClB,iBAAO;AAAA,QACX,WACS,UAAU,MAAM;AACrB,iBAAO;AAAA,QACX;AACA,eAAO,EAAE,MAAM,MAAM,MAAM,WAAW,MAAM,UAAU;AAAA,MAC1D;AACA,eAAS,QAAQ,OAAO;AACpB,YAAI,UAAU,UAAU,UAAU,MAAM;AACpC,iBAAO;AAAA,QACX;AACA,eAAO,EAAE,OAAO,WAAW,MAAM,KAAK,GAAG,KAAK,WAAW,MAAM,GAAG,EAAE;AAAA,MACxE;AACA,eAAS,qBAAqB,OAAO;AACjC,gBAAQ;AAAA,eACC,KAAK,mBAAmB;AACzB,mBAAO,MAAM,mBAAmB;AAAA,eAC/B,KAAK,mBAAmB;AACzB,mBAAO,MAAM,mBAAmB;AAAA,eAC/B,KAAK,mBAAmB;AACzB,mBAAO,MAAM,mBAAmB;AAAA,eAC/B,KAAK,mBAAmB;AACzB,mBAAO,MAAM,mBAAmB;AAAA;AAAA,MAE5C;AACA,eAAS,aAAa,MAAM;AACxB,YAAI,SAAS,MAAM,WAAW,OAAO,QAAQ,KAAK,KAAK,GAAG,KAAK,OAAO;AACtE,YAAID,IAAG,OAAO,KAAK,QAAQ,GAAG;AAC1B,iBAAO,WAAW,qBAAqB,KAAK,QAAQ;AAAA,QACxD;AACA,YAAIA,IAAG,OAAO,KAAK,IAAI,KAAKA,IAAG,OAAO,KAAK,IAAI,GAAG;AAC9C,iBAAO,OAAO,KAAK;AAAA,QACvB;AACA,YAAI,KAAK,QAAQ;AACb,iBAAO,SAAS,KAAK;AAAA,QACzB;AACA,eAAO;AAAA,MACX;AACA,eAAS,cAAc,OAAO;AAC1B,YAAI,UAAU,UAAU,UAAU,MAAM;AACpC,iBAAO;AAAA,QACX;AACA,eAAO,MAAM,IAAI,YAAY;AAAA,MACjC;AACA,eAAS,gBAAgBE,SAAQ,eAAe;AAC5C,gBAAQA;AAAA,eACC;AACD,mBAAO;AAAA,eACN,MAAM,WAAW;AAClB,mBAAO,EAAE,MAAMA,SAAQ,OAAO,cAAc;AAAA,eAC3C,MAAM,WAAW;AAClB,mBAAO,EAAE,MAAMA,SAAQ,OAAO,cAAc,MAAM;AAAA;AAElD,mBAAO,iDAAiDA;AAAA;AAAA,MAEpE;AACA,eAAS,qBAAqB,OAAO,UAAU;AAC3C,YAAI,aAAa,QAAQ;AACrB,iBAAO;AAAA,QACX;AACA,eAAO,QAAQ;AAAA,MACnB;AACA,eAAS,iBAAiB,MAAM;AAC5B,YAAI,SAAS,EAAE,OAAO,KAAK,MAAM;AACjC,YAAI,eAAe,gBAAgB,yBAAyB,UAAU,OAAO;AAC7E,YAAI,KAAK,QAAQ;AACb,iBAAO,SAAS,KAAK;AAAA,QACzB;AAGA,YAAI,KAAK,eAAe;AACpB,cAAI,CAAC,gBAAgB,aAAa,wBAAwB,WAAW;AACjE,mBAAO,gBAAgB,KAAK;AAAA,UAChC,OACK;AACD,mBAAO,gBAAgB,gBAAgB,aAAa,qBAAqB,KAAK,aAAa;AAAA,UAC/F;AAAA,QACJ;AACA,YAAI,KAAK,YAAY;AACjB,iBAAO,aAAa,KAAK;AAAA,QAC7B;AACA,8BAAsB,QAAQ,IAAI;AAClC,YAAIF,IAAG,OAAO,KAAK,IAAI,GAAG;AACtB,iBAAO,OAAO,qBAAqB,KAAK,MAAM,gBAAgB,aAAa,gBAAgB;AAAA,QAC/F;AACA,YAAI,KAAK,UAAU;AACf,iBAAO,WAAW,KAAK;AAAA,QAC3B;AACA,YAAI,KAAK,qBAAqB;AAC1B,iBAAO,sBAAsB,YAAY,KAAK,mBAAmB;AAAA,QACrE;AACA,YAAI,KAAK,kBAAkB;AACvB,iBAAO,mBAAmB,KAAK,iBAAiB,MAAM;AAAA,QAC1D;AACA,YAAI,KAAK,SAAS;AACd,iBAAO,UAAU,UAAU,KAAK,OAAO;AAAA,QAC3C;AACA,YAAI,KAAK,cAAc,QAAQ,KAAK,cAAc,OAAO;AACrD,iBAAO,YAAY,KAAK;AAAA,QAC5B;AACA,YAAI,cAAc;AACd,cAAI,aAAa,SAAS,QAAQ;AAC9B,mBAAO,OAAO,aAAa;AAAA,UAC/B;AACA,cAAI,aAAa,eAAe,QAAQ,aAAa,eAAe,OAAO;AACvE,mBAAO,aAAa,aAAa;AAAA,UACrC;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AACA,eAAS,sBAAsB,QAAQ,QAAQ;AAC3C,YAAIE,UAAS,MAAM,iBAAiB;AACpC,YAAI;AACJ,YAAI,QAAQ;AACZ,YAAI,OAAO,UAAU;AACjB,iBAAO,OAAO,SAAS;AACvB,kBAAQ,QAAQ,OAAO,SAAS,KAAK;AAAA,QACzC,WACS,OAAO,sBAAsB,KAAK,eAAe;AACtD,UAAAA,UAAS,MAAM,iBAAiB;AAChC,iBAAO,OAAO,WAAW;AAAA,QAC7B,OACK;AACD,iBAAO,OAAO;AAAA,QAClB;AACA,YAAI,OAAO,OAAO;AACd,kBAAQ,QAAQ,OAAO,KAAK;AAAA,QAChC;AACA,eAAO,mBAAmBA;AAC1B,YAAI,OAAO,YAAY,QAAQ,OAAO;AAClC,iBAAO,WAAW,EAAE,SAAS,MAAM,MAAa;AAAA,QACpD,OACK;AACD,iBAAO,aAAa;AAAA,QACxB;AAAA,MACJ;AACA,eAAS,WAAW,MAAM;AACtB,eAAO,EAAE,OAAO,QAAQ,KAAK,KAAK,GAAG,SAAS,KAAK,QAAQ;AAAA,MAC/D;AACA,eAAS,YAAY,OAAO;AACxB,YAAI,UAAU,UAAU,UAAU,MAAM;AACpC,iBAAO;AAAA,QACX;AACA,eAAO,MAAM,IAAI,UAAU;AAAA,MAC/B;AACA,eAAS,kBAAkB,cAAc,UAAU,SAAS;AACxD,eAAO;AAAA,UACH,cAAc,yBAAyB,YAAY;AAAA,UACnD,UAAU,iBAAiB,QAAQ;AAAA,UACnC,SAAS,EAAE,oBAAoB,QAAQ,mBAAmB;AAAA,QAC9D;AAAA,MACJ;AACA,eAAS,oBAAoB,SAAS;AAClC,YAAI,YAAY,UAAU,YAAY,MAAM;AACxC,iBAAO;AAAA,QACX;AACA,eAAO,MAAM,kBAAkB,OAAO,cAAc,QAAQ,WAAW,GAAGF,IAAG,OAAO,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,MAAS;AAAA,MAClI;AACA,eAAS,UAAU,MAAM;AACrB,YAAI,SAAS,MAAM,QAAQ,OAAO,KAAK,OAAO,KAAK,OAAO;AAC1D,YAAI,KAAK,WAAW;AAChB,iBAAO,YAAY,KAAK;AAAA,QAC5B;AACA,eAAO;AAAA,MACX;AACA,eAAS,WAAW,MAAM;AACtB,YAAI,SAAS,MAAM,SAAS,OAAO,QAAQ,KAAK,KAAK,CAAC;AACtD,YAAI,KAAK,SAAS;AACd,iBAAO,UAAU,UAAU,KAAK,OAAO;AAAA,QAC3C;AACA,YAAI,gBAAgB,mBAAmB,SAAS;AAC5C,cAAI,KAAK,MAAM;AACX,mBAAO,OAAO,KAAK;AAAA,UACvB;AACA;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AACA,eAAS,oBAAoB,MAAM;AAC/B,eAAO,EAAE,SAAS,KAAK,SAAS,cAAc,KAAK,aAAa;AAAA,MACpE;AACA,eAAS,uBAAuB,cAAc;AAC1C,eAAO;AAAA,UACH,cAAc,yBAAyB,YAAY;AAAA,QACvD;AAAA,MACJ;AACA,eAAS,iBAAiB,cAAc;AACpC,eAAO;AAAA,UACH,cAAc,yBAAyB,YAAY;AAAA,QACvD;AAAA,MACJ;AACA,eAAS,eAAe,MAAM;AAC1B,YAAI,SAAS,MAAM,aAAa,OAAO,QAAQ,KAAK,KAAK,CAAC;AAC1D,YAAI,KAAK,QAAQ;AACb,iBAAO,SAAS,MAAM,KAAK,MAAM;AAAA,QACrC;AACA,YAAI,eAAe,gBAAgB,uBAAuB,UAAU,OAAO;AAC3E,YAAI,gBAAgB,aAAa,MAAM;AACnC,iBAAO,OAAO,aAAa;AAAA,QAC/B;AACA,eAAO;AAAA,MACX;AACA,eAAS,qBAAqB,cAAc;AACxC,eAAO;AAAA,UACH,cAAc,yBAAyB,YAAY;AAAA,QACvD;AAAA,MACJ;AACA,aAAO;AAAA,QACH;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,IACJ;AACA,YAAQ,kBAAkB;AAAA;AAAA;;;AC9X1B;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,OAAO,QAAQ;AACrB,QAAM,KAAK;AACX,QAAMG,MAAK;AACX,QAAM,2BAA2B;AACjC,QAAM,qBAAqB;AAC3B,QAAM,yBAAyB;AAC/B,QAAI;AACJ,KAAC,SAAUC,YAAW;AAClB,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,aAAaD,IAAG,OAAO,UAAU,QAAQ,KAAKA,IAAG,OAAO,UAAU,KAAK;AAAA,MAClF;AACA,MAAAC,WAAU,KAAK;AAAA,IACnB,GAAG,cAAc,YAAY,CAAC,EAAE;AAChC,aAAS,gBAAgB,cAAc;AACnC,YAAM,gBAAgB,CAAC,UAAU,KAAK,IAAI,MAAM,KAAK;AACrD,YAAM,gBAAgB,gBAAgB;AACtC,eAAS,MAAM,OAAO;AAClB,eAAO,cAAc,KAAK;AAAA,MAC9B;AACA,eAAS,cAAc,aAAa;AAChC,eAAO,YAAY,IAAI,YAAY;AAAA,MACvC;AACA,eAAS,aAAa,YAAY;AAC9B,YAAI,SAAS,IAAI,KAAK,WAAW,QAAQ,WAAW,KAAK,GAAG,WAAW,SAAS,qBAAqB,WAAW,QAAQ,CAAC;AACzH,YAAID,IAAG,OAAO,WAAW,IAAI,KAAKA,IAAG,OAAO,WAAW,IAAI,GAAG;AAC1D,iBAAO,OAAO,WAAW;AAAA,QAC7B;AACA,YAAI,WAAW,QAAQ;AACnB,iBAAO,SAAS,WAAW;AAAA,QAC/B;AACA,YAAI,WAAW,oBAAoB;AAC/B,iBAAO,qBAAqB,qBAAqB,WAAW,kBAAkB;AAAA,QAClF;AACA,eAAO;AAAA,MACX;AACA,eAAS,qBAAqB,oBAAoB;AAC9C,eAAO,mBAAmB,IAAI,8BAA8B;AAAA,MAChE;AACA,eAAS,+BAA+B,aAAa;AACjD,eAAO,IAAI,KAAK,6BAA6B,WAAW,YAAY,QAAQ,GAAG,YAAY,OAAO;AAAA,MACtG;AACA,eAAS,WAAW,OAAO;AACvB,YAAI,CAAC,OAAO;AACR,iBAAO;AAAA,QACX;AACA,eAAO,IAAI,KAAK,SAAS,MAAM,MAAM,MAAM,SAAS;AAAA,MACxD;AACA,eAAS,QAAQ,OAAO;AACpB,YAAI,CAAC,OAAO;AACR,iBAAO;AAAA,QACX;AACA,eAAO,IAAI,KAAK,MAAM,WAAW,MAAM,KAAK,GAAG,WAAW,MAAM,GAAG,CAAC;AAAA,MACxE;AACA,eAAS,qBAAqB,OAAO;AACjC,YAAI,UAAU,UAAU,UAAU,MAAM;AACpC,iBAAO,KAAK,mBAAmB;AAAA,QACnC;AACA,gBAAQ;AAAA,eACC,GAAG,mBAAmB;AACvB,mBAAO,KAAK,mBAAmB;AAAA,eAC9B,GAAG,mBAAmB;AACvB,mBAAO,KAAK,mBAAmB;AAAA,eAC9B,GAAG,mBAAmB;AACvB,mBAAO,KAAK,mBAAmB;AAAA,eAC9B,GAAG,mBAAmB;AACvB,mBAAO,KAAK,mBAAmB;AAAA;AAEvC,eAAO,KAAK,mBAAmB;AAAA,MACnC;AACA,eAAS,eAAe,OAAO;AAC3B,YAAIA,IAAG,OAAO,KAAK,GAAG;AAClB,iBAAO,IAAI,KAAK,eAAe,KAAK;AAAA,QACxC,WACS,UAAU,GAAG,KAAK,GAAG;AAC1B,cAAI,SAAS,IAAI,KAAK,eAAe;AACrC,iBAAO,OAAO,gBAAgB,MAAM,OAAO,MAAM,QAAQ;AAAA,QAC7D,WACS,MAAM,QAAQ,KAAK,GAAG;AAC3B,cAAI,SAAS,CAAC;AACd,mBAAS,WAAW,OAAO;AACvB,gBAAI,OAAO,IAAI,KAAK,eAAe;AACnC,gBAAI,UAAU,GAAG,OAAO,GAAG;AACvB,mBAAK,gBAAgB,QAAQ,OAAO,QAAQ,QAAQ;AAAA,YACxD,OACK;AACD,mBAAK,eAAe,OAAO;AAAA,YAC/B;AACA,mBAAO,KAAK,IAAI;AAAA,UACpB;AACA,iBAAO;AAAA,QACX,OACK;AACD,cAAI;AACJ,kBAAQ,MAAM;AAAA,iBACL,GAAG,WAAW;AACf,qBAAO,IAAI,KAAK,eAAe,MAAM,KAAK;AAAA,iBACzC,GAAG,WAAW;AACf,uBAAS,IAAI,KAAK,eAAe;AACjC,qBAAO,WAAW,MAAM,KAAK;AAC7B,qBAAO;AAAA;AAEP,uBAAS,IAAI,KAAK,eAAe;AACjC,qBAAO,WAAW,iDAAiD,MAAM,MAAM;AAC/E,qBAAO;AAAA;AAAA,QAEnB;AAAA,MACJ;AACA,eAAS,gBAAgB,OAAO;AAC5B,YAAIA,IAAG,OAAO,KAAK,GAAG;AAClB,iBAAO;AAAA,QACX,OACK;AACD,kBAAQ,MAAM;AAAA,iBACL,GAAG,WAAW;AACf,qBAAO,IAAI,KAAK,eAAe,MAAM,KAAK;AAAA,iBACzC,GAAG,WAAW;AACf,qBAAO,MAAM;AAAA;AAEb,qBAAO,iDAAiD,MAAM;AAAA;AAAA,QAE1E;AAAA,MACJ;AACA,eAAS,QAAQ,OAAO;AACpB,YAAI,CAAC,OAAO;AACR,iBAAO;AAAA,QACX;AACA,eAAO,IAAI,KAAK,MAAM,eAAe,MAAM,QAAQ,GAAG,QAAQ,MAAM,KAAK,CAAC;AAAA,MAC9E;AACA,eAAS,mBAAmB,QAAQ;AAChC,YAAI,CAAC,QAAQ;AACT,iBAAO;AAAA,QACX;AACA,YAAI,MAAM,QAAQ,MAAM,GAAG;AACvB,cAAI,QAAQ;AACZ,iBAAO,MAAM,IAAI,gBAAgB;AAAA,QACrC;AACA,YAAI,OAAO;AACX,eAAO,IAAI,KAAK,eAAe,KAAK,MAAM,IAAI,gBAAgB,GAAG,KAAK,YAAY;AAAA,MACtF;AACA,eAAS,qBAAqB,OAAO;AAEjC,YAAI,GAAG,mBAAmB,QAAQ,SAAS,SAAS,GAAG,mBAAmB,eAAe;AACrF,iBAAO,CAAC,QAAQ,GAAG,MAAS;AAAA,QAChC;AACA;AACA,eAAO,CAAC,KAAK,mBAAmB,MAAM,KAAK;AAAA,MAC/C;AACA,eAAS,iBAAiB,MAAM;AAC5B,YAAI,SAAS,IAAI,yBAAyB,QAAQ,KAAK,KAAK;AAC5D,YAAI,KAAK,QAAQ;AACb,iBAAO,SAAS,KAAK;AAAA,QACzB;AACA,YAAI,KAAK,eAAe;AACpB,iBAAO,gBAAgB,gBAAgB,KAAK,aAAa;AACzD,iBAAO,sBAAsBA,IAAG,OAAO,KAAK,aAAa,IAAI,YAAY,KAAK,cAAc;AAAA,QAChG;AACA;AACA,YAAI,KAAK,YAAY;AACjB,iBAAO,aAAa,KAAK;AAAA,QAC7B;AACA,YAAI,aAAa,uBAAuB,IAAI;AAC5C,YAAI,YAAY;AACZ,iBAAO,aAAa,WAAW;AAC/B,iBAAO,QAAQ,WAAW;AAC1B,iBAAO,WAAW,WAAW;AAAA,QACjC;AACA,YAAIA,IAAG,OAAO,KAAK,IAAI,GAAG;AACtB,cAAI,CAAC,UAAU,QAAQ,IAAI,qBAAqB,KAAK,IAAI;AACzD,iBAAO,OAAO;AACd,cAAI,UAAU;AACV,mBAAO,mBAAmB;AAAA,UAC9B;AAAA,QACJ;AACA,YAAI,KAAK,UAAU;AACf,iBAAO,WAAW,KAAK;AAAA,QAC3B;AACA,YAAI,KAAK,qBAAqB;AAC1B,iBAAO,sBAAsB,YAAY,KAAK,mBAAmB;AAAA,QACrE;AACA,YAAIA,IAAG,YAAY,KAAK,gBAAgB,GAAG;AACvC,iBAAO,mBAAmB,KAAK,iBAAiB,MAAM;AAAA,QAC1D;AACA,YAAI,KAAK,SAAS;AACd,iBAAO,UAAU,UAAU,KAAK,OAAO;AAAA,QAC3C;AACA,YAAI,KAAK,eAAe,QAAQ,KAAK,eAAe,OAAO;AACvD,iBAAO,aAAa,KAAK;AAAA,QAC7B;AACA,YAAI,KAAK,cAAc,QAAQ,KAAK,cAAc,OAAO;AACrD,iBAAO,YAAY,KAAK;AAAA,QAC5B;AACA,YAAI,KAAK,SAAS,QAAQ;AACtB,iBAAO,OAAO,KAAK;AAAA,QACvB;AACA,eAAO;AAAA,MACX;AACA,eAAS,uBAAuB,MAAM;AAClC,YAAI,KAAK,UAAU;AACf,cAAI,KAAK,qBAAqB,GAAG,iBAAiB,SAAS;AACvD,mBAAO,EAAE,MAAM,IAAI,KAAK,cAAc,KAAK,SAAS,OAAO,GAAG,OAAO,QAAQ,KAAK,SAAS,KAAK,GAAG,UAAU,KAAK;AAAA,UACtH,OACK;AACD,mBAAO,EAAE,MAAM,KAAK,SAAS,SAAS,OAAO,QAAQ,KAAK,SAAS,KAAK,GAAG,UAAU,KAAK;AAAA,UAC9F;AAAA,QACJ,WACS,KAAK,YAAY;AACtB,cAAI,KAAK,qBAAqB,GAAG,iBAAiB,SAAS;AACvD,mBAAO,EAAE,MAAM,IAAI,KAAK,cAAc,KAAK,UAAU,GAAG,UAAU,MAAM;AAAA,UAC5E,OACK;AACD,mBAAO,EAAE,MAAM,KAAK,YAAY,UAAU,MAAM;AAAA,UACpD;AAAA,QACJ,OACK;AACD,iBAAO;AAAA,QACX;AAAA,MACJ;AACA,eAAS,WAAW,MAAM;AACtB,YAAI,CAAC,MAAM;AACP,iBAAO;AAAA,QACX;AACA,eAAO,IAAI,KAAK,SAAS,QAAQ,KAAK,KAAK,GAAG,KAAK,OAAO;AAAA,MAC9D;AACA,eAAS,YAAY,OAAO;AACxB,YAAI,CAAC,OAAO;AACR,iBAAO;AAAA,QACX;AACA,eAAO,MAAM,IAAI,UAAU;AAAA,MAC/B;AACA,eAAS,gBAAgB,MAAM;AAC3B,YAAI,CAAC,MAAM;AACP,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,IAAI,KAAK,cAAc;AACpC,YAAIA,IAAG,OAAO,KAAK,eAAe,GAAG;AACjC,iBAAO,kBAAkB,KAAK;AAAA,QAClC,OACK;AAED,iBAAO,kBAAkB;AAAA,QAC7B;AACA,YAAIA,IAAG,OAAO,KAAK,eAAe,GAAG;AACjC,iBAAO,kBAAkB,KAAK;AAAA,QAClC,OACK;AAED,iBAAO,kBAAkB;AAAA,QAC7B;AACA,YAAI,KAAK,YAAY;AACjB,iBAAO,aAAa,wBAAwB,KAAK,UAAU;AAAA,QAC/D;AACA,eAAO;AAAA,MACX;AACA,eAAS,wBAAwB,OAAO;AACpC,eAAO,MAAM,IAAI,sBAAsB;AAAA,MAC3C;AACA,eAAS,uBAAuB,MAAM;AAClC,YAAI,SAAS,IAAI,KAAK,qBAAqB,KAAK,KAAK;AACrD,YAAI,KAAK,eAAe;AACpB,iBAAO,gBAAgB,gBAAgB,KAAK,aAAa;AAAA,QAC7D;AACA,YAAI,KAAK,YAAY;AACjB,iBAAO,aAAa,wBAAwB,KAAK,UAAU;AAAA,QAC/D;AACA,eAAO;AAAA,MACX;AACA,eAAS,wBAAwB,MAAM;AACnC,eAAO,KAAK,IAAI,sBAAsB;AAAA,MAC1C;AACA,eAAS,uBAAuB,MAAM;AAClC,YAAI,SAAS,IAAI,KAAK,qBAAqB,KAAK,KAAK;AACrD,YAAI,KAAK,eAAe;AACpB,iBAAO,gBAAgB,gBAAgB,KAAK,aAAa;AAAA,QAC7D;AACA;AACA,eAAO;AAAA,MACX;AACA,eAAS,WAAW,MAAM;AACtB,YAAI,CAAC,MAAM;AACP,iBAAO;AAAA,QACX;AACA,eAAO,IAAI,KAAK,SAAS,cAAc,KAAK,GAAG,GAAG,QAAQ,KAAK,KAAK,CAAC;AAAA,MACzE;AACA,eAAS,oBAAoB,MAAM;AAC/B,YAAI,CAAC,MAAM;AACP,iBAAO;AAAA,QACX;AACA,eAAO,iBAAiB,IAAI;AAAA,MAChC;AACA,eAAS,mBAAmB,MAAM;AAC9B,YAAI,CAAC,MAAM;AACP,iBAAO;AAAA,QACX;AACA,eAAO,iBAAiB,IAAI;AAAA,MAChC;AACA,eAAS,eAAe,MAAM;AAC1B,YAAI,CAAC,MAAM;AACP,iBAAO;AAAA,QACX;AACA,eAAO;AAAA,UACH,WAAW,cAAc,KAAK,SAAS;AAAA,UACvC,aAAa,QAAQ,KAAK,oBAAoB;AAAA,UAC9C,sBAAsB,QAAQ,KAAK,oBAAoB;AAAA,UACvD,sBAAsB,QAAQ,KAAK,oBAAoB;AAAA,QAC3D;AAAA,MACJ;AACA,eAAS,iBAAiB,MAAM;AAC5B,YAAI,CAAC,MAAM;AACP,iBAAO;AAAA,QACX;AACA,YAAIA,IAAG,MAAM,IAAI,GAAG;AAChB,cAAI,KAAK,WAAW,GAAG;AACnB,mBAAO,CAAC;AAAA,UACZ,WACS,GAAG,aAAa,GAAG,KAAK,EAAE,GAAG;AAClC,gBAAI,QAAQ;AACZ,mBAAO,MAAM,IAAI,CAAC,SAAS,eAAe,IAAI,CAAC;AAAA,UACnD,OACK;AACD,gBAAI,YAAY;AAChB,mBAAO,UAAU,IAAI,CAAC,aAAa,WAAW,QAAQ,CAAC;AAAA,UAC3D;AAAA,QACJ,WACS,GAAG,aAAa,GAAG,IAAI,GAAG;AAC/B,iBAAO,CAAC,eAAe,IAAI,CAAC;AAAA,QAChC,OACK;AACD,iBAAO,WAAW,IAAI;AAAA,QAC1B;AAAA,MACJ;AACA,eAAS,aAAa,QAAQ;AAC1B,YAAI,CAAC,QAAQ;AACT,iBAAO;AAAA,QACX;AACA,eAAO,OAAO,IAAI,cAAY,WAAW,QAAQ,CAAC;AAAA,MACtD;AACA,eAAS,qBAAqB,QAAQ;AAClC,YAAI,CAAC,QAAQ;AACT,iBAAO;AAAA,QACX;AACA,eAAO,OAAO,IAAI,mBAAmB;AAAA,MACzC;AACA,eAAS,oBAAoB,MAAM;AAC/B,YAAI,SAAS,IAAI,KAAK,kBAAkB,QAAQ,KAAK,KAAK,CAAC;AAC3D,YAAIA,IAAG,OAAO,KAAK,IAAI,GAAG;AACtB,iBAAO,OAAO,wBAAwB,KAAK,IAAI;AAAA,QACnD;AACA,eAAO;AAAA,MACX;AACA,eAAS,wBAAwB,MAAM;AACnC,gBAAQ;AAAA,eACC,GAAG,sBAAsB;AAC1B,mBAAO,KAAK,sBAAsB;AAAA,eACjC,GAAG,sBAAsB;AAC1B,mBAAO,KAAK,sBAAsB;AAAA,eACjC,GAAG,sBAAsB;AAC1B,mBAAO,KAAK,sBAAsB;AAAA;AAE1C,eAAO,KAAK,sBAAsB;AAAA,MACtC;AACA,eAAS,qBAAqB,QAAQ,KAAK;AACvC,YAAI,CAAC,QAAQ;AACT,iBAAO;AAAA,QACX;AACA,eAAO,OAAO,IAAI,iBAAe,oBAAoB,aAAa,GAAG,CAAC;AAAA,MAC1E;AACA,eAAS,aAAa,MAAM;AACxB,YAAI,QAAQ,GAAG,WAAW,eAAe;AAErC,iBAAO,OAAO;AAAA,QAClB;AACA,eAAO,KAAK,WAAW;AAAA,MAC3B;AACA,eAAS,oBAAoB,MAAM,KAAK;AAEpC,YAAI,SAAS,IAAI,KAAK,kBAAkB,KAAK,MAAM,aAAa,KAAK,IAAI,GAAG,QAAQ,KAAK,SAAS,KAAK,GAAG,KAAK,SAAS,MAAM,cAAc,KAAK,SAAS,GAAG,IAAI,GAAG;AACpK,YAAI,KAAK,eAAe;AACpB,iBAAO,gBAAgB,KAAK;AAAA,QAChC;AACA,eAAO;AAAA,MACX;AACA,eAAS,kBAAkB,QAAQ;AAC/B,YAAI,WAAW,UAAU,WAAW,MAAM;AACtC,iBAAO;AAAA,QACX;AACA,eAAO,OAAO,IAAI,gBAAgB;AAAA,MACtC;AACA,eAAS,iBAAiB,OAAO;AAC7B,YAAI,SAAS,IAAI,KAAK,eAAe,MAAM,MAAM,MAAM,UAAU,IAAI,aAAa,MAAM,IAAI,GAAG,QAAQ,MAAM,KAAK,GAAG,QAAQ,MAAM,cAAc,CAAC;AAClJ,YAAI,MAAM,aAAa,UAAU,MAAM,SAAS,SAAS,GAAG;AACxD,cAAI,WAAW,CAAC;AAChB,mBAAS,SAAS,MAAM,UAAU;AAC9B,qBAAS,KAAK,iBAAiB,KAAK,CAAC;AAAA,UACzC;AACA,iBAAO,WAAW;AAAA,QACtB;AACA,eAAO;AAAA,MACX;AACA,eAAS,UAAU,MAAM;AACrB,YAAI,SAAS,EAAE,OAAO,KAAK,OAAO,SAAS,KAAK,QAAQ;AACxD,YAAI,KAAK,WAAW;AAChB,iBAAO,YAAY,KAAK;AAAA,QAC5B;AACA,eAAO;AAAA,MACX;AACA,eAAS,WAAW,OAAO;AACvB,YAAI,CAAC,OAAO;AACR,iBAAO;AAAA,QACX;AACA,eAAO,MAAM,IAAI,SAAS;AAAA,MAC9B;AACA,YAAM,cAAc,oBAAI,IAAI;AAC5B,kBAAY,IAAI,IAAI,KAAK,eAAe,KAAK;AAC7C,kBAAY,IAAI,GAAG,eAAe,UAAU,KAAK,eAAe,QAAQ;AACxE,kBAAY,IAAI,GAAG,eAAe,UAAU,KAAK,eAAe,QAAQ;AACxE,kBAAY,IAAI,GAAG,eAAe,iBAAiB,KAAK,eAAe,eAAe;AACtF,kBAAY,IAAI,GAAG,eAAe,gBAAgB,KAAK,eAAe,cAAc;AACpF,kBAAY,IAAI,GAAG,eAAe,iBAAiB,KAAK,eAAe,eAAe;AACtF,kBAAY,IAAI,GAAG,eAAe,QAAQ,KAAK,eAAe,MAAM;AACpE,kBAAY,IAAI,GAAG,eAAe,uBAAuB,KAAK,eAAe,qBAAqB;AAClG,eAAS,iBAAiB,MAAM;AAC5B,YAAI,SAAS,UAAU,SAAS,MAAM;AAClC,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,YAAY,IAAI,IAAI;AACjC,YAAI,QAAQ;AACR,iBAAO;AAAA,QACX;AACA,YAAI,QAAQ,KAAK,MAAM,GAAG;AAC1B,iBAAS,KAAK,eAAe;AAC7B,iBAAS,QAAQ,OAAO;AACpB,mBAAS,OAAO,OAAO,IAAI;AAAA,QAC/B;AACA,eAAO;AAAA,MACX;AACA,eAAS,kBAAkB,OAAO;AAC9B,YAAI,UAAU,UAAU,UAAU,MAAM;AACpC,iBAAO;AAAA,QACX;AACA,eAAO,MAAM,IAAI,UAAQ,iBAAiB,IAAI,CAAC;AAAA,MACnD;AACA,eAAS,aAAa,MAAM;AACxB,YAAI,SAAS,UAAU,SAAS,MAAM;AAClC,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,IAAI,KAAK,WAAW,KAAK,KAAK;AAC3C,YAAI,KAAK,SAAS,QAAQ;AACtB,iBAAO,OAAO,iBAAiB,KAAK,IAAI;AAAA,QAC5C;AACA,YAAI,KAAK,aAAa;AAClB,iBAAO,cAAc,cAAc,KAAK,WAAW;AAAA,QACvD;AACA,YAAI,KAAK,MAAM;AACX,iBAAO,OAAO,gBAAgB,KAAK,IAAI;AAAA,QAC3C;AACA,YAAI,KAAK,SAAS;AACd,iBAAO,UAAU,UAAU,KAAK,OAAO;AAAA,QAC3C;AACA,eAAO;AAAA,MACX;AACA,eAAS,WAAW,MAAM;AACtB,YAAI,CAAC,MAAM;AACP,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,IAAI,mBAAmB,QAAQ,QAAQ,KAAK,KAAK,CAAC;AAC/D,YAAI,KAAK,SAAS;AACd,iBAAO,UAAU,UAAU,KAAK,OAAO;AAAA,QAC3C;AACA,YAAI,KAAK,SAAS,UAAU,KAAK,SAAS,MAAM;AAC5C,iBAAO,OAAO,KAAK;AAAA,QACvB;AACA,eAAO;AAAA,MACX;AACA,eAAS,aAAa,OAAO;AACzB,YAAI,CAAC,OAAO;AACR,iBAAO;AAAA,QACX;AACA,eAAO,MAAM,IAAI,CAAC,aAAa,WAAW,QAAQ,CAAC;AAAA,MACvD;AACA,eAAS,gBAAgB,MAAM;AAC3B,YAAI,CAAC,MAAM;AACP,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,IAAI,KAAK,cAAc;AACpC,YAAI,KAAK,iBAAiB;AACtB,eAAK,gBAAgB,QAAQ,YAAU;AACnC,gBAAI,GAAG,WAAW,GAAG,MAAM,GAAG;AAC1B,qBAAO,WAAW,cAAc,OAAO,GAAG,GAAG,OAAO,OAAO;AAAA,YAC/D,WACS,GAAG,WAAW,GAAG,MAAM,GAAG;AAC/B,qBAAO,WAAW,cAAc,OAAO,MAAM,GAAG,cAAc,OAAO,MAAM,GAAG,OAAO,OAAO;AAAA,YAChG,WACS,GAAG,WAAW,GAAG,MAAM,GAAG;AAC/B,qBAAO,WAAW,cAAc,OAAO,GAAG,GAAG,OAAO,OAAO;AAAA,YAC/D,WACS,GAAG,iBAAiB,GAAG,MAAM,GAAG;AACrC,qBAAO,IAAI,cAAc,OAAO,aAAa,GAAG,GAAG,YAAY,OAAO,KAAK,CAAC;AAAA,YAChF,OACK;AACD,sBAAQ,MAAM;AAAA,EAA4C,KAAK,UAAU,QAAQ,QAAW,CAAC,GAAG;AAAA,YACpG;AAAA,UACJ,CAAC;AAAA,QACL,WACS,KAAK,SAAS;AACnB,iBAAO,KAAK,KAAK,OAAO,EAAE,QAAQ,SAAO;AACrC,mBAAO,IAAI,cAAc,GAAG,GAAG,YAAY,KAAK,QAAQ,IAAI,CAAC;AAAA,UACjE,CAAC;AAAA,QACL;AACA,eAAO;AAAA,MACX;AACA,eAAS,eAAe,MAAM;AAC1B,YAAI,QAAQ,QAAQ,KAAK,KAAK;AAC9B,YAAI,SAAS,KAAK,SAAS,MAAM,KAAK,MAAM,IAAI;AAEhD,YAAI,OAAO,IAAI,uBAAuB,QAAQ,OAAO,MAAM;AAC3D,YAAI,KAAK,SAAS,UAAU,KAAK,SAAS,MAAM;AAC5C,eAAK,OAAO,KAAK;AAAA,QACrB;AACA,eAAO;AAAA,MACX;AACA,eAAS,gBAAgB,OAAO;AAC5B,YAAI,CAAC,OAAO;AACR,iBAAO;AAAA,QACX;AACA,eAAO,MAAM,IAAI,cAAc;AAAA,MACnC;AACA,eAAS,QAAQ,OAAO;AACpB,eAAO,IAAI,KAAK,MAAM,MAAM,KAAK,MAAM,OAAO,MAAM,MAAM,MAAM,KAAK;AAAA,MACzE;AACA,eAAS,mBAAmB,IAAI;AAC5B,eAAO,IAAI,KAAK,iBAAiB,QAAQ,GAAG,KAAK,GAAG,QAAQ,GAAG,KAAK,CAAC;AAAA,MACzE;AACA,eAAS,oBAAoB,kBAAkB;AAC3C,YAAI,MAAM,QAAQ,gBAAgB,GAAG;AACjC,iBAAO,iBAAiB,IAAI,kBAAkB;AAAA,QAClD;AACA,eAAO;AAAA,MACX;AACA,eAAS,oBAAoB,IAAI;AAC7B,YAAI,eAAe,IAAI,KAAK,kBAAkB,GAAG,KAAK;AACtD,qBAAa,sBAAsB,YAAY,GAAG,mBAAmB;AACrE,YAAI,GAAG,UAAU;AACb,uBAAa,WAAW,WAAW,GAAG,QAAQ;AAAA,QAClD;AACA,eAAO;AAAA,MACX;AACA,eAAS,qBAAqB,oBAAoB;AAC9C,YAAI,MAAM,QAAQ,kBAAkB,GAAG;AACnC,iBAAO,mBAAmB,IAAI,mBAAmB;AAAA,QACrD;AACA,eAAO;AAAA,MACX;AACA,eAAS,mBAAmB,MAAM;AAC9B,YAAI,MAAM;AACN,kBAAQ;AAAA,iBACC,GAAG,iBAAiB;AACrB,qBAAO,KAAK,iBAAiB;AAAA,iBAC5B,GAAG,iBAAiB;AACrB,qBAAO,KAAK,iBAAiB;AAAA,iBAC5B,GAAG,iBAAiB;AACrB,qBAAO,KAAK,iBAAiB;AAAA;AAAA,QAEzC;AACA,eAAO;AAAA,MACX;AACA,eAAS,eAAe,GAAG;AACvB,eAAO,IAAI,KAAK,aAAa,EAAE,WAAW,EAAE,SAAS,mBAAmB,EAAE,IAAI,CAAC;AAAA,MACnF;AACA,eAAS,gBAAgB,eAAe;AACpC,YAAI,MAAM,QAAQ,aAAa,GAAG;AAC9B,iBAAO,cAAc,IAAI,cAAc;AAAA,QAC3C;AACA,eAAO;AAAA,MACX;AACA,aAAO;AAAA,QACH;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,IACJ;AACA,YAAQ,kBAAkB;AAAA;AAAA;;;ACrnB1B,IAAAE,iBAAA;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,UAAN,MAAc;AAAA,MACV,YAAY,cAAc;AACtB,aAAK,eAAe;AACpB,aAAK,UAAU;AACf,aAAK,oBAAoB;AACzB,aAAK,YAAY;AACjB,aAAK,OAAO;AAAA,MAChB;AAAA,MACA,QAAQ,MAAM,QAAQ,KAAK,cAAc;AACrC,aAAK,OAAO;AACZ,YAAI,SAAS,GAAG;AACZ,eAAK,cAAc;AAAA,QACvB;AACA,YAAI,CAAC,KAAK,mBAAmB;AACzB,eAAK,oBAAoB,IAAI,QAAQ,CAAC,YAAY;AAC9C,iBAAK,YAAY;AAAA,UACrB,CAAC,EAAE,KAAK,MAAM;AACV,iBAAK,oBAAoB;AACzB,iBAAK,YAAY;AACjB,gBAAI,SAAS,KAAK,KAAK;AACvB,iBAAK,OAAO;AACZ,mBAAO;AAAA,UACX,CAAC;AAAA,QACL;AACA,YAAI,SAAS,KAAK,KAAK,YAAY,QAAQ;AACvC,eAAK,UAAU,WAAW,MAAM;AAC5B,iBAAK,UAAU;AACf,iBAAK,UAAU,MAAS;AAAA,UAC5B,GAAG,SAAS,IAAI,QAAQ,KAAK,YAAY;AAAA,QAC7C;AACA,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,gBAAgB;AACZ,YAAI,CAAC,KAAK,mBAAmB;AACzB,iBAAO;AAAA,QACX;AACA,aAAK,cAAc;AACnB,YAAI,SAAS,KAAK,KAAK;AACvB,aAAK,oBAAoB;AACzB,aAAK,YAAY;AACjB,aAAK,OAAO;AACZ,eAAO;AAAA,MACX;AAAA,MACA,cAAc;AACV,eAAO,KAAK,YAAY;AAAA,MAC5B;AAAA,MACA,SAAS;AACL,aAAK,cAAc;AACnB,aAAK,oBAAoB;AAAA,MAC7B;AAAA,MACA,gBAAgB;AACZ,YAAI,KAAK,YAAY,QAAQ;AACzB,uBAAa,KAAK,OAAO;AACzB,eAAK,UAAU;AAAA,QACnB;AAAA,MACJ;AAAA,IACJ;AACA,YAAQ,UAAU;AAAA;AAAA;;;AC/DlB;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,YAAN,MAAgB;AAAA,MACZ,YAAY,QAAQ;AAChB,aAAK,SAAS;AAAA,MAElB;AAAA,MACA,QAAQ;AACJ,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,OAAO,OAAO;AACV,eAAO,KAAK,MAAM,MAAM,MAAM,MAAM;AAAA,MACxC;AAAA,IACJ;AACA,QAAM,SAAN,cAAqB,UAAU;AAAA,MAC3B,cAAc;AACV,cAAM;AAAA,UACF,OAAO,WAAW;AAAA,UAClB,OAAO,WAAW;AAAA,UAClB,OAAO,WAAW;AAAA,UAClB,OAAO,WAAW;AAAA,UAClB,OAAO,WAAW;AAAA,UAClB,OAAO,WAAW;AAAA,UAClB,OAAO,WAAW;AAAA,UAClB,OAAO,WAAW;AAAA,UAClB;AAAA,UACA,OAAO,WAAW;AAAA,UAClB,OAAO,WAAW;AAAA,UAClB,OAAO,WAAW;AAAA,UAClB,OAAO,WAAW;AAAA,UAClB;AAAA,UACA;AAAA,UACA,OAAO,WAAW;AAAA,UAClB,OAAO,WAAW;AAAA,UAClB,OAAO,WAAW;AAAA,UAClB;AAAA,UACA,OAAO,OAAO,OAAO,aAAa;AAAA,UAClC,OAAO,WAAW;AAAA,UAClB,OAAO,WAAW;AAAA,UAClB,OAAO,WAAW;AAAA,UAClB;AAAA,UACA,OAAO,WAAW;AAAA,UAClB,OAAO,WAAW;AAAA,UAClB,OAAO,WAAW;AAAA,UAClB,OAAO,WAAW;AAAA,UAClB,OAAO,WAAW;AAAA,UAClB,OAAO,WAAW;AAAA,UAClB,OAAO,WAAW;AAAA,UAClB,OAAO,WAAW;AAAA,UAClB,OAAO,WAAW;AAAA,UAClB,OAAO,WAAW;AAAA,UAClB,OAAO,WAAW;AAAA,UAClB,OAAO,WAAW;AAAA,QACtB,EAAE,KAAK,EAAE,CAAC;AAAA,MACd;AAAA,MACA,OAAO,OAAO,OAAO;AACjB,eAAO,MAAM,KAAK,MAAM,MAAM,SAAS,KAAK,OAAO,CAAC;AAAA,MACxD;AAAA,MACA,OAAO,aAAa;AAChB,eAAO,OAAO,OAAO,OAAO,MAAM;AAAA,MACtC;AAAA,IACJ;AACA,WAAO,SAAS,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG;AACpG,WAAO,gBAAgB,CAAC,KAAK,KAAK,KAAK,GAAG;AAI1C,YAAQ,QAAQ,IAAI,UAAU,sCAAsC;AACpE,aAAS,KAAK;AACV,aAAO,IAAI,OAAO;AAAA,IACtB;AACA,YAAQ,KAAK;AACb,QAAM,eAAe;AACrB,aAAS,OAAO,OAAO;AACnB,aAAO,aAAa,KAAK,KAAK;AAAA,IAClC;AACA,YAAQ,SAAS;AAKjB,aAASC,OAAM,OAAO;AAClB,UAAI,CAAC,OAAO,KAAK,GAAG;AAChB,cAAM,IAAI,MAAM,cAAc;AAAA,MAClC;AACA,aAAO,IAAI,UAAU,KAAK;AAAA,IAC9B;AACA,YAAQ,QAAQA;AAChB,aAAS,eAAe;AACpB,aAAO,GAAG,EAAE,MAAM;AAAA,IACtB;AACA,YAAQ,eAAe;AAAA;AAAA;;;AC/FvB;AAAA;AAAA;AAKA,aAASC,UAAS,GAAG;AACjB,eAAS,KAAK;AAAG,YAAI,CAAC,QAAQ,eAAe,CAAC;AAAG,kBAAQ,KAAK,EAAE;AAAA,IACpE;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,WAAW,QAAQ;AACzB,QAAM,mCAAmC;AACzC,QAAM,MAAM;AACZ,QAAM,MAAM;AACZ,QAAMC,MAAK;AACX,QAAM,UAAU;AAChB,QAAM,OAAO;AACb,IAAAD,UAAS,eAAyC;AAClD,QAAM,gBAAN,MAAoB;AAAA,MAChB,MAAM,SAAS;AACX,gBAAQ,MAAM,OAAO;AAAA,MACzB;AAAA,MACA,KAAK,SAAS;AACV,gBAAQ,KAAK,OAAO;AAAA,MACxB;AAAA,MACA,KAAK,SAAS;AACV,gBAAQ,KAAK,OAAO;AAAA,MACxB;AAAA,MACA,IAAI,SAAS;AACT,gBAAQ,IAAI,OAAO;AAAA,MACvB;AAAA,IACJ;AACA,aAAS,iBAAiB,OAAO,QAAQ,cAAc,cAAc;AACjE,UAAI,SAAS,IAAI,cAAc;AAC/B,UAAI,aAAa,iCAAiC,yBAAyB,OAAO,QAAQ,MAAM;AAChG,iBAAW,QAAQ,CAAC,SAAS;AAAE,qBAAa,KAAK,IAAI,KAAK,IAAI,KAAK,EAAE;AAAA,MAAG,CAAC;AACzE,iBAAW,QAAQ,YAAY;AAC/B,UAAI,SAAS;AAAA,QACT,QAAQ,MAAM,WAAW,OAAO;AAAA,QAChC,aAAa,CAAC,SAAS,WAAW,WAAW,YAAYC,IAAG,OAAO,IAAI,IAAI,OAAO,KAAK,QAAQ,GAAG,MAAM;AAAA,QACxG,WAAW,CAAC,MAAM,YAAY,WAAW,UAAUA,IAAG,OAAO,IAAI,IAAI,OAAO,KAAK,QAAQ,OAAO;AAAA,QAChG,kBAAkB,CAAC,MAAM,WAAW,WAAW,iBAAiBA,IAAG,OAAO,IAAI,IAAI,OAAO,KAAK,QAAQ,MAAM;AAAA,QAC5G,gBAAgB,CAAC,MAAM,YAAY,WAAW,eAAeA,IAAG,OAAO,IAAI,IAAI,OAAO,KAAK,QAAQ,OAAO;AAAA,QAC1G,OAAO,CAAC,OAAO,QAAQ,mCAAmC;AACtD,gBAAM,sBAAsB;AAAA,YACxB,kBAAkB;AAAA,YAClB,aAAa,iCAAiC,YAAY;AAAA,UAC9D;AACA,cAAI,mCAAmC,QAAQ;AAC3C,uBAAW,MAAM,OAAO,QAAQ,mBAAmB;AAAA,UACvD,WACSA,IAAG,QAAQ,8BAA8B,GAAG;AACjD,uBAAW,MAAM,OAAO,QAAQ,8BAA8B;AAAA,UAClE,OACK;AACD,uBAAW,MAAM,OAAO,QAAQ,8BAA8B;AAAA,UAClE;AAAA,QACJ;AAAA,QACA,YAAY,CAAC,WAAW,WAAW,YAAY,iCAAiC,kBAAkB,MAAM,MAAM;AAAA,QAC9G,UAAU,MAAM,WAAW,YAAY,iCAAiC,gBAAgB,MAAM,MAAS;AAAA,QACvG,MAAM,MAAM,WAAW,iBAAiB,iCAAiC,iBAAiB,IAAI;AAAA,QAC9F,cAAc,CAAC,YAAY,WAAW,eAAe,iCAAiC,uBAAuB,MAAM,OAAO;AAAA,QAC1H,eAAe,CAAC,YAAY,WAAW,eAAe,iCAAiC,wBAAwB,MAAM,OAAO;AAAA,QAC5H,aAAa,CAAC,YAAY,WAAW,eAAe,iCAAiC,2BAA2B,MAAM,OAAO;AAAA,QAC7H,wBAAwB,CAAC,WAAW,WAAW,iBAAiB,iCAAiC,mCAAmC,MAAM,MAAM;AAAA,QAChJ,uBAAuB,CAAC,WAAW,WAAW,iBAAiB,iCAAiC,kCAAkC,MAAM,MAAM;AAAA,QAC9I,qBAAqB,CAAC,WAAW,WAAW,iBAAiB,iCAAiC,gCAAgC,MAAM,MAAM;AAAA,QAC1I,uBAAuB,CAAC,WAAW,WAAW,iBAAiB,iCAAiC,kCAAkC,MAAM,MAAM;AAAA,QAC9I,sBAAsB,CAAC,WAAW,WAAW,iBAAiB,iCAAiC,iCAAiC,MAAM,MAAM;AAAA,QAC5I,qBAAqB,CAAC,WAAW,WAAW,iBAAiB,iCAAiC,gCAAgC,MAAM,MAAM;AAAA,QAC1I,eAAe,CAAC,YAAY,WAAW,eAAe,iCAAiC,+BAA+B,MAAM,OAAO;AAAA,QACnI,SAAS,MAAM,WAAW,QAAQ;AAAA,MACtC;AACA,aAAO;AAAA,IACX;AAIA,QAAI;AACJ,KAAC,SAAUC,cAAa;AAIpB,MAAAA,aAAYA,aAAY,cAAc,KAAK;AAI3C,MAAAA,aAAYA,aAAY,cAAc,KAAK;AAAA,IAC/C,GAAG,cAAc,QAAQ,gBAAgB,QAAQ,cAAc,CAAC,EAAE;AAIlE,QAAI;AACJ,KAAC,SAAUC,cAAa;AAIpB,MAAAA,aAAYA,aAAY,kBAAkB,KAAK;AAI/C,MAAAA,aAAYA,aAAY,aAAa,KAAK;AAAA,IAC9C,GAAG,cAAc,QAAQ,gBAAgB,QAAQ,cAAc,CAAC,EAAE;AAClE,QAAM,sBAAN,MAA0B;AAAA,MACtB,YAAY,MAAM;AACd,aAAK,OAAO;AACZ,aAAK,WAAW,CAAC;AAAA,MACrB;AAAA,MACA,MAAM,QAAQ,UAAU,OAAO;AAC3B,YAAI,SAAS,SAAS,GAAG;AACrB,iBAAO,YAAY;AAAA,QACvB;AACA,eAAO,YAAY;AAAA,MACvB;AAAA,MACA,SAAS;AACL,aAAK,SAAS,KAAK,KAAK,IAAI,CAAC;AAC7B,YAAI,KAAK,SAAS,SAAS,GAAG;AAC1B,iBAAO,YAAY;AAAA,QACvB,OACK;AACD,cAAI,OAAO,KAAK,SAAS,KAAK,SAAS,SAAS,KAAK,KAAK,SAAS;AACnE,cAAI,QAAQ,IAAI,KAAK,KAAM;AACvB,qBAAS,OAAO,iBAAiB,OAAO,KAAK,sFAAsF;AACnI,mBAAO,YAAY;AAAA,UACvB,OACK;AACD,iBAAK,SAAS,MAAM;AACpB,mBAAO,YAAY;AAAA,UACvB;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AACA,QAAI;AACJ,KAAC,SAAUC,wBAAuB;AAC9B,MAAAA,uBAAsBA,uBAAsB,UAAU,KAAK;AAC3D,MAAAA,uBAAsBA,uBAAsB,UAAU,KAAK;AAC3D,MAAAA,uBAAsBA,uBAAsB,WAAW,KAAK;AAC5D,MAAAA,uBAAsBA,uBAAsB,WAAW,KAAK;AAAA,IAChE,GAAG,wBAAwB,QAAQ,0BAA0B,QAAQ,wBAAwB,CAAC,EAAE;AAChG,QAAI;AACJ,KAAC,SAAUC,QAAO;AACd,MAAAA,OAAMA,OAAM,aAAa,KAAK;AAC9B,MAAAA,OAAMA,OAAM,cAAc,KAAK;AAC/B,MAAAA,OAAMA,OAAM,aAAa,KAAK;AAAA,IAClC,GAAG,QAAQ,QAAQ,UAAU,QAAQ,QAAQ,CAAC,EAAE;AAChD,QAAI;AACJ,KAAC,SAAUC,cAAa;AACpB,MAAAA,aAAYA,aAAY,aAAa,KAAK;AAC1C,MAAAA,aAAYA,aAAY,cAAc,KAAK;AAC3C,MAAAA,aAAYA,aAAY,iBAAiB,KAAK;AAC9C,MAAAA,aAAYA,aAAY,aAAa,KAAK;AAC1C,MAAAA,aAAYA,aAAY,cAAc,KAAK;AAC3C,MAAAA,aAAYA,aAAY,aAAa,KAAK;AAAA,IAC9C,GAAG,gBAAgB,cAAc,CAAC,EAAE;AACpC,QAAM,uBAAuB;AAAA,MACzB,iCAAiC,WAAW;AAAA,MAC5C,iCAAiC,WAAW;AAAA,MAC5C,iCAAiC,WAAW;AAAA,MAC5C,iCAAiC,WAAW;AAAA,MAC5C,iCAAiC,WAAW;AAAA,MAC5C,iCAAiC,WAAW;AAAA,MAC5C,iCAAiC,WAAW;AAAA,MAC5C,iCAAiC,WAAW;AAAA,MAC5C,iCAAiC,WAAW;AAAA,MAC5C,iCAAiC,WAAW;AAAA,MAC5C,iCAAiC,WAAW;AAAA,MAC5C,iCAAiC,WAAW;AAAA,MAC5C,iCAAiC,WAAW;AAAA,MAC5C,iCAAiC,WAAW;AAAA,MAC5C,iCAAiC,WAAW;AAAA,MAC5C,iCAAiC,WAAW;AAAA,MAC5C,iCAAiC,WAAW;AAAA,MAC5C,iCAAiC,WAAW;AAAA,MAC5C,iCAAiC,WAAW;AAAA,MAC5C,iCAAiC,WAAW;AAAA,MAC5C,iCAAiC,WAAW;AAAA,MAC5C,iCAAiC,WAAW;AAAA,MAC5C,iCAAiC,WAAW;AAAA,MAC5C,iCAAiC,WAAW;AAAA,MAC5C,iCAAiC,WAAW;AAAA,MAC5C,iCAAiC,WAAW;AAAA,IAChD;AACA,QAAM,+BAA+B;AAAA,MACjC,iCAAiC,mBAAmB;AAAA,MACpD,iCAAiC,mBAAmB;AAAA,MACpD,iCAAiC,mBAAmB;AAAA,MACpD,iCAAiC,mBAAmB;AAAA,MACpD,iCAAiC,mBAAmB;AAAA,MACpD,iCAAiC,mBAAmB;AAAA,MACpD,iCAAiC,mBAAmB;AAAA,MACpD,iCAAiC,mBAAmB;AAAA,MACpD,iCAAiC,mBAAmB;AAAA,MACpD,iCAAiC,mBAAmB;AAAA,MACpD,iCAAiC,mBAAmB;AAAA,MACpD,iCAAiC,mBAAmB;AAAA,MACpD,iCAAiC,mBAAmB;AAAA,MACpD,iCAAiC,mBAAmB;AAAA,MACpD,iCAAiC,mBAAmB;AAAA,MACpD,iCAAiC,mBAAmB;AAAA,MACpD,iCAAiC,mBAAmB;AAAA,MACpD,iCAAiC,mBAAmB;AAAA,MACpD,iCAAiC,mBAAmB;AAAA,MACpD,iCAAiC,mBAAmB;AAAA,MACpD,iCAAiC,mBAAmB;AAAA,MACpD,iCAAiC,mBAAmB;AAAA,MACpD,iCAAiC,mBAAmB;AAAA,MACpD,iCAAiC,mBAAmB;AAAA,MACpD,iCAAiC,mBAAmB;AAAA,IACxD;AACA,aAAS,OAAO,QAAQ,KAAK;AACzB,UAAI,OAAO,SAAS,QAAQ;AACxB,eAAO,OAAO,CAAC;AAAA,MACnB;AACA,aAAO,OAAO;AAAA,IAClB;AACA,QAAI;AACJ,KAAC,SAAUC,iBAAgB;AACvB,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,aAAaN,IAAG,KAAK,UAAU,QAAQ,KAAKA,IAAG,KAAK,UAAU,UAAU,KAAKA,IAAG,KAAK,UAAU,OAAO,KAAK,UAAU,aAAa;AAAA,MAC7I;AACA,MAAAM,gBAAe,KAAK;AAAA,IACxB,GAAG,mBAAmB,iBAAiB,CAAC,EAAE;AAC1C,QAAM,wBAAN,MAA4B;AAAA,MACxB,YAAY,SAAS,QAAQ,OAAO,aAAa,eAAe,iBAAiB;AAC7E,aAAK,UAAU;AACf,aAAK,SAAS;AACd,aAAK,QAAQ;AACb,aAAK,cAAc;AACnB,aAAK,gBAAgB;AACrB,aAAK,kBAAkB;AACvB,aAAK,aAAa,oBAAI,IAAI;AAAA,MAC9B;AAAA,MACA,OAAO,mBAAmB,WAAW,cAAc;AAC/C,mBAAW,YAAY,WAAW;AAC9B,cAAI,SAAS,UAAU,MAAM,UAAU,YAAY,GAAG;AAClD,mBAAO;AAAA,UACX;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA,MACA,SAAS,UAAU,MAAM;AACrB,YAAI,CAAC,KAAK,gBAAgB,kBAAkB;AACxC;AAAA,QACJ;AACA,YAAI,CAAC,KAAK,WAAW;AACjB,eAAK,YAAY,KAAK,OAAO,KAAK,UAAU,IAAI;AAAA,QACpD;AACA,aAAK,WAAW,IAAI,KAAK,IAAI,KAAK,gBAAgB,gBAAgB;AAAA,MACtE;AAAA,MACA,SAAS,MAAM;AACX,YAAI,CAAC,KAAK,mBAAmB,KAAK,gBAAgB,KAAK,WAAW,OAAO,GAAG,IAAI,GAAG;AAC/E,cAAI,KAAK,aAAa;AAClB,iBAAK,YAAY,MAAM,CAACC,UAAS,KAAK,QAAQ,iBAAiB,KAAK,OAAO,KAAK,cAAcA,KAAI,CAAC,CAAC;AAAA,UACxG,OACK;AACD,iBAAK,QAAQ,iBAAiB,KAAK,OAAO,KAAK,cAAc,IAAI,CAAC;AAAA,UACtE;AACA,eAAK,iBAAiB,IAAI;AAAA,QAC9B;AAAA,MACJ;AAAA,MACA,iBAAiB,OAAO;AAAA,MACxB;AAAA,MACA,WAAW,IAAI;AACX,aAAK,WAAW,OAAO,EAAE;AACzB,YAAI,KAAK,WAAW,SAAS,KAAK,KAAK,WAAW;AAC9C,eAAK,UAAU,QAAQ;AACvB,eAAK,YAAY;AAAA,QACrB;AAAA,MACJ;AAAA,MACA,UAAU;AACN,aAAK,WAAW,MAAM;AACtB,YAAI,KAAK,WAAW;AAChB,eAAK,UAAU,QAAQ;AACvB,eAAK,YAAY;AAAA,QACrB;AAAA,MACJ;AAAA,IACJ;AACA,QAAM,6BAAN,cAAyC,sBAAsB;AAAA,MAC3D,YAAYC,SAAQ,kBAAkB;AAClC,cAAMA,SAAQ,SAAS,UAAU,uBAAuB,iCAAiC,gCAAgC,MAAMA,QAAO,cAAc,WAAW,SAAS,CAAC,iBAAiBA,QAAO,uBAAuB,yBAAyB,YAAY,GAAG,sBAAsB,kBAAkB;AACxS,aAAK,mBAAmB;AAAA,MAC5B;AAAA,MACA,IAAI,WAAW;AACX,eAAO,iCAAiC,gCAAgC;AAAA,MAC5E;AAAA,MACA,uBAAuB,cAAc;AACjC,eAAO,OAAO,cAAc,cAAc,GAAG,iBAAiB,EAAE,sBAAsB;AAAA,MAC1F;AAAA,MACA,WAAW,cAAc,kBAAkB;AACvC,YAAI,0BAA0B,aAAa;AAC3C,YAAI,oBAAoB,2BAA2B,wBAAwB,WAAW;AAClF,eAAK,SAAS,KAAK,UAAU,EAAE,IAAI,KAAK,aAAa,GAAG,iBAAiB,EAAE,iBAAmC,EAAE,CAAC;AAAA,QACrH;AAAA,MACJ;AAAA,MACA,SAAS,SAAS,MAAM;AACpB,cAAM,SAAS,SAAS,IAAI;AAC5B,YAAI,CAAC,KAAK,gBAAgB,kBAAkB;AACxC;AAAA,QACJ;AACA,YAAI,mBAAmB,KAAK,gBAAgB;AAC5C,iBAAS,UAAU,cAAc,QAAQ,CAAC,iBAAiB;AACvD,cAAI,MAAM,aAAa,IAAI,SAAS;AACpC,cAAI,KAAK,iBAAiB,IAAI,GAAG,GAAG;AAChC;AAAA,UACJ;AACA,cAAI,SAAS,UAAU,MAAM,kBAAkB,YAAY,GAAG;AAC1D,gBAAI,aAAa,KAAK,QAAQ,cAAc;AAC5C,gBAAI,UAAU,CAACC,kBAAiB;AAC5B,mBAAK,QAAQ,iBAAiB,KAAK,OAAO,KAAK,cAAcA,aAAY,CAAC;AAAA,YAC9E;AACA,gBAAI,WAAW,SAAS;AACpB,yBAAW,QAAQ,cAAc,OAAO;AAAA,YAC5C,OACK;AACD,sBAAQ,YAAY;AAAA,YACxB;AACA,iBAAK,iBAAiB,IAAI,KAAK,YAAY;AAAA,UAC/C;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,MACA,iBAAiB,cAAc;AAC3B,cAAM,iBAAiB,YAAY;AACnC,aAAK,iBAAiB,IAAI,aAAa,IAAI,SAAS,GAAG,YAAY;AAAA,MACvE;AAAA,IACJ;AACA,QAAM,8BAAN,cAA0C,sBAAsB;AAAA,MAC5D,YAAYD,SAAQ,kBAAkB;AAClC,cAAMA,SAAQ,SAAS,UAAU,wBAAwB,iCAAiC,iCAAiC,MAAMA,QAAO,cAAc,WAAW,UAAU,CAAC,iBAAiBA,QAAO,uBAAuB,0BAA0B,YAAY,GAAG,sBAAsB,kBAAkB;AAC5S,aAAK,mBAAmB;AAAA,MAC5B;AAAA,MACA,IAAI,WAAW;AACX,eAAO,iCAAiC,iCAAiC;AAAA,MAC7E;AAAA,MACA,uBAAuB,cAAc;AACjC,eAAO,OAAO,cAAc,cAAc,GAAG,iBAAiB,EAAE,sBAAsB;AAAA,MAC1F;AAAA,MACA,WAAW,cAAc,kBAAkB;AACvC,YAAI,0BAA0B,aAAa;AAC3C,YAAI,oBAAoB,2BAA2B,wBAAwB,WAAW;AAClF,eAAK,SAAS,KAAK,UAAU,EAAE,IAAI,KAAK,aAAa,GAAG,iBAAiB,EAAE,iBAAmC,EAAE,CAAC;AAAA,QACrH;AAAA,MACJ;AAAA,MACA,iBAAiB,cAAc;AAC3B,cAAM,iBAAiB,YAAY;AACnC,aAAK,iBAAiB,OAAO,aAAa,IAAI,SAAS,CAAC;AAAA,MAC5D;AAAA,MACA,WAAW,IAAI;AACX,YAAI,WAAW,KAAK,WAAW,IAAI,EAAE;AAGrC,cAAM,WAAW,EAAE;AACnB,YAAI,YAAY,KAAK,WAAW,OAAO;AACvC,aAAK,iBAAiB,QAAQ,CAAC,iBAAiB;AAC5C,cAAI,SAAS,UAAU,MAAM,UAAU,YAAY,KAAK,CAAC,KAAK,gBAAgB,WAAW,YAAY,GAAG;AACpG,gBAAI,aAAa,KAAK,QAAQ,cAAc;AAC5C,gBAAI,WAAW,CAACC,kBAAiB;AAC7B,mBAAK,QAAQ,iBAAiB,KAAK,OAAO,KAAK,cAAcA,aAAY,CAAC;AAAA,YAC9E;AACA,iBAAK,iBAAiB,OAAO,aAAa,IAAI,SAAS,CAAC;AACxD,gBAAI,WAAW,UAAU;AACrB,yBAAW,SAAS,cAAc,QAAQ;AAAA,YAC9C,OACK;AACD,uBAAS,YAAY;AAAA,YACzB;AAAA,UACJ;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,IACJ;AACA,QAAM,+BAAN,MAAmC;AAAA,MAC/B,YAAY,SAAS;AACjB,aAAK,UAAU;AACf,aAAK,cAAc,oBAAI,IAAI;AAC3B,aAAK,mBAAmB;AAAA,MAC5B;AAAA,MACA,IAAI,WAAW;AACX,eAAO,iCAAiC,kCAAkC;AAAA,MAC9E;AAAA,MACA,uBAAuB,cAAc;AACjC,eAAO,OAAO,cAAc,cAAc,GAAG,iBAAiB,EAAE,sBAAsB;AAAA,MAC1F;AAAA,MACA,WAAW,cAAc,kBAAkB;AACvC,YAAI,0BAA0B,aAAa;AAC3C,YAAI,oBAAoB,2BAA2B,wBAAwB,WAAW,UAAU,wBAAwB,WAAW,iCAAiC,qBAAqB,MAAM;AAC3L,eAAK,SAAS,KAAK,UAAU;AAAA,YACzB,IAAI,KAAK,aAAa;AAAA,YACtB,iBAAiB,OAAO,OAAO,CAAC,GAAG,EAAE,iBAAmC,GAAG,EAAE,UAAU,wBAAwB,OAAO,CAAC;AAAA,UAC3H,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,MACA,SAAS,UAAU,MAAM;AACrB,YAAI,CAAC,KAAK,gBAAgB,kBAAkB;AACxC;AAAA,QACJ;AACA,YAAI,CAAC,KAAK,WAAW;AACjB,eAAK,YAAY,SAAS,UAAU,wBAAwB,KAAK,UAAU,IAAI;AAAA,QACnF;AACA,aAAK,YAAY,IAAI,KAAK,IAAI;AAAA,UAC1B,kBAAkB,KAAK,gBAAgB;AAAA,UACvC,UAAU,KAAK,gBAAgB;AAAA,QACnC,CAAC;AAAA,MACL;AAAA,MACA,SAAS,OAAO;AAIZ,YAAI,MAAM,eAAe,WAAW,GAAG;AACnC;AAAA,QACJ;AACA,mBAAW,cAAc,KAAK,YAAY,OAAO,GAAG;AAChD,cAAI,SAAS,UAAU,MAAM,WAAW,kBAAkB,MAAM,QAAQ,GAAG;AACvE,gBAAI,aAAa,KAAK,QAAQ,cAAc;AAC5C,gBAAI,WAAW,aAAa,iCAAiC,qBAAqB,aAAa;AAC3F,kBAAI,SAAS,KAAK,QAAQ,uBAAuB,2BAA2B,KAAK;AACjF,kBAAI,WAAW,WAAW;AACtB,2BAAW,UAAU,OAAO,MAAM,KAAK,QAAQ,iBAAiB,iCAAiC,kCAAkC,MAAM,MAAM,CAAC;AAAA,cACpJ,OACK;AACD,qBAAK,QAAQ,iBAAiB,iCAAiC,kCAAkC,MAAM,MAAM;AAAA,cACjH;AAAA,YACJ,WACS,WAAW,aAAa,iCAAiC,qBAAqB,MAAM;AACzF,kBAAI,YAAY,CAACC,WAAU;AACvB,oBAAI,KAAK,gBAAgB;AACrB,sBAAI,KAAK,eAAe,QAAQA,OAAM,SAAS,IAAI,SAAS,GAAG;AAE3D,yBAAK,cAAc;AACnB,yBAAK,eAAe,MAAMA,OAAM,SAAS,IAAI,SAAS;AAAA,kBAC1D;AACA,uBAAK,eAAe,QAAQ,QAAQ,MAAM;AACtC,yBAAK,QAAQ,iBAAiB,iCAAiC,kCAAkC,MAAM,KAAK,QAAQ,uBAAuB,2BAA2BA,OAAM,QAAQ,CAAC;AAAA,kBACzL,CAAC;AAAA,gBACL,OACK;AACD,uBAAK,iBAAiB;AAAA,oBAClB,KAAKA,OAAM,SAAS,IAAI,SAAS;AAAA,oBACjC,SAAS,IAAI,QAAQ,QAAQ,GAAG;AAAA,kBACpC;AACA,uBAAK,eAAe,QAAQ,QAAQ,MAAM;AACtC,yBAAK,QAAQ,iBAAiB,iCAAiC,kCAAkC,MAAM,KAAK,QAAQ,uBAAuB,2BAA2BA,OAAM,QAAQ,CAAC;AAAA,kBACzL,GAAG,EAAE;AAAA,gBACT;AAAA,cACJ;AACA,kBAAI,WAAW,WAAW;AACtB,2BAAW,UAAU,OAAO,SAAS;AAAA,cACzC,OACK;AACD,0BAAU,KAAK;AAAA,cACnB;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,WAAW,IAAI;AACX,aAAK,YAAY,OAAO,EAAE;AAC1B,YAAI,KAAK,YAAY,SAAS,KAAK,KAAK,WAAW;AAC/C,eAAK,UAAU,QAAQ;AACvB,eAAK,YAAY;AAAA,QACrB;AAAA,MACJ;AAAA,MACA,UAAU;AACN,aAAK,iBAAiB;AACtB,aAAK,mBAAmB;AACxB,aAAK,YAAY,MAAM;AACvB,YAAI,KAAK,WAAW;AAChB,eAAK,UAAU,QAAQ;AACvB,eAAK,YAAY;AAAA,QACrB;AAAA,MACJ;AAAA,MACA,gBAAgB;AACZ,YAAI,KAAK,oBAAoB,CAAC,KAAK,gBAAgB;AAC/C;AAAA,QACJ;AACA,YAAI;AACA,eAAK,mBAAmB;AACxB,eAAK,eAAe,QAAQ,cAAc;AAAA,QAC9C,UACA;AACI,eAAK,mBAAmB;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,QAAM,kBAAN,cAA8B,sBAAsB;AAAA,MAChD,YAAYF,SAAQ;AAChB,cAAMA,SAAQ,SAAS,UAAU,wBAAwB,iCAAiC,iCAAiC,MAAMA,QAAO,cAAc,WAAW,UAAU,CAAC,kBAAkBA,QAAO,uBAAuB,6BAA6B,aAAa,GAAG,CAAC,WAAW,kBAAkB,sBAAsB,mBAAmB,WAAW,cAAc,QAAQ,CAAC;AAAA,MACtX;AAAA,MACA,IAAI,WAAW;AACX,eAAO,iCAAiC,iCAAiC;AAAA,MAC7E;AAAA,MACA,uBAAuB,cAAc;AACjC,YAAI,QAAQ,OAAO,OAAO,cAAc,cAAc,GAAG,iBAAiB;AAC1E,cAAM,WAAW;AAAA,MACrB;AAAA,MACA,WAAW,cAAc,kBAAkB;AACvC,YAAI,0BAA0B,aAAa;AAC3C,YAAI,oBAAoB,2BAA2B,wBAAwB,UAAU;AACjF,eAAK,SAAS,KAAK,UAAU;AAAA,YACzB,IAAI,KAAK,aAAa;AAAA,YACtB,iBAAiB,EAAE,iBAAmC;AAAA,UAC1D,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,IACJ;AACA,QAAM,2BAAN,MAA+B;AAAA,MAC3B,YAAY,SAAS;AACjB,aAAK,UAAU;AACf,aAAK,aAAa,oBAAI,IAAI;AAAA,MAC9B;AAAA,MACA,IAAI,WAAW;AACX,eAAO,iCAAiC,qCAAqC;AAAA,MACjF;AAAA,MACA,uBAAuB,cAAc;AACjC,YAAI,QAAQ,OAAO,OAAO,cAAc,cAAc,GAAG,iBAAiB;AAC1E,cAAM,oBAAoB;AAAA,MAC9B;AAAA,MACA,WAAW,cAAc,kBAAkB;AACvC,YAAI,0BAA0B,aAAa;AAC3C,YAAI,oBAAoB,2BAA2B,wBAAwB,mBAAmB;AAC1F,eAAK,SAAS,KAAK,UAAU;AAAA,YACzB,IAAI,KAAK,aAAa;AAAA,YACtB,iBAAiB,EAAE,iBAAmC;AAAA,UAC1D,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,MACA,SAAS,UAAU,MAAM;AACrB,YAAI,CAAC,KAAK,gBAAgB,kBAAkB;AACxC;AAAA,QACJ;AACA,YAAI,CAAC,KAAK,WAAW;AACjB,eAAK,YAAY,SAAS,UAAU,uBAAuB,KAAK,UAAU,IAAI;AAAA,QAClF;AACA,aAAK,WAAW,IAAI,KAAK,IAAI,KAAK,gBAAgB,gBAAgB;AAAA,MACtE;AAAA,MACA,SAAS,OAAO;AACZ,YAAI,sBAAsB,mBAAmB,KAAK,WAAW,OAAO,GAAG,MAAM,QAAQ,GAAG;AACpF,cAAI,aAAa,KAAK,QAAQ,cAAc;AAC5C,cAAI,oBAAoB,CAACE,WAAU;AAC/B,mBAAO,KAAK,QAAQ,YAAY,iCAAiC,qCAAqC,MAAM,KAAK,QAAQ,uBAAuB,6BAA6BA,MAAK,CAAC,EAAE,KAAK,CAAC,UAAU;AACjM,kBAAI,SAAS,KAAK,QAAQ,uBAAuB,YAAY,KAAK;AAClE,qBAAO,WAAW,SAAS,CAAC,IAAI;AAAA,YACpC,CAAC;AAAA,UACL;AACA,gBAAM,UAAU,WAAW,oBACrB,WAAW,kBAAkB,OAAO,iBAAiB,IACrD,kBAAkB,KAAK,CAAC;AAAA,QAClC;AAAA,MACJ;AAAA,MACA,WAAW,IAAI;AACX,aAAK,WAAW,OAAO,EAAE;AACzB,YAAI,KAAK,WAAW,SAAS,KAAK,KAAK,WAAW;AAC9C,eAAK,UAAU,QAAQ;AACvB,eAAK,YAAY;AAAA,QACrB;AAAA,MACJ;AAAA,MACA,UAAU;AACN,aAAK,WAAW,MAAM;AACtB,YAAI,KAAK,WAAW;AAChB,eAAK,UAAU,QAAQ;AACvB,eAAK,YAAY;AAAA,QACrB;AAAA,MACJ;AAAA,IACJ;AACA,QAAM,6BAAN,cAAyC,sBAAsB;AAAA,MAC3D,YAAYF,SAAQ;AAChB,cAAMA,SAAQ,SAAS,UAAU,uBAAuB,iCAAiC,gCAAgC,MAAMA,QAAO,cAAc,WAAW,SAAS,CAAC,iBAAiBA,QAAO,uBAAuB,yBAAyB,cAAc,KAAK,YAAY,GAAG,sBAAsB,kBAAkB;AAAA,MAC/T;AAAA,MACA,IAAI,WAAW;AACX,eAAO,iCAAiC,gCAAgC;AAAA,MAC5E;AAAA,MACA,uBAAuB,cAAc;AACjC,eAAO,OAAO,cAAc,cAAc,GAAG,iBAAiB,EAAE,UAAU;AAAA,MAC9E;AAAA,MACA,WAAW,cAAc,kBAAkB;AACvC,YAAI,0BAA0B,aAAa;AAC3C,YAAI,oBAAoB,2BAA2B,wBAAwB,MAAM;AAC7E,eAAK,SAAS,KAAK,UAAU;AAAA,YACzB,IAAI,KAAK,aAAa;AAAA,YACtB,iBAAiB,OAAO,OAAO,CAAC,GAAG,EAAE,iBAAmC,GAAG,EAAE,aAAa,CAAC,CAAC,wBAAwB,KAAK,YAAY,CAAC;AAAA,UAC1I,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,MACA,SAAS,QAAQ,MAAM;AACnB,aAAK,eAAe,CAAC,CAAC,KAAK,gBAAgB;AAC3C,cAAM,SAAS,QAAQ,IAAI;AAAA,MAC/B;AAAA,IACJ;AACA,QAAM,2BAAN,MAA+B;AAAA,MAC3B,YAAY,SAAS,kBAAkB;AACnC,aAAK,UAAU;AACf,aAAK,mBAAmB;AACxB,aAAK,YAAY,oBAAI,IAAI;AAAA,MAC7B;AAAA,MACA,IAAI,WAAW;AACX,eAAO,iCAAiC,kCAAkC;AAAA,MAC9E;AAAA,MACA,uBAAuB,cAAc;AACjC,eAAO,OAAO,cAAc,WAAW,GAAG,uBAAuB,EAAE,sBAAsB;AAAA,MAC7F;AAAA,MACA,WAAW,eAAe,mBAAmB;AAAA,MAC7C;AAAA,MACA,SAAS,SAAS,MAAM;AACpB,YAAI,CAAC,MAAM,QAAQ,KAAK,gBAAgB,QAAQ,GAAG;AAC/C;AAAA,QACJ;AACA,YAAI,eAAe,CAAC;AACpB,iBAAS,WAAW,KAAK,gBAAgB,UAAU;AAC/C,cAAI,CAACR,IAAG,OAAO,QAAQ,WAAW,GAAG;AACjC;AAAA,UACJ;AACA,cAAI,cAAc,MAAM,cAAc,MAAM,cAAc;AAC1D,cAAI,QAAQ,SAAS,UAAU,QAAQ,SAAS,MAAM;AAClD,2BAAe,QAAQ,OAAO,iCAAiC,UAAU,YAAY;AACrF,2BAAe,QAAQ,OAAO,iCAAiC,UAAU,WAAW;AACpF,2BAAe,QAAQ,OAAO,iCAAiC,UAAU,WAAW;AAAA,UACxF;AACA,cAAI,oBAAoB,SAAS,UAAU,wBAAwB,QAAQ,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC,WAAW;AAChI,eAAK,cAAc,mBAAmB,aAAa,aAAa,WAAW;AAC3E,uBAAa,KAAK,iBAAiB;AAAA,QACvC;AACA,aAAK,UAAU,IAAI,KAAK,IAAI,YAAY;AAAA,MAC5C;AAAA,MACA,YAAY,IAAI,oBAAoB;AAChC,YAAI,eAAe,CAAC;AACpB,iBAAS,qBAAqB,oBAAoB;AAC9C,eAAK,cAAc,mBAAmB,MAAM,MAAM,MAAM,YAAY;AAAA,QACxE;AACA,aAAK,UAAU,IAAI,IAAI,YAAY;AAAA,MACvC;AAAA,MACA,cAAc,mBAAmB,aAAa,aAAa,aAAa,WAAW;AAC/E,YAAI,aAAa;AACb,4BAAkB,YAAY,CAAC,aAAa,KAAK,iBAAiB;AAAA,YAC9D,KAAK,KAAK,QAAQ,uBAAuB,MAAM,QAAQ;AAAA,YACvD,MAAM,iCAAiC,eAAe;AAAA,UAC1D,CAAC,GAAG,MAAM,SAAS;AAAA,QACvB;AACA,YAAI,aAAa;AACb,4BAAkB,YAAY,CAAC,aAAa,KAAK,iBAAiB;AAAA,YAC9D,KAAK,KAAK,QAAQ,uBAAuB,MAAM,QAAQ;AAAA,YACvD,MAAM,iCAAiC,eAAe;AAAA,UAC1D,CAAC,GAAG,MAAM,SAAS;AAAA,QACvB;AACA,YAAI,aAAa;AACb,4BAAkB,YAAY,CAAC,aAAa,KAAK,iBAAiB;AAAA,YAC9D,KAAK,KAAK,QAAQ,uBAAuB,MAAM,QAAQ;AAAA,YACvD,MAAM,iCAAiC,eAAe;AAAA,UAC1D,CAAC,GAAG,MAAM,SAAS;AAAA,QACvB;AAAA,MACJ;AAAA,MACA,WAAW,IAAI;AACX,YAAI,eAAe,KAAK,UAAU,IAAI,EAAE;AACxC,YAAI,cAAc;AACd,mBAAS,cAAc,cAAc;AACjC,uBAAW,QAAQ;AAAA,UACvB;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,UAAU;AACN,aAAK,UAAU,QAAQ,CAAC,iBAAiB;AACrC,mBAAS,cAAc,cAAc;AACjC,uBAAW,QAAQ;AAAA,UACvB;AAAA,QACJ,CAAC;AACD,aAAK,UAAU,MAAM;AAAA,MACzB;AAAA,IACJ;AACA,QAAM,sBAAN,MAA0B;AAAA,MACtB,YAAY,SAAS,UAAU;AAC3B,aAAK,UAAU;AACf,aAAK,WAAW;AAChB,aAAK,aAAa,oBAAI,IAAI;AAAA,MAC9B;AAAA,MACA,IAAI,WAAW;AACX,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,SAAS,SAAS,MAAM;AACpB,YAAI,QAAQ,WAAW,KAAK,SAAS,QAAQ;AACzC,gBAAM,IAAI,MAAM,+CAA+C,QAAQ,8BAA8B,KAAK,SAAS,QAAQ;AAAA,QAC/H;AACA,YAAI,CAAC,KAAK,gBAAgB,kBAAkB;AACxC;AAAA,QACJ;AACA,YAAI,WAAW,KAAK,yBAAyB,KAAK,eAAe;AACjE,YAAI,UAAU;AACV,eAAK,WAAW,IAAI,KAAK,IAAI,QAAQ;AAAA,QACzC;AAAA,MACJ;AAAA,MACA,WAAW,IAAI;AACX,YAAI,WAAW,KAAK,WAAW,IAAI,EAAE;AACrC,YAAI,UAAU;AACV,mBAAS,QAAQ;AAAA,QACrB;AAAA,MACJ;AAAA,MACA,UAAU;AACN,aAAK,WAAW,QAAQ,CAAC,UAAU;AAC/B,gBAAM,QAAQ;AAAA,QAClB,CAAC;AACD,aAAK,WAAW,MAAM;AAAA,MAC1B;AAAA,IACJ;AACA,YAAQ,sBAAsB;AAC9B,QAAM,mBAAN,MAAuB;AAAA,MACnB,YAAY,SAAS,UAAU;AAC3B,aAAK,UAAU;AACf,aAAK,WAAW;AAChB,aAAK,aAAa,oBAAI,IAAI;AAAA,MAC9B;AAAA,MACA,IAAI,WAAW;AACX,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,SAAS,SAAS,MAAM;AACpB,YAAI,QAAQ,WAAW,KAAK,SAAS,QAAQ;AACzC,gBAAM,IAAI,MAAM,8CAA8C,QAAQ,8BAA8B,KAAK,SAAS,QAAQ;AAAA,QAC9H;AACA,YAAI,WAAW,KAAK,yBAAyB,KAAK,eAAe;AACjE,YAAI,UAAU;AACV,eAAK,WAAW,IAAI,KAAK,IAAI,QAAQ;AAAA,QACzC;AAAA,MACJ;AAAA,MACA,WAAW,IAAI;AACX,YAAI,WAAW,KAAK,WAAW,IAAI,EAAE;AACrC,YAAI,UAAU;AACV,mBAAS,QAAQ;AAAA,QACrB;AAAA,MACJ;AAAA,MACA,UAAU;AACN,aAAK,WAAW,QAAQ,CAAC,UAAU;AAC/B,gBAAM,QAAQ;AAAA,QAClB,CAAC;AACD,aAAK,WAAW,MAAM;AAAA,MAC1B;AAAA,IACJ;AACA,QAAM,wBAAN,cAAoC,oBAAoB;AAAA,MACpD,YAAYQ,SAAQ;AAChB,cAAMA,SAAQ,iCAAiC,kBAAkB,IAAI;AAAA,MACzE;AAAA,MACA,uBAAuB,aAAa;AAChC,YAAI,aAAa,OAAO,OAAO,aAAa,cAAc,GAAG,YAAY;AACzE,mBAAW,sBAAsB;AACjC,mBAAW,iBAAiB;AAC5B,mBAAW,iBAAiB;AAAA,UACxB,gBAAgB;AAAA,UAChB,yBAAyB;AAAA,UACzB,qBAAqB,CAAC,iCAAiC,WAAW,UAAU,iCAAiC,WAAW,SAAS;AAAA,UACjI,mBAAmB;AAAA,UACnB,kBAAkB;AAAA,QACtB;AACA,mBAAW,qBAAqB,EAAE,UAAU,6BAA6B;AAAA,MAC7E;AAAA,MACA,WAAW,cAAc,kBAAkB;AACvC,YAAI,CAAC,aAAa,sBAAsB,CAAC,kBAAkB;AACvD;AAAA,QACJ;AACA,aAAK,SAAS,KAAK,UAAU;AAAA,UACzB,IAAI,KAAK,aAAa;AAAA,UACtB,iBAAiB,OAAO,OAAO,CAAC,GAAG,EAAE,iBAAmC,GAAG,aAAa,kBAAkB;AAAA,QAC9G,CAAC;AAAA,MACL;AAAA,MACA,yBAAyB,SAAS;AAC9B,YAAI,oBAAoB,QAAQ,qBAAqB,CAAC;AACtD,YAAIA,UAAS,KAAK;AAClB,YAAI,yBAAyB,CAACG,WAAU,UAAU,SAAS,UAAU;AACjE,iBAAOH,QAAO,YAAY,iCAAiC,kBAAkB,MAAMA,QAAO,uBAAuB,mBAAmBG,WAAU,UAAU,OAAO,GAAG,KAAK,EAAE,KAAKH,QAAO,uBAAuB,oBAAoB,CAAC,UAAU;AACvO,YAAAA,QAAO,iBAAiB,iCAAiC,kBAAkB,MAAM,KAAK;AACtF,mBAAO,QAAQ,QAAQ,CAAC,CAAC;AAAA,UAC7B,CAAC;AAAA,QACL;AACA,YAAI,wBAAwB,CAAC,MAAM,UAAU;AACzC,iBAAOA,QAAO,YAAY,iCAAiC,yBAAyB,MAAMA,QAAO,uBAAuB,iBAAiB,IAAI,GAAG,KAAK,EAAE,KAAKA,QAAO,uBAAuB,kBAAkB,CAAC,UAAU;AACnN,YAAAA,QAAO,iBAAiB,iCAAiC,yBAAyB,MAAM,KAAK;AAC7F,mBAAO,QAAQ,QAAQ,IAAI;AAAA,UAC/B,CAAC;AAAA,QACL;AACA,YAAI,aAAa,KAAK,QAAQ,cAAc;AAC5C,eAAO,SAAS,UAAU,+BAA+B,QAAQ,kBAAkB;AAAA,UAC/E,wBAAwB,CAACG,WAAU,UAAU,OAAO,YAAY;AAC5D,mBAAO,WAAW,wBACZ,WAAW,sBAAsBA,WAAU,UAAU,SAAS,OAAO,sBAAsB,IAC3F,uBAAuBA,WAAU,UAAU,SAAS,KAAK;AAAA,UACnE;AAAA,UACA,uBAAuB,QAAQ,kBACzB,CAAC,MAAM,UAAU;AACf,mBAAO,WAAW,wBACZ,WAAW,sBAAsB,MAAM,OAAO,qBAAqB,IACnE,sBAAsB,MAAM,KAAK;AAAA,UAC3C,IACE;AAAA,QACV,GAAG,GAAG,iBAAiB;AAAA,MAC3B;AAAA,IACJ;AACA,QAAM,eAAN,cAA2B,oBAAoB;AAAA,MAC3C,YAAYH,SAAQ;AAChB,cAAMA,SAAQ,iCAAiC,aAAa,IAAI;AAAA,MACpE;AAAA,MACA,uBAAuB,aAAa;AAChC,cAAM,kBAAmB,OAAO,OAAO,aAAa,cAAc,GAAG,OAAO;AAC5E,wBAAgB,sBAAsB;AACtC,wBAAgB,gBAAgB,CAAC,iCAAiC,WAAW,UAAU,iCAAiC,WAAW,SAAS;AAAA,MAChJ;AAAA,MACA,WAAW,cAAc,kBAAkB;AACvC,YAAI,CAAC,aAAa,iBAAiB,CAAC,kBAAkB;AAClD;AAAA,QACJ;AACA,aAAK,SAAS,KAAK,UAAU;AAAA,UACzB,IAAI,KAAK,aAAa;AAAA,UACtB,iBAAiB,OAAO,OAAO,CAAC,GAAG,EAAE,iBAAmC,CAAC;AAAA,QAC7E,CAAC;AAAA,MACL;AAAA,MACA,yBAAyB,SAAS;AAC9B,YAAIA,UAAS,KAAK;AAClB,YAAI,eAAe,CAACG,WAAU,UAAU,UAAU;AAC9C,iBAAOH,QAAO,YAAY,iCAAiC,aAAa,MAAMA,QAAO,uBAAuB,6BAA6BG,WAAU,QAAQ,GAAG,KAAK,EAAE,KAAKH,QAAO,uBAAuB,SAAS,CAAC,UAAU;AACxN,YAAAA,QAAO,iBAAiB,iCAAiC,aAAa,MAAM,KAAK;AACjF,mBAAO,QAAQ,QAAQ,IAAI;AAAA,UAC/B,CAAC;AAAA,QACL;AACA,YAAI,aAAaA,QAAO,cAAc;AACtC,eAAO,SAAS,UAAU,sBAAsB,QAAQ,kBAAkB;AAAA,UACtE,cAAc,CAACG,WAAU,UAAU,UAAU;AACzC,mBAAO,WAAW,eACZ,WAAW,aAAaA,WAAU,UAAU,OAAO,YAAY,IAC/D,aAAaA,WAAU,UAAU,KAAK;AAAA,UAChD;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,IACJ;AACA,QAAM,uBAAN,cAAmC,oBAAoB;AAAA,MACnD,YAAYH,SAAQ;AAChB,cAAMA,SAAQ,iCAAiC,qBAAqB,IAAI;AAAA,MAC5E;AAAA,MACA,uBAAuB,aAAa;AAChC,YAAI,SAAS,OAAO,OAAO,aAAa,cAAc,GAAG,eAAe;AACxE,eAAO,sBAAsB;AAC7B,eAAO,uBAAuB,EAAE,qBAAqB,CAAC,iCAAiC,WAAW,UAAU,iCAAiC,WAAW,SAAS,EAAE;AACnK,eAAO,qBAAqB,uBAAuB,EAAE,oBAAoB,KAAK;AAAA,MAClF;AAAA,MACA,WAAW,cAAc,kBAAkB;AACvC,YAAI,CAAC,aAAa,yBAAyB,CAAC,kBAAkB;AAC1D;AAAA,QACJ;AACA,aAAK,SAAS,KAAK,UAAU;AAAA,UACzB,IAAI,KAAK,aAAa;AAAA,UACtB,iBAAiB,OAAO,OAAO,CAAC,GAAG,EAAE,iBAAmC,GAAG,aAAa,qBAAqB;AAAA,QACjH,CAAC;AAAA,MACL;AAAA,MACA,yBAAyB,SAAS;AAC9B,YAAIA,UAAS,KAAK;AAClB,YAAI,wBAAwB,CAACG,WAAU,UAAU,UAAU;AACvD,iBAAOH,QAAO,YAAY,iCAAiC,qBAAqB,MAAMA,QAAO,uBAAuB,6BAA6BG,WAAU,QAAQ,GAAG,KAAK,EAAE,KAAKH,QAAO,uBAAuB,iBAAiB,CAAC,UAAU;AACxO,YAAAA,QAAO,iBAAiB,iCAAiC,qBAAqB,MAAM,KAAK;AACzF,mBAAO,QAAQ,QAAQ,IAAI;AAAA,UAC/B,CAAC;AAAA,QACL;AACA,YAAI,aAAaA,QAAO,cAAc;AACtC,YAAI,oBAAoB,QAAQ,qBAAqB,CAAC;AACtD,eAAO,SAAS,UAAU,8BAA8B,QAAQ,kBAAkB;AAAA,UAC9E,sBAAsB,CAACG,WAAU,UAAU,UAAU;AACjD,mBAAO,WAAW,uBACZ,WAAW,qBAAqBA,WAAU,UAAU,OAAO,qBAAqB,IAChF,sBAAsBA,WAAU,UAAU,KAAK;AAAA,UACzD;AAAA,QACJ,GAAG,GAAG,iBAAiB;AAAA,MAC3B;AAAA,IACJ;AACA,QAAM,oBAAN,cAAgC,oBAAoB;AAAA,MAChD,YAAYH,SAAQ;AAChB,cAAMA,SAAQ,iCAAiC,kBAAkB,IAAI;AAAA,MACzE;AAAA,MACA,uBAAuB,aAAa;AAChC,YAAI,oBAAoB,OAAO,OAAO,aAAa,cAAc,GAAG,YAAY;AAChF,0BAAkB,sBAAsB;AACxC,0BAAkB,cAAc;AAAA,MACpC;AAAA,MACA,WAAW,cAAc,kBAAkB;AACvC,YAAI,CAAC,aAAa,sBAAsB,CAAC,kBAAkB;AACvD;AAAA,QACJ;AACA,aAAK,SAAS,KAAK,UAAU;AAAA,UACzB,IAAI,KAAK,aAAa;AAAA,UACtB,iBAAiB,OAAO,OAAO,CAAC,GAAG,EAAE,iBAAmC,CAAC;AAAA,QAC7E,CAAC;AAAA,MACL;AAAA,MACA,yBAAyB,SAAS;AAC9B,YAAIA,UAAS,KAAK;AAClB,YAAI,oBAAoB,CAACG,WAAU,UAAU,UAAU;AACnD,iBAAOH,QAAO,YAAY,iCAAiC,kBAAkB,MAAMA,QAAO,uBAAuB,6BAA6BG,WAAU,QAAQ,GAAG,KAAK,EAAE,KAAKH,QAAO,uBAAuB,oBAAoB,CAAC,UAAU;AACxO,YAAAA,QAAO,iBAAiB,iCAAiC,kBAAkB,MAAM,KAAK;AACtF,mBAAO,QAAQ,QAAQ,IAAI;AAAA,UAC/B,CAAC;AAAA,QACL;AACA,YAAI,aAAaA,QAAO,cAAc;AACtC,eAAO,SAAS,UAAU,2BAA2B,QAAQ,kBAAkB;AAAA,UAC3E,mBAAmB,CAACG,WAAU,UAAU,UAAU;AAC9C,mBAAO,WAAW,oBACZ,WAAW,kBAAkBA,WAAU,UAAU,OAAO,iBAAiB,IACzE,kBAAkBA,WAAU,UAAU,KAAK;AAAA,UACrD;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,IACJ;AACA,QAAM,oBAAN,cAAgC,oBAAoB;AAAA,MAChD,YAAYH,SAAQ;AAChB,cAAMA,SAAQ,iCAAiC,kBAAkB,IAAI;AAAA,MACzE;AAAA,MACA,uBAAuB,aAAa;AAChC,eAAO,OAAO,aAAa,cAAc,GAAG,YAAY,EAAE,sBAAsB;AAAA,MACpF;AAAA,MACA,WAAW,cAAc,kBAAkB;AACvC,YAAI,CAAC,aAAa,sBAAsB,CAAC,kBAAkB;AACvD;AAAA,QACJ;AACA,aAAK,SAAS,KAAK,UAAU;AAAA,UACzB,IAAI,KAAK,aAAa;AAAA,UACtB,iBAAiB,OAAO,OAAO,CAAC,GAAG,EAAE,iBAAmC,CAAC;AAAA,QAC7E,CAAC;AAAA,MACL;AAAA,MACA,yBAAyB,SAAS;AAC9B,YAAIA,UAAS,KAAK;AAClB,YAAI,qBAAqB,CAACG,WAAU,UAAUC,UAAS,UAAU;AAC7D,iBAAOJ,QAAO,YAAY,iCAAiC,kBAAkB,MAAMA,QAAO,uBAAuB,kBAAkBG,WAAU,UAAUC,QAAO,GAAG,KAAK,EAAE,KAAKJ,QAAO,uBAAuB,cAAc,CAAC,UAAU;AAChO,YAAAA,QAAO,iBAAiB,iCAAiC,kBAAkB,MAAM,KAAK;AACtF,mBAAO,QAAQ,QAAQ,CAAC,CAAC;AAAA,UAC7B,CAAC;AAAA,QACL;AACA,YAAI,aAAaA,QAAO,cAAc;AACtC,eAAO,SAAS,UAAU,0BAA0B,QAAQ,kBAAkB;AAAA,UAC1E,mBAAmB,CAACG,WAAU,UAAUC,UAAS,UAAU;AACvD,mBAAO,WAAW,oBACZ,WAAW,kBAAkBD,WAAU,UAAUC,UAAS,OAAO,kBAAkB,IACnF,mBAAmBD,WAAU,UAAUC,UAAS,KAAK;AAAA,UAC/D;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,IACJ;AACA,QAAM,2BAAN,cAAuC,oBAAoB;AAAA,MACvD,YAAYJ,SAAQ;AAChB,cAAMA,SAAQ,iCAAiC,yBAAyB,IAAI;AAAA,MAChF;AAAA,MACA,uBAAuB,aAAa;AAChC,eAAO,OAAO,aAAa,cAAc,GAAG,mBAAmB,EAAE,sBAAsB;AAAA,MAC3F;AAAA,MACA,WAAW,cAAc,kBAAkB;AACvC,YAAI,CAAC,aAAa,6BAA6B,CAAC,kBAAkB;AAC9D;AAAA,QACJ;AACA,aAAK,SAAS,KAAK,UAAU;AAAA,UACzB,IAAI,KAAK,aAAa;AAAA,UACtB,iBAAiB,OAAO,OAAO,CAAC,GAAG,EAAE,iBAAmC,CAAC;AAAA,QAC7E,CAAC;AAAA,MACL;AAAA,MACA,yBAAyB,SAAS;AAC9B,YAAIA,UAAS,KAAK;AAClB,YAAI,4BAA4B,CAACG,WAAU,UAAU,UAAU;AAC3D,iBAAOH,QAAO,YAAY,iCAAiC,yBAAyB,MAAMA,QAAO,uBAAuB,6BAA6BG,WAAU,QAAQ,GAAG,KAAK,EAAE,KAAKH,QAAO,uBAAuB,sBAAsB,CAAC,UAAU;AACjP,YAAAA,QAAO,iBAAiB,iCAAiC,yBAAyB,MAAM,KAAK;AAC7F,mBAAO,QAAQ,QAAQ,CAAC,CAAC;AAAA,UAC7B,CAAC;AAAA,QACL;AACA,YAAI,aAAaA,QAAO,cAAc;AACtC,eAAO,SAAS,UAAU,kCAAkC,QAAQ,kBAAkB;AAAA,UAClF,2BAA2B,CAACG,WAAU,UAAU,UAAU;AACtD,mBAAO,WAAW,4BACZ,WAAW,0BAA0BA,WAAU,UAAU,OAAO,yBAAyB,IACzF,0BAA0BA,WAAU,UAAU,KAAK;AAAA,UAC7D;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,IACJ;AACA,QAAM,wBAAN,cAAoC,oBAAoB;AAAA,MACpD,YAAYH,SAAQ;AAChB,cAAMA,SAAQ,iCAAiC,sBAAsB,IAAI;AAAA,MAC7E;AAAA,MACA,uBAAuB,aAAa;AAChC,YAAI,qBAAqB,OAAO,OAAO,aAAa,cAAc,GAAG,gBAAgB;AACrF,2BAAmB,sBAAsB;AACzC,2BAAmB,aAAa;AAAA,UAC5B,UAAU;AAAA,QACd;AACA,2BAAmB,oCAAoC;AAAA,MAC3D;AAAA,MACA,WAAW,cAAc,kBAAkB;AACvC,YAAI,CAAC,aAAa,0BAA0B,CAAC,kBAAkB;AAC3D;AAAA,QACJ;AACA,aAAK,SAAS,KAAK,UAAU;AAAA,UACzB,IAAI,KAAK,aAAa;AAAA,UACtB,iBAAiB,OAAO,OAAO,CAAC,GAAG,EAAE,iBAAmC,CAAC;AAAA,QAC7E,CAAC;AAAA,MACL;AAAA,MACA,yBAAyB,SAAS;AAC9B,YAAIA,UAAS,KAAK;AAClB,YAAI,yBAAyB,CAACG,WAAU,UAAU;AAC9C,iBAAOH,QAAO,YAAY,iCAAiC,sBAAsB,MAAMA,QAAO,uBAAuB,uBAAuBG,SAAQ,GAAG,KAAK,EAAE,KAAK,CAAC,SAAS;AACzK,gBAAI,SAAS,MAAM;AACf,qBAAO;AAAA,YACX;AACA,gBAAI,KAAK,WAAW,GAAG;AACnB,qBAAO,CAAC;AAAA,YACZ,OACK;AACD,kBAAI,UAAU,KAAK;AACnB,kBAAI,iCAAiC,eAAe,GAAG,OAAO,GAAG;AAC7D,uBAAOH,QAAO,uBAAuB,kBAAkB,IAAI;AAAA,cAC/D,OACK;AACD,uBAAOA,QAAO,uBAAuB,qBAAqB,IAAI;AAAA,cAClE;AAAA,YACJ;AAAA,UACJ,GAAG,CAAC,UAAU;AACV,YAAAA,QAAO,iBAAiB,iCAAiC,sBAAsB,MAAM,KAAK;AAC1F,mBAAO,QAAQ,QAAQ,CAAC,CAAC;AAAA,UAC7B,CAAC;AAAA,QACL;AACA,YAAI,aAAaA,QAAO,cAAc;AACtC,eAAO,SAAS,UAAU,+BAA+B,QAAQ,kBAAkB;AAAA,UAC/E,wBAAwB,CAACG,WAAU,UAAU;AACzC,mBAAO,WAAW,yBACZ,WAAW,uBAAuBA,WAAU,OAAO,sBAAsB,IACzE,uBAAuBA,WAAU,KAAK;AAAA,UAChD;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,IACJ;AACA,QAAM,yBAAN,cAAqC,iBAAiB;AAAA,MAClD,YAAYH,SAAQ;AAChB,cAAMA,SAAQ,iCAAiC,uBAAuB,IAAI;AAAA,MAC9E;AAAA,MACA,uBAAuB,aAAa;AAChC,YAAI,qBAAqB,OAAO,OAAO,aAAa,WAAW,GAAG,QAAQ;AAC1E,2BAAmB,sBAAsB;AACzC,2BAAmB,aAAa;AAAA,UAC5B,UAAU;AAAA,QACd;AAAA,MACJ;AAAA,MACA,WAAW,cAAc;AACrB,YAAI,CAAC,aAAa,yBAAyB;AACvC;AAAA,QACJ;AACA,aAAK,SAAS,KAAK,UAAU;AAAA,UACzB,IAAI,KAAK,aAAa;AAAA,UACtB,iBAAiB;AAAA,QACrB,CAAC;AAAA,MACL;AAAA,MACA,yBAAyB,UAAU;AAC/B,YAAIA,UAAS,KAAK;AAClB,YAAI,0BAA0B,CAAC,OAAO,UAAU;AAC5C,iBAAOA,QAAO,YAAY,iCAAiC,uBAAuB,MAAM,EAAE,MAAM,GAAG,KAAK,EAAE,KAAKA,QAAO,uBAAuB,sBAAsB,CAAC,UAAU;AAC1K,YAAAA,QAAO,iBAAiB,iCAAiC,uBAAuB,MAAM,KAAK;AAC3F,mBAAO,QAAQ,QAAQ,CAAC,CAAC;AAAA,UAC7B,CAAC;AAAA,QACL;AACA,YAAI,aAAaA,QAAO,cAAc;AACtC,eAAO,SAAS,UAAU,gCAAgC;AAAA,UACtD,yBAAyB,CAAC,OAAO,UAAU;AACvC,mBAAO,WAAW,0BACZ,WAAW,wBAAwB,OAAO,OAAO,uBAAuB,IACxE,wBAAwB,OAAO,KAAK;AAAA,UAC9C;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,IACJ;AACA,QAAM,oBAAN,cAAgC,oBAAoB;AAAA,MAChD,YAAYA,SAAQ;AAChB,cAAMA,SAAQ,iCAAiC,kBAAkB,IAAI;AAAA,MACzE;AAAA,MACA,uBAAuB,aAAa;AAChC,cAAM,MAAM,OAAO,OAAO,aAAa,cAAc,GAAG,YAAY;AACpE,YAAI,sBAAsB;AAC1B,YAAI,2BAA2B;AAAA,UAC3B,gBAAgB;AAAA,YACZ,UAAU;AAAA,cACN;AAAA,cACA,iCAAiC,eAAe;AAAA,cAChD,iCAAiC,eAAe;AAAA,cAChD,iCAAiC,eAAe;AAAA,cAChD,iCAAiC,eAAe;AAAA,cAChD,iCAAiC,eAAe;AAAA,cAChD,iCAAiC,eAAe;AAAA,cAChD,iCAAiC,eAAe;AAAA,YACpD;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,WAAW,cAAc,kBAAkB;AACvC,YAAI,CAAC,aAAa,sBAAsB,CAAC,kBAAkB;AACvD;AAAA,QACJ;AACA,YAAI,kBAAkB;AACtB,YAAI,CAACR,IAAG,QAAQ,aAAa,kBAAkB,GAAG;AAC9C,4BAAkB,aAAa,mBAAmB;AAAA,QACtD;AACA,aAAK,SAAS,KAAK,UAAU;AAAA,UACzB,IAAI,KAAK,aAAa;AAAA,UACtB,iBAAiB,EAAE,kBAAoC,gBAAgB;AAAA,QAC3E,CAAC;AAAA,MACL;AAAA,MACA,yBAAyB,SAAS;AAC9B,YAAIQ,UAAS,KAAK;AAClB,YAAI,qBAAqB,CAACG,WAAU,OAAO,SAAS,UAAU;AAC1D,cAAI,SAAS;AAAA,YACT,cAAcH,QAAO,uBAAuB,yBAAyBG,SAAQ;AAAA,YAC7E,OAAOH,QAAO,uBAAuB,QAAQ,KAAK;AAAA,YAClD,SAASA,QAAO,uBAAuB,oBAAoB,OAAO;AAAA,UACtE;AACA,iBAAOA,QAAO,YAAY,iCAAiC,kBAAkB,MAAM,QAAQ,KAAK,EAAE,KAAK,CAAC,WAAW;AAC/G,gBAAI,WAAW,MAAM;AACjB,qBAAO;AAAA,YACX;AACA,gBAAI,SAAS,CAAC;AACd,qBAAS,QAAQ,QAAQ;AACrB,kBAAI,iCAAiC,QAAQ,GAAG,IAAI,GAAG;AACnD,uBAAO,KAAKA,QAAO,uBAAuB,UAAU,IAAI,CAAC;AAAA,cAC7D,OACK;AACD,uBAAO,KAAKA,QAAO,uBAAuB,aAAa,IAAI,CAAC;AAAA,cAChE;AACA;AAAA,YACJ;AACA,mBAAO;AAAA,UACX,GAAG,CAAC,UAAU;AACV,YAAAA,QAAO,iBAAiB,iCAAiC,kBAAkB,MAAM,KAAK;AACtF,mBAAO,QAAQ,QAAQ,CAAC,CAAC;AAAA,UAC7B,CAAC;AAAA,QACL;AACA,YAAI,aAAaA,QAAO,cAAc;AACtC,eAAO,SAAS,UAAU,4BAA4B,QAAQ,kBAAkB;AAAA,UAC5E,oBAAoB,CAACG,WAAU,OAAO,SAAS,UAAU;AACrD,mBAAO,WAAW,qBACZ,WAAW,mBAAmBA,WAAU,OAAO,SAAS,OAAO,kBAAkB,IACjF,mBAAmBA,WAAU,OAAO,SAAS,KAAK;AAAA,UAC5D;AAAA,QACJ,GAAG,QAAQ,kBACL,EAAE,yBAAyBH,QAAO,uBAAuB,kBAAkB,QAAQ,eAAe,EAAE,IACpG,MAAS;AAAA,MACnB;AAAA,IACJ;AACA,QAAM,kBAAN,cAA8B,oBAAoB;AAAA,MAC9C,YAAYA,SAAQ;AAChB,cAAMA,SAAQ,iCAAiC,gBAAgB,IAAI;AAAA,MACvE;AAAA,MACA,uBAAuB,aAAa;AAChC,eAAO,OAAO,aAAa,cAAc,GAAG,UAAU,EAAE,sBAAsB;AAAA,MAClF;AAAA,MACA,WAAW,cAAc,kBAAkB;AACvC,YAAI,CAAC,aAAa,oBAAoB,CAAC,kBAAkB;AACrD;AAAA,QACJ;AACA,aAAK,SAAS,KAAK,UAAU;AAAA,UACzB,IAAI,KAAK,aAAa;AAAA,UACtB,iBAAiB,OAAO,OAAO,CAAC,GAAG,EAAE,iBAAmC,GAAG,aAAa,gBAAgB;AAAA,QAC5G,CAAC;AAAA,MACL;AAAA,MACA,yBAAyB,SAAS;AAC9B,YAAIA,UAAS,KAAK;AAClB,YAAI,oBAAoB,CAACG,WAAU,UAAU;AACzC,iBAAOH,QAAO,YAAY,iCAAiC,gBAAgB,MAAMA,QAAO,uBAAuB,iBAAiBG,SAAQ,GAAG,KAAK,EAAE,KAAKH,QAAO,uBAAuB,cAAc,CAAC,UAAU;AAC1M,YAAAA,QAAO,iBAAiB,iCAAiC,gBAAgB,MAAM,KAAK;AACpF,mBAAO,QAAQ,QAAQ,CAAC,CAAC;AAAA,UAC7B,CAAC;AAAA,QACL;AACA,YAAI,kBAAkB,CAAC,UAAU,UAAU;AACvC,iBAAOA,QAAO,YAAY,iCAAiC,uBAAuB,MAAMA,QAAO,uBAAuB,WAAW,QAAQ,GAAG,KAAK,EAAE,KAAKA,QAAO,uBAAuB,YAAY,CAAC,UAAU;AACzM,YAAAA,QAAO,iBAAiB,iCAAiC,uBAAuB,MAAM,KAAK;AAC3F,mBAAO;AAAA,UACX,CAAC;AAAA,QACL;AACA,YAAI,aAAaA,QAAO,cAAc;AACtC,eAAO,SAAS,UAAU,yBAAyB,QAAQ,kBAAkB;AAAA,UACzE,mBAAmB,CAACG,WAAU,UAAU;AACpC,mBAAO,WAAW,oBACZ,WAAW,kBAAkBA,WAAU,OAAO,iBAAiB,IAC/D,kBAAkBA,WAAU,KAAK;AAAA,UAC3C;AAAA,UACA,iBAAkB,QAAQ,kBACpB,CAAC,UAAU,UAAU;AACnB,mBAAO,WAAW,kBACZ,WAAW,gBAAgB,UAAU,OAAO,eAAe,IAC3D,gBAAgB,UAAU,KAAK;AAAA,UACzC,IACE;AAAA,QACV,CAAC;AAAA,MACL;AAAA,IACJ;AACA,QAAM,4BAAN,cAAwC,oBAAoB;AAAA,MACxD,YAAYH,SAAQ;AAChB,cAAMA,SAAQ,iCAAiC,0BAA0B,IAAI;AAAA,MACjF;AAAA,MACA,uBAAuB,aAAa;AAChC,eAAO,OAAO,aAAa,cAAc,GAAG,YAAY,EAAE,sBAAsB;AAAA,MACpF;AAAA,MACA,WAAW,cAAc,kBAAkB;AACvC,YAAI,CAAC,aAAa,8BAA8B,CAAC,kBAAkB;AAC/D;AAAA,QACJ;AACA,aAAK,SAAS,KAAK,UAAU;AAAA,UACzB,IAAI,KAAK,aAAa;AAAA,UACtB,iBAAiB,OAAO,OAAO,CAAC,GAAG,EAAE,iBAAmC,CAAC;AAAA,QAC7E,CAAC;AAAA,MACL;AAAA,MACA,yBAAyB,SAAS;AAC9B,YAAIA,UAAS,KAAK;AAClB,YAAI,iCAAiC,CAACG,WAAUC,UAAS,UAAU;AAC/D,cAAI,SAAS;AAAA,YACT,cAAcJ,QAAO,uBAAuB,yBAAyBG,SAAQ;AAAA,YAC7E,SAASH,QAAO,uBAAuB,oBAAoBI,QAAO;AAAA,UACtE;AACA,iBAAOJ,QAAO,YAAY,iCAAiC,0BAA0B,MAAM,QAAQ,KAAK,EAAE,KAAKA,QAAO,uBAAuB,aAAa,CAAC,UAAU;AACjK,YAAAA,QAAO,iBAAiB,iCAAiC,0BAA0B,MAAM,KAAK;AAC9F,mBAAO,QAAQ,QAAQ,CAAC,CAAC;AAAA,UAC7B,CAAC;AAAA,QACL;AACA,YAAI,aAAaA,QAAO,cAAc;AACtC,eAAO,SAAS,UAAU,uCAAuC,QAAQ,kBAAkB;AAAA,UACvF,gCAAgC,CAACG,WAAUC,UAAS,UAAU;AAC1D,mBAAO,WAAW,iCACZ,WAAW,+BAA+BD,WAAUC,UAAS,OAAO,8BAA8B,IAClG,+BAA+BD,WAAUC,UAAS,KAAK;AAAA,UACjE;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,IACJ;AACA,QAAM,iCAAN,cAA6C,oBAAoB;AAAA,MAC7D,YAAYJ,SAAQ;AAChB,cAAMA,SAAQ,iCAAiC,+BAA+B,IAAI;AAAA,MACtF;AAAA,MACA,uBAAuB,aAAa;AAChC,eAAO,OAAO,aAAa,cAAc,GAAG,iBAAiB,EAAE,sBAAsB;AAAA,MACzF;AAAA,MACA,WAAW,cAAc,kBAAkB;AACvC,YAAI,CAAC,aAAa,mCAAmC,CAAC,kBAAkB;AACpE;AAAA,QACJ;AACA,aAAK,SAAS,KAAK,UAAU;AAAA,UACzB,IAAI,KAAK,aAAa;AAAA,UACtB,iBAAiB,OAAO,OAAO,CAAC,GAAG,EAAE,iBAAmC,CAAC;AAAA,QAC7E,CAAC;AAAA,MACL;AAAA,MACA,yBAAyB,SAAS;AAC9B,YAAIA,UAAS,KAAK;AAClB,YAAI,sCAAsC,CAACG,WAAU,OAAOC,UAAS,UAAU;AAC3E,cAAI,SAAS;AAAA,YACT,cAAcJ,QAAO,uBAAuB,yBAAyBG,SAAQ;AAAA,YAC7E,OAAOH,QAAO,uBAAuB,QAAQ,KAAK;AAAA,YAClD,SAASA,QAAO,uBAAuB,oBAAoBI,QAAO;AAAA,UACtE;AACA,iBAAOJ,QAAO,YAAY,iCAAiC,+BAA+B,MAAM,QAAQ,KAAK,EAAE,KAAKA,QAAO,uBAAuB,aAAa,CAAC,UAAU;AACtK,YAAAA,QAAO,iBAAiB,iCAAiC,+BAA+B,MAAM,KAAK;AACnG,mBAAO,QAAQ,QAAQ,CAAC,CAAC;AAAA,UAC7B,CAAC;AAAA,QACL;AACA,YAAI,aAAaA,QAAO,cAAc;AACtC,eAAO,SAAS,UAAU,4CAA4C,QAAQ,kBAAkB;AAAA,UAC5F,qCAAqC,CAACG,WAAU,OAAOC,UAAS,UAAU;AACtE,mBAAO,WAAW,sCACZ,WAAW,oCAAoCD,WAAU,OAAOC,UAAS,OAAO,mCAAmC,IACnH,oCAAoCD,WAAU,OAAOC,UAAS,KAAK;AAAA,UAC7E;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,IACJ;AACA,QAAM,kCAAN,cAA8C,oBAAoB;AAAA,MAC9D,YAAYJ,SAAQ;AAChB,cAAMA,SAAQ,iCAAiC,gCAAgC,IAAI;AAAA,MACvF;AAAA,MACA,uBAAuB,aAAa;AAChC,eAAO,OAAO,aAAa,cAAc,GAAG,kBAAkB,EAAE,sBAAsB;AAAA,MAC1F;AAAA,MACA,WAAW,cAAc,kBAAkB;AACvC,YAAI,CAAC,aAAa,oCAAoC,CAAC,kBAAkB;AACrE;AAAA,QACJ;AACA,aAAK,SAAS,KAAK,UAAU;AAAA,UACzB,IAAI,KAAK,aAAa;AAAA,UACtB,iBAAiB,OAAO,OAAO,CAAC,GAAG,EAAE,iBAAmC,GAAG,aAAa,gCAAgC;AAAA,QAC5H,CAAC;AAAA,MACL;AAAA,MACA,yBAAyB,SAAS;AAC9B,YAAIA,UAAS,KAAK;AAClB,YAAI,uBAAuB,QAAQ,wBAAwB,CAAC;AAC5D,YAAI,+BAA+B,CAACG,WAAU,UAAU,IAAIC,UAAS,UAAU;AAC3E,cAAI,SAAS;AAAA,YACT,cAAcJ,QAAO,uBAAuB,yBAAyBG,SAAQ;AAAA,YAC7E,UAAUH,QAAO,uBAAuB,WAAW,QAAQ;AAAA,YAC3D;AAAA,YACA,SAASA,QAAO,uBAAuB,oBAAoBI,QAAO;AAAA,UACtE;AACA,iBAAOJ,QAAO,YAAY,iCAAiC,gCAAgC,MAAM,QAAQ,KAAK,EAAE,KAAKA,QAAO,uBAAuB,aAAa,CAAC,UAAU;AACvK,YAAAA,QAAO,iBAAiB,iCAAiC,gCAAgC,MAAM,KAAK;AACpG,mBAAO,QAAQ,QAAQ,CAAC,CAAC;AAAA,UAC7B,CAAC;AAAA,QACL;AACA,YAAI,aAAaA,QAAO,cAAc;AACtC,eAAO,SAAS,UAAU,qCAAqC,QAAQ,kBAAkB;AAAA,UACrF,8BAA8B,CAACG,WAAU,UAAU,IAAIC,UAAS,UAAU;AACtE,mBAAO,WAAW,+BACZ,WAAW,6BAA6BD,WAAU,UAAU,IAAIC,UAAS,OAAO,4BAA4B,IAC5G,6BAA6BD,WAAU,UAAU,IAAIC,UAAS,KAAK;AAAA,UAC7E;AAAA,QACJ,GAAG,QAAQ,uBAAuB,GAAG,oBAAoB;AAAA,MAC7D;AAAA,IACJ;AACA,QAAM,gBAAN,cAA4B,oBAAoB;AAAA,MAC5C,YAAYJ,SAAQ;AAChB,cAAMA,SAAQ,iCAAiC,cAAc,IAAI;AAAA,MACrE;AAAA,MACA,uBAAuB,aAAa;AAChC,YAAI,SAAS,OAAO,OAAO,aAAa,cAAc,GAAG,QAAQ;AACjE,eAAO,sBAAsB;AAC7B,eAAO,iBAAiB;AAAA,MAC5B;AAAA,MACA,WAAW,cAAc,kBAAkB;AACvC,YAAI,CAAC,aAAa,kBAAkB,CAAC,kBAAkB;AACnD;AAAA,QACJ;AACA,YAAI,UAAU,OAAO,OAAO,CAAC,GAAG,EAAE,iBAAmC,CAAC;AACtE,YAAIR,IAAG,QAAQ,aAAa,cAAc,GAAG;AACzC,kBAAQ,kBAAkB;AAAA,QAC9B,OACK;AACD,kBAAQ,kBAAkB,aAAa,eAAe;AAAA,QAC1D;AACA,aAAK,SAAS,KAAK,UAAU;AAAA,UACzB,IAAI,KAAK,aAAa;AAAA,UACtB,iBAAiB;AAAA,QACrB,CAAC;AAAA,MACL;AAAA,MACA,yBAAyB,SAAS;AAC9B,YAAIQ,UAAS,KAAK;AAClB,YAAI,qBAAqB,CAACG,WAAU,UAAU,SAAS,UAAU;AAC7D,cAAI,SAAS;AAAA,YACT,cAAcH,QAAO,uBAAuB,yBAAyBG,SAAQ;AAAA,YAC7E,UAAUH,QAAO,uBAAuB,WAAW,QAAQ;AAAA,YAC3D;AAAA,UACJ;AACA,iBAAOA,QAAO,YAAY,iCAAiC,cAAc,MAAM,QAAQ,KAAK,EAAE,KAAKA,QAAO,uBAAuB,iBAAiB,CAAC,UAAU;AACzJ,YAAAA,QAAO,iBAAiB,iCAAiC,cAAc,MAAM,KAAK;AAClF,mBAAO,QAAQ,OAAO,IAAI,MAAM,MAAM,OAAO,CAAC;AAAA,UAClD,CAAC;AAAA,QACL;AACA,YAAI,gBAAgB,CAACG,WAAU,UAAU,UAAU;AAC/C,cAAI,SAAS;AAAA,YACT,cAAcH,QAAO,uBAAuB,yBAAyBG,SAAQ;AAAA,YAC7E,UAAUH,QAAO,uBAAuB,WAAW,QAAQ;AAAA,UAC/D;AACA,iBAAOA,QAAO,YAAY,iCAAiC,qBAAqB,MAAM,QAAQ,KAAK,EAAE,KAAK,CAAC,WAAW;AAClH,gBAAI,iCAAiC,MAAM,GAAG,MAAM,GAAG;AACnD,qBAAOA,QAAO,uBAAuB,QAAQ,MAAM;AAAA,YACvD,WACS,UAAU,OAAO,OAAO;AAC7B,qBAAO;AAAA,gBACH,OAAOA,QAAO,uBAAuB,QAAQ,OAAO,KAAK;AAAA,gBACzD,aAAa,OAAO;AAAA,cACxB;AAAA,YACJ;AACA,mBAAO;AAAA,UACX,GAAG,CAAC,UAAU;AACV,YAAAA,QAAO,iBAAiB,iCAAiC,qBAAqB,MAAM,KAAK;AACzF,mBAAO,QAAQ,OAAO,IAAI,MAAM,MAAM,OAAO,CAAC;AAAA,UAClD,CAAC;AAAA,QACL;AACA,YAAI,aAAaA,QAAO,cAAc;AACtC,eAAO,SAAS,UAAU,uBAAuB,QAAQ,kBAAkB;AAAA,UACvE,oBAAoB,CAACG,WAAU,UAAU,SAAS,UAAU;AACxD,mBAAO,WAAW,qBACZ,WAAW,mBAAmBA,WAAU,UAAU,SAAS,OAAO,kBAAkB,IACpF,mBAAmBA,WAAU,UAAU,SAAS,KAAK;AAAA,UAC/D;AAAA,UACA,eAAe,QAAQ,kBACjB,CAACA,WAAU,UAAU,UAAU;AAC7B,mBAAO,WAAW,gBACZ,WAAW,cAAcA,WAAU,UAAU,OAAO,aAAa,IACjE,cAAcA,WAAU,UAAU,KAAK;AAAA,UACjD,IACE;AAAA,QACV,CAAC;AAAA,MACL;AAAA,IACJ;AACA,QAAM,sBAAN,cAAkC,oBAAoB;AAAA,MAClD,YAAYH,SAAQ;AAChB,cAAMA,SAAQ,iCAAiC,oBAAoB,IAAI;AAAA,MAC3E;AAAA,MACA,uBAAuB,aAAa;AAChC,eAAO,OAAO,aAAa,cAAc,GAAG,cAAc,EAAE,sBAAsB;AAAA,MACtF;AAAA,MACA,WAAW,cAAc,kBAAkB;AACvC,YAAI,CAAC,aAAa,wBAAwB,CAAC,kBAAkB;AACzD;AAAA,QACJ;AACA,aAAK,SAAS,KAAK,UAAU;AAAA,UACzB,IAAI,KAAK,aAAa;AAAA,UACtB,iBAAiB,OAAO,OAAO,CAAC,GAAG,EAAE,iBAAmC,GAAG,aAAa,oBAAoB;AAAA,QAChH,CAAC;AAAA,MACL;AAAA,MACA,yBAAyB,SAAS;AAC9B,YAAIA,UAAS,KAAK;AAClB,YAAI,uBAAuB,CAACG,WAAU,UAAU;AAC5C,iBAAOH,QAAO,YAAY,iCAAiC,oBAAoB,MAAMA,QAAO,uBAAuB,qBAAqBG,SAAQ,GAAG,KAAK,EAAE,KAAKH,QAAO,uBAAuB,iBAAiB,CAAC,UAAU;AACrN,YAAAA,QAAO,iBAAiB,iCAAiC,oBAAoB,MAAM,KAAK;AACxF,oBAAQ,QAAQ,IAAI,MAAM,MAAM,OAAO,CAAC;AAAA,UAC5C,CAAC;AAAA,QACL;AACA,YAAI,sBAAsB,CAAC,MAAM,UAAU;AACvC,iBAAOA,QAAO,YAAY,iCAAiC,2BAA2B,MAAMA,QAAO,uBAAuB,eAAe,IAAI,GAAG,KAAK,EAAE,KAAKA,QAAO,uBAAuB,gBAAgB,CAAC,UAAU;AACjN,YAAAA,QAAO,iBAAiB,iCAAiC,2BAA2B,MAAM,KAAK;AAC/F,oBAAQ,QAAQ,IAAI,MAAM,MAAM,OAAO,CAAC;AAAA,UAC5C,CAAC;AAAA,QACL;AACA,YAAI,aAAaA,QAAO,cAAc;AACtC,eAAO,SAAS,UAAU,6BAA6B,QAAQ,kBAAkB;AAAA,UAC7E,sBAAsB,CAACG,WAAU,UAAU;AACvC,mBAAO,WAAW,uBACZ,WAAW,qBAAqBA,WAAU,OAAO,oBAAoB,IACrE,qBAAqBA,WAAU,KAAK;AAAA,UAC9C;AAAA,UACA,qBAAqB,QAAQ,kBACvB,CAAC,MAAM,UAAU;AACf,mBAAO,WAAW,sBACZ,WAAW,oBAAoB,MAAM,OAAO,mBAAmB,IAC/D,oBAAoB,MAAM,KAAK;AAAA,UACzC,IACE;AAAA,QACV,CAAC;AAAA,MACL;AAAA,IACJ;AACA,QAAM,uBAAN,MAA2B;AAAA,MACvB,YAAY,SAAS;AACjB,aAAK,UAAU;AACf,aAAK,aAAa,oBAAI,IAAI;AAAA,MAC9B;AAAA,MACA,IAAI,WAAW;AACX,eAAO,iCAAiC,mCAAmC;AAAA,MAC/E;AAAA,MACA,uBAAuB,cAAc;AACjC,eAAO,OAAO,cAAc,WAAW,GAAG,wBAAwB,EAAE,sBAAsB;AAAA,MAC9F;AAAA,MACA,aAAa;AACT,YAAI,UAAU,KAAK,QAAQ,cAAc,YAAY;AACrD,YAAI,YAAY,QAAQ;AACpB,eAAK,SAAS,KAAK,UAAU;AAAA,YACzB,IAAI,KAAK,aAAa;AAAA,YACtB,iBAAiB;AAAA,cACb;AAAA,YACJ;AAAA,UACJ,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,MACA,SAAS,UAAU,MAAM;AACrB,YAAI,aAAa,SAAS,UAAU,yBAAyB,CAAC,UAAU;AACpE,eAAK,yBAAyB,KAAK,gBAAgB,SAAS,KAAK;AAAA,QACrE,CAAC;AACD,aAAK,WAAW,IAAI,KAAK,IAAI,UAAU;AACvC,YAAI,KAAK,gBAAgB,YAAY,QAAQ;AACzC,eAAK,yBAAyB,KAAK,gBAAgB,SAAS,MAAS;AAAA,QACzE;AAAA,MACJ;AAAA,MACA,WAAW,IAAI;AACX,YAAI,aAAa,KAAK,WAAW,IAAI,EAAE;AACvC,YAAI,YAAY;AACZ,eAAK,WAAW,OAAO,EAAE;AACzB,qBAAW,QAAQ;AAAA,QACvB;AAAA,MACJ;AAAA,MACA,UAAU;AACN,iBAAS,cAAc,KAAK,WAAW,OAAO,GAAG;AAC7C,qBAAW,QAAQ;AAAA,QACvB;AACA,aAAK,WAAW,MAAM;AAAA,MAC1B;AAAA,MACA,yBAAyB,sBAAsB,OAAO;AAClD,YAAI;AACJ,YAAIX,IAAG,OAAO,oBAAoB,GAAG;AACjC,qBAAW,CAAC,oBAAoB;AAAA,QACpC,OACK;AACD,qBAAW;AAAA,QACf;AACA,YAAI,aAAa,UAAU,UAAU,QAAQ;AACzC,cAAI,WAAW,SAAS,KAAK,CAAC,YAAY,MAAM,qBAAqB,OAAO,CAAC;AAC7E,cAAI,CAAC,UAAU;AACX;AAAA,UACJ;AAAA,QACJ;AACA,YAAI,yBAAyB,CAACa,cAAa;AACvC,cAAIA,cAAa,QAAQ;AACrB,iBAAK,QAAQ,iBAAiB,iCAAiC,mCAAmC,MAAM,EAAE,UAAU,KAAK,CAAC;AAC1H;AAAA,UACJ;AACA,eAAK,QAAQ,iBAAiB,iCAAiC,mCAAmC,MAAM,EAAE,UAAU,KAAK,2BAA2BA,SAAQ,EAAE,CAAC;AAAA,QACnK;AACA,YAAI,aAAa,KAAK,cAAc;AACpC,qBACM,WAAW,UAAU,sBAAsB,IAC3C,uBAAuB,QAAQ;AAAA,MACzC;AAAA,MACA,2BAA2B,MAAM;AAC7B,iBAAS,WAAW,QAAQC,QAAM;AAC9B,cAAI,UAAU;AACd,mBAAS,IAAI,GAAG,IAAIA,OAAK,SAAS,GAAG,KAAK;AACtC,gBAAI,MAAM,QAAQA,OAAK;AACvB,gBAAI,CAAC,KAAK;AACN,oBAAM,uBAAO,OAAO,IAAI;AACxB,sBAAQA,OAAK,MAAM;AAAA,YACvB;AACA,sBAAU;AAAA,UACd;AACA,iBAAO;AAAA,QACX;AACA,YAAI,WAAW,KAAK,QAAQ,cAAc,kBACpC,KAAK,QAAQ,cAAc,gBAAgB,MAC3C;AACN,YAAI,SAAS,uBAAO,OAAO,IAAI;AAC/B,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAClC,cAAI,MAAM,KAAK;AACf,cAAI,QAAQ,IAAI,QAAQ,GAAG;AAC3B,cAAI,SAAS;AACb,cAAI,SAAS,GAAG;AACZ,qBAAS,SAAS,UAAU,iBAAiB,IAAI,OAAO,GAAG,KAAK,GAAG,QAAQ,EAAE,IAAI,IAAI,OAAO,QAAQ,CAAC,CAAC;AAAA,UAC1G,OACK;AACD,qBAAS,SAAS,UAAU,iBAAiB,KAAK,QAAQ;AAAA,UAC9D;AACA,cAAI,QAAQ;AACR,gBAAIA,SAAO,KAAK,GAAG,MAAM,GAAG;AAC5B,uBAAW,QAAQA,MAAI,EAAEA,OAAKA,OAAK,SAAS,MAAM;AAAA,UACtD;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA,MACA,gBAAgB;AACZ,YAAI,aAAa,KAAK,QAAQ,cAAc;AAC5C,YAAI,WAAW,aAAa,WAAW,UAAU,wBAAwB;AACrE,iBAAO,WAAW,UAAU;AAAA,QAChC,OACK;AACD,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AACA,QAAM,wBAAN,MAA4B;AAAA,MACxB,YAAY,SAAS;AACjB,aAAK,UAAU;AACf,aAAK,YAAY,oBAAI,IAAI;AAAA,MAC7B;AAAA,MACA,IAAI,WAAW;AACX,eAAO,iCAAiC,sBAAsB;AAAA,MAClE;AAAA,MACA,uBAAuB,cAAc;AACjC,eAAO,OAAO,cAAc,WAAW,GAAG,gBAAgB,EAAE,sBAAsB;AAAA,MACtF;AAAA,MACA,WAAW,cAAc;AACrB,YAAI,CAAC,aAAa,wBAAwB;AACtC;AAAA,QACJ;AACA,aAAK,SAAS,KAAK,UAAU;AAAA,UACzB,IAAI,KAAK,aAAa;AAAA,UACtB,iBAAiB,OAAO,OAAO,CAAC,GAAG,aAAa,sBAAsB;AAAA,QAC1E,CAAC;AAAA,MACL;AAAA,MACA,SAAS,UAAU,MAAM;AACrB,YAAIN,UAAS,KAAK;AAClB,YAAI,KAAK,gBAAgB,UAAU;AAC/B,cAAI,eAAe,CAAC;AACpB,qBAAW,WAAW,KAAK,gBAAgB,UAAU;AACjD,yBAAa,KAAK,SAAS,SAAS,gBAAgB,SAAS,IAAI,SAAS;AACtE,kBAAI,SAAS;AAAA,gBACT;AAAA,gBACA,WAAW;AAAA,cACf;AACA,qBAAOA,QAAO,YAAY,iCAAiC,sBAAsB,MAAM,MAAM,EAAE,KAAK,QAAW,CAAC,UAAU;AACtH,gBAAAA,QAAO,iBAAiB,iCAAiC,sBAAsB,MAAM,KAAK;AAAA,cAC9F,CAAC;AAAA,YACL,CAAC,CAAC;AAAA,UACN;AACA,eAAK,UAAU,IAAI,KAAK,IAAI,YAAY;AAAA,QAC5C;AAAA,MACJ;AAAA,MACA,WAAW,IAAI;AACX,YAAI,eAAe,KAAK,UAAU,IAAI,EAAE;AACxC,YAAI,cAAc;AACd,uBAAa,QAAQ,gBAAc,WAAW,QAAQ,CAAC;AAAA,QAC3D;AAAA,MACJ;AAAA,MACA,UAAU;AACN,aAAK,UAAU,QAAQ,CAAC,UAAU;AAC9B,gBAAM,QAAQ,gBAAc,WAAW,QAAQ,CAAC;AAAA,QACpD,CAAC;AACD,aAAK,UAAU,MAAM;AAAA,MACzB;AAAA,IACJ;AACA,QAAI;AACJ,KAAC,SAAUO,oBAAmB;AAC1B,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,aAAa,iCAAiC,cAAc,GAAG,MAAM,MAAM,KAAK,iCAAiC,cAAc,GAAG,MAAM,MAAM;AAAA,MACzJ;AACA,MAAAA,mBAAkB,KAAK;AAAA,IAC3B,GAAG,oBAAoB,QAAQ,sBAAsB,QAAQ,oBAAoB,CAAC,EAAE;AACpF,QAAM,UAAN,MAAc;AAAA,MACV,YAAY,UAAU,SAAS;AAC3B,aAAK,WAAW;AAChB,aAAK,UAAU;AACf,aAAK,QAAQ;AAAA,MACjB;AAAA,MACA,IAAI,SAAS;AACT,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,UAAU;AACN,aAAK,QAAQ;AACb,aAAK,SAAS;AAAA,MAClB;AAAA,MACA,OAAO,OAAO;AACV,aAAK,QAAQ;AACb,aAAK,QAAQ,KAAK;AAAA,MACtB;AAAA,IACJ;AACA,QAAM,qBAAN,MAAyB;AAAA,MACrB,YAAY,IAAI,MAAM,eAAe;AACjC,aAAK,eAAe,iCAAiC,YAAY;AACjE,aAAK,YAAY,CAAC;AAClB,aAAK,kBAAkB,oBAAI,IAAI;AAC/B,aAAK,mBAAmB,oBAAI,IAAI;AAChC,aAAK,MAAM;AACX,aAAK,QAAQ;AACb,wBAAgB,iBAAiB,CAAC;AAClC,aAAK,iBAAiB;AAAA,UAClB,kBAAkB,cAAc,oBAAoB,CAAC;AAAA,UACrD,aAAa,cAAc,eAAe,CAAC;AAAA,UAC3C,0BAA0B,cAAc;AAAA,UACxC,mBAAmB,cAAc,qBAAqB,KAAK;AAAA,UAC3D,uBAAuB,cAAc,yBAAyB,sBAAsB;AAAA,UACpF,eAAe,cAAc,iBAAiB;AAAA,UAC9C,uBAAuB,cAAc;AAAA,UACrC,6BAA6B,cAAc;AAAA,UAC3C,cAAc,cAAc,gBAAgB,IAAI,oBAAoB,KAAK,KAAK;AAAA,UAC9E,YAAY,cAAc,cAAc,CAAC;AAAA,UACzC,eAAe,cAAc;AAAA,UAC7B,iBAAiB,cAAc;AAAA,QACnC;AACA,aAAK,eAAe,cAAc,KAAK,eAAe,eAAe,CAAC;AACtE,aAAK,QAAQ,YAAY;AACzB,aAAK,qBAAqB;AAC1B,aAAK,sBAAsB;AAC3B,aAAK,oBAAoB;AACzB,YAAI,cAAc,eAAe;AAC7B,eAAK,iBAAiB,cAAc;AACpC,eAAK,wBAAwB;AAAA,QACjC,OACK;AACD,eAAK,iBAAiB;AACtB,eAAK,wBAAwB;AAAA,QACjC;AACA,aAAK,aAAa;AAClB,aAAK,aAAa;AAClB,aAAK,eAAe;AACpB,aAAK,cAAc,CAAC;AACpB,aAAK,oBAAoB,IAAI,QAAQ,QAAQ,GAAG;AAChD,aAAK,WAAW,IAAI,QAAQ,CAAC,SAAS,WAAW;AAC7C,eAAK,oBAAoB,IAAI,QAAQ,SAAS,MAAM;AAAA,QACxD,CAAC;AACD,aAAK,UAAU;AACf,aAAK,oBAAoB,IAAI,iCAAiC,QAAQ;AACtE,aAAK,sBAAsB,IAAI,iCAAiC,QAAQ;AACxE,aAAK,UAAU;AAAA,UACX,KAAK,CAAC,qBAAqB,SAAS;AAChC,gBAAIf,IAAG,OAAO,mBAAmB,GAAG;AAChC,mBAAK,SAAS,qBAAqB,IAAI;AAAA,YAC3C,OACK;AACD,mBAAK,eAAe,mBAAmB;AAAA,YAC3C;AAAA,UACJ;AAAA,QACJ;AACA,aAAK,OAAO,IAAI,gBAAgB,cAAc,gBAAgB,cAAc,cAAc,gBAAgB,MAAS;AACnH,aAAK,OAAO,IAAI,gBAAgB,cAAc,gBAAgB,cAAc,cAAc,gBAAgB,MAAS;AACnH,aAAK,mBAAmB,oBAAI,IAAI;AAChC,aAAK,wBAAwB;AAAA,MACjC;AAAA,MACA,IAAI,QAAQ;AACR,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,IAAI,MAAM,OAAO;AACb,YAAI,WAAW,KAAK,eAAe;AACnC,aAAK,SAAS;AACd,YAAI,WAAW,KAAK,eAAe;AACnC,YAAI,aAAa,UAAU;AACvB,eAAK,oBAAoB,KAAK,EAAE,UAAU,SAAS,CAAC;AAAA,QACxD;AAAA,MACJ;AAAA,MACA,iBAAiB;AACb,YAAI,KAAK,UAAU,YAAY,SAAS;AACpC,iBAAO,MAAM;AAAA,QACjB,WACS,KAAK,UAAU,YAAY,UAAU;AAC1C,iBAAO,MAAM;AAAA,QACjB,OACK;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ;AAAA,MACA,IAAI,mBAAmB;AACnB,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,YAAY,SAAS,QAAQ;AACzB,YAAI,CAAC,KAAK,mBAAmB,GAAG;AAC5B,gBAAM,IAAI,MAAM,kCAAkC;AAAA,QACtD;AACA,aAAK,kBAAkB;AACvB,YAAI;AACA,iBAAO,KAAK,oBAAoB,YAAY,MAAM,GAAG,MAAM;AAAA,QAC/D,SACO,OAAP;AACI,eAAK,MAAM,mBAAmBA,IAAG,OAAO,IAAI,IAAI,OAAO,KAAK,kBAAkB,KAAK;AACnF,gBAAM;AAAA,QACV;AAAA,MACJ;AAAA,MACA,UAAU,MAAM,SAAS;AACrB,YAAI,CAAC,KAAK,mBAAmB,GAAG;AAC5B,gBAAM,IAAI,MAAM,kCAAkC;AAAA,QACtD;AACA,YAAI;AACA,eAAK,oBAAoB,UAAU,MAAM,OAAO;AAAA,QACpD,SACO,OAAP;AACI,eAAK,MAAM,+BAA+BA,IAAG,OAAO,IAAI,IAAI,OAAO,KAAK,kBAAkB,KAAK;AAC/F,gBAAM;AAAA,QACV;AAAA,MACJ;AAAA,MACA,iBAAiB,MAAM,QAAQ;AAC3B,YAAI,CAAC,KAAK,mBAAmB,GAAG;AAC5B,gBAAM,IAAI,MAAM,kCAAkC;AAAA,QACtD;AACA,aAAK,kBAAkB;AACvB,YAAI;AACA,eAAK,oBAAoB,iBAAiB,MAAM,MAAM;AAAA,QAC1D,SACO,OAAP;AACI,eAAK,MAAM,wBAAwBA,IAAG,OAAO,IAAI,IAAI,OAAO,KAAK,kBAAkB,KAAK;AACxF,gBAAM;AAAA,QACV;AAAA,MACJ;AAAA,MACA,eAAe,MAAM,SAAS;AAC1B,YAAI,CAAC,KAAK,mBAAmB,GAAG;AAC5B,gBAAM,IAAI,MAAM,kCAAkC;AAAA,QACtD;AACA,YAAI;AACA,eAAK,oBAAoB,eAAe,MAAM,OAAO;AAAA,QACzD,SACO,OAAP;AACI,eAAK,MAAM,oCAAoCA,IAAG,OAAO,IAAI,IAAI,OAAO,KAAK,kBAAkB,KAAK;AACpG,gBAAM;AAAA,QACV;AAAA,MACJ;AAAA,MACA,IAAI,gBAAgB;AAChB,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,IAAI,yBAAyB;AACzB,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,IAAI,yBAAyB;AACzB,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,IAAI,cAAc;AACd,eAAO,KAAK,kBAAkB;AAAA,MAClC;AAAA,MACA,IAAI,mBAAmB;AACnB,eAAO,KAAK,oBAAoB;AAAA,MACpC;AAAA,MACA,IAAI,gBAAgB;AAChB,YAAI,CAAC,KAAK,gBAAgB;AACtB,eAAK,iBAAiB,SAAS,OAAO,oBAAoB,KAAK,eAAe,oBAAoB,KAAK,eAAe,oBAAoB,KAAK,KAAK;AAAA,QACxJ;AACA,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,IAAI,cAAc;AACd,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,4BAA4B;AACxB,eAAO,IAAI,oBAAoB,KAAK,KAAK;AAAA,MAC7C;AAAA,MACA,IAAI,MAAM,OAAO;AACb,aAAK,SAAS;AACd,aAAK,QAAQ,EAAE,KAAK,MAAM;AACtB,eAAK,kBAAkB,EAAE,KAAK,CAAC,eAAe;AAC1C,uBAAW,MAAM,KAAK,QAAQ,KAAK,SAAS;AAAA,cACxC,kBAAkB;AAAA,cAClB,aAAa,KAAK;AAAA,YACtB,CAAC;AAAA,UACL,CAAC;AAAA,QACL,GAAG,MAAM;AAAA,QACT,CAAC;AAAA,MACL;AAAA,MACA,YAAY,MAAM;AACd,YAAI,gBAAgB,iCAAiC,eAAe;AAChE,gBAAM,gBAAgB;AACtB,iBAAO,cAAc,cAAc;AAAA,UAAoB,cAAc,QAAQ,cAAc,OAAO,OAAO,cAAc,KAAK,SAAS,IAAI;AAAA,QAC7I;AACA,YAAI,gBAAgB,OAAO;AACvB,cAAIA,IAAG,OAAO,KAAK,KAAK,GAAG;AACvB,mBAAO,KAAK;AAAA,UAChB;AACA,iBAAO,KAAK;AAAA,QAChB;AACA,YAAIA,IAAG,OAAO,IAAI,GAAG;AACjB,iBAAO;AAAA,QACX;AACA,eAAO,KAAK,SAAS;AAAA,MACzB;AAAA,MACA,KAAK,SAAS,MAAM;AAChB,aAAK,cAAc,WAAW,YAAa,IAAI,KAAK,EAAE,mBAAmB,MAAO,SAAS;AACzF,YAAI,MAAM;AACN,eAAK,cAAc,WAAW,KAAK,YAAY,IAAI,CAAC;AAAA,QACxD;AACA,YAAI,KAAK,eAAe,yBAAyB,sBAAsB,MAAM;AACzE,eAAK,cAAc,KAAK,IAAI;AAAA,QAChC;AAAA,MACJ;AAAA,MACA,KAAK,SAAS,MAAM;AAChB,aAAK,cAAc,WAAW,YAAa,IAAI,KAAK,EAAE,mBAAmB,MAAO,SAAS;AACzF,YAAI,MAAM;AACN,eAAK,cAAc,WAAW,KAAK,YAAY,IAAI,CAAC;AAAA,QACxD;AACA,YAAI,KAAK,eAAe,yBAAyB,sBAAsB,MAAM;AACzE,eAAK,cAAc,KAAK,IAAI;AAAA,QAChC;AAAA,MACJ;AAAA,MACA,MAAM,SAAS,MAAM;AACjB,aAAK,cAAc,WAAW,YAAa,IAAI,KAAK,EAAE,mBAAmB,MAAO,SAAS;AACzF,YAAI,MAAM;AACN,eAAK,cAAc,WAAW,KAAK,YAAY,IAAI,CAAC;AAAA,QACxD;AACA,YAAI,KAAK,eAAe,yBAAyB,sBAAsB,OAAO;AAC1E,eAAK,cAAc,KAAK,IAAI;AAAA,QAChC;AAAA,MACJ;AAAA,MACA,SAAS,SAAS,MAAM;AACpB,aAAK,cAAc,WAAW,YAAa,IAAI,KAAK,EAAE,mBAAmB,MAAO,SAAS;AACzF,YAAI,MAAM;AACN,eAAK,cAAc,WAAW,KAAK,YAAY,IAAI,CAAC;AAAA,QACxD;AAAA,MACJ;AAAA,MACA,eAAe,MAAM;AACjB,YAAI,KAAK,gBAAgB,KAAK,MAAM;AAChC,eAAK,cAAc,OAAO,YAAa,IAAI,KAAK,EAAE,mBAAmB,KAAM;AAAA,QAC/E,OACK;AACD,eAAK,cAAc,OAAO,YAAa,IAAI,KAAK,EAAE,mBAAmB,KAAM;AAAA,QAC/E;AACA,YAAI,MAAM;AACN,eAAK,cAAc,WAAW,GAAG,KAAK,UAAU,IAAI,GAAG;AAAA,QAC3D;AAAA,MACJ;AAAA,MACA,aAAa;AACT,eAAO,KAAK,UAAU,YAAY,WAAW,KAAK,UAAU,YAAY,YAAY,KAAK,UAAU,YAAY;AAAA,MACnH;AAAA,MACA,YAAY;AACR,eAAO,KAAK,UAAU,YAAY,YAAY,KAAK,UAAU,YAAY;AAAA,MAC7E;AAAA,MACA,UAAU;AACN,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,qBAAqB;AACjB,eAAO,KAAK,UAAU,YAAY,WAAW,CAAC,CAAC,KAAK;AAAA,MACxD;AAAA,MACA,QAAQ;AACJ,YAAI,KAAK,kBAAkB,QAAQ;AAC/B,eAAK,WAAW,IAAI,QAAQ,CAAC,SAAS,WAAW;AAC7C,iBAAK,oBAAoB,IAAI,QAAQ,SAAS,MAAM;AAAA,UACxD,CAAC;AAAA,QACL;AACA,aAAK,aAAa,CAAC;AACnB,aAAK,aAAa,CAAC;AAEnB,YAAI,CAAC,KAAK,cAAc;AACpB,eAAK,eAAe,KAAK,eAAe,2BAClC,SAAS,UAAU,2BAA2B,KAAK,eAAe,wBAAwB,IAC1F,SAAS,UAAU,2BAA2B;AAAA,QACxD;AACA,aAAK,QAAQ,YAAY;AACzB,aAAK,kBAAkB,EAAE,KAAK,CAAC,eAAe;AAC1C,qBAAW,aAAa,CAAC,YAAY;AACjC,oBAAQ,QAAQ;AAAA,mBACP,iCAAiC,YAAY;AAC9C,qBAAK,MAAM,QAAQ,OAAO;AAC1B;AAAA,mBACC,iCAAiC,YAAY;AAC9C,qBAAK,KAAK,QAAQ,OAAO;AACzB;AAAA,mBACC,iCAAiC,YAAY;AAC9C,qBAAK,KAAK,QAAQ,OAAO;AACzB;AAAA;AAEA,qBAAK,cAAc,WAAW,QAAQ,OAAO;AAAA;AAAA,UAEzD,CAAC;AACD,qBAAW,cAAc,CAAC,YAAY;AAClC,oBAAQ,QAAQ;AAAA,mBACP,iCAAiC,YAAY;AAC9C,yBAAS,OAAO,iBAAiB,QAAQ,OAAO;AAChD;AAAA,mBACC,iCAAiC,YAAY;AAC9C,yBAAS,OAAO,mBAAmB,QAAQ,OAAO;AAClD;AAAA,mBACC,iCAAiC,YAAY;AAC9C,yBAAS,OAAO,uBAAuB,QAAQ,OAAO;AACtD;AAAA;AAEA,yBAAS,OAAO,uBAAuB,QAAQ,OAAO;AAAA;AAAA,UAElE,CAAC;AACD,qBAAW,UAAU,iCAAiC,mBAAmB,MAAM,CAAC,WAAW;AACvF,gBAAI;AACJ,oBAAQ,OAAO;AAAA,mBACN,iCAAiC,YAAY;AAC9C,8BAAc,SAAS,OAAO;AAC9B;AAAA,mBACC,iCAAiC,YAAY;AAC9C,8BAAc,SAAS,OAAO;AAC9B;AAAA,mBACC,iCAAiC,YAAY;AAC9C,8BAAc,SAAS,OAAO;AAC9B;AAAA;AAEA,8BAAc,SAAS,OAAO;AAAA;AAEtC,gBAAI,UAAU,OAAO,WAAW,CAAC;AACjC,mBAAO,YAAY,OAAO,SAAS,GAAG,OAAO;AAAA,UACjD,CAAC;AACD,qBAAW,YAAY,CAAC,SAAS;AAC7B,iBAAK,kBAAkB,KAAK,IAAI;AAAA,UACpC,CAAC;AACD,qBAAW,OAAO;AAElB,iBAAO,KAAK,WAAW,UAAU;AAAA,QACrC,CAAC,EAAE,KAAK,QAAW,CAAC,UAAU;AAC1B,eAAK,QAAQ,YAAY;AACzB,eAAK,kBAAkB,OAAO,KAAK;AACnC,eAAK,MAAM,0BAA0B,KAAK;AAC1C,mBAAS,OAAO,iBAAiB,yBAAyB,KAAK,OAAO;AAAA,QAC1E,CAAC;AACD,eAAO,IAAI,SAAS,WAAW,MAAM;AACjC,cAAI,KAAK,UAAU,GAAG;AAClB,iBAAK,KAAK;AAAA,UACd;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,MACA,oBAAoB;AAChB,YAAI,CAAC,KAAK,oBAAoB;AAC1B,eAAK,qBAAqB,KAAK,iBAAiB;AAAA,QACpD;AACA,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,WAAW,YAAY;AACnB,aAAK,aAAa,YAAY,KAAK;AACnC,YAAI,aAAa,KAAK,eAAe;AACrC,YAAI,WAAW,KAAK,eAAe,kBAC7B,KAAK,eAAe,gBAAgB,IAAI,SACxC,KAAK,mBAAmB;AAC9B,YAAI,aAAa;AAAA,UACb,WAAW,QAAQ;AAAA,UACnB,UAAU,WAAW,WAAW;AAAA,UAChC,SAAS,WAAW,KAAK,KAAK,MAAM,SAAS,IAAI,KAAK,QAAQ,CAAC,IAAI;AAAA,UACnE,cAAc,KAAK,0BAA0B;AAAA,UAC7C,uBAAuBA,IAAG,KAAK,UAAU,IAAI,WAAW,IAAI;AAAA,UAC5D,OAAO,iCAAiC,MAAM,SAAS,KAAK,MAAM;AAAA,UAClE,kBAAkB;AAAA,QACtB;AACA,aAAK,qBAAqB,UAAU;AACpC,eAAO,WAAW,WAAW,UAAU,EAAE,KAAK,CAAC,WAAW;AACtD,eAAK,sBAAsB;AAC3B,eAAK,oBAAoB;AACzB,eAAK,QAAQ,YAAY;AACzB,cAAI,0BAA0B;AAC9B,cAAIA,IAAG,OAAO,OAAO,aAAa,gBAAgB,GAAG;AACjD,gBAAI,OAAO,aAAa,qBAAqB,iCAAiC,qBAAqB,MAAM;AACrG,wCAA0B;AAAA,gBACtB,WAAW;AAAA,gBACX,QAAQ,iCAAiC,qBAAqB;AAAA,gBAC9D,MAAM;AAAA,cACV;AAAA,YACJ,OACK;AACD,wCAA0B;AAAA,gBACtB,WAAW;AAAA,gBACX,QAAQ,OAAO,aAAa;AAAA,gBAC5B,MAAM;AAAA,kBACF,aAAa;AAAA,gBACjB;AAAA,cACJ;AAAA,YACJ;AAAA,UACJ,WACS,OAAO,aAAa,qBAAqB,UAAU,OAAO,aAAa,qBAAqB,MAAM;AACvG,sCAA0B,OAAO,aAAa;AAAA,UAClD;AACA,eAAK,gBAAgB,OAAO,OAAO,CAAC,GAAG,OAAO,cAAc,EAAE,0BAA0B,wBAAwB,CAAC;AACjH,qBAAW,cAAc,YAAU,KAAK,kBAAkB,MAAM,CAAC;AACjE,qBAAW,UAAU,iCAAiC,oBAAoB,MAAM,YAAU,KAAK,0BAA0B,MAAM,CAAC;AAEhI,qBAAW,UAAU,0BAA0B,YAAU,KAAK,0BAA0B,MAAM,CAAC;AAC/F,qBAAW,UAAU,iCAAiC,sBAAsB,MAAM,YAAU,KAAK,4BAA4B,MAAM,CAAC;AAEpI,qBAAW,UAAU,4BAA4B,YAAU,KAAK,4BAA4B,MAAM,CAAC;AACnG,qBAAW,UAAU,iCAAiC,0BAA0B,MAAM,YAAU,KAAK,yBAAyB,MAAM,CAAC;AACrI,qBAAW,iBAAiB,iCAAiC,wBAAwB,MAAM,CAAC,CAAC;AAC7F,eAAK,eAAe,UAAU;AAC9B,eAAK,yBAAyB,UAAU;AACxC,eAAK,mBAAmB,UAAU;AAClC,eAAK,kBAAkB,QAAQ;AAC/B,iBAAO;AAAA,QACX,CAAC,EAAE,KAAK,QAAW,CAAC,UAAU;AAC1B,cAAI,KAAK,eAAe,6BAA6B;AACjD,gBAAI,KAAK,eAAe,4BAA4B,KAAK,GAAG;AACxD,mBAAK,WAAW,UAAU;AAAA,YAC9B,OACK;AACD,mBAAK,KAAK;AACV,mBAAK,kBAAkB,OAAO,KAAK;AAAA,YACvC;AAAA,UACJ,WACS,iBAAiB,iCAAiC,iBAAiB,MAAM,QAAQ,MAAM,KAAK,OAAO;AACxG,qBAAS,OAAO,iBAAiB,MAAM,SAAS,EAAE,OAAO,SAAS,IAAI,QAAQ,CAAC,EAAE,KAAK,UAAQ;AAC1F,kBAAI,QAAQ,KAAK,OAAO,SAAS;AAC7B,qBAAK,WAAW,UAAU;AAAA,cAC9B,OACK;AACD,qBAAK,KAAK;AACV,qBAAK,kBAAkB,OAAO,KAAK;AAAA,cACvC;AAAA,YACJ,CAAC;AAAA,UACL,OACK;AACD,gBAAI,SAAS,MAAM,SAAS;AACxB,uBAAS,OAAO,iBAAiB,MAAM,OAAO;AAAA,YAClD;AACA,iBAAK,MAAM,iCAAiC,KAAK;AACjD,iBAAK,KAAK;AACV,iBAAK,kBAAkB,OAAO,KAAK;AAAA,UACvC;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,MACA,qBAAqB;AACjB,YAAI,UAAU,SAAS,UAAU;AACjC,YAAI,CAAC,WAAW,QAAQ,WAAW,GAAG;AAClC,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,QAAQ;AACrB,YAAI,OAAO,IAAI,WAAW,QAAQ;AAC9B,iBAAO,OAAO,IAAI;AAAA,QACtB;AACA,eAAO;AAAA,MACX;AAAA,MACA,OAAO;AACH,aAAK,oBAAoB;AACzB,YAAI,CAAC,KAAK,oBAAoB;AAC1B,eAAK,QAAQ,YAAY;AACzB,iBAAO,QAAQ,QAAQ;AAAA,QAC3B;AACA,YAAI,KAAK,UAAU,YAAY,YAAY,KAAK,SAAS;AACrD,iBAAO,KAAK;AAAA,QAChB;AACA,aAAK,QAAQ,YAAY;AACzB,aAAK,QAAQ;AAEb,eAAO,KAAK,UAAU,KAAK,kBAAkB,EAAE,KAAK,gBAAc;AAC9D,iBAAO,WAAW,SAAS,EAAE,KAAK,MAAM;AACpC,uBAAW,KAAK;AAChB,uBAAW,QAAQ;AACnB,iBAAK,QAAQ,YAAY;AACzB,iBAAK,UAAU;AACf,iBAAK,qBAAqB;AAC1B,iBAAK,sBAAsB;AAAA,UAC/B,CAAC;AAAA,QACL,CAAC;AAAA,MACL;AAAA,MACA,QAAQ,UAAU,MAAM,cAAc,MAAM;AACxC,YAAI,KAAK,YAAY;AACjB,eAAK,WAAW,QAAQ,cAAY,SAAS,QAAQ,CAAC;AACtD,eAAK,aAAa;AAAA,QACtB;AACA,YAAI,KAAK,YAAY;AACjB,eAAK,WAAW,QAAQ,cAAY,SAAS,QAAQ,CAAC;AACtD,eAAK,aAAa;AAAA,QACtB;AACA,YAAI,KAAK,kBAAkB;AACvB,eAAK,iBAAiB,MAAM;AAAA,QAChC;AACA,iBAAS,WAAW,KAAK,iBAAiB,OAAO,GAAG;AAChD,kBAAQ,QAAQ;AAAA,QACpB;AACA,YAAI,WAAW,KAAK,kBAAkB,KAAK,uBAAuB;AAC9D,eAAK,eAAe,QAAQ;AAC5B,eAAK,iBAAiB;AAAA,QAC1B;AACA,YAAI,eAAe,KAAK,cAAc;AAClC,eAAK,aAAa,QAAQ;AAC1B,eAAK,eAAe;AAAA,QACxB;AAAA,MACJ;AAAA,MACA,gBAAgB,OAAO;AACnB,aAAK,YAAY,KAAK,KAAK;AAC3B,aAAK,kBAAkB,QAAQ,MAAM;AACjC,eAAK,QAAQ,EAAE,KAAK,MAAM;AACtB,iBAAK,kBAAkB,EAAE,KAAK,gBAAc;AACxC,kBAAI,KAAK,mBAAmB,GAAG;AAC3B,2BAAW,sBAAsB,EAAE,SAAS,KAAK,YAAY,CAAC;AAAA,cAClE;AACA,mBAAK,cAAc,CAAC;AAAA,YACxB,CAAC;AAAA,UACL,GAAG,CAAC,UAAU;AACV,iBAAK,MAAM,8BAA8B,KAAK;AAAA,UAClD,CAAC;AAAA,QACL,CAAC;AAAA,MACL;AAAA,MACA,oBAAoB;AAChB,aAAK,iBAAiB,IAAI,iCAAiC,kCAAkC,KAAK,MAAM,EAAE,cAAc;AAAA,MAC5H;AAAA,MACA,kBAAkB,QAAQ;AACtB,YAAI,CAAC,KAAK,cAAc;AACpB;AAAA,QACJ;AACA,YAAI,MAAM,KAAK,KAAK,MAAM,OAAO,GAAG;AACpC,YAAI,cAAc,KAAK,KAAK,cAAc,OAAO,WAAW;AAC5D,YAAI,aAAa,KAAK,cAAc,WAAW;AAC/C,YAAI,YAAY;AACZ,qBAAW,KAAK,aAAa,CAACgB,MAAKC,iBAAgB,KAAK,eAAeD,MAAKC,YAAW,CAAC;AAAA,QAC5F,OACK;AACD,eAAK,eAAe,KAAK,WAAW;AAAA,QACxC;AAAA,MACJ;AAAA,MACA,eAAe,KAAK,aAAa;AAC7B,YAAI,CAAC,KAAK,cAAc;AACpB;AAAA,QACJ;AACA,aAAK,aAAa,IAAI,KAAK,WAAW;AAAA,MAC1C;AAAA,MACA,mBAAmB;AACf,YAAI,eAAe,CAAC,OAAO,SAAS,UAAU;AAC1C,eAAK,sBAAsB,OAAO,SAAS,KAAK;AAAA,QACpD;AACA,YAAI,eAAe,MAAM;AACrB,eAAK,uBAAuB;AAAA,QAChC;AACA,eAAO,KAAK,wBAAwB,KAAK,eAAe,iBAAiB,MAAM,EAAE,KAAK,CAAC,eAAe;AAClG,iBAAO,iBAAiB,WAAW,QAAQ,WAAW,QAAQ,cAAc,YAAY;AAAA,QAC5F,CAAC;AAAA,MACL;AAAA,MACA,yBAAyB;AAErB,YAAI,KAAK,UAAU,YAAY,YAAY,KAAK,UAAU,YAAY,SAAS;AAC3E;AAAA,QACJ;AACA,YAAI;AACA,cAAI,KAAK,qBAAqB;AAC1B,iBAAK,oBAAoB,QAAQ;AAAA,UACrC;AAAA,QACJ,SACO,OAAP;AAAA,QAEA;AACA,YAAI,SAAS,YAAY;AACzB,YAAI;AACA,mBAAS,KAAK,eAAe,aAAa,OAAO;AAAA,QACrD,SACO,OAAP;AAAA,QAEA;AACA,aAAK,qBAAqB;AAC1B,aAAK,sBAAsB;AAC3B,YAAI,WAAW,YAAY,cAAc;AACrC,eAAK,MAAM,gEAAgE;AAC3E,eAAK,QAAQ,YAAY;AACzB,eAAK,QAAQ,OAAO,IAAI;AAAA,QAC5B,WACS,WAAW,YAAY,SAAS;AACrC,eAAK,KAAK,uDAAuD;AACjE,eAAK,QAAQ,OAAO,KAAK;AACzB,eAAK,QAAQ,YAAY;AACzB,eAAK,MAAM;AAAA,QACf;AAAA,MACJ;AAAA,MACA,sBAAsB,OAAO,SAAS,OAAO;AACzC,YAAI,SAAS,KAAK,eAAe,aAAa,MAAM,OAAO,SAAS,KAAK;AACzE,YAAI,WAAW,YAAY,UAAU;AACjC,eAAK,MAAM,yDAAyD;AACpE,eAAK,KAAK;AAAA,QACd;AAAA,MACJ;AAAA,MACA,yBAAyB,YAAY;AACjC,iBAAS,UAAU,yBAAyB,MAAM;AAC9C,eAAK,aAAa,YAAY,IAAI;AAAA,QACtC,CAAC;AAAA,MACL;AAAA,MACA,aAAa,YAAY,mBAAmB,OAAO;AAC/C,YAAI,SAAS,SAAS,UAAU,iBAAiB,KAAK,GAAG;AACzD,YAAI,QAAQ,iCAAiC,MAAM;AACnD,YAAI,cAAc,iCAAiC,YAAY;AAC/D,YAAI,QAAQ;AACR,gBAAM,cAAc,OAAO,IAAI,gBAAgB,KAAK;AACpD,cAAI,OAAO,gBAAgB,UAAU;AACjC,oBAAQ,iCAAiC,MAAM,WAAW,WAAW;AAAA,UACzE,OACK;AACD,oBAAQ,iCAAiC,MAAM,WAAW,OAAO,IAAI,0BAA0B,KAAK,CAAC;AACrG,0BAAc,iCAAiC,YAAY,WAAW,OAAO,IAAI,uBAAuB,MAAM,CAAC;AAAA,UACnH;AAAA,QACJ;AACA,aAAK,SAAS;AACd,aAAK,eAAe;AACpB,mBAAW,MAAM,KAAK,QAAQ,KAAK,SAAS;AAAA,UACxC;AAAA,UACA,aAAa,KAAK;AAAA,QACtB,CAAC;AAAA,MACL;AAAA,MACA,eAAe,aAAa;AACxB,YAAI,aAAa,KAAK,eAAe,YAAY;AACjD,YAAI,CAAC,YAAY;AACb;AAAA,QACJ;AACA,YAAI;AACJ,YAAIjB,IAAG,MAAM,UAAU,GAAG;AACtB,qBAAW;AAAA,QACf,OACK;AACD,qBAAW,CAAC,UAAU;AAAA,QAC1B;AACA,YAAI,CAAC,UAAU;AACX;AAAA,QACJ;AACA,aAAK,iBAAiB,IAAI,iCAAiC,kCAAkC,KAAK,MAAM,EAAE,YAAY,KAAK,aAAa,GAAG,QAAQ;AAAA,MACvJ;AAAA,MACA,iBAAiB,UAAU;AACvB,iBAAS,WAAW,UAAU;AAC1B,eAAK,gBAAgB,OAAO;AAAA,QAChC;AAAA,MACJ;AAAA,MACA,gBAAgB,SAAS;AACrB,aAAK,UAAU,KAAK,OAAO;AAC3B,YAAI,eAAe,GAAG,OAAO,GAAG;AAC5B,cAAI,WAAW,QAAQ;AACvB,cAAI,MAAM,QAAQ,QAAQ,GAAG;AACzB,qBAAS,WAAW,UAAU;AAC1B,mBAAK,gBAAgB,IAAI,QAAQ,QAAQ,OAAO;AAChD,mBAAK,iBAAiB,IAAI,QAAQ,QAAQ,OAAO;AAAA,YACrD;AAAA,UACJ,OACK;AACD,iBAAK,gBAAgB,IAAI,SAAS,QAAQ,QAAQ;AAClD,iBAAK,iBAAiB,IAAI,SAAS,QAAQ,OAAO;AAAA,UACtD;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,0BAA0B;AACtB,aAAK,gBAAgB,IAAI,qBAAqB,IAAI,CAAC;AACnD,aAAK,gBAAgB,IAAI,2BAA2B,MAAM,KAAK,gBAAgB,CAAC;AAChF,aAAK,gBAAgB,IAAI,6BAA6B,IAAI,CAAC;AAC3D,aAAK,gBAAgB,IAAI,gBAAgB,IAAI,CAAC;AAC9C,aAAK,gBAAgB,IAAI,yBAAyB,IAAI,CAAC;AACvD,aAAK,gBAAgB,IAAI,2BAA2B,IAAI,CAAC;AACzD,aAAK,gBAAgB,IAAI,4BAA4B,MAAM,KAAK,gBAAgB,CAAC;AACjF,aAAK,gBAAgB,IAAI,yBAAyB,MAAM,CAAC,UAAU,KAAK,gBAAgB,KAAK,CAAC,CAAC;AAC/F,aAAK,gBAAgB,IAAI,sBAAsB,IAAI,CAAC;AACpD,aAAK,gBAAgB,IAAI,aAAa,IAAI,CAAC;AAC3C,aAAK,gBAAgB,IAAI,qBAAqB,IAAI,CAAC;AACnD,aAAK,gBAAgB,IAAI,kBAAkB,IAAI,CAAC;AAChD,aAAK,gBAAgB,IAAI,kBAAkB,IAAI,CAAC;AAChD,aAAK,gBAAgB,IAAI,yBAAyB,IAAI,CAAC;AACvD,aAAK,gBAAgB,IAAI,sBAAsB,IAAI,CAAC;AACpD,aAAK,gBAAgB,IAAI,uBAAuB,IAAI,CAAC;AACrD,aAAK,gBAAgB,IAAI,kBAAkB,IAAI,CAAC;AAChD,aAAK,gBAAgB,IAAI,gBAAgB,IAAI,CAAC;AAC9C,aAAK,gBAAgB,IAAI,0BAA0B,IAAI,CAAC;AACxD,aAAK,gBAAgB,IAAI,+BAA+B,IAAI,CAAC;AAC7D,aAAK,gBAAgB,IAAI,gCAAgC,IAAI,CAAC;AAC9D,aAAK,gBAAgB,IAAI,cAAc,IAAI,CAAC;AAC5C,aAAK,gBAAgB,IAAI,oBAAoB,IAAI,CAAC;AAClD,aAAK,gBAAgB,IAAI,sBAAsB,IAAI,CAAC;AAAA,MACxD;AAAA,MACA,qBAAqB,QAAQ;AACzB,iBAAS,WAAW,KAAK,WAAW;AAChC,cAAIA,IAAG,KAAK,QAAQ,oBAAoB,GAAG;AACvC,oBAAQ,qBAAqB,MAAM;AAAA,UACvC;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,4BAA4B;AACxB,YAAI,SAAS,CAAC;AACd,eAAO,QAAQ,WAAW,EAAE,YAAY;AACxC,YAAI,gBAAgB,OAAO,OAAO,QAAQ,WAAW,GAAG,eAAe;AACvE,sBAAc,kBAAkB;AAChC,sBAAc,qBAAqB,CAAC,iCAAiC,sBAAsB,QAAQ,iCAAiC,sBAAsB,QAAQ,iCAAiC,sBAAsB,MAAM;AAC/N,sBAAc,kBAAkB,iCAAiC,oBAAoB;AACrF,eAAO,OAAO,QAAQ,cAAc,GAAG,oBAAoB,EAAE,qBAAqB;AAClF,iBAAS,WAAW,KAAK,WAAW;AAChC,kBAAQ,uBAAuB,MAAM;AAAA,QACzC;AACA,eAAO;AAAA,MACX;AAAA,MACA,mBAAmB,aAAa;AAC5B,YAAI,mBAAmB,KAAK,eAAe;AAC3C,iBAAS,WAAW,KAAK,WAAW;AAChC,kBAAQ,WAAW,KAAK,eAAe,gBAAgB;AAAA,QAC3D;AAAA,MACJ;AAAA,MACA,0BAA0B,QAAQ;AAC9B,eAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,mBAAS,gBAAgB,OAAO,eAAe;AAC3C,kBAAM,UAAU,KAAK,iBAAiB,IAAI,aAAa,MAAM;AAC7D,gBAAI,CAAC,SAAS;AACV,qBAAO,IAAI,MAAM,iCAAiC,aAAa,oCAAoC,CAAC;AACpG;AAAA,YACJ;AACA,kBAAM,UAAU,aAAa,mBAAmB,CAAC;AACjD,oBAAQ,mBAAmB,QAAQ,oBAAoB,KAAK,eAAe;AAC3E,kBAAM,OAAO;AAAA,cACT,IAAI,aAAa;AAAA,cACjB,iBAAiB;AAAA,YACrB;AACA,oBAAQ,SAAS,KAAK,gBAAgB,IAAI,aAAa,MAAM,GAAG,IAAI;AAAA,UACxE;AACA,kBAAQ;AAAA,QACZ,CAAC;AAAA,MACL;AAAA,MACA,4BAA4B,QAAQ;AAChC,eAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,mBAAS,kBAAkB,OAAO,kBAAkB;AAChD,kBAAM,UAAU,KAAK,iBAAiB,IAAI,eAAe,MAAM;AAC/D,gBAAI,CAAC,SAAS;AACV,qBAAO,IAAI,MAAM,iCAAiC,eAAe,sCAAsC,CAAC;AACxG;AAAA,YACJ;AACA,oBAAQ,WAAW,eAAe,EAAE;AAAA,UACxC;AACA;AACA,kBAAQ;AAAA,QACZ,CAAC;AAAA,MACL;AAAA,MACA,yBAAyB,QAAQ;AAG7B,YAAI,gBAAgB,OAAO;AAC3B,YAAI,oBAAoB,oBAAI,IAAI;AAChC,iBAAS,UAAU,cAAc,QAAQ,CAACW,cAAa,kBAAkB,IAAIA,UAAS,IAAI,SAAS,GAAGA,SAAQ,CAAC;AAC/G,YAAI,kBAAkB;AACtB,YAAI,cAAc,iBAAiB;AAC/B,qBAAW,UAAU,cAAc,iBAAiB;AAChD,gBAAI,iCAAiC,iBAAiB,GAAG,MAAM,KAAK,OAAO,aAAa,WAAW,OAAO,aAAa,WAAW,GAAG;AACjI,kBAAI,eAAe,kBAAkB,IAAI,OAAO,aAAa,GAAG;AAChE,kBAAI,gBAAgB,aAAa,YAAY,OAAO,aAAa,SAAS;AACtE,kCAAkB;AAClB;AAAA,cACJ;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AACA,YAAI,iBAAiB;AACjB,iBAAO,QAAQ,QAAQ,EAAE,SAAS,MAAM,CAAC;AAAA,QAC7C;AACA,eAAO,SAAS,UAAU,UAAU,KAAK,KAAK,gBAAgB,OAAO,IAAI,CAAC,EAAE,KAAK,CAAC,UAAU;AAAE,iBAAO,EAAE,SAAS,MAAM;AAAA,QAAG,CAAC;AAAA,MAC9H;AAAA,MAEA,iBAAiB,MAAM,OAAO;AAE1B,YAAI,iBAAiB,iCAAiC,iBAAiB,MAAM,SAAS,iCAAiC,WAAW,kBAAkB;AAChJ;AAAA,QACJ;AACA,aAAK,MAAM,WAAW,KAAK,kBAAkB,KAAK;AAAA,MACtD;AAAA,IACJ;AACA,YAAQ,qBAAqB;AAAA;AAAA;;;AC/zE7B;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,OAAO;AACb,QAAMO,MAAK;AACX,QAAM,WAAW,QAAQ;AACzB,QAAM,mCAAmC;AACzC,QAAM,WAAW;AACjB,aAAS,OAAO,QAAQ,KAAK;AACzB,UAAI,OAAO,SAAS,QAAQ;AACxB,eAAO,OAAO,CAAC;AAAA,MACnB;AACA,aAAO,OAAO;AAAA,IAClB;AACA,QAAM,uBAAN,cAAmC,SAAS,oBAAoB;AAAA,MAC5D,YAAYC,SAAQ;AAChB,cAAMA,SAAQ,iCAAiC,qBAAqB,IAAI;AAAA,MAC5E;AAAA,MACA,uBAAuB,aAAa;AAChC,eAAO,OAAO,aAAa,cAAc,GAAG,eAAe,EAAE,sBAAsB;AAAA,MACvF;AAAA,MACA,WAAW,cAAc,kBAAkB;AACvC,YAAI,CAAC,aAAa,eAAe;AAC7B;AAAA,QACJ;AACA,cAAM,mBAAmB,aAAa;AACtC,cAAM,KAAKD,IAAG,OAAO,iBAAiB,EAAE,KAAK,iBAAiB,GAAG,SAAS,IAAI,iBAAiB,KAAK,KAAK,aAAa;AACtH,cAAM,WAAW,iBAAiB,oBAAoB;AACtD,YAAI,UAAU;AACV,eAAK,SAAS,KAAK,UAAU;AAAA,YACzB;AAAA,YACA,iBAAiB,OAAO,OAAO,CAAC,GAAG,EAAE,kBAAkB,SAAS,CAAC;AAAA,UACrE,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,MACA,yBAAyB,SAAS;AAC9B,YAAIC,UAAS,KAAK;AAClB,YAAI,4BAA4B,CAAC,OAAO,SAAS,UAAU;AACvD,gBAAM,gBAAgB;AAAA,YAClB;AAAA,YACA,cAAcA,QAAO,uBAAuB,yBAAyB,QAAQ,QAAQ;AAAA,YACrF,OAAOA,QAAO,uBAAuB,QAAQ,QAAQ,KAAK;AAAA,UAC9D;AACA,iBAAOA,QAAO,YAAY,iCAAiC,yBAAyB,MAAM,eAAe,KAAK,EAAE,KAAK,KAAK,qBAAqB,KAAK,IAAI,GAAG,CAAC,UAAU;AAClK,YAAAA,QAAO,iBAAiB,iCAAiC,yBAAyB,MAAM,KAAK;AAC7F,mBAAO,QAAQ,QAAQ,IAAI;AAAA,UAC/B,CAAC;AAAA,QACL;AACA,YAAI,wBAAwB,CAACC,WAAU,UAAU;AAC7C,gBAAM,gBAAgB;AAAA,YAClB,cAAcD,QAAO,uBAAuB,yBAAyBC,SAAQ;AAAA,UACjF;AACA,iBAAOD,QAAO,YAAY,iCAAiC,qBAAqB,MAAM,eAAe,KAAK,EAAE,KAAK,KAAK,oBAAoB,KAAK,IAAI,GAAG,CAAC,UAAU;AAC7J,YAAAA,QAAO,iBAAiB,iCAAiC,yBAAyB,MAAM,KAAK;AAC7F,mBAAO,QAAQ,QAAQ,IAAI;AAAA,UAC/B,CAAC;AAAA,QACL;AACA,YAAI,aAAaA,QAAO,cAAc;AACtC,eAAO,SAAS,UAAU,sBAAsB,QAAQ,kBAAkB;AAAA,UACtE,2BAA2B,CAAC,OAAO,SAAS,UAAU;AAClD,mBAAO,WAAW,4BACZ,WAAW,0BAA0B,OAAO,SAAS,OAAO,yBAAyB,IACrF,0BAA0B,OAAO,SAAS,KAAK;AAAA,UACzD;AAAA,UACA,uBAAuB,CAACC,WAAU,UAAU;AACxC,mBAAO,WAAW,wBACZ,WAAW,sBAAsBA,WAAU,OAAO,qBAAqB,IACvE,sBAAsBA,WAAU,KAAK;AAAA,UAC/C;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,MACA,QAAQ,OAAO;AACX,eAAO,IAAI,SAAS,MAAM,MAAM,KAAK,MAAM,OAAO,MAAM,MAAM,MAAM,KAAK;AAAA,MAC7E;AAAA,MACA,oBAAoB,kBAAkB;AAClC,YAAI,MAAM,QAAQ,gBAAgB,GAAG;AACjC,iBAAO,iBAAiB,IAAI,QAAM;AAC9B,mBAAO,IAAI,SAAS,iBAAiB,KAAK,QAAQ,uBAAuB,QAAQ,GAAG,KAAK,GAAG,KAAK,QAAQ,GAAG,KAAK,CAAC;AAAA,UACtH,CAAC;AAAA,QACL;AACA,eAAO,CAAC;AAAA,MACZ;AAAA,MACA,qBAAqB,oBAAoB;AACrC,YAAI,MAAM,QAAQ,kBAAkB,GAAG;AACnC,iBAAO,mBAAmB,IAAI,QAAM;AAChC,gBAAI,eAAe,IAAI,SAAS,kBAAkB,GAAG,KAAK;AAC1D,yBAAa,sBAAsB,KAAK,QAAQ,uBAAuB,YAAY,GAAG,mBAAmB;AACzG,yBAAa,WAAW,KAAK,QAAQ,uBAAuB,WAAW,GAAG,QAAQ;AAClF,mBAAO;AAAA,UACX,CAAC;AAAA,QACL;AACA,eAAO,CAAC;AAAA,MACZ;AAAA,IACJ;AACA,YAAQ,uBAAuB;AAAA;AAAA;;;ACjG/B;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,WAAW,QAAQ;AACzB,QAAM,mCAAmC;AACzC,QAAM,uBAAN,MAA2B;AAAA,MACvB,YAAY,SAAS;AACjB,aAAK,UAAU;AAAA,MACnB;AAAA,MACA,uBAAuB,cAAc;AACjC,qBAAa,YAAY,aAAa,aAAa,CAAC;AACpD,qBAAa,UAAU,gBAAgB;AAAA,MAC3C;AAAA,MACA,aAAa;AACT,YAAIC,UAAS,KAAK;AAClB,QAAAA,QAAO,UAAU,iCAAiC,qBAAqB,MAAM,CAAC,QAAQ,UAAU;AAC5F,cAAI,gBAAgB,CAACC,YAAW;AAC5B,gBAAI,SAAS,CAAC;AACd,qBAAS,QAAQA,QAAO,OAAO;AAC3B,kBAAI,WAAW,KAAK,aAAa,UAAU,KAAK,aAAa,OAAO,KAAK,QAAQ,uBAAuB,MAAM,KAAK,QAAQ,IAAI;AAC/H,qBAAO,KAAK,KAAK,iBAAiB,UAAU,KAAK,YAAY,OAAO,KAAK,UAAU,MAAS,CAAC;AAAA,YACjG;AACA,mBAAO;AAAA,UACX;AACA,cAAI,aAAaD,QAAO,cAAc,WAAW;AACjD,iBAAO,cAAc,WAAW,gBAC1B,WAAW,cAAc,QAAQ,OAAO,aAAa,IACrD,cAAc,QAAQ,KAAK;AAAA,QACrC,CAAC;AAAA,MACL;AAAA,MACA,iBAAiB,UAAU,SAAS;AAChC,YAAI,SAAS;AACb,YAAI,SAAS;AACT,cAAI,QAAQ,QAAQ,YAAY,GAAG;AACnC,cAAI,UAAU,IAAI;AACd,qBAAS,SAAS,UAAU,iBAAiB,QAAW,QAAQ,EAAE,IAAI,OAAO;AAAA,UACjF,OACK;AACD,gBAAI,SAAS,SAAS,UAAU,iBAAiB,QAAQ,OAAO,GAAG,KAAK,CAAC;AACzE,gBAAI,QAAQ;AACR,uBAAS,OAAO,IAAI,QAAQ,OAAO,QAAQ,CAAC,CAAC;AAAA,YACjD;AAAA,UACJ;AAAA,QACJ,OACK;AACD,cAAI,SAAS,SAAS,UAAU,iBAAiB,QAAW,QAAQ;AACpE,mBAAS,CAAC;AACV,mBAAS,OAAO,OAAO,KAAK,MAAM,GAAG;AACjC,gBAAI,OAAO,IAAI,GAAG,GAAG;AACjB,qBAAO,OAAO,OAAO,IAAI,GAAG;AAAA,YAChC;AAAA,UACJ;AAAA,QACJ;AACA,YAAI,CAAC,QAAQ;AACT,iBAAO;AAAA,QACX;AACA,eAAO;AAAA,MACX;AAAA,IACJ;AACA,YAAQ,uBAAuB;AAAA;AAAA;;;AC9D/B;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,OAAO;AACb,QAAME,MAAK;AACX,QAAM,WAAW,QAAQ;AACzB,QAAM,mCAAmC;AACzC,QAAM,WAAW;AACjB,aAAS,OAAO,QAAQ,KAAK;AACzB,UAAI,OAAO,SAAS,QAAQ;AACxB,eAAO,OAAO,CAAC;AAAA,MACnB;AACA,aAAO,OAAO;AAAA,IAClB;AACA,QAAM,wBAAN,cAAoC,SAAS,oBAAoB;AAAA,MAC7D,YAAYC,SAAQ;AAChB,cAAMA,SAAQ,iCAAiC,sBAAsB,IAAI;AAAA,MAC7E;AAAA,MACA,uBAAuB,aAAa;AAChC,YAAI,wBAAwB,OAAO,OAAO,aAAa,cAAc,GAAG,gBAAgB;AACxF,8BAAsB,sBAAsB;AAC5C,8BAAsB,cAAc;AAAA,MACxC;AAAA,MACA,WAAW,cAAc,kBAAkB;AACvC,YAAI,CAAC,aAAa,wBAAwB;AACtC;AAAA,QACJ;AACA,YAAI,aAAa,2BAA2B,MAAM;AAC9C,cAAI,CAAC,kBAAkB;AACnB;AAAA,UACJ;AACA,eAAK,SAAS,KAAK,UAAU;AAAA,YACzB,IAAI,KAAK,aAAa;AAAA,YACtB,iBAAiB,OAAO,OAAO,CAAC,GAAG,EAAE,iBAAmC,CAAC;AAAA,UAC7E,CAAC;AAAA,QACL,OACK;AACD,gBAAM,mBAAmB,aAAa;AACtC,gBAAM,KAAKD,IAAG,OAAO,iBAAiB,EAAE,KAAK,iBAAiB,GAAG,SAAS,IAAI,iBAAiB,KAAK,KAAK,aAAa;AACtH,gBAAM,WAAW,iBAAiB,oBAAoB;AACtD,cAAI,UAAU;AACV,iBAAK,SAAS,KAAK,UAAU;AAAA,cACzB;AAAA,cACA,iBAAiB,OAAO,OAAO,CAAC,GAAG,EAAE,kBAAkB,SAAS,CAAC;AAAA,YACrE,CAAC;AAAA,UACL;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,yBAAyB,SAAS;AAC9B,YAAIC,UAAS,KAAK;AAClB,YAAI,wBAAwB,CAACC,WAAU,UAAU,UAAU;AACvD,iBAAOD,QAAO,YAAY,iCAAiC,sBAAsB,MAAMA,QAAO,uBAAuB,6BAA6BC,WAAU,QAAQ,GAAG,KAAK,EAAE,KAAKD,QAAO,uBAAuB,oBAAoB,CAAC,UAAU;AAC5O,YAAAA,QAAO,iBAAiB,iCAAiC,sBAAsB,MAAM,KAAK;AAC1F,mBAAO,QAAQ,QAAQ,IAAI;AAAA,UAC/B,CAAC;AAAA,QACL;AACA,YAAI,aAAaA,QAAO,cAAc;AACtC,eAAO,SAAS,UAAU,+BAA+B,QAAQ,kBAAkB;AAAA,UAC/E,uBAAuB,CAACC,WAAU,UAAU,UAAU;AAClD,mBAAO,WAAW,wBACZ,WAAW,sBAAsBA,WAAU,UAAU,OAAO,qBAAqB,IACjF,sBAAsBA,WAAU,UAAU,KAAK;AAAA,UACzD;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,IACJ;AACA,YAAQ,wBAAwB;AAAA;AAAA;;;ACrEhC;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,OAAO;AACb,QAAMC,MAAK;AACX,QAAM,WAAW,QAAQ;AACzB,QAAM,mCAAmC;AACzC,QAAM,WAAW;AACjB,aAAS,OAAO,QAAQ,KAAK;AACzB,UAAI,OAAO,SAAS,QAAQ;AACxB,eAAO,OAAO,CAAC;AAAA,MACnB;AACA,aAAO,OAAO;AAAA,IAClB;AACA,QAAM,wBAAN,cAAoC,SAAS,oBAAoB;AAAA,MAC7D,YAAYC,SAAQ;AAChB,cAAMA,SAAQ,iCAAiC,sBAAsB,IAAI;AAAA,MAC7E;AAAA,MACA,uBAAuB,aAAa;AAChC,eAAO,OAAO,aAAa,cAAc,GAAG,gBAAgB,EAAE,sBAAsB;AACpF,YAAI,wBAAwB,OAAO,OAAO,aAAa,cAAc,GAAG,gBAAgB;AACxF,8BAAsB,sBAAsB;AAC5C,8BAAsB,cAAc;AAAA,MACxC;AAAA,MACA,WAAW,cAAc,kBAAkB;AACvC,YAAI,CAAC,aAAa,wBAAwB;AACtC;AAAA,QACJ;AACA,YAAI,aAAa,2BAA2B,MAAM;AAC9C,cAAI,CAAC,kBAAkB;AACnB;AAAA,UACJ;AACA,eAAK,SAAS,KAAK,UAAU;AAAA,YACzB,IAAI,KAAK,aAAa;AAAA,YACtB,iBAAiB,OAAO,OAAO,CAAC,GAAG,EAAE,iBAAmC,CAAC;AAAA,UAC7E,CAAC;AAAA,QACL,OACK;AACD,gBAAM,mBAAmB,aAAa;AACtC,gBAAM,KAAKD,IAAG,OAAO,iBAAiB,EAAE,KAAK,iBAAiB,GAAG,SAAS,IAAI,iBAAiB,KAAK,KAAK,aAAa;AACtH,gBAAM,WAAW,iBAAiB,oBAAoB;AACtD,cAAI,UAAU;AACV,iBAAK,SAAS,KAAK,UAAU;AAAA,cACzB;AAAA,cACA,iBAAiB,OAAO,OAAO,CAAC,GAAG,EAAE,kBAAkB,SAAS,CAAC;AAAA,YACrE,CAAC;AAAA,UACL;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,yBAAyB,SAAS;AAC9B,YAAIC,UAAS,KAAK;AAClB,YAAI,wBAAwB,CAACC,WAAU,UAAU,UAAU;AACvD,iBAAOD,QAAO,YAAY,iCAAiC,sBAAsB,MAAMA,QAAO,uBAAuB,6BAA6BC,WAAU,QAAQ,GAAG,KAAK,EAAE,KAAKD,QAAO,uBAAuB,oBAAoB,CAAC,UAAU;AAC5O,YAAAA,QAAO,iBAAiB,iCAAiC,sBAAsB,MAAM,KAAK;AAC1F,mBAAO,QAAQ,QAAQ,IAAI;AAAA,UAC/B,CAAC;AAAA,QACL;AACA,YAAI,aAAaA,QAAO,cAAc;AACtC,eAAO,SAAS,UAAU,+BAA+B,QAAQ,kBAAkB;AAAA,UAC/E,uBAAuB,CAACC,WAAU,UAAU,UAAU;AAClD,mBAAO,WAAW,wBACZ,WAAW,sBAAsBA,WAAU,UAAU,OAAO,qBAAqB,IACjF,sBAAsBA,WAAU,UAAU,KAAK;AAAA,UACzD;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,IACJ;AACA,YAAQ,wBAAwB;AAAA;AAAA;;;ACtEhC;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,OAAO;AACb,QAAM,WAAW,QAAQ;AACzB,QAAM,mCAAmC;AACzC,aAAS,OAAO,QAAQ,KAAK;AACzB,UAAI,WAAW,QAAQ;AACnB,eAAO;AAAA,MACX;AACA,aAAO,OAAO;AAAA,IAClB;AACA,QAAM,0BAAN,MAA8B;AAAA,MAC1B,YAAY,SAAS;AACjB,aAAK,UAAU;AACf,aAAK,aAAa,oBAAI,IAAI;AAAA,MAC9B;AAAA,MACA,IAAI,WAAW;AACX,eAAO,iCAAiC,sCAAsC;AAAA,MAClF;AAAA,MACA,qBAAqB,QAAQ;AACzB,YAAI,UAAU,SAAS,UAAU;AACjC,YAAI,YAAY,QAAQ;AACpB,iBAAO,mBAAmB;AAAA,QAC9B,OACK;AACD,iBAAO,mBAAmB,QAAQ,IAAI,YAAU,KAAK,WAAW,MAAM,CAAC;AAAA,QAC3E;AAAA,MACJ;AAAA,MACA,uBAAuB,cAAc;AACjC,qBAAa,YAAY,aAAa,aAAa,CAAC;AACpD,qBAAa,UAAU,mBAAmB;AAAA,MAC9C;AAAA,MACA,WAAW,cAAc;AACrB,YAAIC,UAAS,KAAK;AAClB,QAAAA,QAAO,UAAU,iCAAiC,wBAAwB,MAAM,CAAC,UAAU;AACvF,cAAI,mBAAmB,MAAM;AACzB,gBAAI,UAAU,SAAS,UAAU;AACjC,gBAAI,YAAY,QAAQ;AACpB,qBAAO;AAAA,YACX;AACA,gBAAI,SAAS,QAAQ,IAAI,CAAC,WAAW;AACjC,qBAAO,KAAK,WAAW,MAAM;AAAA,YACjC,CAAC;AACD,mBAAO;AAAA,UACX;AACA,cAAI,aAAaA,QAAO,cAAc,WAAW;AACjD,iBAAO,cAAc,WAAW,mBAC1B,WAAW,iBAAiB,OAAO,gBAAgB,IACnD,iBAAiB,KAAK;AAAA,QAChC,CAAC;AACD,YAAI,QAAQ,OAAO,OAAO,OAAO,cAAc,WAAW,GAAG,kBAAkB,GAAG,qBAAqB;AACvG,YAAI;AACJ,YAAI,OAAO,UAAU,UAAU;AAC3B,eAAK;AAAA,QACT,WACS,UAAU,MAAM;AACrB,eAAK,KAAK,aAAa;AAAA,QAC3B;AACA,YAAI,IAAI;AACJ,eAAK,SAAS,KAAK,UAAU;AAAA,YACzB;AAAA,YACA,iBAAiB;AAAA,UACrB,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,MACA,SAAS,UAAU,MAAM;AACrB,YAAI,KAAK,KAAK;AACd,YAAIA,UAAS,KAAK;AAClB,YAAI,aAAa,SAAS,UAAU,4BAA4B,CAAC,UAAU;AACvE,cAAI,4BAA4B,CAACC,WAAU;AACvC,gBAAI,SAAS;AAAA,cACT,OAAO;AAAA,gBACH,OAAOA,OAAM,MAAM,IAAI,YAAU,KAAK,WAAW,MAAM,CAAC;AAAA,gBACxD,SAASA,OAAM,QAAQ,IAAI,YAAU,KAAK,WAAW,MAAM,CAAC;AAAA,cAChE;AAAA,YACJ;AACA,iBAAK,QAAQ,iBAAiB,iCAAiC,sCAAsC,MAAM,MAAM;AAAA,UACrH;AACA,cAAI,aAAaD,QAAO,cAAc,WAAW;AACjD,wBAAc,WAAW,4BACnB,WAAW,0BAA0B,OAAO,yBAAyB,IACrE,0BAA0B,KAAK;AAAA,QACzC,CAAC;AACD,aAAK,WAAW,IAAI,IAAI,UAAU;AAAA,MACtC;AAAA,MACA,WAAW,IAAI;AACX,YAAI,aAAa,KAAK,WAAW,IAAI,EAAE;AACvC,YAAI,eAAe,QAAQ;AACvB;AAAA,QACJ;AACA,aAAK,WAAW,OAAO,EAAE;AACzB,mBAAW,QAAQ;AAAA,MACvB;AAAA,MACA,UAAU;AACN,iBAAS,cAAc,KAAK,WAAW,OAAO,GAAG;AAC7C,qBAAW,QAAQ;AAAA,QACvB;AACA,aAAK,WAAW,MAAM;AAAA,MAC1B;AAAA,MACA,WAAW,iBAAiB;AACxB,YAAI,oBAAoB,QAAQ;AAC5B,iBAAO;AAAA,QACX;AACA,eAAO,EAAE,KAAK,KAAK,QAAQ,uBAAuB,MAAM,gBAAgB,GAAG,GAAG,MAAM,gBAAgB,KAAK;AAAA,MAC7G;AAAA,IACJ;AACA,YAAQ,0BAA0B;AAAA;AAAA;;;AC9GlC;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,OAAO;AACb,QAAME,MAAK;AACX,QAAM,WAAW,QAAQ;AACzB,QAAM,mCAAmC;AACzC,QAAM,WAAW;AACjB,aAAS,OAAO,QAAQ,KAAK;AACzB,UAAI,OAAO,SAAS,QAAQ;AACxB,eAAO,OAAO,CAAC;AAAA,MACnB;AACA,aAAO,OAAO;AAAA,IAClB;AACA,QAAM,sBAAN,cAAkC,SAAS,oBAAoB;AAAA,MAC3D,YAAYC,SAAQ;AAChB,cAAMA,SAAQ,iCAAiC,oBAAoB,IAAI;AAAA,MAC3E;AAAA,MACA,uBAAuB,aAAa;AAChC,YAAI,aAAa,OAAO,OAAO,aAAa,cAAc,GAAG,cAAc;AAC3E,mBAAW,sBAAsB;AACjC,mBAAW,aAAa;AACxB,mBAAW,kBAAkB;AAAA,MACjC;AAAA,MACA,WAAW,cAAc,kBAAkB;AACvC,YAAI,CAAC,aAAa,sBAAsB;AACpC;AAAA,QACJ;AACA,cAAM,mBAAmB,aAAa;AACtC,cAAM,KAAKD,IAAG,OAAO,iBAAiB,EAAE,KAAK,iBAAiB,GAAG,SAAS,IAAI,iBAAiB,KAAK,KAAK,aAAa;AACtH,cAAM,WAAW,iBAAiB,oBAAoB;AACtD,YAAI,UAAU;AACV,eAAK,SAAS,KAAK,UAAU;AAAA,YACzB;AAAA,YACA,iBAAiB,OAAO,OAAO,CAAC,GAAG,EAAE,kBAAkB,SAAS,CAAC;AAAA,UACrE,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,MACA,yBAAyB,SAAS;AAC9B,YAAIC,UAAS,KAAK;AAClB,YAAI,uBAAuB,CAACC,WAAU,GAAG,UAAU;AAC/C,gBAAM,gBAAgB;AAAA,YAClB,cAAcD,QAAO,uBAAuB,yBAAyBC,SAAQ;AAAA,UACjF;AACA,iBAAOD,QAAO,YAAY,iCAAiC,oBAAoB,MAAM,eAAe,KAAK,EAAE,KAAK,KAAK,gBAAgB,KAAK,IAAI,GAAG,CAAC,UAAU;AACxJ,YAAAA,QAAO,iBAAiB,iCAAiC,oBAAoB,MAAM,KAAK;AACxF,mBAAO,QAAQ,QAAQ,IAAI;AAAA,UAC/B,CAAC;AAAA,QACL;AACA,YAAI,aAAaA,QAAO,cAAc;AACtC,eAAO,SAAS,UAAU,6BAA6B,QAAQ,kBAAkB;AAAA,UAC7E,qBAAqBC,WAAU,SAAS,OAAO;AAC3C,mBAAO,WAAW,uBACZ,WAAW,qBAAqBA,WAAU,SAAS,OAAO,oBAAoB,IAC9E,qBAAqBA,WAAU,SAAS,KAAK;AAAA,UACvD;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,MACA,mBAAmB,MAAM;AACrB,YAAI,MAAM;AACN,kBAAQ;AAAA,iBACC,iCAAiC,iBAAiB;AACnD,qBAAO,SAAS,iBAAiB;AAAA,iBAChC,iCAAiC,iBAAiB;AACnD,qBAAO,SAAS,iBAAiB;AAAA,iBAChC,iCAAiC,iBAAiB;AACnD,qBAAO,SAAS,iBAAiB;AAAA;AAAA,QAE7C;AACA,eAAO;AAAA,MACX;AAAA,MACA,gBAAgB,eAAe;AAC3B,YAAI,MAAM,QAAQ,aAAa,GAAG;AAC9B,iBAAO,cAAc,IAAI,OAAK;AAC1B,mBAAO,IAAI,SAAS,aAAa,EAAE,WAAW,EAAE,SAAS,KAAK,mBAAmB,EAAE,IAAI,CAAC;AAAA,UAC5F,CAAC;AAAA,QACL;AACA,eAAO,CAAC;AAAA,MACZ;AAAA,IACJ;AACA,YAAQ,sBAAsB;AAAA;AAAA;;;ACnF9B;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,OAAO;AACb,QAAMC,MAAK;AACX,QAAM,WAAW,QAAQ;AACzB,QAAM,mCAAmC;AACzC,QAAM,WAAW;AACjB,aAAS,OAAO,QAAQ,KAAK;AACzB,UAAI,OAAO,SAAS,QAAQ;AACxB,eAAO,OAAO,CAAC;AAAA,MACnB;AACA,aAAO,OAAO;AAAA,IAClB;AACA,QAAM,qBAAN,cAAiC,SAAS,oBAAoB;AAAA,MAC1D,YAAYC,SAAQ;AAChB,cAAMA,SAAQ,iCAAiC,mBAAmB,IAAI;AAAA,MAC1E;AAAA,MACA,uBAAuB,aAAa;AAChC,YAAI,qBAAqB,OAAO,OAAO,aAAa,cAAc,GAAG,aAAa;AAClF,2BAAmB,sBAAsB;AACzC,2BAAmB,cAAc;AAAA,MACrC;AAAA,MACA,WAAW,cAAc,kBAAkB;AACvC,YAAI,CAAC,aAAa,qBAAqB;AACnC;AAAA,QACJ;AACA,YAAI,aAAa,wBAAwB,MAAM;AAC3C,cAAI,CAAC,kBAAkB;AACnB;AAAA,UACJ;AACA,eAAK,SAAS,KAAK,UAAU;AAAA,YACzB,IAAI,KAAK,aAAa;AAAA,YACtB,iBAAiB,OAAO,OAAO,CAAC,GAAG,EAAE,iBAAmC,CAAC;AAAA,UAC7E,CAAC;AAAA,QACL,OACK;AACD,gBAAM,mBAAmB,aAAa;AACtC,gBAAM,KAAKD,IAAG,OAAO,iBAAiB,EAAE,KAAK,iBAAiB,GAAG,SAAS,IAAI,iBAAiB,KAAK,KAAK,aAAa;AACtH,gBAAM,WAAW,iBAAiB,oBAAoB;AACtD,cAAI,UAAU;AACV,iBAAK,SAAS,KAAK,UAAU;AAAA,cACzB;AAAA,cACA,iBAAiB,OAAO,OAAO,CAAC,GAAG,EAAE,kBAAkB,SAAS,CAAC;AAAA,YACrE,CAAC;AAAA,UACL;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,yBAAyB,SAAS;AAC9B,YAAIC,UAAS,KAAK;AAClB,YAAI,qBAAqB,CAACC,WAAU,UAAU,UAAU;AACpD,iBAAOD,QAAO,YAAY,iCAAiC,mBAAmB,MAAMA,QAAO,uBAAuB,6BAA6BC,WAAU,QAAQ,GAAG,KAAK,EAAE,KAAKD,QAAO,uBAAuB,qBAAqB,CAAC,UAAU;AAC1O,YAAAA,QAAO,iBAAiB,iCAAiC,mBAAmB,MAAM,KAAK;AACvF,mBAAO,QAAQ,QAAQ,IAAI;AAAA,UAC/B,CAAC;AAAA,QACL;AACA,YAAI,aAAaA,QAAO,cAAc;AACtC,eAAO,SAAS,UAAU,4BAA4B,QAAQ,kBAAkB;AAAA,UAC5E,oBAAoB,CAACC,WAAU,UAAU,UAAU;AAC/C,mBAAO,WAAW,qBACZ,WAAW,mBAAmBA,WAAU,UAAU,OAAO,kBAAkB,IAC3E,mBAAmBA,WAAU,UAAU,KAAK;AAAA,UACtD;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,IACJ;AACA,YAAQ,qBAAqB;AAAA;AAAA;;;ACrE7B;AAAA;AAAA;AAKA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,KAAK,QAAQ;AACnB,QAAM,SAAS,QAAQ;AACvB,QAAM,YAAa,QAAQ,aAAa;AACxC,QAAM,cAAe,QAAQ,aAAa;AAC1C,QAAM,UAAW,QAAQ,aAAa;AACtC,aAAS,UAAUC,UAAS,KAAK;AAC7B,UAAI,WAAW;AACX,YAAI;AAIA,cAAI,UAAU;AAAA,YACV,OAAO,CAAC,QAAQ,QAAQ,QAAQ;AAAA,UACpC;AACA,cAAI,KAAK;AACL,oBAAQ,MAAM;AAAA,UAClB;AACA,aAAG,aAAa,YAAY,CAAC,MAAM,MAAM,QAAQA,SAAQ,IAAI,SAAS,CAAC,GAAG,OAAO;AACjF,iBAAO;AAAA,QACX,SACO,KAAP;AACI,iBAAO;AAAA,QACX;AAAA,MACJ,WACS,WAAW,aAAa;AAC7B,YAAI;AACA,cAAI,MAAM,OAAO,KAAK,WAAW,qBAAqB;AACtD,cAAI,SAAS,GAAG,UAAU,KAAK,CAACA,SAAQ,IAAI,SAAS,CAAC,CAAC;AACvD,iBAAO,OAAO,QAAQ,QAAQ;AAAA,QAClC,SACO,KAAP;AACI,iBAAO;AAAA,QACX;AAAA,MACJ,OACK;AACD,QAAAA,SAAQ,KAAK,SAAS;AACtB,eAAO;AAAA,MACX;AAAA,IACJ;AACA,YAAQ,YAAY;AAAA;AAAA;;;AC7CpB,IAAAC,gBAAA;AAAA;AAAA;AAKA,aAASC,UAAS,GAAG;AACjB,eAAS,KAAK;AAAG,YAAI,CAAC,QAAQ,eAAe,CAAC;AAAG,kBAAQ,KAAK,EAAE;AAAA,IACpE;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,KAAK,QAAQ;AACnB,QAAMC,OAAK,QAAQ;AACnB,QAAM,SAAS;AACf,QAAM,WAAW;AACjB,QAAM,WAAW,QAAQ;AACzB,QAAM,mCAAmC;AACzC,QAAM,kBAAkB;AACxB,QAAM,kBAAkB;AACxB,QAAM,mBAAmB;AACzB,QAAM,mBAAmB;AACzB,QAAM,qBAAqB;AAC3B,QAAM,iBAAiB;AACvB,QAAM,gBAAgB;AACtB,QAAMC,MAAK;AACX,QAAM,cAAc;AACpB,IAAAF,UAAS,gBAAmB;AAC5B,QAAM,0BAA0B;AAChC,QAAI;AACJ,KAAC,SAAUG,aAAY;AACnB,eAAS,GAAG,OAAO;AACf,eAAOD,IAAG,OAAO,MAAM,OAAO;AAAA,MAClC;AACA,MAAAC,YAAW,KAAK;AAAA,IACpB,GAAG,eAAe,aAAa,CAAC,EAAE;AAClC,QAAIC;AACJ,KAAC,SAAUA,gBAAe;AACtB,MAAAA,eAAcA,eAAc,WAAW,KAAK;AAC5C,MAAAA,eAAcA,eAAc,SAAS,KAAK;AAC1C,MAAAA,eAAcA,eAAc,UAAU,KAAK;AAC3C,MAAAA,eAAcA,eAAc,YAAY,KAAK;AAAA,IACjD,GAAGA,iBAAgB,QAAQ,kBAAkB,QAAQ,gBAAgB,CAAC,EAAE;AACxE,QAAI;AACJ,KAAC,SAAUC,YAAW;AAClB,eAAS,SAAS,OAAO;AACrB,YAAI,YAAY;AAChB,eAAO,aAAa,UAAU,SAASD,eAAc,UAAUF,IAAG,OAAO,UAAU,IAAI;AAAA,MAC3F;AACA,MAAAG,WAAU,WAAW;AAAA,IACzB,GAAG,cAAc,YAAY,CAAC,EAAE;AAChC,QAAI;AACJ,KAAC,SAAUC,aAAY;AACnB,eAAS,GAAG,OAAO;AACf,eAAOJ,IAAG,OAAO,MAAM,MAAM;AAAA,MACjC;AACA,MAAAI,YAAW,KAAK;AAAA,IACpB,GAAG,eAAe,aAAa,CAAC,EAAE;AAClC,QAAI;AACJ,KAAC,SAAUC,aAAY;AACnB,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,aAAa,UAAU,WAAW,UAAU,UAAU,WAAW;AAAA,MAC5E;AACA,MAAAA,YAAW,KAAK;AAAA,IACpB,GAAG,eAAe,aAAa,CAAC,EAAE;AAClC,QAAI;AACJ,KAAC,SAAUC,mBAAkB;AACzB,eAAS,GAAG,OAAO;AACf,YAAI,YAAY;AAChB,eAAO,aAAa,UAAU,YAAY,UAAU,OAAO,UAAU,aAAa;AAAA,MACtF;AACA,MAAAA,kBAAiB,KAAK;AAAA,IAC1B,GAAG,qBAAqB,mBAAmB,CAAC,EAAE;AAC9C,QAAMC,kBAAN,cAA6B,SAAS,mBAAmB;AAAA,MACrD,YAAY,MAAM,MAAM,MAAM,MAAM,MAAM;AACtC,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAIP,IAAG,OAAO,IAAI,GAAG;AACjB,eAAK;AACL,iBAAO;AACP,0BAAgB;AAChB,0BAAgB;AAChB,uBAAa,CAAC,CAAC;AAAA,QACnB,OACK;AACD,eAAK,KAAK,YAAY;AACtB,iBAAO;AACP,0BAAgB;AAChB,0BAAgB;AAChB,uBAAa;AAAA,QACjB;AACA,YAAI,eAAe,QAAQ;AACvB,uBAAa;AAAA,QACjB;AACA,cAAM,IAAI,MAAM,aAAa;AAC7B,aAAK,iBAAiB;AACtB,aAAK,cAAc;AACnB,YAAI;AACA,eAAK,aAAa;AAAA,QACtB,SACO,OAAP;AACI,cAAIA,IAAG,OAAO,MAAM,OAAO,GAAG;AAC1B,iBAAK,cAAc,WAAW,MAAM,OAAO;AAAA,UAC/C;AACA,gBAAM;AAAA,QACV;AAAA,MACJ;AAAA,MACA,eAAe;AACX,YAAI,cAAc,OAAO,MAAM,SAAS,OAAO;AAC/C,YAAI,CAAC,aAAa;AACd,gBAAM,IAAI,MAAM,yDAAyD,SAAS,SAAS;AAAA,QAC/F;AAEA,YAAI,YAAY,cAAc,YAAY,WAAW,SAAS,GAAG;AAC7D,sBAAY,aAAa,CAAC;AAAA,QAC9B;AACA,YAAI,CAAC,OAAO,UAAU,aAAa,uBAAuB,GAAG;AACzD,gBAAM,IAAI,MAAM,gDAAgD,gDAAgD,SAAS,SAAS;AAAA,QACtI;AAAA,MACJ;AAAA,MACA,OAAO;AACH,eAAO,MAAM,KAAK,EAAE,KAAK,MAAM;AAC3B,cAAI,KAAK,gBAAgB;AACrB,gBAAI,UAAU,KAAK;AACnB,iBAAK,iBAAiB;AACtB,gBAAI,KAAK,gBAAgB,UAAU,CAAC,KAAK,aAAa;AAClD,mBAAK,iBAAiB,OAAO;AAAA,YACjC;AACA,iBAAK,cAAc;AAAA,UACvB;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,MACA,iBAAiB,cAAc;AAC3B,YAAI,CAAC,cAAc;AACf;AAAA,QACJ;AACA,mBAAW,MAAM;AAEb,cAAI;AACA,oBAAQ,KAAK,aAAa,KAAK,CAAC;AAChC,wBAAY,UAAU,YAAY;AAAA,UACtC,SACO,OAAP;AAAA,UAEA;AAAA,QACJ,GAAG,GAAI;AAAA,MACX;AAAA,MACA,yBAAyB;AACrB,aAAK,iBAAiB;AACtB,cAAM,uBAAuB;AAAA,MACjC;AAAA,MACA,wBAAwB,UAAU;AAC9B,iBAAS,eAAe,KAAK;AACzB,cAAI,CAAC,KAAK;AACN,mBAAO,QAAQ;AAAA,UACnB;AACA,cAAI,SAAS,uBAAO,OAAO,IAAI;AAC/B,iBAAO,KAAK,QAAQ,GAAG,EAAE,QAAQ,SAAO,OAAO,OAAO,QAAQ,IAAI,IAAI;AACtE,iBAAO,KAAK,GAAG,EAAE,QAAQ,SAAO,OAAO,OAAO,IAAI,IAAI;AACtD,iBAAO;AAAA,QACX;AACA,iBAAS,qBAAqB;AAC1B,cAAI,OAAO,QAAQ;AACnB,cAAI,MAAM;AACN,mBAAO,KAAK,KAAK,CAAC,QAAQ,aAAa,KAAK,GAAG,KAAK,iBAAiB,KAAK,GAAG,KAAK,eAAe,KAAK,GAAG,KAAK,mBAAmB,KAAK,GAAG,CAAC;AAAA,UAC9I;AACA;AACA,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,KAAK;AAElB,YAAIA,IAAG,KAAK,MAAM,GAAG;AACjB,iBAAO,OAAO,EAAE,KAAK,CAAC,WAAW;AAC7B,gBAAI,SAAS,kBAAkB,GAAG,MAAM,GAAG;AACvC,mBAAK,cAAc,CAAC,CAAC,OAAO;AAC5B,qBAAO;AAAA,YACX,WACS,WAAW,GAAG,MAAM,GAAG;AAC5B,mBAAK,cAAc,CAAC,CAAC,OAAO;AAC5B,qBAAO,EAAE,QAAQ,IAAI,iCAAiC,oBAAoB,OAAO,MAAM,GAAG,QAAQ,IAAI,iCAAiC,oBAAoB,OAAO,MAAM,EAAE;AAAA,YAC9K,OACK;AACD,kBAAIQ;AACJ,kBAAI,iBAAiB,GAAG,MAAM,GAAG;AAC7B,gBAAAA,MAAK,OAAO;AACZ,qBAAK,cAAc,OAAO;AAAA,cAC9B,OACK;AACD,gBAAAA,MAAK;AACL,qBAAK,cAAc;AAAA,cACvB;AACA,cAAAA,IAAG,OAAO,GAAG,QAAQ,UAAQ,KAAK,cAAc,OAAOR,IAAG,OAAO,IAAI,IAAI,OAAO,KAAK,SAAS,QAAQ,CAAC,CAAC;AACxG,qBAAO,EAAE,QAAQ,IAAI,iCAAiC,oBAAoBQ,IAAG,MAAM,GAAG,QAAQ,IAAI,iCAAiC,oBAAoBA,IAAG,KAAK,EAAE;AAAA,YACrK;AAAA,UACJ,CAAC;AAAA,QACL;AACA,YAAI;AACJ,YAAI,WAAW;AACf,YAAI,SAAS,OAAO,SAAS,OAAO;AAEhC,cAAI,OAAO,YAAY,YAAY,KAAK,eAAe,mBAAmB,GAAG;AACzE,mBAAO,SAAS;AAAA,UACpB,OACK;AACD,mBAAO,SAAS;AAAA,UACpB;AAAA,QACJ,OACK;AACD,iBAAO;AAAA,QACX;AACA,eAAO,KAAK,qBAAqB,KAAK,OAAO,EAAE,KAAK,sBAAoB;AACpE,cAAI,WAAW,GAAG,IAAI,KAAK,KAAK,QAAQ;AACpC,gBAAI,OAAO;AACX,gBAAI,YAAY,KAAK,aAAaN,eAAc;AAChD,gBAAI,KAAK,SAAS;AACd,kBAAI,OAAO,CAAC;AACZ,kBAAI,UAAU,KAAK,WAAW,uBAAO,OAAO,IAAI;AAChD,kBAAI,QAAQ,UAAU;AAClB,wBAAQ,SAAS,QAAQ,aAAW,KAAK,KAAK,OAAO,CAAC;AAAA,cAC1D;AACA,mBAAK,KAAK,KAAK,MAAM;AACrB,kBAAI,KAAK,MAAM;AACX,qBAAK,KAAK,QAAQ,aAAW,KAAK,KAAK,OAAO,CAAC;AAAA,cACnD;AACA,kBAAI,cAAc,uBAAO,OAAO,IAAI;AACpC,0BAAY,MAAM;AAClB,0BAAY,MAAM,eAAe,QAAQ,GAAG;AAC5C,kBAAI,WAAW;AACf,kBAAI,cAAcA,eAAc,KAAK;AAEjC,4BAAY,QAAQ,CAAC,MAAM,MAAM,MAAM,KAAK;AAC5C,qBAAK,KAAK,YAAY;AAAA,cAC1B,WACS,cAAcA,eAAc,OAAO;AACxC,qBAAK,KAAK,SAAS;AAAA,cACvB,WACS,cAAcA,eAAc,MAAM;AACvC,2BAAW,iCAAiC,uBAAuB;AACnE,qBAAK,KAAK,UAAU,UAAU;AAAA,cAClC,WACS,UAAU,SAAS,SAAS,GAAG;AACpC,qBAAK,KAAK,YAAY,UAAU,MAAM;AAAA,cAC1C;AACA,mBAAK,KAAK,qBAAqB,QAAQ,IAAI,SAAS,GAAG;AACvD,kBAAI,cAAcA,eAAc,OAAO,cAAcA,eAAc,OAAO;AACtE,oBAAI,gBAAgB,GAAG,MAAM,KAAK,SAAS,MAAM,WAAW;AAC5D,oBAAI,CAAC,iBAAiB,CAAC,cAAc,KAAK;AACtC,yBAAO,QAAQ,OAAO,kCAAkC,KAAK,iBAAiB;AAAA,gBAClF;AACA,qBAAK,iBAAiB;AACtB,8BAAc,OAAO,GAAG,QAAQ,UAAQ,KAAK,cAAc,OAAOF,IAAG,OAAO,IAAI,IAAI,OAAO,KAAK,SAAS,QAAQ,CAAC,CAAC;AACnH,oBAAI,cAAcE,eAAc,KAAK;AACjC,gCAAc,OAAO,GAAG,QAAQ,UAAQ,KAAK,cAAc,OAAOF,IAAG,OAAO,IAAI,IAAI,OAAO,KAAK,SAAS,QAAQ,CAAC,CAAC;AACnH,yBAAO,QAAQ,QAAQ,EAAE,QAAQ,IAAI,iCAAiC,iBAAiB,aAAa,GAAG,QAAQ,IAAI,iCAAiC,iBAAiB,aAAa,EAAE,CAAC;AAAA,gBACzL,OACK;AACD,yBAAO,QAAQ,QAAQ,EAAE,QAAQ,IAAI,iCAAiC,oBAAoB,cAAc,MAAM,GAAG,QAAQ,IAAI,iCAAiC,oBAAoB,cAAc,KAAK,EAAE,CAAC;AAAA,gBAC5M;AAAA,cACJ,WACS,aAAaE,eAAc,MAAM;AACtC,uBAAO,iCAAiC,0BAA0B,QAAQ,EAAE,KAAK,CAACO,eAAc;AAC5F,sBAAIC,WAAU,GAAG,MAAM,KAAK,SAAS,MAAM,WAAW;AACtD,sBAAI,CAACA,YAAW,CAACA,SAAQ,KAAK;AAC1B,2BAAO,QAAQ,OAAO,kCAAkC,KAAK,iBAAiB;AAAA,kBAClF;AACA,uBAAK,iBAAiBA;AACtB,kBAAAA,SAAQ,OAAO,GAAG,QAAQ,UAAQ,KAAK,cAAc,OAAOV,IAAG,OAAO,IAAI,IAAI,OAAO,KAAK,SAAS,QAAQ,CAAC,CAAC;AAC7G,kBAAAU,SAAQ,OAAO,GAAG,QAAQ,UAAQ,KAAK,cAAc,OAAOV,IAAG,OAAO,IAAI,IAAI,OAAO,KAAK,SAAS,QAAQ,CAAC,CAAC;AAC7G,yBAAOS,WAAU,YAAY,EAAE,KAAK,CAAC,aAAa;AAC9C,2BAAO,EAAE,QAAQ,SAAS,IAAI,QAAQ,SAAS,GAAG;AAAA,kBACtD,CAAC;AAAA,gBACL,CAAC;AAAA,cACL,WACS,UAAU,SAAS,SAAS,GAAG;AACpC,uBAAO,iCAAiC,4BAA4B,UAAU,IAAI,EAAE,KAAK,CAACA,eAAc;AACpG,sBAAIC,WAAU,GAAG,MAAM,KAAK,SAAS,MAAM,WAAW;AACtD,sBAAI,CAACA,YAAW,CAACA,SAAQ,KAAK;AAC1B,2BAAO,QAAQ,OAAO,kCAAkC,KAAK,iBAAiB;AAAA,kBAClF;AACA,uBAAK,iBAAiBA;AACtB,kBAAAA,SAAQ,OAAO,GAAG,QAAQ,UAAQ,KAAK,cAAc,OAAOV,IAAG,OAAO,IAAI,IAAI,OAAO,KAAK,SAAS,QAAQ,CAAC,CAAC;AAC7G,kBAAAU,SAAQ,OAAO,GAAG,QAAQ,UAAQ,KAAK,cAAc,OAAOV,IAAG,OAAO,IAAI,IAAI,OAAO,KAAK,SAAS,QAAQ,CAAC,CAAC;AAC7G,yBAAOS,WAAU,YAAY,EAAE,KAAK,CAAC,aAAa;AAC9C,2BAAO,EAAE,QAAQ,SAAS,IAAI,QAAQ,SAAS,GAAG;AAAA,kBACtD,CAAC;AAAA,gBACL,CAAC;AAAA,cACL;AAAA,YACJ,OACK;AACD,kBAAI,WAAW;AACf,qBAAO,IAAI,QAAQ,CAAC,SAAS,YAAY;AACrC,oBAAI,OAAO,KAAK,QAAQ,KAAK,KAAK,MAAM,KAAK,CAAC;AAC9C,oBAAI,cAAcP,eAAc,KAAK;AACjC,uBAAK,KAAK,YAAY;AAAA,gBAC1B,WACS,cAAcA,eAAc,OAAO;AACxC,uBAAK,KAAK,SAAS;AAAA,gBACvB,WACS,cAAcA,eAAc,MAAM;AACvC,6BAAW,iCAAiC,uBAAuB;AACnE,uBAAK,KAAK,UAAU,UAAU;AAAA,gBAClC,WACS,UAAU,SAAS,SAAS,GAAG;AACpC,uBAAK,KAAK,YAAY,UAAU,MAAM;AAAA,gBAC1C;AACA,qBAAK,KAAK,qBAAqB,QAAQ,IAAI,SAAS,GAAG;AACvD,oBAAI,UAAU,KAAK,WAAW,uBAAO,OAAO,IAAI;AAChD,wBAAQ,WAAW,QAAQ,YAAY,CAAC;AACxC,wBAAQ,MAAM;AACd,wBAAQ,SAAS;AACjB,oBAAI,cAAcA,eAAc,OAAO,cAAcA,eAAc,OAAO;AACtE,sBAAI,KAAK,GAAG,KAAK,KAAK,QAAQ,QAAQ,CAAC,GAAG,OAAO;AACjD,uBAAK,iBAAiB;AACtB,qBAAG,OAAO,GAAG,QAAQ,UAAQ,KAAK,cAAc,OAAOF,IAAG,OAAO,IAAI,IAAI,OAAO,KAAK,SAAS,QAAQ,CAAC,CAAC;AACxG,sBAAI,cAAcE,eAAc,KAAK;AACjC,uBAAG,OAAO,GAAG,QAAQ,UAAQ,KAAK,cAAc,OAAOF,IAAG,OAAO,IAAI,IAAI,OAAO,KAAK,SAAS,QAAQ,CAAC,CAAC;AACxG,4BAAQ,EAAE,QAAQ,IAAI,iCAAiC,iBAAiB,KAAK,cAAc,GAAG,QAAQ,IAAI,iCAAiC,iBAAiB,KAAK,cAAc,EAAE,CAAC;AAAA,kBACtL,OACK;AACD,4BAAQ,EAAE,QAAQ,IAAI,iCAAiC,oBAAoB,GAAG,MAAM,GAAG,QAAQ,IAAI,iCAAiC,oBAAoB,GAAG,KAAK,EAAE,CAAC;AAAA,kBACvK;AAAA,gBACJ,WACS,cAAcE,eAAc,MAAM;AACvC,mDAAiC,0BAA0B,QAAQ,EAAE,KAAK,CAACO,eAAc;AACrF,wBAAI,KAAK,GAAG,KAAK,KAAK,QAAQ,QAAQ,CAAC,GAAG,OAAO;AACjD,yBAAK,iBAAiB;AACtB,uBAAG,OAAO,GAAG,QAAQ,UAAQ,KAAK,cAAc,OAAOT,IAAG,OAAO,IAAI,IAAI,OAAO,KAAK,SAAS,QAAQ,CAAC,CAAC;AACxG,uBAAG,OAAO,GAAG,QAAQ,UAAQ,KAAK,cAAc,OAAOA,IAAG,OAAO,IAAI,IAAI,OAAO,KAAK,SAAS,QAAQ,CAAC,CAAC;AACxG,oBAAAS,WAAU,YAAY,EAAE,KAAK,CAAC,aAAa;AACvC,8BAAQ,EAAE,QAAQ,SAAS,IAAI,QAAQ,SAAS,GAAG,CAAC;AAAA,oBACxD,CAAC;AAAA,kBACL,CAAC;AAAA,gBACL,WACS,UAAU,SAAS,SAAS,GAAG;AACpC,mDAAiC,4BAA4B,UAAU,IAAI,EAAE,KAAK,CAACA,eAAc;AAC7F,wBAAI,KAAK,GAAG,KAAK,KAAK,QAAQ,QAAQ,CAAC,GAAG,OAAO;AACjD,yBAAK,iBAAiB;AACtB,uBAAG,OAAO,GAAG,QAAQ,UAAQ,KAAK,cAAc,OAAOT,IAAG,OAAO,IAAI,IAAI,OAAO,KAAK,SAAS,QAAQ,CAAC,CAAC;AACxG,uBAAG,OAAO,GAAG,QAAQ,UAAQ,KAAK,cAAc,OAAOA,IAAG,OAAO,IAAI,IAAI,OAAO,KAAK,SAAS,QAAQ,CAAC,CAAC;AACxG,oBAAAS,WAAU,YAAY,EAAE,KAAK,CAAC,aAAa;AACvC,8BAAQ,EAAE,QAAQ,SAAS,IAAI,QAAQ,SAAS,GAAG,CAAC;AAAA,oBACxD,CAAC;AAAA,kBACL,CAAC;AAAA,gBACL;AAAA,cACJ,CAAC;AAAA,YACL;AAAA,UACJ,WACS,WAAW,GAAG,IAAI,KAAK,KAAK,SAAS;AAC1C,gBAAI,UAAU;AACd,gBAAI,OAAO,QAAQ,QAAQ,CAAC;AAC5B,gBAAI,UAAU,OAAO,OAAO,CAAC,GAAG,QAAQ,OAAO;AAC/C,oBAAQ,MAAM,QAAQ,OAAO;AAC7B,gBAAI,gBAAgB,GAAG,MAAM,QAAQ,SAAS,MAAM,OAAO;AAC3D,gBAAI,CAAC,iBAAiB,CAAC,cAAc,KAAK;AACtC,qBAAO,QAAQ,OAAO,kCAAkC,QAAQ,iBAAiB;AAAA,YACrF;AACA,0BAAc,OAAO,GAAG,QAAQ,UAAQ,KAAK,cAAc,OAAOT,IAAG,OAAO,IAAI,IAAI,OAAO,KAAK,SAAS,QAAQ,CAAC,CAAC;AACnH,iBAAK,iBAAiB;AACtB,iBAAK,cAAc,CAAC,CAAC,QAAQ;AAC7B,mBAAO,QAAQ,QAAQ,EAAE,QAAQ,IAAI,iCAAiC,oBAAoB,cAAc,MAAM,GAAG,QAAQ,IAAI,iCAAiC,oBAAoB,cAAc,KAAK,EAAE,CAAC;AAAA,UAC5M;AACA,iBAAO,QAAQ,OAAO,IAAI,MAAM,sCAAsC,KAAK,UAAU,QAAQ,MAAM,CAAC,CAAC,CAAC;AAAA,QAC1G,CAAC;AAAA,MACL;AAAA,MACA,2BAA2B;AACvB,aAAK,iBAAiB,iBAAiB,UAAU,IAAI,CAAC;AAAA,MAC1D;AAAA,MACA,0BAA0B;AACtB,cAAM,wBAAwB;AAC9B,aAAK,gBAAgB,IAAI,gBAAgB,qBAAqB,IAAI,CAAC;AACnE,aAAK,gBAAgB,IAAI,iBAAiB,sBAAsB,IAAI,CAAC;AACrE,aAAK,gBAAgB,IAAI,iBAAiB,sBAAsB,IAAI,CAAC;AACrE,aAAK,gBAAgB,IAAI,gBAAgB,qBAAqB,IAAI,CAAC;AACnE,aAAK,gBAAgB,IAAI,mBAAmB,wBAAwB,IAAI,CAAC;AACzE,aAAK,gBAAgB,IAAI,eAAe,oBAAoB,IAAI,CAAC;AACjE,aAAK,gBAAgB,IAAI,cAAc,mBAAmB,IAAI,CAAC;AAAA,MACnE;AAAA,MACA,mBAAmB;AACf,YAAI,UAAU,SAAS,UAAU;AACjC,YAAI,CAAC,WAAW,QAAQ,WAAW,GAAG;AAClC,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,QAAQ;AACrB,YAAI,OAAO,IAAI,WAAW,QAAQ;AAC9B,iBAAO,OAAO,IAAI;AAAA,QACtB;AACA,eAAO;AAAA,MACX;AAAA,MACA,qBAAqB,SAAS;AAC1B,YAAI,MAAM,WAAW,QAAQ;AAC7B,YAAI,CAAC,KAAK;AACN,gBAAM,KAAK,cAAc,kBACnB,KAAK,cAAc,gBAAgB,IAAI,SACvC,KAAK,iBAAiB;AAAA,QAChC;AACA,YAAI,KAAK;AAEL,iBAAO,IAAI,QAAQ,OAAK;AACpB,YAAAD,KAAG,MAAM,KAAK,CAAC,KAAK,UAAU;AAC1B,gBAAE,CAAC,OAAO,MAAM,YAAY,IAAI,MAAM,MAAS;AAAA,YACnD,CAAC;AAAA,UACL,CAAC;AAAA,QACL;AACA,eAAO,QAAQ,QAAQ,MAAS;AAAA,MACpC;AAAA,IACJ;AACA,YAAQ,iBAAiBQ;AACzB,QAAM,iBAAN,MAAqB;AAAA,MACjB,YAAY,SAAS,UAAU;AAC3B,aAAK,UAAU;AACf,aAAK,WAAW;AAChB,aAAK,aAAa,CAAC;AAAA,MACvB;AAAA,MACA,QAAQ;AACJ,iBAAS,UAAU,yBAAyB,KAAK,0BAA0B,MAAM,KAAK,UAAU;AAChG,aAAK,yBAAyB;AAC9B,eAAO,IAAI,SAAS,WAAW,MAAM;AACjC,cAAI,KAAK,QAAQ,UAAU,GAAG;AAC1B,iBAAK,QAAQ,KAAK;AAAA,UACtB;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,MACA,2BAA2B;AACvB,YAAI,QAAQ,KAAK,SAAS,QAAQ,GAAG;AACrC,YAAI,UAAU,SAAS,IAAI,KAAK,SAAS,OAAO,GAAG,KAAK,IAAI,KAAK;AACjE,YAAI,OAAO,SAAS,IAAI,KAAK,SAAS,OAAO,QAAQ,CAAC,IAAI;AAC1D,YAAI,UAAU,OAAO,SAAS,UAAU,iBAAiB,OAAO,EAAE,IAAI,MAAM,KAAK,IAAI,SAAS,UAAU,iBAAiB,OAAO;AAChI,YAAI,WAAW,KAAK,QAAQ,WAAW,GAAG;AACtC,eAAK,QAAQ,MAAM;AAAA,QACvB,WACS,CAAC,WAAW,KAAK,QAAQ,UAAU,GAAG;AAC3C,eAAK,QAAQ,KAAK;AAAA,QACtB;AAAA,MACJ;AAAA,IACJ;AACA,YAAQ,iBAAiB;AAEzB,QAAI;AACJ,KAAC,SAAUI,mBAAkB;AACzB,eAAS,UAAU,SAAS;AACxB,YAAI,SAAS,CAAC;AACd,eAAO;AAAA,MACX;AACA,MAAAA,kBAAiB,YAAY;AAAA,IACjC,GAAG,mBAAmB,QAAQ,qBAAqB,QAAQ,mBAAmB,CAAC,EAAE;AAAA;AAAA;;;AC7bjF;AAAA,2CAAAC,SAAA;AAAA,IAAAA,QAAO,UAAU;AACjB,UAAM,OAAO;AAEb,QAAIC,OAAK,QAAQ;AAEjB,aAAS,aAAcC,QAAM,SAAS;AACpC,UAAI,UAAU,QAAQ,YAAY,SAChC,QAAQ,UAAU,QAAQ,IAAI;AAEhC,UAAI,CAAC,SAAS;AACZ,eAAO;AAAA,MACT;AAEA,gBAAU,QAAQ,MAAM,GAAG;AAC3B,UAAI,QAAQ,QAAQ,EAAE,MAAM,IAAI;AAC9B,eAAO;AAAA,MACT;AACA,eAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,YAAI,IAAI,QAAQ,GAAG,YAAY;AAC/B,YAAI,KAAKA,OAAK,OAAO,CAAC,EAAE,MAAM,EAAE,YAAY,MAAM,GAAG;AACnD,iBAAO;AAAA,QACT;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAEA,aAAS,UAAW,MAAMA,QAAM,SAAS;AACvC,UAAI,CAAC,KAAK,eAAe,KAAK,CAAC,KAAK,OAAO,GAAG;AAC5C,eAAO;AAAA,MACT;AACA,aAAO,aAAaA,QAAM,OAAO;AAAA,IACnC;AAEA,aAAS,MAAOA,QAAM,SAAS,IAAI;AACjC,MAAAD,KAAG,KAAKC,QAAM,SAAU,IAAI,MAAM;AAChC,WAAG,IAAI,KAAK,QAAQ,UAAU,MAAMA,QAAM,OAAO,CAAC;AAAA,MACpD,CAAC;AAAA,IACH;AAEA,aAAS,KAAMA,QAAM,SAAS;AAC5B,aAAO,UAAUD,KAAG,SAASC,MAAI,GAAGA,QAAM,OAAO;AAAA,IACnD;AAAA;AAAA;;;ACzCA;AAAA,wCAAAC,SAAA;AAAA,IAAAA,QAAO,UAAU;AACjB,UAAM,OAAO;AAEb,QAAIC,OAAK,QAAQ;AAEjB,aAAS,MAAOC,QAAM,SAAS,IAAI;AACjC,MAAAD,KAAG,KAAKC,QAAM,SAAU,IAAI,MAAM;AAChC,WAAG,IAAI,KAAK,QAAQ,UAAU,MAAM,OAAO,CAAC;AAAA,MAC9C,CAAC;AAAA,IACH;AAEA,aAAS,KAAMA,QAAM,SAAS;AAC5B,aAAO,UAAUD,KAAG,SAASC,MAAI,GAAG,OAAO;AAAA,IAC7C;AAEA,aAAS,UAAW,MAAM,SAAS;AACjC,aAAO,KAAK,OAAO,KAAK,UAAU,MAAM,OAAO;AAAA,IACjD;AAEA,aAAS,UAAW,MAAM,SAAS;AACjC,UAAI,MAAM,KAAK;AACf,UAAI,MAAM,KAAK;AACf,UAAI,MAAM,KAAK;AAEf,UAAI,QAAQ,QAAQ,QAAQ,SAC1B,QAAQ,MAAM,QAAQ,UAAU,QAAQ,OAAO;AACjD,UAAI,QAAQ,QAAQ,QAAQ,SAC1B,QAAQ,MAAM,QAAQ,UAAU,QAAQ,OAAO;AAEjD,UAAI,IAAI,SAAS,OAAO,CAAC;AACzB,UAAI,IAAI,SAAS,OAAO,CAAC;AACzB,UAAI,IAAI,SAAS,OAAO,CAAC;AACzB,UAAI,KAAK,IAAI;AAEb,UAAI,MAAO,MAAM,KACd,MAAM,KAAM,QAAQ,SACpB,MAAM,KAAM,QAAQ,SACpB,MAAM,MAAO,UAAU;AAE1B,aAAO;AAAA,IACT;AAAA;AAAA;;;ACxCA;AAAA,yCAAAC,SAAA;AAAA,QAAIC,OAAK,QAAQ;AACjB,QAAI;AACJ,QAAI,QAAQ,aAAa,WAAW,OAAO,iBAAiB;AAC1D,aAAO;AAAA,IACT,OAAO;AACL,aAAO;AAAA,IACT;AAEA,IAAAD,QAAO,UAAU;AACjB,UAAM,OAAO;AAEb,aAAS,MAAOE,QAAM,SAAS,IAAI;AACjC,UAAI,OAAO,YAAY,YAAY;AACjC,aAAK;AACL,kBAAU,CAAC;AAAA,MACb;AAEA,UAAI,CAAC,IAAI;AACP,YAAI,OAAO,YAAY,YAAY;AACjC,gBAAM,IAAI,UAAU,uBAAuB;AAAA,QAC7C;AAEA,eAAO,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAC5C,gBAAMA,QAAM,WAAW,CAAC,GAAG,SAAU,IAAI,IAAI;AAC3C,gBAAI,IAAI;AACN,qBAAO,EAAE;AAAA,YACX,OAAO;AACL,sBAAQ,EAAE;AAAA,YACZ;AAAA,UACF,CAAC;AAAA,QACH,CAAC;AAAA,MACH;AAEA,WAAKA,QAAM,WAAW,CAAC,GAAG,SAAU,IAAI,IAAI;AAE1C,YAAI,IAAI;AACN,cAAI,GAAG,SAAS,YAAY,WAAW,QAAQ,cAAc;AAC3D,iBAAK;AACL,iBAAK;AAAA,UACP;AAAA,QACF;AACA,WAAG,IAAI,EAAE;AAAA,MACX,CAAC;AAAA,IACH;AAEA,aAAS,KAAMA,QAAM,SAAS;AAE5B,UAAI;AACF,eAAO,KAAK,KAAKA,QAAM,WAAW,CAAC,CAAC;AAAA,MACtC,SAAS,IAAP;AACA,YAAI,WAAW,QAAQ,gBAAgB,GAAG,SAAS,UAAU;AAC3D,iBAAO;AAAA,QACT,OAAO;AACL,gBAAM;AAAA,QACR;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACxDA;AAAA,yCAAAC,SAAA;AAAA,QAAM,YAAY,QAAQ,aAAa,WACnC,QAAQ,IAAI,WAAW,YACvB,QAAQ,IAAI,WAAW;AAE3B,QAAMC,SAAO,QAAQ;AACrB,QAAM,QAAQ,YAAY,MAAM;AAChC,QAAM,QAAQ;AAEd,QAAM,mBAAmB,CAAC,QACxB,OAAO,OAAO,IAAI,MAAM,cAAc,KAAK,GAAG,EAAE,MAAM,SAAS,CAAC;AAElE,QAAM,cAAc,CAAC,KAAK,QAAQ;AAChC,YAAM,QAAQ,IAAI,SAAS;AAI3B,YAAM,UAAU,IAAI,MAAM,IAAI,KAAK,aAAa,IAAI,MAAM,IAAI,IAAI,CAAC,EAAE,IAEjE;AAAA,QAEE,GAAI,YAAY,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC;AAAA,QACnC,IAAI,IAAI,QAAQ,QAAQ,IAAI,QACe,IAAI,MAAM,KAAK;AAAA,MAC5D;AAEJ,YAAM,aAAa,YACf,IAAI,WAAW,QAAQ,IAAI,WAAW,wBACtC;AACJ,YAAM,UAAU,YAAY,WAAW,MAAM,KAAK,IAAI,CAAC,EAAE;AAEzD,UAAI,WAAW;AACb,YAAI,IAAI,QAAQ,GAAG,MAAM,MAAM,QAAQ,OAAO;AAC5C,kBAAQ,QAAQ,EAAE;AAAA,MACtB;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAEA,QAAMC,SAAQ,CAAC,KAAK,KAAK,OAAO;AAC9B,UAAI,OAAO,QAAQ,YAAY;AAC7B,aAAK;AACL,cAAM,CAAC;AAAA,MACT;AACA,UAAI,CAAC;AACH,cAAM,CAAC;AAET,YAAM,EAAE,SAAS,SAAS,WAAW,IAAI,YAAY,KAAK,GAAG;AAC7D,YAAM,QAAQ,CAAC;AAEf,YAAM,OAAO,OAAK,IAAI,QAAQ,CAAC,SAAS,WAAW;AACjD,YAAI,MAAM,QAAQ;AAChB,iBAAO,IAAI,OAAO,MAAM,SAAS,QAAQ,KAAK,IAC1C,OAAO,iBAAiB,GAAG,CAAC;AAElC,cAAM,QAAQ,QAAQ;AACtB,cAAM,WAAW,SAAS,KAAK,KAAK,IAAI,MAAM,MAAM,GAAG,EAAE,IAAI;AAE7D,cAAM,OAAOD,OAAK,KAAK,UAAU,GAAG;AACpC,cAAM,IAAI,CAAC,YAAY,YAAY,KAAK,GAAG,IAAI,IAAI,MAAM,GAAG,CAAC,IAAI,OAC7D;AAEJ,gBAAQ,QAAQ,GAAG,GAAG,CAAC,CAAC;AAAA,MAC1B,CAAC;AAED,YAAM,UAAU,CAAC,GAAG,GAAG,OAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AAC7D,YAAI,OAAO,QAAQ;AACjB,iBAAO,QAAQ,KAAK,IAAI,CAAC,CAAC;AAC5B,cAAM,MAAM,QAAQ;AACpB,cAAM,IAAI,KAAK,EAAE,SAAS,WAAW,GAAG,CAAC,IAAI,OAAO;AAClD,cAAI,CAAC,MAAM,IAAI;AACb,gBAAI,IAAI;AACN,oBAAM,KAAK,IAAI,GAAG;AAAA;AAElB,qBAAO,QAAQ,IAAI,GAAG;AAAA,UAC1B;AACA,iBAAO,QAAQ,QAAQ,GAAG,GAAG,KAAK,CAAC,CAAC;AAAA,QACtC,CAAC;AAAA,MACH,CAAC;AAED,aAAO,KAAK,KAAK,CAAC,EAAE,KAAK,SAAO,GAAG,MAAM,GAAG,GAAG,EAAE,IAAI,KAAK,CAAC;AAAA,IAC7D;AAEA,QAAM,YAAY,CAAC,KAAK,QAAQ;AAC9B,YAAM,OAAO,CAAC;AAEd,YAAM,EAAE,SAAS,SAAS,WAAW,IAAI,YAAY,KAAK,GAAG;AAC7D,YAAM,QAAQ,CAAC;AAEf,eAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAM;AACxC,cAAM,QAAQ,QAAQ;AACtB,cAAM,WAAW,SAAS,KAAK,KAAK,IAAI,MAAM,MAAM,GAAG,EAAE,IAAI;AAE7D,cAAM,OAAOA,OAAK,KAAK,UAAU,GAAG;AACpC,cAAM,IAAI,CAAC,YAAY,YAAY,KAAK,GAAG,IAAI,IAAI,MAAM,GAAG,CAAC,IAAI,OAC7D;AAEJ,iBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAM;AACxC,gBAAM,MAAM,IAAI,QAAQ;AACxB,cAAI;AACF,kBAAM,KAAK,MAAM,KAAK,KAAK,EAAE,SAAS,WAAW,CAAC;AAClD,gBAAI,IAAI;AACN,kBAAI,IAAI;AACN,sBAAM,KAAK,GAAG;AAAA;AAEd,uBAAO;AAAA,YACX;AAAA,UACF,SAAS,IAAP;AAAA,UAAY;AAAA,QAChB;AAAA,MACF;AAEA,UAAI,IAAI,OAAO,MAAM;AACnB,eAAO;AAET,UAAI,IAAI;AACN,eAAO;AAET,YAAM,iBAAiB,GAAG;AAAA,IAC5B;AAEA,IAAAD,QAAO,UAAUE;AACjB,IAAAA,OAAM,OAAO;AAAA;AAAA;;;AC5Hb;AAAA;AAqBA,QAAI,aAAa,QAAQ;AACzB,QAAI,YAAY,QAAQ,aAAa;AACrC,QAAIC,OAAK,QAAQ;AAIjB,QAAI,QAAQ,QAAQ,IAAI,cAAc,KAAK,KAAK,QAAQ,IAAI,UAAU;AAEtE,aAAS,UAAU;AAGjB,UAAI;AACJ,UAAI,OAAO;AACT,YAAI,YAAY,IAAI;AACpB,mBAAW;AAAA,MACb;AACE,mBAAW;AAEb,aAAO;AAEP,eAAS,cAAc,KAAK;AAC1B,YAAI,KAAK;AACP,oBAAU,UAAU,IAAI;AACxB,gBAAM;AACN,0BAAgB,GAAG;AAAA,QACrB;AAAA,MACF;AAEA,eAAS,gBAAgB,KAAK;AAC5B,YAAI,KAAK;AACP,cAAI,QAAQ;AACV,kBAAM;AAAA,mBACC,CAAC,QAAQ,eAAe;AAC/B,gBAAI,MAAM,2BAA2B,IAAI,SAAS,IAAI;AACtD,gBAAI,QAAQ;AACV,sBAAQ,MAAM,GAAG;AAAA;AAEjB,sBAAQ,MAAM,GAAG;AAAA,UACrB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,aAAS,cAAc,IAAI;AACzB,aAAO,OAAO,OAAO,aAAa,KAAK,QAAQ;AAAA,IACjD;AAEA,QAAI,YAAY,WAAW;AAI3B,QAAI,WAAW;AACT,mBAAa;AAAA,IACnB,OAAO;AACD,mBAAa;AAAA,IACnB;AAHM;AAMN,QAAI,WAAW;AACT,oBAAc;AAAA,IACpB,OAAO;AACD,oBAAc;AAAA,IACpB;AAHM;AAKN,YAAQ,eAAe,SAAS,aAAa,GAAG,OAAO;AAErD,UAAI,WAAW,QAAQ,CAAC;AAExB,UAAI,SAAS,OAAO,UAAU,eAAe,KAAK,OAAO,CAAC,GAAG;AAC3D,eAAO,MAAM;AAAA,MACf;AAEA,UAAI,WAAW,GACX,YAAY,CAAC,GACb,YAAY,CAAC;AAGjB,UAAI;AAEJ,UAAI;AAEJ,UAAI;AAEJ,UAAI;AAEJ,YAAM;AAEN,eAAS,QAAQ;AAEf,YAAI,IAAI,YAAY,KAAK,CAAC;AAC1B,cAAM,EAAE,GAAG;AACX,kBAAU,EAAE;AACZ,eAAO,EAAE;AACT,mBAAW;AAGX,YAAI,aAAa,CAAC,UAAU,OAAO;AACjC,UAAAA,KAAG,UAAU,IAAI;AACjB,oBAAU,QAAQ;AAAA,QACpB;AAAA,MACF;AAKA,aAAO,MAAM,EAAE,QAAQ;AAErB,mBAAW,YAAY;AACvB,YAAI,SAAS,WAAW,KAAK,CAAC;AAC9B,mBAAW;AACX,mBAAW,OAAO;AAClB,eAAO,WAAW,OAAO;AACzB,cAAM,WAAW;AAGjB,YAAI,UAAU,SAAU,SAAS,MAAM,UAAU,MAAO;AACtD;AAAA,QACF;AAEA,YAAI;AACJ,YAAI,SAAS,OAAO,UAAU,eAAe,KAAK,OAAO,IAAI,GAAG;AAE9D,yBAAe,MAAM;AAAA,QACvB,OAAO;AACL,cAAI,OAAOA,KAAG,UAAU,IAAI;AAC5B,cAAI,CAAC,KAAK,eAAe,GAAG;AAC1B,sBAAU,QAAQ;AAClB,gBAAI;AAAO,oBAAM,QAAQ;AACzB;AAAA,UACF;AAIA,cAAI,aAAa;AACjB,cAAI,CAAC,WAAW;AACd,gBAAI,KAAK,KAAK,IAAI,SAAS,EAAE,IAAI,MAAM,KAAK,IAAI,SAAS,EAAE;AAC3D,gBAAI,UAAU,eAAe,EAAE,GAAG;AAChC,2BAAa,UAAU;AAAA,YACzB;AAAA,UACF;AACA,cAAI,eAAe,MAAM;AACvB,YAAAA,KAAG,SAAS,IAAI;AAChB,yBAAaA,KAAG,aAAa,IAAI;AAAA,UACnC;AACA,yBAAe,WAAW,QAAQ,UAAU,UAAU;AAEtD,cAAI;AAAO,kBAAM,QAAQ;AACzB,cAAI,CAAC;AAAW,sBAAU,MAAM;AAAA,QAClC;AAGA,YAAI,WAAW,QAAQ,cAAc,EAAE,MAAM,GAAG,CAAC;AACjD,cAAM;AAAA,MACR;AAEA,UAAI;AAAO,cAAM,YAAY;AAE7B,aAAO;AAAA,IACT;AAGA,YAAQ,WAAW,SAAS,SAAS,GAAG,OAAO,IAAI;AACjD,UAAI,OAAO,OAAO,YAAY;AAC5B,aAAK,cAAc,KAAK;AACxB,gBAAQ;AAAA,MACV;AAGA,UAAI,WAAW,QAAQ,CAAC;AAExB,UAAI,SAAS,OAAO,UAAU,eAAe,KAAK,OAAO,CAAC,GAAG;AAC3D,eAAO,QAAQ,SAAS,GAAG,KAAK,MAAM,MAAM,MAAM,EAAE,CAAC;AAAA,MACvD;AAEA,UAAI,WAAW,GACX,YAAY,CAAC,GACb,YAAY,CAAC;AAGjB,UAAI;AAEJ,UAAI;AAEJ,UAAI;AAEJ,UAAI;AAEJ,YAAM;AAEN,eAAS,QAAQ;AAEf,YAAI,IAAI,YAAY,KAAK,CAAC;AAC1B,cAAM,EAAE,GAAG;AACX,kBAAU,EAAE;AACZ,eAAO,EAAE;AACT,mBAAW;AAGX,YAAI,aAAa,CAAC,UAAU,OAAO;AACjC,UAAAA,KAAG,MAAM,MAAM,SAAS,KAAK;AAC3B,gBAAI;AAAK,qBAAO,GAAG,GAAG;AACtB,sBAAU,QAAQ;AAClB,iBAAK;AAAA,UACP,CAAC;AAAA,QACH,OAAO;AACL,kBAAQ,SAAS,IAAI;AAAA,QACvB;AAAA,MACF;AAIA,eAAS,OAAO;AAEd,YAAI,OAAO,EAAE,QAAQ;AACnB,cAAI;AAAO,kBAAM,YAAY;AAC7B,iBAAO,GAAG,MAAM,CAAC;AAAA,QACnB;AAGA,mBAAW,YAAY;AACvB,YAAI,SAAS,WAAW,KAAK,CAAC;AAC9B,mBAAW;AACX,mBAAW,OAAO;AAClB,eAAO,WAAW,OAAO;AACzB,cAAM,WAAW;AAGjB,YAAI,UAAU,SAAU,SAAS,MAAM,UAAU,MAAO;AACtD,iBAAO,QAAQ,SAAS,IAAI;AAAA,QAC9B;AAEA,YAAI,SAAS,OAAO,UAAU,eAAe,KAAK,OAAO,IAAI,GAAG;AAE9D,iBAAO,gBAAgB,MAAM,KAAK;AAAA,QACpC;AAEA,eAAOA,KAAG,MAAM,MAAM,OAAO;AAAA,MAC/B;AAEA,eAAS,QAAQ,KAAK,MAAM;AAC1B,YAAI;AAAK,iBAAO,GAAG,GAAG;AAGtB,YAAI,CAAC,KAAK,eAAe,GAAG;AAC1B,oBAAU,QAAQ;AAClB,cAAI;AAAO,kBAAM,QAAQ;AACzB,iBAAO,QAAQ,SAAS,IAAI;AAAA,QAC9B;AAKA,YAAI,CAAC,WAAW;AACd,cAAI,KAAK,KAAK,IAAI,SAAS,EAAE,IAAI,MAAM,KAAK,IAAI,SAAS,EAAE;AAC3D,cAAI,UAAU,eAAe,EAAE,GAAG;AAChC,mBAAO,UAAU,MAAM,UAAU,KAAK,IAAI;AAAA,UAC5C;AAAA,QACF;AACA,QAAAA,KAAG,KAAK,MAAM,SAASC,MAAK;AAC1B,cAAIA;AAAK,mBAAO,GAAGA,IAAG;AAEtB,UAAAD,KAAG,SAAS,MAAM,SAASC,MAAK,QAAQ;AACtC,gBAAI,CAAC;AAAW,wBAAU,MAAM;AAChC,sBAAUA,MAAK,MAAM;AAAA,UACvB,CAAC;AAAA,QACH,CAAC;AAAA,MACH;AAEA,eAAS,UAAU,KAAK,QAAQC,OAAM;AACpC,YAAI;AAAK,iBAAO,GAAG,GAAG;AAEtB,YAAI,eAAe,WAAW,QAAQ,UAAU,MAAM;AACtD,YAAI;AAAO,gBAAMA,SAAQ;AACzB,wBAAgB,YAAY;AAAA,MAC9B;AAEA,eAAS,gBAAgB,cAAc;AAErC,YAAI,WAAW,QAAQ,cAAc,EAAE,MAAM,GAAG,CAAC;AACjD,cAAM;AAAA,MACR;AAAA,IACF;AAAA;AAAA;;;AC9SA;AAAA,+CAAAC,SAAA;AAAA,IAAAA,QAAO,UAAU;AACjB,aAAS,WAAW;AACpB,aAAS,OAAO;AAChB,aAAS,eAAe;AACxB,aAAS,cAAc;AACvB,aAAS,gBAAgB;AAEzB,QAAIC,OAAK,QAAQ;AACjB,QAAI,eAAeA,KAAG;AACtB,QAAI,mBAAmBA,KAAG;AAE1B,QAAI,UAAU,QAAQ;AACtB,QAAI,KAAK,YAAY,KAAK,OAAO;AACjC,QAAI,MAAM;AAEV,aAAS,SAAU,IAAI;AACrB,aAAO,MAAM,GAAG,YAAY,eAC1B,GAAG,SAAS,WACZ,GAAG,SAAS,YACZ,GAAG,SAAS;AAAA,IAEhB;AAEA,aAAS,SAAU,GAAG,OAAO,IAAI;AAC/B,UAAI,IAAI;AACN,eAAO,aAAa,GAAG,OAAO,EAAE;AAAA,MAClC;AAEA,UAAI,OAAO,UAAU,YAAY;AAC/B,aAAK;AACL,gBAAQ;AAAA,MACV;AACA,mBAAa,GAAG,OAAO,SAAU,IAAI,QAAQ;AAC3C,YAAI,SAAS,EAAE,GAAG;AAChB,cAAI,SAAS,GAAG,OAAO,EAAE;AAAA,QAC3B,OAAO;AACL,aAAG,IAAI,MAAM;AAAA,QACf;AAAA,MACF,CAAC;AAAA,IACH;AAEA,aAAS,aAAc,GAAG,OAAO;AAC/B,UAAI,IAAI;AACN,eAAO,iBAAiB,GAAG,KAAK;AAAA,MAClC;AAEA,UAAI;AACF,eAAO,iBAAiB,GAAG,KAAK;AAAA,MAClC,SAAS,IAAP;AACA,YAAI,SAAS,EAAE,GAAG;AAChB,iBAAO,IAAI,aAAa,GAAG,KAAK;AAAA,QAClC,OAAO;AACL,gBAAM;AAAA,QACR;AAAA,MACF;AAAA,IACF;AAEA,aAAS,cAAe;AACtB,MAAAA,KAAG,WAAW;AACd,MAAAA,KAAG,eAAe;AAAA,IACpB;AAEA,aAAS,gBAAiB;AACxB,MAAAA,KAAG,WAAW;AACd,MAAAA,KAAG,eAAe;AAAA,IACpB;AAAA;AAAA;;;ACjEA;AAAA,8CAAAC,SAAA;AAAA,IAAAA,QAAO,UAAU,SAAU,IAAI,IAAI;AAC/B,UAAI,MAAM,CAAC;AACX,eAAS,IAAI,GAAG,IAAI,GAAG,QAAQ,KAAK;AAChC,YAAI,IAAI,GAAG,GAAG,IAAI,CAAC;AACnB,YAAIC,SAAQ,CAAC;AAAG,cAAI,KAAK,MAAM,KAAK,CAAC;AAAA;AAChC,cAAI,KAAK,CAAC;AAAA,MACnB;AACA,aAAO;AAAA,IACX;AAEA,QAAIA,WAAU,MAAM,WAAW,SAAU,IAAI;AACzC,aAAO,OAAO,UAAU,SAAS,KAAK,EAAE,MAAM;AAAA,IAClD;AAAA;AAAA;;;ACZA;AAAA,kDAAAC,SAAA;AAAA;AACA,IAAAA,QAAO,UAAU;AACjB,aAAS,SAAS,GAAG,GAAG,KAAK;AAC3B,UAAI,aAAa;AAAQ,YAAI,WAAW,GAAG,GAAG;AAC9C,UAAI,aAAa;AAAQ,YAAI,WAAW,GAAG,GAAG;AAE9C,UAAI,IAAI,MAAM,GAAG,GAAG,GAAG;AAEvB,aAAO,KAAK;AAAA,QACV,OAAO,EAAE;AAAA,QACT,KAAK,EAAE;AAAA,QACP,KAAK,IAAI,MAAM,GAAG,EAAE,EAAE;AAAA,QACtB,MAAM,IAAI,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE;AAAA,QACrC,MAAM,IAAI,MAAM,EAAE,KAAK,EAAE,MAAM;AAAA,MACjC;AAAA,IACF;AAEA,aAAS,WAAW,KAAK,KAAK;AAC5B,UAAI,IAAI,IAAI,MAAM,GAAG;AACrB,aAAO,IAAI,EAAE,KAAK;AAAA,IACpB;AAEA,aAAS,QAAQ;AACjB,aAAS,MAAM,GAAG,GAAG,KAAK;AACxB,UAAI,MAAM,KAAK,MAAM,OAAO;AAC5B,UAAI,KAAK,IAAI,QAAQ,CAAC;AACtB,UAAI,KAAK,IAAI,QAAQ,GAAG,KAAK,CAAC;AAC9B,UAAI,IAAI;AAER,UAAI,MAAM,KAAK,KAAK,GAAG;AACrB,YAAG,MAAI,GAAG;AACR,iBAAO,CAAC,IAAI,EAAE;AAAA,QAChB;AACA,eAAO,CAAC;AACR,eAAO,IAAI;AAEX,eAAO,KAAK,KAAK,CAAC,QAAQ;AACxB,cAAI,KAAK,IAAI;AACX,iBAAK,KAAK,CAAC;AACX,iBAAK,IAAI,QAAQ,GAAG,IAAI,CAAC;AAAA,UAC3B,WAAW,KAAK,UAAU,GAAG;AAC3B,qBAAS,CAAE,KAAK,IAAI,GAAG,EAAG;AAAA,UAC5B,OAAO;AACL,kBAAM,KAAK,IAAI;AACf,gBAAI,MAAM,MAAM;AACd,qBAAO;AACP,sBAAQ;AAAA,YACV;AAEA,iBAAK,IAAI,QAAQ,GAAG,IAAI,CAAC;AAAA,UAC3B;AAEA,cAAI,KAAK,MAAM,MAAM,IAAI,KAAK;AAAA,QAChC;AAEA,YAAI,KAAK,QAAQ;AACf,mBAAS,CAAE,MAAM,KAAM;AAAA,QACzB;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;;;AC7DA;AAAA,mDAAAC,SAAA;AAAA,QAAI,YAAY;AAChB,QAAI,WAAW;AAEf,IAAAA,QAAO,UAAU;AAEjB,QAAI,WAAW,YAAU,KAAK,OAAO,IAAE;AACvC,QAAI,UAAU,WAAS,KAAK,OAAO,IAAE;AACrC,QAAI,WAAW,YAAU,KAAK,OAAO,IAAE;AACvC,QAAI,WAAW,YAAU,KAAK,OAAO,IAAE;AACvC,QAAI,YAAY,aAAW,KAAK,OAAO,IAAE;AAEzC,aAAS,QAAQ,KAAK;AACpB,aAAO,SAAS,KAAK,EAAE,KAAK,MACxB,SAAS,KAAK,EAAE,IAChB,IAAI,WAAW,CAAC;AAAA,IACtB;AAEA,aAAS,aAAa,KAAK;AACzB,aAAO,IAAI,MAAM,MAAM,EAAE,KAAK,QAAQ,EAC3B,MAAM,KAAK,EAAE,KAAK,OAAO,EACzB,MAAM,KAAK,EAAE,KAAK,QAAQ,EAC1B,MAAM,KAAK,EAAE,KAAK,QAAQ,EAC1B,MAAM,KAAK,EAAE,KAAK,SAAS;AAAA,IACxC;AAEA,aAAS,eAAe,KAAK;AAC3B,aAAO,IAAI,MAAM,QAAQ,EAAE,KAAK,IAAI,EACzB,MAAM,OAAO,EAAE,KAAK,GAAG,EACvB,MAAM,QAAQ,EAAE,KAAK,GAAG,EACxB,MAAM,QAAQ,EAAE,KAAK,GAAG,EACxB,MAAM,SAAS,EAAE,KAAK,GAAG;AAAA,IACtC;AAMA,aAAS,gBAAgB,KAAK;AAC5B,UAAI,CAAC;AACH,eAAO,CAAC,EAAE;AAEZ,UAAI,QAAQ,CAAC;AACb,UAAI,IAAI,SAAS,KAAK,KAAK,GAAG;AAE9B,UAAI,CAAC;AACH,eAAO,IAAI,MAAM,GAAG;AAEtB,UAAI,MAAM,EAAE;AACZ,UAAI,OAAO,EAAE;AACb,UAAI,OAAO,EAAE;AACb,UAAI,IAAI,IAAI,MAAM,GAAG;AAErB,QAAE,EAAE,SAAO,MAAM,MAAM,OAAO;AAC9B,UAAI,YAAY,gBAAgB,IAAI;AACpC,UAAI,KAAK,QAAQ;AACf,UAAE,EAAE,SAAO,MAAM,UAAU,MAAM;AACjC,UAAE,KAAK,MAAM,GAAG,SAAS;AAAA,MAC3B;AAEA,YAAM,KAAK,MAAM,OAAO,CAAC;AAEzB,aAAO;AAAA,IACT;AAEA,aAAS,UAAU,KAAK;AACtB,UAAI,CAAC;AACH,eAAO,CAAC;AAQV,UAAI,IAAI,OAAO,GAAG,CAAC,MAAM,MAAM;AAC7B,cAAM,WAAW,IAAI,OAAO,CAAC;AAAA,MAC/B;AAEA,aAAO,OAAO,aAAa,GAAG,GAAG,IAAI,EAAE,IAAI,cAAc;AAAA,IAC3D;AAMA,aAAS,QAAQ,KAAK;AACpB,aAAO,MAAM,MAAM;AAAA,IACrB;AACA,aAAS,SAAS,IAAI;AACpB,aAAO,SAAS,KAAK,EAAE;AAAA,IACzB;AAEA,aAAS,IAAI,GAAG,GAAG;AACjB,aAAO,KAAK;AAAA,IACd;AACA,aAAS,IAAI,GAAG,GAAG;AACjB,aAAO,KAAK;AAAA,IACd;AAEA,aAAS,OAAO,KAAK,OAAO;AAC1B,UAAI,aAAa,CAAC;AAElB,UAAI,IAAI,SAAS,KAAK,KAAK,GAAG;AAC9B,UAAI,CAAC,KAAK,MAAM,KAAK,EAAE,GAAG;AAAG,eAAO,CAAC,GAAG;AAExC,UAAI,oBAAoB,iCAAiC,KAAK,EAAE,IAAI;AACpE,UAAI,kBAAkB,uCAAuC,KAAK,EAAE,IAAI;AACxE,UAAI,aAAa,qBAAqB;AACtC,UAAI,YAAY,EAAE,KAAK,QAAQ,GAAG,KAAK;AACvC,UAAI,CAAC,cAAc,CAAC,WAAW;AAE7B,YAAI,EAAE,KAAK,MAAM,OAAO,GAAG;AACzB,gBAAM,EAAE,MAAM,MAAM,EAAE,OAAO,WAAW,EAAE;AAC1C,iBAAO,OAAO,GAAG;AAAA,QACnB;AACA,eAAO,CAAC,GAAG;AAAA,MACb;AAEA,UAAI;AACJ,UAAI,YAAY;AACd,YAAI,EAAE,KAAK,MAAM,MAAM;AAAA,MACzB,OAAO;AACL,YAAI,gBAAgB,EAAE,IAAI;AAC1B,YAAI,EAAE,WAAW,GAAG;AAElB,cAAI,OAAO,EAAE,IAAI,KAAK,EAAE,IAAI,OAAO;AACnC,cAAI,EAAE,WAAW,GAAG;AAClB,gBAAI,OAAO,EAAE,KAAK,SACd,OAAO,EAAE,MAAM,KAAK,IACpB,CAAC,EAAE;AACP,mBAAO,KAAK,IAAI,SAAS,GAAG;AAC1B,qBAAO,EAAE,MAAM,EAAE,KAAK;AAAA,YACxB,CAAC;AAAA,UACH;AAAA,QACF;AAAA,MACF;AAMA,UAAI,MAAM,EAAE;AACZ,UAAI,OAAO,EAAE,KAAK,SACd,OAAO,EAAE,MAAM,KAAK,IACpB,CAAC,EAAE;AAEP,UAAI;AAEJ,UAAI,YAAY;AACd,YAAI,IAAI,QAAQ,EAAE,EAAE;AACpB,YAAI,IAAI,QAAQ,EAAE,EAAE;AACpB,YAAI,QAAQ,KAAK,IAAI,EAAE,GAAG,QAAQ,EAAE,GAAG,MAAM;AAC7C,YAAI,OAAO,EAAE,UAAU,IACnB,KAAK,IAAI,QAAQ,EAAE,EAAE,CAAC,IACtB;AACJ,YAAIC,QAAO;AACX,YAAI,UAAU,IAAI;AAClB,YAAI,SAAS;AACX,kBAAQ;AACR,UAAAA,QAAO;AAAA,QACT;AACA,YAAI,MAAM,EAAE,KAAK,QAAQ;AAEzB,YAAI,CAAC;AAEL,iBAAS,IAAI,GAAGA,MAAK,GAAG,CAAC,GAAG,KAAK,MAAM;AACrC,cAAI;AACJ,cAAI,iBAAiB;AACnB,gBAAI,OAAO,aAAa,CAAC;AACzB,gBAAI,MAAM;AACR,kBAAI;AAAA,UACR,OAAO;AACL,gBAAI,OAAO,CAAC;AACZ,gBAAI,KAAK;AACP,kBAAI,OAAO,QAAQ,EAAE;AACrB,kBAAI,OAAO,GAAG;AACZ,oBAAI,IAAI,IAAI,MAAM,OAAO,CAAC,EAAE,KAAK,GAAG;AACpC,oBAAI,IAAI;AACN,sBAAI,MAAM,IAAI,EAAE,MAAM,CAAC;AAAA;AAEvB,sBAAI,IAAI;AAAA,cACZ;AAAA,YACF;AAAA,UACF;AACA,YAAE,KAAK,CAAC;AAAA,QACV;AAAA,MACF,OAAO;AACL,YAAI,UAAU,GAAG,SAAS,IAAI;AAAE,iBAAO,OAAO,IAAI,KAAK;AAAA,QAAE,CAAC;AAAA,MAC5D;AAEA,eAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,cAAI,YAAY,MAAM,EAAE,KAAK,KAAK;AAClC,cAAI,CAAC,SAAS,cAAc;AAC1B,uBAAW,KAAK,SAAS;AAAA,QAC7B;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;;;ACvMA;AAAA,iDAAAC,SAAA;AAAA,IAAAA,QAAO,UAAU;AACjB,cAAU,YAAY;AAEtB,QAAIC,SAAQ,WAAY;AAAE,UAAI;AAAE,eAAO,QAAQ;AAAA,MAAQ,SAAS,GAAP;AAAA,MAAW;AAAA,IAAC,EAAE,KAAM;AAAA,MAC3E,KAAK;AAAA,IACP;AACA,cAAU,MAAMA,OAAK;AAErB,QAAI,WAAW,UAAU,WAAW,UAAU,WAAW,CAAC;AAC1D,QAAI,SAAS;AAEb,QAAI,UAAU;AAAA,MACZ,KAAK,EAAE,MAAM,aAAa,OAAO,YAAW;AAAA,MAC5C,KAAK,EAAE,MAAM,OAAO,OAAO,KAAK;AAAA,MAChC,KAAK,EAAE,MAAM,OAAO,OAAO,KAAK;AAAA,MAChC,KAAK,EAAE,MAAM,OAAO,OAAO,KAAK;AAAA,MAChC,KAAK,EAAE,MAAM,OAAO,OAAO,IAAI;AAAA,IACjC;AAIA,QAAI,QAAQ;AAGZ,QAAI,OAAO,QAAQ;AAKnB,QAAI,aAAa;AAIjB,QAAI,eAAe;AAGnB,QAAI,aAAa,QAAQ,iBAAiB;AAG1C,aAAS,QAAS,GAAG;AACnB,aAAO,EAAE,MAAM,EAAE,EAAE,OAAO,SAAU,KAAK,GAAG;AAC1C,YAAI,KAAK;AACT,eAAO;AAAA,MACT,GAAG,CAAC,CAAC;AAAA,IACP;AAGA,QAAI,aAAa;AAEjB,cAAU,SAASC;AACnB,aAASA,QAAQ,SAAS,SAAS;AACjC,gBAAU,WAAW,CAAC;AACtB,aAAO,SAAU,GAAG,GAAG,MAAM;AAC3B,eAAO,UAAU,GAAG,SAAS,OAAO;AAAA,MACtC;AAAA,IACF;AAEA,aAAS,IAAK,GAAG,GAAG;AAClB,UAAI,KAAK,CAAC;AACV,UAAI,IAAI,CAAC;AACT,aAAO,KAAK,CAAC,EAAE,QAAQ,SAAU,GAAG;AAClC,UAAE,KAAK,EAAE;AAAA,MACX,CAAC;AACD,aAAO,KAAK,CAAC,EAAE,QAAQ,SAAU,GAAG;AAClC,UAAE,KAAK,EAAE;AAAA,MACX,CAAC;AACD,aAAO;AAAA,IACT;AAEA,cAAU,WAAW,SAAU,KAAK;AAClC,UAAI,CAAC,OAAO,OAAO,QAAQ,YAAY,CAAC,OAAO,KAAK,GAAG,EAAE,QAAQ;AAC/D,eAAO;AAAA,MACT;AAEA,UAAI,OAAO;AAEX,UAAI,IAAI,SAASC,WAAW,GAAG,SAAS,SAAS;AAC/C,eAAO,KAAK,GAAG,SAAS,IAAI,KAAK,OAAO,CAAC;AAAA,MAC3C;AAEA,QAAE,YAAY,SAASC,WAAW,SAAS,SAAS;AAClD,eAAO,IAAI,KAAK,UAAU,SAAS,IAAI,KAAK,OAAO,CAAC;AAAA,MACtD;AACA,QAAE,UAAU,WAAW,SAASC,UAAU,SAAS;AACjD,eAAO,KAAK,SAAS,IAAI,KAAK,OAAO,CAAC,EAAE;AAAA,MAC1C;AAEA,QAAE,SAAS,SAASH,QAAQ,SAAS,SAAS;AAC5C,eAAO,KAAK,OAAO,SAAS,IAAI,KAAK,OAAO,CAAC;AAAA,MAC/C;AAEA,QAAE,WAAW,SAASG,UAAU,SAAS;AACvC,eAAO,KAAK,SAAS,IAAI,KAAK,OAAO,CAAC;AAAA,MACxC;AAEA,QAAE,SAAS,SAASC,QAAQ,SAAS,SAAS;AAC5C,eAAO,KAAK,OAAO,SAAS,IAAI,KAAK,OAAO,CAAC;AAAA,MAC/C;AAEA,QAAE,cAAc,SAASC,aAAa,SAAS,SAAS;AACtD,eAAO,KAAK,YAAY,SAAS,IAAI,KAAK,OAAO,CAAC;AAAA,MACpD;AAEA,QAAE,QAAQ,SAAU,MAAM,SAAS,SAAS;AAC1C,eAAO,KAAK,MAAM,MAAM,SAAS,IAAI,KAAK,OAAO,CAAC;AAAA,MACpD;AAEA,aAAO;AAAA,IACT;AAEA,cAAU,WAAW,SAAU,KAAK;AAClC,aAAO,UAAU,SAAS,GAAG,EAAE;AAAA,IACjC;AAEA,aAAS,UAAW,GAAG,SAAS,SAAS;AACvC,yBAAmB,OAAO;AAE1B,UAAI,CAAC;AAAS,kBAAU,CAAC;AAGzB,UAAI,CAAC,QAAQ,aAAa,QAAQ,OAAO,CAAC,MAAM,KAAK;AACnD,eAAO;AAAA,MACT;AAEA,aAAO,IAAI,UAAU,SAAS,OAAO,EAAE,MAAM,CAAC;AAAA,IAChD;AAEA,aAAS,UAAW,SAAS,SAAS;AACpC,UAAI,EAAE,gBAAgB,YAAY;AAChC,eAAO,IAAI,UAAU,SAAS,OAAO;AAAA,MACvC;AAEA,yBAAmB,OAAO;AAE1B,UAAI,CAAC;AAAS,kBAAU,CAAC;AAEzB,gBAAU,QAAQ,KAAK;AAGvB,UAAI,CAAC,QAAQ,sBAAsBN,OAAK,QAAQ,KAAK;AACnD,kBAAU,QAAQ,MAAMA,OAAK,GAAG,EAAE,KAAK,GAAG;AAAA,MAC5C;AAEA,WAAK,UAAU;AACf,WAAK,MAAM,CAAC;AACZ,WAAK,UAAU;AACf,WAAK,SAAS;AACd,WAAK,SAAS;AACd,WAAK,UAAU;AACf,WAAK,QAAQ;AACb,WAAK,UAAU,CAAC,CAAC,QAAQ;AAGzB,WAAK,KAAK;AAAA,IACZ;AAEA,cAAU,UAAU,QAAQ,WAAY;AAAA,IAAC;AAEzC,cAAU,UAAU,OAAO;AAC3B,aAAS,OAAQ;AACf,UAAI,UAAU,KAAK;AACnB,UAAI,UAAU,KAAK;AAGnB,UAAI,CAAC,QAAQ,aAAa,QAAQ,OAAO,CAAC,MAAM,KAAK;AACnD,aAAK,UAAU;AACf;AAAA,MACF;AACA,UAAI,CAAC,SAAS;AACZ,aAAK,QAAQ;AACb;AAAA,MACF;AAGA,WAAK,YAAY;AAGjB,UAAI,MAAM,KAAK,UAAU,KAAK,YAAY;AAE1C,UAAI,QAAQ;AAAO,aAAK,QAAQ,SAAS,QAAQ;AAAE,kBAAQ,MAAM,MAAM,SAAS,SAAS;AAAA,QAAE;AAE3F,WAAK,MAAM,KAAK,SAAS,GAAG;AAO5B,YAAM,KAAK,YAAY,IAAI,IAAI,SAAU,GAAG;AAC1C,eAAO,EAAE,MAAM,UAAU;AAAA,MAC3B,CAAC;AAED,WAAK,MAAM,KAAK,SAAS,GAAG;AAG5B,YAAM,IAAI,IAAI,SAAU,GAAG,IAAIO,MAAK;AAClC,eAAO,EAAE,IAAI,KAAK,OAAO,IAAI;AAAA,MAC/B,GAAG,IAAI;AAEP,WAAK,MAAM,KAAK,SAAS,GAAG;AAG5B,YAAM,IAAI,OAAO,SAAU,GAAG;AAC5B,eAAO,EAAE,QAAQ,KAAK,MAAM;AAAA,MAC9B,CAAC;AAED,WAAK,MAAM,KAAK,SAAS,GAAG;AAE5B,WAAK,MAAM;AAAA,IACb;AAEA,cAAU,UAAU,cAAc;AAClC,aAAS,cAAe;AACtB,UAAI,UAAU,KAAK;AACnB,UAAI,SAAS;AACb,UAAI,UAAU,KAAK;AACnB,UAAI,eAAe;AAEnB,UAAI,QAAQ;AAAU;AAEtB,eAAS,IAAI,GAAG,IAAI,QAAQ,QACxB,IAAI,KAAK,QAAQ,OAAO,CAAC,MAAM,KAC/B,KAAK;AACP,iBAAS,CAAC;AACV;AAAA,MACF;AAEA,UAAI;AAAc,aAAK,UAAU,QAAQ,OAAO,YAAY;AAC5D,WAAK,SAAS;AAAA,IAChB;AAYA,cAAU,cAAc,SAAU,SAAS,SAAS;AAClD,aAAO,YAAY,SAAS,OAAO;AAAA,IACrC;AAEA,cAAU,UAAU,cAAc;AAElC,aAAS,YAAa,SAAS,SAAS;AACtC,UAAI,CAAC,SAAS;AACZ,YAAI,gBAAgB,WAAW;AAC7B,oBAAU,KAAK;AAAA,QACjB,OAAO;AACL,oBAAU,CAAC;AAAA,QACb;AAAA,MACF;AAEA,gBAAU,OAAO,YAAY,cACzB,KAAK,UAAU;AAEnB,yBAAmB,OAAO;AAI1B,UAAI,QAAQ,WAAW,CAAC,mBAAmB,KAAK,OAAO,GAAG;AAExD,eAAO,CAAC,OAAO;AAAA,MACjB;AAEA,aAAO,OAAO,OAAO;AAAA,IACvB;AAEA,QAAI,qBAAqB,OAAO;AAChC,QAAI,qBAAqB,SAAU,SAAS;AAC1C,UAAI,OAAO,YAAY,UAAU;AAC/B,cAAM,IAAI,UAAU,iBAAiB;AAAA,MACvC;AAEA,UAAI,QAAQ,SAAS,oBAAoB;AACvC,cAAM,IAAI,UAAU,qBAAqB;AAAA,MAC3C;AAAA,IACF;AAaA,cAAU,UAAU,QAAQC;AAC5B,QAAI,WAAW,CAAC;AAChB,aAASA,OAAO,SAAS,OAAO;AAC9B,yBAAmB,OAAO;AAE1B,UAAI,UAAU,KAAK;AAGnB,UAAI,YAAY,MAAM;AACpB,YAAI,CAAC,QAAQ;AACX,iBAAO;AAAA;AAEP,oBAAU;AAAA,MACd;AACA,UAAI,YAAY;AAAI,eAAO;AAE3B,UAAI,KAAK;AACT,UAAI,WAAW,CAAC,CAAC,QAAQ;AACzB,UAAI,WAAW;AAEf,UAAI,mBAAmB,CAAC;AACxB,UAAI,gBAAgB,CAAC;AACrB,UAAI;AACJ,UAAI,UAAU;AACd,UAAI,eAAe;AACnB,UAAI,aAAa;AAGjB,UAAI,eAAe,QAAQ,OAAO,CAAC,MAAM,MAAM,KAE7C,QAAQ,MAAM,mCACd;AACF,UAAIC,QAAO;AAEX,eAAS,iBAAkB;AACzB,YAAI,WAAW;AAGb,kBAAQ;AAAA,iBACD;AACH,oBAAM;AACN,yBAAW;AACb;AAAA,iBACK;AACH,oBAAM;AACN,yBAAW;AACb;AAAA;AAEE,oBAAM,OAAO;AACf;AAAA;AAEF,UAAAA,MAAK,MAAM,wBAAwB,WAAW,EAAE;AAChD,sBAAY;AAAA,QACd;AAAA,MACF;AAEA,eAAS,IAAI,GAAG,MAAM,QAAQ,QAAQ,GACjC,IAAI,QAAS,IAAI,QAAQ,OAAO,CAAC,IAClC,KAAK;AACP,aAAK,MAAM,eAAgB,SAAS,GAAG,IAAI,CAAC;AAG5C,YAAI,YAAY,WAAW,IAAI;AAC7B,gBAAM,OAAO;AACb,qBAAW;AACX;AAAA,QACF;AAEA,gBAAQ;AAAA,eAED,KAAK;AAGR,mBAAO;AAAA,UACT;AAAA,eAEK;AACH,2BAAe;AACf,uBAAW;AACb;AAAA,eAIK;AAAA,eACA;AAAA,eACA;AAAA,eACA;AAAA,eACA;AACH,iBAAK,MAAM,6BAA8B,SAAS,GAAG,IAAI,CAAC;AAI1D,gBAAI,SAAS;AACX,mBAAK,MAAM,YAAY;AACvB,kBAAI,MAAM,OAAO,MAAM,aAAa;AAAG,oBAAI;AAC3C,oBAAM;AACN;AAAA,YACF;AAKA,YAAAA,MAAK,MAAM,0BAA0B,SAAS;AAC9C,2BAAe;AACf,wBAAY;AAIZ,gBAAI,QAAQ;AAAO,6BAAe;AACpC;AAAA,eAEK;AACH,gBAAI,SAAS;AACX,oBAAM;AACN;AAAA,YACF;AAEA,gBAAI,CAAC,WAAW;AACd,oBAAM;AACN;AAAA,YACF;AAEA,6BAAiB,KAAK;AAAA,cACpB,MAAM;AAAA,cACN,OAAO,IAAI;AAAA,cACX,SAAS,GAAG;AAAA,cACZ,MAAM,QAAQ,WAAW;AAAA,cACzB,OAAO,QAAQ,WAAW;AAAA,YAC5B,CAAC;AAED,kBAAM,cAAc,MAAM,cAAc;AACxC,iBAAK,MAAM,gBAAgB,WAAW,EAAE;AACxC,wBAAY;AACd;AAAA,eAEK;AACH,gBAAI,WAAW,CAAC,iBAAiB,QAAQ;AACvC,oBAAM;AACN;AAAA,YACF;AAEA,2BAAe;AACf,uBAAW;AACX,gBAAI,KAAK,iBAAiB,IAAI;AAG9B,kBAAM,GAAG;AACT,gBAAI,GAAG,SAAS,KAAK;AACnB,4BAAc,KAAK,EAAE;AAAA,YACvB;AACA,eAAG,QAAQ,GAAG;AAChB;AAAA,eAEK;AACH,gBAAI,WAAW,CAAC,iBAAiB,UAAU,UAAU;AACnD,oBAAM;AACN,yBAAW;AACX;AAAA,YACF;AAEA,2BAAe;AACf,kBAAM;AACR;AAAA,eAGK;AAEH,2BAAe;AAEf,gBAAI,SAAS;AACX,oBAAM,OAAO;AACb;AAAA,YACF;AAEA,sBAAU;AACV,yBAAa;AACb,2BAAe,GAAG;AAClB,kBAAM;AACR;AAAA,eAEK;AAKH,gBAAI,MAAM,aAAa,KAAK,CAAC,SAAS;AACpC,oBAAM,OAAO;AACb,yBAAW;AACX;AAAA,YACF;AAWA,gBAAI,KAAK,QAAQ,UAAU,aAAa,GAAG,CAAC;AAC5C,gBAAI;AACF,qBAAO,MAAM,KAAK,GAAG;AAAA,YACvB,SAAS,IAAP;AAEA,kBAAI,KAAK,KAAK,MAAM,IAAI,QAAQ;AAChC,mBAAK,GAAG,OAAO,GAAG,YAAY,IAAI,QAAQ,GAAG,KAAK;AAClD,yBAAW,YAAY,GAAG;AAC1B,wBAAU;AACV;AAAA,YACF;AAGA,uBAAW;AACX,sBAAU;AACV,kBAAM;AACR;AAAA;AAIE,2BAAe;AAEf,gBAAI,UAAU;AAEZ,yBAAW;AAAA,YACb,WAAW,WAAW,MACjB,EAAE,MAAM,OAAO,UAAU;AAC5B,oBAAM;AAAA,YACR;AAEA,kBAAM;AAAA;AAAA,MAGZ;AAIA,UAAI,SAAS;AAKX,aAAK,QAAQ,OAAO,aAAa,CAAC;AAClC,aAAK,KAAK,MAAM,IAAI,QAAQ;AAC5B,aAAK,GAAG,OAAO,GAAG,YAAY,IAAI,QAAQ,GAAG;AAC7C,mBAAW,YAAY,GAAG;AAAA,MAC5B;AAQA,WAAK,KAAK,iBAAiB,IAAI,GAAG,IAAI,KAAK,iBAAiB,IAAI,GAAG;AACjE,YAAI,OAAO,GAAG,MAAM,GAAG,UAAU,GAAG,KAAK,MAAM;AAC/C,aAAK,MAAM,gBAAgB,IAAI,EAAE;AAEjC,eAAO,KAAK,QAAQ,6BAA6B,SAAU,GAAG,IAAI,IAAI;AACpE,cAAI,CAAC,IAAI;AAEP,iBAAK;AAAA,UACP;AAQA,iBAAO,KAAK,KAAK,KAAK;AAAA,QACxB,CAAC;AAED,aAAK,MAAM,kBAAkB,MAAM,MAAM,IAAI,EAAE;AAC/C,YAAI,IAAI,GAAG,SAAS,MAAM,OACtB,GAAG,SAAS,MAAM,QAClB,OAAO,GAAG;AAEd,mBAAW;AACX,aAAK,GAAG,MAAM,GAAG,GAAG,OAAO,IAAI,IAAI,QAAQ;AAAA,MAC7C;AAGA,qBAAe;AACf,UAAI,UAAU;AAEZ,cAAM;AAAA,MACR;AAIA,UAAI,kBAAkB;AACtB,cAAQ,GAAG,OAAO,CAAC;AAAA,aACZ;AAAA,aAAU;AAAA,aAAU;AAAK,4BAAkB;AAAA;AAQlD,eAAS,IAAI,cAAc,SAAS,GAAG,IAAI,IAAI,KAAK;AAClD,YAAI,KAAK,cAAc;AAEvB,YAAI,WAAW,GAAG,MAAM,GAAG,GAAG,OAAO;AACrC,YAAI,UAAU,GAAG,MAAM,GAAG,SAAS,GAAG,QAAQ,CAAC;AAC/C,YAAI,SAAS,GAAG,MAAM,GAAG,QAAQ,GAAG,GAAG,KAAK;AAC5C,YAAI,UAAU,GAAG,MAAM,GAAG,KAAK;AAE/B,kBAAU;AAKV,YAAI,mBAAmB,SAAS,MAAM,GAAG,EAAE,SAAS;AACpD,YAAI,aAAa;AACjB,aAAK,IAAI,GAAG,IAAI,kBAAkB,KAAK;AACrC,uBAAa,WAAW,QAAQ,YAAY,EAAE;AAAA,QAChD;AACA,kBAAU;AAEV,YAAI,SAAS;AACb,YAAI,YAAY,MAAM,UAAU,UAAU;AACxC,mBAAS;AAAA,QACX;AACA,YAAI,QAAQ,WAAW,UAAU,UAAU,SAAS;AACpD,aAAK;AAAA,MACP;AAKA,UAAI,OAAO,MAAM,UAAU;AACzB,aAAK,UAAU;AAAA,MACjB;AAEA,UAAI,iBAAiB;AACnB,aAAK,eAAe;AAAA,MACtB;AAGA,UAAI,UAAU,UAAU;AACtB,eAAO,CAAC,IAAI,QAAQ;AAAA,MACtB;AAKA,UAAI,CAAC,UAAU;AACb,eAAO,aAAa,OAAO;AAAA,MAC7B;AAEA,UAAI,QAAQ,QAAQ,SAAS,MAAM;AACnC,UAAI;AACF,YAAI,SAAS,IAAI,OAAO,MAAM,KAAK,KAAK,KAAK;AAAA,MAC/C,SAAS,IAAP;AAKA,eAAO,IAAI,OAAO,IAAI;AAAA,MACxB;AAEA,aAAO,QAAQ;AACf,aAAO,OAAO;AAEd,aAAO;AAAA,IACT;AAEA,cAAU,SAAS,SAAU,SAAS,SAAS;AAC7C,aAAO,IAAI,UAAU,SAAS,WAAW,CAAC,CAAC,EAAE,OAAO;AAAA,IACtD;AAEA,cAAU,UAAU,SAAS;AAC7B,aAAS,SAAU;AACjB,UAAI,KAAK,UAAU,KAAK,WAAW;AAAO,eAAO,KAAK;AAQtD,UAAI,MAAM,KAAK;AAEf,UAAI,CAAC,IAAI,QAAQ;AACf,aAAK,SAAS;AACd,eAAO,KAAK;AAAA,MACd;AACA,UAAI,UAAU,KAAK;AAEnB,UAAI,UAAU,QAAQ,aAAa,OAC/B,QAAQ,MAAM,aACd;AACJ,UAAI,QAAQ,QAAQ,SAAS,MAAM;AAEnC,UAAI,KAAK,IAAI,IAAI,SAAU,SAAS;AAClC,eAAO,QAAQ,IAAI,SAAU,GAAG;AAC9B,iBAAQ,MAAM,WAAY,UACvB,OAAO,MAAM,WAAY,aAAa,CAAC,IACxC,EAAE;AAAA,QACN,CAAC,EAAE,KAAK,KAAM;AAAA,MAChB,CAAC,EAAE,KAAK,GAAG;AAIX,WAAK,SAAS,KAAK;AAGnB,UAAI,KAAK;AAAQ,aAAK,SAAS,KAAK;AAEpC,UAAI;AACF,aAAK,SAAS,IAAI,OAAO,IAAI,KAAK;AAAA,MACpC,SAAS,IAAP;AACA,aAAK,SAAS;AAAA,MAChB;AACA,aAAO,KAAK;AAAA,IACd;AAEA,cAAU,QAAQ,SAAU,MAAM,SAAS,SAAS;AAClD,gBAAU,WAAW,CAAC;AACtB,UAAI,KAAK,IAAI,UAAU,SAAS,OAAO;AACvC,aAAO,KAAK,OAAO,SAAU,GAAG;AAC9B,eAAO,GAAG,MAAM,CAAC;AAAA,MACnB,CAAC;AACD,UAAI,GAAG,QAAQ,UAAU,CAAC,KAAK,QAAQ;AACrC,aAAK,KAAK,OAAO;AAAA,MACnB;AACA,aAAO;AAAA,IACT;AAEA,cAAU,UAAU,QAAQ,SAAS,MAAO,GAAG,SAAS;AACtD,UAAI,OAAO,YAAY;AAAa,kBAAU,KAAK;AACnD,WAAK,MAAM,SAAS,GAAG,KAAK,OAAO;AAGnC,UAAI,KAAK;AAAS,eAAO;AACzB,UAAI,KAAK;AAAO,eAAO,MAAM;AAE7B,UAAI,MAAM,OAAO;AAAS,eAAO;AAEjC,UAAI,UAAU,KAAK;AAGnB,UAAIT,OAAK,QAAQ,KAAK;AACpB,YAAI,EAAE,MAAMA,OAAK,GAAG,EAAE,KAAK,GAAG;AAAA,MAChC;AAGA,UAAI,EAAE,MAAM,UAAU;AACtB,WAAK,MAAM,KAAK,SAAS,SAAS,CAAC;AAOnC,UAAI,MAAM,KAAK;AACf,WAAK,MAAM,KAAK,SAAS,OAAO,GAAG;AAGnC,UAAI;AACJ,UAAI;AACJ,WAAK,IAAI,EAAE,SAAS,GAAG,KAAK,GAAG,KAAK;AAClC,mBAAW,EAAE;AACb,YAAI;AAAU;AAAA,MAChB;AAEA,WAAK,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AAC/B,YAAI,UAAU,IAAI;AAClB,YAAI,OAAO;AACX,YAAI,QAAQ,aAAa,QAAQ,WAAW,GAAG;AAC7C,iBAAO,CAAC,QAAQ;AAAA,QAClB;AACA,YAAI,MAAM,KAAK,SAAS,MAAM,SAAS,OAAO;AAC9C,YAAI,KAAK;AACP,cAAI,QAAQ;AAAY,mBAAO;AAC/B,iBAAO,CAAC,KAAK;AAAA,QACf;AAAA,MACF;AAIA,UAAI,QAAQ;AAAY,eAAO;AAC/B,aAAO,KAAK;AAAA,IACd;AAOA,cAAU,UAAU,WAAW,SAAU,MAAM,SAAS,SAAS;AAC/D,UAAI,UAAU,KAAK;AAEnB,WAAK;AAAA,QAAM;AAAA,QACT,EAAE,QAAQ,MAAM,MAAY,QAAiB;AAAA,MAAC;AAEhD,WAAK,MAAM,YAAY,KAAK,QAAQ,QAAQ,MAAM;AAElD,eAAS,KAAK,GACV,KAAK,GACL,KAAK,KAAK,QACV,KAAK,QAAQ,QACV,KAAK,MAAQ,KAAK,IACnB,MAAM,MAAM;AAChB,aAAK,MAAM,eAAe;AAC1B,YAAI,IAAI,QAAQ;AAChB,YAAI,IAAI,KAAK;AAEb,aAAK,MAAM,SAAS,GAAG,CAAC;AAKxB,YAAI,MAAM;AAAO,iBAAO;AAExB,YAAI,MAAM,UAAU;AAClB,eAAK,MAAM,YAAY,CAAC,SAAS,GAAG,CAAC,CAAC;AAwBtC,cAAI,KAAK;AACT,cAAI,KAAK,KAAK;AACd,cAAI,OAAO,IAAI;AACb,iBAAK,MAAM,eAAe;AAO1B,mBAAO,KAAK,IAAI,MAAM;AACpB,kBAAI,KAAK,QAAQ,OAAO,KAAK,QAAQ,QAClC,CAAC,QAAQ,OAAO,KAAK,IAAI,OAAO,CAAC,MAAM;AAAM,uBAAO;AAAA,YACzD;AACA,mBAAO;AAAA,UACT;AAGA,iBAAO,KAAK,IAAI;AACd,gBAAI,YAAY,KAAK;AAErB,iBAAK,MAAM,oBAAoB,MAAM,IAAI,SAAS,IAAI,SAAS;AAG/D,gBAAI,KAAK,SAAS,KAAK,MAAM,EAAE,GAAG,QAAQ,MAAM,EAAE,GAAG,OAAO,GAAG;AAC7D,mBAAK,MAAM,yBAAyB,IAAI,IAAI,SAAS;AAErD,qBAAO;AAAA,YACT,OAAO;AAGL,kBAAI,cAAc,OAAO,cAAc,QACpC,CAAC,QAAQ,OAAO,UAAU,OAAO,CAAC,MAAM,KAAM;AAC/C,qBAAK,MAAM,iBAAiB,MAAM,IAAI,SAAS,EAAE;AACjD;AAAA,cACF;AAGA,mBAAK,MAAM,0CAA0C;AACrD;AAAA,YACF;AAAA,UACF;AAMA,cAAI,SAAS;AAEX,iBAAK,MAAM,4BAA4B,MAAM,IAAI,SAAS,EAAE;AAC5D,gBAAI,OAAO;AAAI,qBAAO;AAAA,UACxB;AACA,iBAAO;AAAA,QACT;AAKA,YAAI;AACJ,YAAI,OAAO,MAAM,UAAU;AACzB,gBAAM,MAAM;AACZ,eAAK,MAAM,gBAAgB,GAAG,GAAG,GAAG;AAAA,QACtC,OAAO;AACL,gBAAM,EAAE,MAAM,CAAC;AACf,eAAK,MAAM,iBAAiB,GAAG,GAAG,GAAG;AAAA,QACvC;AAEA,YAAI,CAAC;AAAK,iBAAO;AAAA,MACnB;AAcA,UAAI,OAAO,MAAM,OAAO,IAAI;AAG1B,eAAO;AAAA,MACT,WAAW,OAAO,IAAI;AAIpB,eAAO;AAAA,MACT,WAAsC,OAAO,IAAI;AAK/C,eAAQ,OAAO,KAAK,KAAO,KAAK,QAAQ;AAAA,MAC1C;AAIA,YAAM,IAAI,MAAM,MAAM;AAAA,IACxB;AAGA,aAAS,aAAc,GAAG;AACxB,aAAO,EAAE,QAAQ,UAAU,IAAI;AAAA,IACjC;AAEA,aAAS,aAAc,GAAG;AACxB,aAAO,EAAE,QAAQ,4BAA4B,MAAM;AAAA,IACrD;AAAA;AAAA;;;ACl7BA;AAAA,uDAAAU,SAAA;AAAA,QAAI,OAAO,OAAO,WAAW,YAAY;AAEvC,MAAAA,QAAO,UAAU,SAASC,UAAS,MAAM,WAAW;AAClD,YAAI,WAAW;AACb,eAAK,SAAS;AACd,eAAK,YAAY,OAAO,OAAO,UAAU,WAAW;AAAA,YAClD,aAAa;AAAA,cACX,OAAO;AAAA,cACP,YAAY;AAAA,cACZ,UAAU;AAAA,cACV,cAAc;AAAA,YAChB;AAAA,UACF,CAAC;AAAA,QACH;AAAA,MACF;AAAA,IACF,OAAO;AAEL,MAAAD,QAAO,UAAU,SAASC,UAAS,MAAM,WAAW;AAClD,YAAI,WAAW;AACb,eAAK,SAAS;AACd,cAAI,WAAW,WAAY;AAAA,UAAC;AAC5B,mBAAS,YAAY,UAAU;AAC/B,eAAK,YAAY,IAAI,SAAS;AAC9B,eAAK,UAAU,cAAc;AAAA,QAC/B;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;AC1BA;AAAA,+CAAAC,SAAA;AAAA,QAAI;AACE,MAAAC,QAAO,QAAQ;AAEnB,UAAI,OAAOA,MAAK,aAAa;AAAY,cAAM;AAC/C,MAAAD,QAAO,UAAUC,MAAK;AAAA,IACxB,SAAS,GAAP;AAEA,MAAAD,QAAO,UAAU;AAAA,IACnB;AAPM,QAAAC;AAAA;AAAA;;;ACDN;AAAA,oDAAAC,SAAA;AAAA;AAEA,aAAS,MAAMC,QAAM;AACpB,aAAOA,OAAK,OAAO,CAAC,MAAM;AAAA,IAC3B;AAEA,aAAS,MAAMA,QAAM;AAEpB,UAAI,gBAAgB;AACpB,UAAI,SAAS,cAAc,KAAKA,MAAI;AACpC,UAAI,SAAS,OAAO,MAAM;AAC1B,UAAI,QAAQ,QAAQ,UAAU,OAAO,OAAO,CAAC,MAAM,GAAG;AAGtD,aAAO,QAAQ,OAAO,MAAM,KAAK;AAAA,IAClC;AAEA,IAAAD,QAAO,UAAU,QAAQ,aAAa,UAAU,QAAQ;AACxD,IAAAA,QAAO,QAAQ,QAAQ;AACvB,IAAAA,QAAO,QAAQ,QAAQ;AAAA;AAAA;;;ACnBvB,IAAAE,kBAAA;AAAA;AAAA,YAAQ,UAAU;AAClB,YAAQ,UAAU;AAClB,YAAQ,UAAU;AAClB,YAAQ,SAAS;AACjB,YAAQ,OAAO;AACf,YAAQ,YAAY;AACpB,YAAQ,kBAAkB;AAE1B,aAAS,QAAS,KAAK,OAAO;AAC5B,aAAO,OAAO,UAAU,eAAe,KAAK,KAAK,KAAK;AAAA,IACxD;AAEA,QAAIC,OAAK,QAAQ;AACjB,QAAIC,SAAO,QAAQ;AACnB,QAAI,YAAY;AAChB,QAAI,aAAa;AACjB,QAAI,YAAY,UAAU;AAE1B,aAAS,UAAW,GAAG,GAAG;AACxB,aAAO,EAAE,cAAc,GAAG,IAAI;AAAA,IAChC;AAEA,aAAS,aAAcC,OAAM,SAAS;AACpC,MAAAA,MAAK,SAAS,QAAQ,UAAU,CAAC;AAEjC,UAAI,CAAC,MAAM,QAAQA,MAAK,MAAM;AAC5B,QAAAA,MAAK,SAAS,CAACA,MAAK,MAAM;AAE5B,UAAIA,MAAK,OAAO,QAAQ;AACtB,QAAAA,MAAK,SAASA,MAAK,OAAO,IAAI,SAAS;AAAA,MACzC;AAAA,IACF;AAGA,aAAS,UAAW,SAAS;AAC3B,UAAI,WAAW;AACf,UAAI,QAAQ,MAAM,EAAE,MAAM,OAAO;AAC/B,YAAI,WAAW,QAAQ,QAAQ,cAAc,EAAE;AAC/C,mBAAW,IAAI,UAAU,UAAU,EAAE,KAAK,KAAK,CAAC;AAAA,MAClD;AAEA,aAAO;AAAA,QACL,SAAS,IAAI,UAAU,SAAS,EAAE,KAAK,KAAK,CAAC;AAAA,QAC7C;AAAA,MACF;AAAA,IACF;AAEA,aAAS,QAASA,OAAM,SAAS,SAAS;AACxC,UAAI,CAAC;AACH,kBAAU,CAAC;AAGb,UAAI,QAAQ,aAAa,OAAO,QAAQ,QAAQ,GAAG,GAAG;AACpD,YAAI,QAAQ,YAAY;AACtB,gBAAM,IAAI,MAAM,iCAAiC;AAAA,QACnD;AACA,kBAAU,QAAQ;AAAA,MACpB;AAEA,MAAAA,MAAK,SAAS,CAAC,CAAC,QAAQ;AACxB,MAAAA,MAAK,UAAU;AACf,MAAAA,MAAK,SAAS,QAAQ,WAAW;AACjC,MAAAA,MAAK,WAAW,CAAC,CAAC,QAAQ;AAC1B,MAAAA,MAAK,gBAAgB,QAAQ,iBAAiB,uBAAO,OAAO,IAAI;AAChE,MAAAA,MAAK,SAAS,CAAC,CAAC,QAAQ;AACxB,MAAAA,MAAK,MAAM,CAAC,CAAC,QAAQ;AACrB,MAAAA,MAAK,OAAO,CAAC,CAAC,QAAQ;AACtB,MAAAA,MAAK,QAAQ,CAAC,CAAC,QAAQ;AACvB,UAAIA,MAAK;AACP,QAAAA,MAAK,OAAO;AACd,MAAAA,MAAK,OAAO,CAAC,CAAC,QAAQ;AACtB,MAAAA,MAAK,WAAW,CAAC,CAAC,QAAQ;AAC1B,MAAAA,MAAK,SAAS,CAAC,CAAC,QAAQ;AACxB,MAAAA,MAAK,SAAS,CAAC,CAAC,QAAQ;AACxB,MAAAA,MAAK,SAAS,CAAC,CAAC,QAAQ;AACxB,MAAAA,MAAK,OAAO,CAAC,CAAC,QAAQ;AACtB,MAAAA,MAAK,YAAY,CAAC,CAAC,QAAQ;AAC3B,MAAAA,MAAK,WAAW,CAAC,CAAC,QAAQ;AAC1B,MAAAA,MAAK,KAAK,QAAQ,MAAMF;AAExB,MAAAE,MAAK,YAAY,QAAQ,aAAa;AACtC,MAAAA,MAAK,QAAQ,QAAQ,SAAS,uBAAO,OAAO,IAAI;AAChD,MAAAA,MAAK,YAAY,QAAQ,aAAa,uBAAO,OAAO,IAAI;AACxD,MAAAA,MAAK,WAAW,QAAQ,YAAY,uBAAO,OAAO,IAAI;AAEtD,mBAAaA,OAAM,OAAO;AAE1B,MAAAA,MAAK,aAAa;AAClB,UAAI,MAAM,QAAQ,IAAI;AACtB,UAAI,CAAC,QAAQ,SAAS,KAAK;AACzB,QAAAA,MAAK,MAAM;AAAA,WACR;AACH,QAAAA,MAAK,MAAMD,OAAK,QAAQ,QAAQ,GAAG;AACnC,QAAAC,MAAK,aAAaA,MAAK,QAAQ;AAAA,MACjC;AAEA,MAAAA,MAAK,OAAO,QAAQ,QAAQD,OAAK,QAAQC,MAAK,KAAK,GAAG;AACtD,MAAAA,MAAK,OAAOD,OAAK,QAAQC,MAAK,IAAI;AAClC,UAAI,QAAQ,aAAa;AACvB,QAAAA,MAAK,OAAOA,MAAK,KAAK,QAAQ,OAAO,GAAG;AAI1C,MAAAA,MAAK,SAAS,WAAWA,MAAK,GAAG,IAAIA,MAAK,MAAM,QAAQA,OAAMA,MAAK,GAAG;AACtE,UAAI,QAAQ,aAAa;AACvB,QAAAA,MAAK,SAASA,MAAK,OAAO,QAAQ,OAAO,GAAG;AAC9C,MAAAA,MAAK,UAAU,CAAC,CAAC,QAAQ;AAIzB,cAAQ,WAAW;AACnB,cAAQ,YAAY;AAEpB,cAAQ,qBAAqB;AAE7B,MAAAA,MAAK,YAAY,IAAI,UAAU,SAAS,OAAO;AAC/C,MAAAA,MAAK,UAAUA,MAAK,UAAU;AAAA,IAChC;AAEA,aAAS,OAAQA,OAAM;AACrB,UAAI,MAAMA,MAAK;AACf,UAAIC,OAAM,MAAM,CAAC,IAAI,uBAAO,OAAO,IAAI;AAEvC,eAAS,IAAI,GAAG,IAAID,MAAK,QAAQ,QAAQ,IAAI,GAAG,KAAM;AACpD,YAAI,UAAUA,MAAK,QAAQ;AAC3B,YAAI,CAAC,WAAW,OAAO,KAAK,OAAO,EAAE,WAAW,GAAG;AACjD,cAAIA,MAAK,QAAQ;AAEf,gBAAI,UAAUA,MAAK,UAAU,QAAQ;AACrC,gBAAI;AACF,cAAAC,KAAI,KAAK,OAAO;AAAA;AAEhB,cAAAA,KAAI,WAAW;AAAA,UACnB;AAAA,QACF,OAAO;AAEL,cAAI,IAAI,OAAO,KAAK,OAAO;AAC3B,cAAI;AACF,YAAAA,KAAI,KAAK,MAAMA,MAAK,CAAC;AAAA;AAErB,cAAE,QAAQ,SAAUC,IAAG;AACrB,cAAAD,KAAIC,MAAK;AAAA,YACX,CAAC;AAAA,QACL;AAAA,MACF;AAEA,UAAI,CAAC;AACH,QAAAD,OAAM,OAAO,KAAKA,IAAG;AAEvB,UAAI,CAACD,MAAK;AACR,QAAAC,OAAMA,KAAI,KAAK,SAAS;AAG1B,UAAID,MAAK,MAAM;AACb,iBAAS,IAAI,GAAG,IAAIC,KAAI,QAAQ,KAAK;AACnC,UAAAA,KAAI,KAAKD,MAAK,MAAMC,KAAI,EAAE;AAAA,QAC5B;AACA,YAAID,MAAK,OAAO;AACd,UAAAC,OAAMA,KAAI,OAAO,SAAU,GAAG;AAC5B,gBAAI,SAAS,CAAE,MAAM,KAAK,CAAC;AAC3B,gBAAI,IAAID,MAAK,MAAM,MAAMA,MAAK,MAAM,QAAQA,OAAM,CAAC;AACnD,gBAAI,UAAU;AACZ,uBAAS,MAAM,SAAS,CAAC,MAAM,QAAQ,CAAC;AAC1C,mBAAO;AAAA,UACT,CAAC;AAAA,QACH;AAAA,MACF;AAEA,UAAIA,MAAK,OAAO;AACd,QAAAC,OAAMA,KAAI,OAAO,SAASC,IAAG;AAC3B,iBAAO,CAAC,UAAUF,OAAME,EAAC;AAAA,QAC3B,CAAC;AAEH,MAAAF,MAAK,QAAQC;AAAA,IACf;AAEA,aAAS,KAAMD,OAAM,GAAG;AACtB,UAAI,MAAM,QAAQA,OAAM,CAAC;AACzB,UAAI,IAAIA,MAAK,MAAM;AACnB,UAAI,IAAI;AACR,UAAI,GAAG;AACL,YAAI,QAAQ,MAAM,SAAS,MAAM,QAAQ,CAAC;AAC1C,YAAI,QAAQ,EAAE,MAAM,EAAE,MAAM;AAE5B,YAAI,SAAS,CAAC;AACZ,eAAK;AAAA,iBACE,CAAC,SAAS;AACjB,cAAI,EAAE,MAAM,GAAG,EAAE;AAEnB,YAAI,MAAM,GAAG;AACX,cAAI,OAAO,QAAQA,OAAM,CAAC;AAC1B,UAAAA,MAAK,UAAU,QAAQA,MAAK,UAAU;AACtC,UAAAA,MAAK,MAAM,QAAQA,MAAK,MAAM;AAAA,QAChC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAGA,aAAS,QAASA,OAAM,GAAG;AACzB,UAAI,MAAM;AACV,UAAI,EAAE,OAAO,CAAC,MAAM,KAAK;AACvB,cAAMD,OAAK,KAAKC,MAAK,MAAM,CAAC;AAAA,MAC9B,WAAW,WAAW,CAAC,KAAK,MAAM,IAAI;AACpC,cAAM;AAAA,MACR,WAAWA,MAAK,YAAY;AAC1B,cAAMD,OAAK,QAAQC,MAAK,KAAK,CAAC;AAAA,MAChC,OAAO;AACL,cAAMD,OAAK,QAAQ,CAAC;AAAA,MACtB;AAEA,UAAI,QAAQ,aAAa;AACvB,cAAM,IAAI,QAAQ,OAAO,GAAG;AAE9B,aAAO;AAAA,IACT;AAKA,aAAS,UAAWC,OAAMD,QAAM;AAC9B,UAAI,CAACC,MAAK,OAAO;AACf,eAAO;AAET,aAAOA,MAAK,OAAO,KAAK,SAAS,MAAM;AACrC,eAAO,KAAK,QAAQ,MAAMD,MAAI,KAAK,CAAC,EAAE,KAAK,YAAY,KAAK,SAAS,MAAMA,MAAI;AAAA,MACjF,CAAC;AAAA,IACH;AAEA,aAAS,gBAAiBC,OAAMD,QAAM;AACpC,UAAI,CAACC,MAAK,OAAO;AACf,eAAO;AAET,aAAOA,MAAK,OAAO,KAAK,SAAS,MAAM;AACrC,eAAO,CAAC,EAAE,KAAK,YAAY,KAAK,SAAS,MAAMD,MAAI;AAAA,MACrD,CAAC;AAAA,IACH;AAAA;AAAA;;;AC7OA;AAAA,uCAAAI,SAAA;AAAA,IAAAA,QAAO,UAAU;AACjB,aAAS,WAAW;AAEpB,QAAI,KAAK;AACT,QAAI,YAAY;AAChB,QAAI,YAAY,UAAU;AAC1B,QAAI,OAAO,eAAqB;AAChC,QAAIC,QAAO,QAAQ;AACnB,QAAIC,SAAO,QAAQ;AACnB,QAAI,SAAS,QAAQ;AACrB,QAAI,aAAa;AACjB,QAAI,SAAS;AACb,QAAI,UAAU,OAAO;AACrB,QAAI,UAAU,OAAO;AACrB,QAAI,kBAAkB,OAAO;AAC7B,QAAI,YAAY,OAAO;AAEvB,aAAS,SAAU,SAAS,SAAS;AACnC,UAAI,OAAO,YAAY,cAAc,UAAU,WAAW;AACxD,cAAM,IAAI,UAAU,qFACqD;AAE3E,aAAO,IAAI,SAAS,SAAS,OAAO,EAAE;AAAA,IACxC;AAEA,aAAS,SAAU,SAAS,SAAS;AACnC,UAAI,CAAC;AACH,cAAM,IAAI,MAAM,sBAAsB;AAExC,UAAI,OAAO,YAAY,cAAc,UAAU,WAAW;AACxD,cAAM,IAAI,UAAU,qFACqD;AAE3E,UAAI,EAAE,gBAAgB;AACpB,eAAO,IAAI,SAAS,SAAS,OAAO;AAEtC,cAAQ,MAAM,SAAS,OAAO;AAE9B,UAAI,KAAK;AACP,eAAO;AAET,UAAI,IAAI,KAAK,UAAU,IAAI;AAC3B,WAAK,UAAU,IAAI,MAAM,CAAC;AAC1B,eAAS,IAAI,GAAG,IAAI,GAAG,KAAM;AAC3B,aAAK,SAAS,KAAK,UAAU,IAAI,IAAI,GAAG,KAAK;AAAA,MAC/C;AACA,WAAK,QAAQ;AAAA,IACf;AAEA,aAAS,UAAU,UAAU,WAAY;AACvC,aAAO,GAAG,gBAAgB,QAAQ;AAClC,UAAI,KAAK,UAAU;AACjB,YAAIC,QAAO;AACX,aAAK,QAAQ,QAAQ,SAAU,UAAU,OAAO;AAC9C,cAAI,MAAMA,MAAK,QAAQ,SAAS,uBAAO,OAAO,IAAI;AAClD,mBAAS,KAAK,UAAU;AACtB,gBAAI;AACF,kBAAIA,MAAK,SAAS,CAAC;AACnB,kBAAI,OAAO,GAAG,aAAa,GAAGA,MAAK,aAAa;AAChD,kBAAI,QAAQ;AAAA,YACd,SAAS,IAAP;AACA,kBAAI,GAAG,YAAY;AACjB,oBAAIA,MAAK,SAAS,CAAC,KAAK;AAAA;AAExB,sBAAM;AAAA,YACV;AAAA,UACF;AAAA,QACF,CAAC;AAAA,MACH;AACA,aAAO,OAAO,IAAI;AAAA,IACpB;AAGA,aAAS,UAAU,WAAW,SAAU,SAAS,OAAO,YAAY;AAClE,aAAO,GAAG,gBAAgB,QAAQ;AAGlC,UAAI,IAAI;AACR,aAAO,OAAO,QAAQ,OAAO,UAAU;AACrC;AAAA,MACF;AAIA,UAAI;AACJ,cAAQ;AAAA,aAED,QAAQ;AACX,eAAK,eAAe,QAAQ,KAAK,GAAG,GAAG,KAAK;AAC5C;AAAA,aAEG;AAGH,mBAAS;AACT;AAAA;AAMA,mBAAS,QAAQ,MAAM,GAAG,CAAC,EAAE,KAAK,GAAG;AACrC;AAAA;AAGJ,UAAI,SAAS,QAAQ,MAAM,CAAC;AAG5B,UAAI;AACJ,UAAI,WAAW;AACb,eAAO;AAAA,eACA,WAAW,MAAM,KACtB,WAAW,QAAQ,IAAI,SAAU,GAAG;AAClC,eAAO,OAAO,MAAM,WAAW,IAAI;AAAA,MACrC,CAAC,EAAE,KAAK,GAAG,CAAC,GAAG;AACjB,YAAI,CAAC,UAAU,CAAC,WAAW,MAAM;AAC/B,mBAAS,MAAM;AACjB,eAAO;AAAA,MACT;AACE,eAAO;AAET,UAAI,MAAM,KAAK,SAAS,IAAI;AAG5B,UAAI,gBAAgB,MAAM,IAAI;AAC5B;AAEF,UAAI,aAAa,OAAO,OAAO,UAAU;AACzC,UAAI;AACF,aAAK,iBAAiB,QAAQ,MAAM,KAAK,QAAQ,OAAO,UAAU;AAAA;AAElE,aAAK,gBAAgB,QAAQ,MAAM,KAAK,QAAQ,OAAO,UAAU;AAAA,IACrE;AAGA,aAAS,UAAU,kBAAkB,SAAU,QAAQ,MAAM,KAAK,QAAQ,OAAO,YAAY;AAC3F,UAAI,UAAU,KAAK,SAAS,KAAK,UAAU;AAG3C,UAAI,CAAC;AACH;AAIF,UAAI,KAAK,OAAO;AAChB,UAAI,SAAS,CAAC,CAAC,KAAK,UAAU;AAC9B,UAAI,UAAU,GAAG;AACjB,UAAI,QAAQ,KAAK,OAAO,QAAQ,OAAO,CAAC,MAAM;AAE9C,UAAI,iBAAiB,CAAC;AACtB,eAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,YAAI,IAAI,QAAQ;AAChB,YAAI,EAAE,OAAO,CAAC,MAAM,OAAO,OAAO;AAChC,cAAI;AACJ,cAAI,UAAU,CAAC,QAAQ;AACrB,gBAAI,CAAC,EAAE,MAAM,EAAE;AAAA,UACjB,OAAO;AACL,gBAAI,EAAE,MAAM,EAAE;AAAA,UAChB;AACA,cAAI;AACF,2BAAe,KAAK,CAAC;AAAA,QACzB;AAAA,MACF;AAEA,UAAI,MAAM,eAAe;AAEzB,UAAI,QAAQ;AACV;AAOF,UAAI,OAAO,WAAW,KAAK,CAAC,KAAK,QAAQ,CAAC,KAAK,MAAM;AACnD,YAAI,CAAC,KAAK,QAAQ;AAChB,eAAK,QAAQ,SAAS,uBAAO,OAAO,IAAI;AAE1C,iBAAS,IAAI,GAAG,IAAI,KAAK,KAAM;AAC7B,cAAI,IAAI,eAAe;AACvB,cAAI,QAAQ;AACV,gBAAI,OAAO,MAAM,EAAE,MAAM;AACvB,kBAAI,SAAS,MAAM;AAAA;AAEnB,kBAAI,SAAS;AAAA,UACjB;AAEA,cAAI,EAAE,OAAO,CAAC,MAAM,OAAO,CAAC,KAAK,SAAS;AACxC,gBAAID,OAAK,KAAK,KAAK,MAAM,CAAC;AAAA,UAC5B;AACA,eAAK,WAAW,OAAO,CAAC;AAAA,QAC1B;AAEA;AAAA,MACF;AAIA,aAAO,MAAM;AACb,eAAS,IAAI,GAAG,IAAI,KAAK,KAAM;AAC7B,YAAI,IAAI,eAAe;AACvB,YAAI;AACJ,YAAI;AACF,uBAAa,CAAC,QAAQ,CAAC;AAAA;AAEvB,uBAAa,CAAC,CAAC;AACjB,aAAK,SAAS,WAAW,OAAO,MAAM,GAAG,OAAO,UAAU;AAAA,MAC5D;AAAA,IACF;AAGA,aAAS,UAAU,aAAa,SAAU,OAAO,GAAG;AAClD,UAAI,UAAU,MAAM,CAAC;AACnB;AAEF,UAAI,MAAM,KAAK,SAAS,CAAC;AAEzB,UAAI,KAAK;AACP,YAAI,KAAK,MAAM,CAAC;AAElB,UAAI,KAAK,UAAU;AACjB,YAAI;AAAA,MACN;AAEA,UAAI,KAAK,QAAQ,OAAO;AACtB;AAEF,UAAI,KAAK,OAAO;AACd,YAAI,IAAI,KAAK,MAAM;AACnB,YAAI,MAAM,SAAS,MAAM,QAAQ,CAAC;AAChC;AAAA,MACJ;AAEA,WAAK,QAAQ,OAAO,KAAK;AAEzB,UAAI,KAAK;AACP,aAAK,MAAM,CAAC;AAAA,IAChB;AAGA,aAAS,UAAU,qBAAqB,SAAU,KAAK;AAGrD,UAAI,KAAK;AACP,eAAO,KAAK,SAAS,KAAK,KAAK;AAEjC,UAAI;AACJ,UAAI;AACJ,UAAI;AACJ,UAAI;AACF,gBAAQ,KAAK,GAAG,UAAU,GAAG;AAAA,MAC/B,SAAS,IAAP;AACA,YAAI,GAAG,SAAS,UAAU;AAExB,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,UAAI,QAAQ,SAAS,MAAM,eAAe;AAC1C,WAAK,SAAS,OAAO;AAIrB,UAAI,CAAC,SAAS,SAAS,CAAC,MAAM,YAAY;AACxC,aAAK,MAAM,OAAO;AAAA;AAElB,kBAAU,KAAK,SAAS,KAAK,KAAK;AAEpC,aAAO;AAAA,IACT;AAEA,aAAS,UAAU,WAAW,SAAU,KAAK,YAAY;AACvD,UAAI;AAEJ,UAAI,cAAc,CAAC,QAAQ,KAAK,UAAU,GAAG;AAC3C,eAAO,KAAK,mBAAmB,GAAG;AAEpC,UAAI,QAAQ,KAAK,OAAO,GAAG,GAAG;AAC5B,YAAI,IAAI,KAAK,MAAM;AACnB,YAAI,CAAC,KAAK,MAAM;AACd,iBAAO;AAET,YAAI,MAAM,QAAQ,CAAC;AACjB,iBAAO;AAAA,MACX;AAEA,UAAI;AACF,eAAO,KAAK,gBAAgB,KAAK,KAAK,GAAG,YAAY,GAAG,CAAC;AAAA,MAC3D,SAAS,IAAP;AACA,aAAK,cAAc,KAAK,EAAE;AAC1B,eAAO;AAAA,MACT;AAAA,IACF;AAEA,aAAS,UAAU,kBAAkB,SAAU,KAAK,SAAS;AAI3D,UAAI,CAAC,KAAK,QAAQ,CAAC,KAAK,MAAM;AAC5B,iBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAM;AACxC,cAAI,IAAI,QAAQ;AAChB,cAAI,QAAQ;AACV,gBAAI,MAAM;AAAA;AAEV,gBAAI,MAAM,MAAM;AAClB,eAAK,MAAM,KAAK;AAAA,QAClB;AAAA,MACF;AAEA,WAAK,MAAM,OAAO;AAGlB,aAAO;AAAA,IACT;AAEA,aAAS,UAAU,gBAAgB,SAAU,GAAG,IAAI;AAElD,cAAQ,GAAG;AAAA,aACJ;AAAA,aACA;AACH,cAAI,MAAM,KAAK,SAAS,CAAC;AACzB,eAAK,MAAM,OAAO;AAClB,cAAI,QAAQ,KAAK,QAAQ;AACvB,gBAAI,QAAQ,IAAI,MAAM,GAAG,OAAO,kBAAkB,KAAK,GAAG;AAC1D,kBAAM,OAAO,KAAK;AAClB,kBAAM,OAAO,GAAG;AAChB,kBAAM;AAAA,UACR;AACA;AAAA,aAEG;AAAA,aACA;AAAA,aACA;AAAA,aACA;AACH,eAAK,MAAM,KAAK,SAAS,CAAC,KAAK;AAC/B;AAAA;AAGA,eAAK,MAAM,KAAK,SAAS,CAAC,KAAK;AAC/B,cAAI,KAAK;AACP,kBAAM;AACR,cAAI,CAAC,KAAK;AACR,oBAAQ,MAAM,cAAc,EAAE;AAChC;AAAA;AAAA,IAEN;AAEA,aAAS,UAAU,mBAAmB,SAAU,QAAQ,MAAM,KAAK,QAAQ,OAAO,YAAY;AAE5F,UAAI,UAAU,KAAK,SAAS,KAAK,UAAU;AAI3C,UAAI,CAAC;AACH;AAIF,UAAI,wBAAwB,OAAO,MAAM,CAAC;AAC1C,UAAI,SAAS,SAAS,CAAE,MAAO,IAAI,CAAC;AACpC,UAAI,aAAa,OAAO,OAAO,qBAAqB;AAGpD,WAAK,SAAS,YAAY,OAAO,KAAK;AAEtC,UAAI,MAAM,QAAQ;AAClB,UAAI,QAAQ,KAAK,SAAS;AAG1B,UAAI,SAAS;AACX;AAEF,eAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,YAAI,IAAI,QAAQ;AAChB,YAAI,EAAE,OAAO,CAAC,MAAM,OAAO,CAAC,KAAK;AAC/B;AAGF,YAAI,UAAU,OAAO,OAAO,QAAQ,IAAI,qBAAqB;AAC7D,aAAK,SAAS,SAAS,OAAO,IAAI;AAElC,YAAI,QAAQ,OAAO,OAAO,QAAQ,IAAI,MAAM;AAC5C,aAAK,SAAS,OAAO,OAAO,IAAI;AAAA,MAClC;AAAA,IACF;AAEA,aAAS,UAAU,iBAAiB,SAAU,QAAQ,OAAO;AAG3D,UAAI,SAAS,KAAK,MAAM,MAAM;AAE9B,UAAI,CAAC,KAAK,QAAQ;AAChB,aAAK,QAAQ,SAAS,uBAAO,OAAO,IAAI;AAG1C,UAAI,CAAC;AACH;AAEF,UAAI,UAAU,WAAW,MAAM,KAAK,CAAC,KAAK,SAAS;AACjD,YAAI,QAAQ,UAAU,KAAK,MAAM;AACjC,YAAI,OAAO,OAAO,CAAC,MAAM,KAAK;AAC5B,mBAASA,OAAK,KAAK,KAAK,MAAM,MAAM;AAAA,QACtC,OAAO;AACL,mBAASA,OAAK,QAAQ,KAAK,MAAM,MAAM;AACvC,cAAI;AACF,sBAAU;AAAA,QACd;AAAA,MACF;AAEA,UAAI,QAAQ,aAAa;AACvB,iBAAS,OAAO,QAAQ,OAAO,GAAG;AAGpC,WAAK,WAAW,OAAO,MAAM;AAAA,IAC/B;AAGA,aAAS,UAAU,QAAQ,SAAU,GAAG;AACtC,UAAI,MAAM,KAAK,SAAS,CAAC;AACzB,UAAI,UAAU,EAAE,MAAM,EAAE,MAAM;AAE9B,UAAI,EAAE,SAAS,KAAK;AAClB,eAAO;AAET,UAAI,CAAC,KAAK,QAAQ,QAAQ,KAAK,OAAO,GAAG,GAAG;AAC1C,YAAI,IAAI,KAAK,MAAM;AAEnB,YAAI,MAAM,QAAQ,CAAC;AACjB,cAAI;AAGN,YAAI,CAAC,WAAW,MAAM;AACpB,iBAAO;AAET,YAAI,WAAW,MAAM;AACnB,iBAAO;AAAA,MAIX;AAEA,UAAI;AACJ,UAAI,OAAO,KAAK,UAAU;AAC1B,UAAI,CAAC,MAAM;AACT,YAAI;AACJ,YAAI;AACF,kBAAQ,KAAK,GAAG,UAAU,GAAG;AAAA,QAC/B,SAAS,IAAP;AACA,cAAI,OAAO,GAAG,SAAS,YAAY,GAAG,SAAS,YAAY;AACzD,iBAAK,UAAU,OAAO;AACtB,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,YAAI,SAAS,MAAM,eAAe,GAAG;AACnC,cAAI;AACF,mBAAO,KAAK,GAAG,SAAS,GAAG;AAAA,UAC7B,SAAS,IAAP;AACA,mBAAO;AAAA,UACT;AAAA,QACF,OAAO;AACL,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,WAAK,UAAU,OAAO;AAEtB,UAAI,IAAI;AACR,UAAI;AACF,YAAI,KAAK,YAAY,IAAI,QAAQ;AAEnC,WAAK,MAAM,OAAO,KAAK,MAAM,QAAQ;AAErC,UAAI,WAAW,MAAM;AACnB,eAAO;AAET,aAAO;AAAA,IACT;AAEA,aAAS,UAAU,QAAQ,SAAU,GAAG;AACtC,aAAO,OAAO,KAAK,MAAM,CAAC;AAAA,IAC5B;AAEA,aAAS,UAAU,WAAW,SAAU,GAAG;AACzC,aAAO,OAAO,QAAQ,MAAM,CAAC;AAAA,IAC/B;AAAA;AAAA;;;ACreA;AAAA,2CAAAE,SAAA;AAKA,IAAAA,QAAO,UAAU;AACjB,aAAS,OAAQ,IAAI,IAAI;AACvB,UAAI,MAAM;AAAI,eAAO,OAAO,EAAE,EAAE,EAAE;AAElC,UAAI,OAAO,OAAO;AAChB,cAAM,IAAI,UAAU,uBAAuB;AAE7C,aAAO,KAAK,EAAE,EAAE,QAAQ,SAAU,GAAG;AACnC,gBAAQ,KAAK,GAAG;AAAA,MAClB,CAAC;AAED,aAAO;AAEP,eAAS,UAAU;AACjB,YAAI,OAAO,IAAI,MAAM,UAAU,MAAM;AACrC,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,eAAK,KAAK,UAAU;AAAA,QACtB;AACA,YAAI,MAAM,GAAG,MAAM,MAAM,IAAI;AAC7B,YAAIC,MAAK,KAAK,KAAK,SAAO;AAC1B,YAAI,OAAO,QAAQ,cAAc,QAAQA,KAAI;AAC3C,iBAAO,KAAKA,GAAE,EAAE,QAAQ,SAAU,GAAG;AACnC,gBAAI,KAAKA,IAAG;AAAA,UACd,CAAC;AAAA,QACH;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAAA;AAAA;;;AChCA;AAAA,uCAAAC,SAAA;AAAA,QAAI,SAAS;AACb,IAAAA,QAAO,UAAU,OAAO,IAAI;AAC5B,IAAAA,QAAO,QAAQ,SAAS,OAAO,UAAU;AAEzC,SAAK,QAAQ,KAAK,WAAY;AAC5B,aAAO,eAAe,SAAS,WAAW,QAAQ;AAAA,QAChD,OAAO,WAAY;AACjB,iBAAO,KAAK,IAAI;AAAA,QAClB;AAAA,QACA,cAAc;AAAA,MAChB,CAAC;AAED,aAAO,eAAe,SAAS,WAAW,cAAc;AAAA,QACtD,OAAO,WAAY;AACjB,iBAAO,WAAW,IAAI;AAAA,QACxB;AAAA,QACA,cAAc;AAAA,MAChB,CAAC;AAAA,IACH,CAAC;AAED,aAAS,KAAM,IAAI;AACjB,UAAI,IAAI,WAAY;AAClB,YAAI,EAAE;AAAQ,iBAAO,EAAE;AACvB,UAAE,SAAS;AACX,eAAO,EAAE,QAAQ,GAAG,MAAM,MAAM,SAAS;AAAA,MAC3C;AACA,QAAE,SAAS;AACX,aAAO;AAAA,IACT;AAEA,aAAS,WAAY,IAAI;AACvB,UAAI,IAAI,WAAY;AAClB,YAAI,EAAE;AACJ,gBAAM,IAAI,MAAM,EAAE,SAAS;AAC7B,UAAE,SAAS;AACX,eAAO,EAAE,QAAQ,GAAG,MAAM,MAAM,SAAS;AAAA,MAC3C;AACA,UAAI,OAAO,GAAG,QAAQ;AACtB,QAAE,YAAY,OAAO;AACrB,QAAE,SAAS;AACX,aAAO;AAAA,IACT;AAAA;AAAA;;;ACzCA;AAAA,+CAAAC,SAAA;AAAA,QAAI,SAAS;AACb,QAAI,OAAO,uBAAO,OAAO,IAAI;AAC7B,QAAI,OAAO;AAEX,IAAAA,QAAO,UAAU,OAAO,QAAQ;AAEhC,aAAS,SAAU,KAAK,IAAI;AAC1B,UAAI,KAAK,MAAM;AACb,aAAK,KAAK,KAAK,EAAE;AACjB,eAAO;AAAA,MACT,OAAO;AACL,aAAK,OAAO,CAAC,EAAE;AACf,eAAO,QAAQ,GAAG;AAAA,MACpB;AAAA,IACF;AAEA,aAAS,QAAS,KAAK;AACrB,aAAO,KAAK,SAAS,MAAO;AAC1B,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,IAAI;AACd,YAAI,OAAO,MAAM,SAAS;AAQ1B,YAAI;AACF,mBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,gBAAI,GAAG,MAAM,MAAM,IAAI;AAAA,UACzB;AAAA,QACF,UAAE;AACA,cAAI,IAAI,SAAS,KAAK;AAGpB,gBAAI,OAAO,GAAG,GAAG;AACjB,oBAAQ,SAAS,WAAY;AAC3B,kBAAI,MAAM,MAAM,IAAI;AAAA,YACtB,CAAC;AAAA,UACH,OAAO;AACL,mBAAO,KAAK;AAAA,UACd;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH;AAEA,aAAS,MAAO,MAAM;AACpB,UAAI,SAAS,KAAK;AAClB,UAAI,QAAQ,CAAC;AAEb,eAAS,IAAI,GAAG,IAAI,QAAQ;AAAK,cAAM,KAAK,KAAK;AACjD,aAAO;AAAA,IACT;AAAA;AAAA;;;ACrDA;AAAA,uCAAAC,SAAA;AAwCA,IAAAA,QAAO,UAAUC;AAEjB,QAAI,KAAK;AACT,QAAI,YAAY;AAChB,QAAI,YAAY,UAAU;AAC1B,QAAIC,YAAW;AACf,QAAI,KAAK,QAAQ,UAAU;AAC3B,QAAIC,SAAO,QAAQ;AACnB,QAAI,SAAS,QAAQ;AACrB,QAAI,aAAa;AACjB,QAAI,WAAW;AACf,QAAI,SAAS;AACb,QAAI,UAAU,OAAO;AACrB,QAAI,UAAU,OAAO;AACrB,QAAI,WAAW;AACf,QAAIC,QAAO,QAAQ;AACnB,QAAI,kBAAkB,OAAO;AAC7B,QAAI,YAAY,OAAO;AAEvB,QAAI,OAAO;AAEX,aAASH,MAAM,SAAS,SAAS,IAAI;AACnC,UAAI,OAAO,YAAY;AAAY,aAAK,SAAS,UAAU,CAAC;AAC5D,UAAI,CAAC;AAAS,kBAAU,CAAC;AAEzB,UAAI,QAAQ,MAAM;AAChB,YAAI;AACF,gBAAM,IAAI,UAAU,gCAAgC;AACtD,eAAO,SAAS,SAAS,OAAO;AAAA,MAClC;AAEA,aAAO,IAAI,KAAK,SAAS,SAAS,EAAE;AAAA,IACtC;AAEA,IAAAA,MAAK,OAAO;AACZ,QAAI,WAAWA,MAAK,WAAW,SAAS;AAGxC,IAAAA,MAAK,OAAOA;AAEZ,aAASI,QAAQC,SAAQ,KAAK;AAC5B,UAAI,QAAQ,QAAQ,OAAO,QAAQ,UAAU;AAC3C,eAAOA;AAAA,MACT;AAEA,UAAI,OAAO,OAAO,KAAK,GAAG;AAC1B,UAAI,IAAI,KAAK;AACb,aAAO,KAAK;AACV,QAAAA,QAAO,KAAK,MAAM,IAAI,KAAK;AAAA,MAC7B;AACA,aAAOA;AAAA,IACT;AAEA,IAAAL,MAAK,WAAW,SAAU,SAAS,UAAU;AAC3C,UAAI,UAAUI,QAAO,CAAC,GAAG,QAAQ;AACjC,cAAQ,YAAY;AAEpB,UAAI,IAAI,IAAI,KAAK,SAAS,OAAO;AACjC,UAAI,MAAM,EAAE,UAAU;AAEtB,UAAI,CAAC;AACH,eAAO;AAET,UAAI,IAAI,SAAS;AACf,eAAO;AAET,eAAS,IAAI,GAAG,IAAI,IAAI,GAAG,QAAQ,KAAK;AACtC,YAAI,OAAO,IAAI,GAAG,OAAO;AACvB,iBAAO;AAAA,MACX;AAEA,aAAO;AAAA,IACT;AAEA,IAAAJ,MAAK,OAAO;AACZ,IAAAC,UAAS,MAAM,EAAE;AACjB,aAAS,KAAM,SAAS,SAAS,IAAI;AACnC,UAAI,OAAO,YAAY,YAAY;AACjC,aAAK;AACL,kBAAU;AAAA,MACZ;AAEA,UAAI,WAAW,QAAQ,MAAM;AAC3B,YAAI;AACF,gBAAM,IAAI,UAAU,gCAAgC;AACtD,eAAO,IAAI,SAAS,SAAS,OAAO;AAAA,MACtC;AAEA,UAAI,EAAE,gBAAgB;AACpB,eAAO,IAAI,KAAK,SAAS,SAAS,EAAE;AAEtC,cAAQ,MAAM,SAAS,OAAO;AAC9B,WAAK,eAAe;AAGpB,UAAI,IAAI,KAAK,UAAU,IAAI;AAM3B,WAAK,UAAU,IAAI,MAAM,CAAC;AAE1B,UAAI,OAAO,OAAO,YAAY;AAC5B,aAAK,KAAK,EAAE;AACZ,aAAK,GAAG,SAAS,EAAE;AACnB,aAAK,GAAG,OAAO,SAAU,SAAS;AAChC,aAAG,MAAM,OAAO;AAAA,QAClB,CAAC;AAAA,MACH;AAEA,UAAIK,QAAO;AACX,WAAK,cAAc;AAEnB,WAAK,aAAa,CAAC;AACnB,WAAK,gBAAgB,CAAC;AACtB,WAAK,SAAS;AAEd,UAAI,KAAK;AACP,eAAO;AAET,UAAI,MAAM;AACR,eAAO,KAAK;AAEd,UAAI,OAAO;AACX,eAAS,IAAI,GAAG,IAAI,GAAG,KAAM;AAC3B,aAAK,SAAS,KAAK,UAAU,IAAI,IAAI,GAAG,OAAO,IAAI;AAAA,MACrD;AACA,aAAO;AAEP,eAAS,OAAQ;AACf,UAAEA,MAAK;AACP,YAAIA,MAAK,eAAe,GAAG;AACzB,cAAI,MAAM;AACR,oBAAQ,SAAS,WAAY;AAC3B,cAAAA,MAAK,QAAQ;AAAA,YACf,CAAC;AAAA,UACH,OAAO;AACL,YAAAA,MAAK,QAAQ;AAAA,UACf;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,SAAK,UAAU,UAAU,WAAY;AACnC,aAAO,gBAAgB,IAAI;AAC3B,UAAI,KAAK;AACP;AAEF,UAAI,KAAK,YAAY,CAAC,KAAK;AACzB,eAAO,KAAK,UAAU;AAExB,aAAO,OAAO,IAAI;AAClB,WAAK,KAAK,OAAO,KAAK,KAAK;AAAA,IAC7B;AAEA,SAAK,UAAU,YAAY,WAAY;AACrC,UAAI,KAAK;AACP;AAEF,WAAK,eAAe;AAEpB,UAAI,IAAI,KAAK,QAAQ;AACrB,UAAI,MAAM;AACR,eAAO,KAAK,QAAQ;AAEtB,UAAIA,QAAO;AACX,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,QAAQ;AACvC,aAAK,aAAa,GAAG,IAAI;AAE3B,eAAS,OAAQ;AACf,YAAI,EAAE,MAAM;AACV,UAAAA,MAAK,QAAQ;AAAA,MACjB;AAAA,IACF;AAEA,SAAK,UAAU,eAAe,SAAU,OAAO,IAAI;AACjD,UAAI,WAAW,KAAK,QAAQ;AAC5B,UAAI,CAAC;AACH,eAAO,GAAG;AAEZ,UAAI,QAAQ,OAAO,KAAK,QAAQ;AAChC,UAAIA,QAAO;AACX,UAAI,IAAI,MAAM;AAEd,UAAI,MAAM;AACR,eAAO,GAAG;AAEZ,UAAI,MAAM,KAAK,QAAQ,SAAS,uBAAO,OAAO,IAAI;AAClD,YAAM,QAAQ,SAAU,GAAG,GAAG;AAI5B,YAAIA,MAAK,SAAS,CAAC;AACnB,WAAG,SAAS,GAAGA,MAAK,eAAe,SAAU,IAAI,MAAM;AACrD,cAAI,CAAC;AACH,gBAAI,QAAQ;AAAA,mBACL,GAAG,YAAY;AACtB,gBAAI,KAAK;AAAA;AAET,YAAAA,MAAK,KAAK,SAAS,EAAE;AAEvB,cAAI,EAAE,MAAM,GAAG;AACb,YAAAA,MAAK,QAAQ,SAAS;AACtB,eAAG;AAAA,UACL;AAAA,QACF,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAEA,SAAK,UAAU,QAAQ,SAAU,GAAG;AAClC,aAAO,OAAO,KAAK,MAAM,CAAC;AAAA,IAC5B;AAEA,SAAK,UAAU,WAAW,SAAU,GAAG;AACrC,aAAO,OAAO,QAAQ,MAAM,CAAC;AAAA,IAC/B;AAEA,SAAK,UAAU,QAAQ,WAAY;AACjC,WAAK,UAAU;AACf,WAAK,KAAK,OAAO;AAAA,IACnB;AAEA,SAAK,UAAU,QAAQ,WAAY;AACjC,UAAI,CAAC,KAAK,QAAQ;AAChB,aAAK,SAAS;AACd,aAAK,KAAK,OAAO;AAAA,MACnB;AAAA,IACF;AAEA,SAAK,UAAU,SAAS,WAAY;AAClC,UAAI,KAAK,QAAQ;AACf,aAAK,KAAK,QAAQ;AAClB,aAAK,SAAS;AACd,YAAI,KAAK,WAAW,QAAQ;AAC1B,cAAI,KAAK,KAAK,WAAW,MAAM,CAAC;AAChC,eAAK,WAAW,SAAS;AACzB,mBAAS,IAAI,GAAG,IAAI,GAAG,QAAQ,KAAM;AACnC,gBAAI,IAAI,GAAG;AACX,iBAAK,WAAW,EAAE,IAAI,EAAE,EAAE;AAAA,UAC5B;AAAA,QACF;AACA,YAAI,KAAK,cAAc,QAAQ;AAC7B,cAAI,KAAK,KAAK,cAAc,MAAM,CAAC;AACnC,eAAK,cAAc,SAAS;AAC5B,mBAAS,IAAI,GAAG,IAAI,GAAG,QAAQ,KAAM;AACnC,gBAAI,IAAI,GAAG;AACX,iBAAK;AACL,iBAAK,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE;AAAA,UACtC;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,SAAK,UAAU,WAAW,SAAU,SAAS,OAAO,YAAY,IAAI;AAClE,aAAO,gBAAgB,IAAI;AAC3B,aAAO,OAAO,OAAO,UAAU;AAE/B,UAAI,KAAK;AACP;AAEF,WAAK;AACL,UAAI,KAAK,QAAQ;AACf,aAAK,cAAc,KAAK,CAAC,SAAS,OAAO,YAAY,EAAE,CAAC;AACxD;AAAA,MACF;AAKA,UAAI,IAAI;AACR,aAAO,OAAO,QAAQ,OAAO,UAAU;AACrC;AAAA,MACF;AAIA,UAAI;AACJ,cAAQ;AAAA,aAED,QAAQ;AACX,eAAK,eAAe,QAAQ,KAAK,GAAG,GAAG,OAAO,EAAE;AAChD;AAAA,aAEG;AAGH,mBAAS;AACT;AAAA;AAMA,mBAAS,QAAQ,MAAM,GAAG,CAAC,EAAE,KAAK,GAAG;AACrC;AAAA;AAGJ,UAAI,SAAS,QAAQ,MAAM,CAAC;AAG5B,UAAI;AACJ,UAAI,WAAW;AACb,eAAO;AAAA,eACA,WAAW,MAAM,KACtB,WAAW,QAAQ,IAAI,SAAU,GAAG;AAClC,eAAO,OAAO,MAAM,WAAW,IAAI;AAAA,MACrC,CAAC,EAAE,KAAK,GAAG,CAAC,GAAG;AACjB,YAAI,CAAC,UAAU,CAAC,WAAW,MAAM;AAC/B,mBAAS,MAAM;AACjB,eAAO;AAAA,MACT;AACE,eAAO;AAET,UAAI,MAAM,KAAK,SAAS,IAAI;AAG5B,UAAI,gBAAgB,MAAM,IAAI;AAC5B,eAAO,GAAG;AAEZ,UAAI,aAAa,OAAO,OAAO,UAAU;AACzC,UAAI;AACF,aAAK,iBAAiB,QAAQ,MAAM,KAAK,QAAQ,OAAO,YAAY,EAAE;AAAA;AAEtE,aAAK,gBAAgB,QAAQ,MAAM,KAAK,QAAQ,OAAO,YAAY,EAAE;AAAA,IACzE;AAEA,SAAK,UAAU,kBAAkB,SAAU,QAAQ,MAAM,KAAK,QAAQ,OAAO,YAAY,IAAI;AAC3F,UAAIA,QAAO;AACX,WAAK,SAAS,KAAK,YAAY,SAAU,IAAI,SAAS;AACpD,eAAOA,MAAK,iBAAiB,QAAQ,MAAM,KAAK,QAAQ,OAAO,YAAY,SAAS,EAAE;AAAA,MACxF,CAAC;AAAA,IACH;AAEA,SAAK,UAAU,mBAAmB,SAAU,QAAQ,MAAM,KAAK,QAAQ,OAAO,YAAY,SAAS,IAAI;AAGrG,UAAI,CAAC;AACH,eAAO,GAAG;AAIZ,UAAI,KAAK,OAAO;AAChB,UAAI,SAAS,CAAC,CAAC,KAAK,UAAU;AAC9B,UAAI,UAAU,GAAG;AACjB,UAAI,QAAQ,KAAK,OAAO,QAAQ,OAAO,CAAC,MAAM;AAE9C,UAAI,iBAAiB,CAAC;AACtB,eAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,YAAI,IAAI,QAAQ;AAChB,YAAI,EAAE,OAAO,CAAC,MAAM,OAAO,OAAO;AAChC,cAAI;AACJ,cAAI,UAAU,CAAC,QAAQ;AACrB,gBAAI,CAAC,EAAE,MAAM,EAAE;AAAA,UACjB,OAAO;AACL,gBAAI,EAAE,MAAM,EAAE;AAAA,UAChB;AACA,cAAI;AACF,2BAAe,KAAK,CAAC;AAAA,QACzB;AAAA,MACF;AAIA,UAAI,MAAM,eAAe;AAEzB,UAAI,QAAQ;AACV,eAAO,GAAG;AAOZ,UAAI,OAAO,WAAW,KAAK,CAAC,KAAK,QAAQ,CAAC,KAAK,MAAM;AACnD,YAAI,CAAC,KAAK,QAAQ;AAChB,eAAK,QAAQ,SAAS,uBAAO,OAAO,IAAI;AAE1C,iBAAS,IAAI,GAAG,IAAI,KAAK,KAAM;AAC7B,cAAI,IAAI,eAAe;AACvB,cAAI,QAAQ;AACV,gBAAI,WAAW;AACb,kBAAI,SAAS,MAAM;AAAA;AAEnB,kBAAI,SAAS;AAAA,UACjB;AAEA,cAAI,EAAE,OAAO,CAAC,MAAM,OAAO,CAAC,KAAK,SAAS;AACxC,gBAAIJ,OAAK,KAAK,KAAK,MAAM,CAAC;AAAA,UAC5B;AACA,eAAK,WAAW,OAAO,CAAC;AAAA,QAC1B;AAEA,eAAO,GAAG;AAAA,MACZ;AAIA,aAAO,MAAM;AACb,eAAS,IAAI,GAAG,IAAI,KAAK,KAAM;AAC7B,YAAI,IAAI,eAAe;AACvB,YAAI;AACJ,YAAI,QAAQ;AACV,cAAI,WAAW;AACb,gBAAI,SAAS,MAAM;AAAA;AAEnB,gBAAI,SAAS;AAAA,QACjB;AACA,aAAK,SAAS,CAAC,CAAC,EAAE,OAAO,MAAM,GAAG,OAAO,YAAY,EAAE;AAAA,MACzD;AACA,SAAG;AAAA,IACL;AAEA,SAAK,UAAU,aAAa,SAAU,OAAO,GAAG;AAC9C,UAAI,KAAK;AACP;AAEF,UAAI,UAAU,MAAM,CAAC;AACnB;AAEF,UAAI,KAAK,QAAQ;AACf,aAAK,WAAW,KAAK,CAAC,OAAO,CAAC,CAAC;AAC/B;AAAA,MACF;AAEA,UAAI,MAAM,WAAW,CAAC,IAAI,IAAI,KAAK,SAAS,CAAC;AAE7C,UAAI,KAAK;AACP,YAAI,KAAK,MAAM,CAAC;AAElB,UAAI,KAAK;AACP,YAAI;AAEN,UAAI,KAAK,QAAQ,OAAO;AACtB;AAEF,UAAI,KAAK,OAAO;AACd,YAAI,IAAI,KAAK,MAAM;AACnB,YAAI,MAAM,SAAS,MAAM,QAAQ,CAAC;AAChC;AAAA,MACJ;AAEA,WAAK,QAAQ,OAAO,KAAK;AAEzB,UAAI,KAAK,KAAK,UAAU;AACxB,UAAI;AACF,aAAK,KAAK,QAAQ,GAAG,EAAE;AAEzB,WAAK,KAAK,SAAS,CAAC;AAAA,IACtB;AAEA,SAAK,UAAU,qBAAqB,SAAU,KAAK,IAAI;AACrD,UAAI,KAAK;AACP;AAIF,UAAI,KAAK;AACP,eAAO,KAAK,SAAS,KAAK,OAAO,EAAE;AAErC,UAAI,WAAW,YAAY;AAC3B,UAAII,QAAO;AACX,UAAI,UAAU,SAAS,UAAU,QAAQ;AAEzC,UAAI;AACF,QAAAA,MAAK,GAAG,MAAM,KAAK,OAAO;AAE5B,eAAS,SAAU,IAAI,OAAO;AAC5B,YAAI,MAAM,GAAG,SAAS;AACpB,iBAAO,GAAG;AAEZ,YAAI,QAAQ,SAAS,MAAM,eAAe;AAC1C,QAAAA,MAAK,SAAS,OAAO;AAIrB,YAAI,CAAC,SAAS,SAAS,CAAC,MAAM,YAAY,GAAG;AAC3C,UAAAA,MAAK,MAAM,OAAO;AAClB,aAAG;AAAA,QACL;AACE,UAAAA,MAAK,SAAS,KAAK,OAAO,EAAE;AAAA,MAChC;AAAA,IACF;AAEA,SAAK,UAAU,WAAW,SAAU,KAAK,YAAY,IAAI;AACvD,UAAI,KAAK;AACP;AAEF,WAAK,SAAS,cAAY,MAAI,OAAK,YAAY,EAAE;AACjD,UAAI,CAAC;AACH;AAGF,UAAI,cAAc,CAAC,QAAQ,KAAK,UAAU,GAAG;AAC3C,eAAO,KAAK,mBAAmB,KAAK,EAAE;AAExC,UAAI,QAAQ,KAAK,OAAO,GAAG,GAAG;AAC5B,YAAI,IAAI,KAAK,MAAM;AACnB,YAAI,CAAC,KAAK,MAAM;AACd,iBAAO,GAAG;AAEZ,YAAI,MAAM,QAAQ,CAAC;AACjB,iBAAO,GAAG,MAAM,CAAC;AAAA,MACrB;AAEA,UAAIA,QAAO;AACX,MAAAA,MAAK,GAAG,QAAQ,KAAK,UAAU,MAAM,KAAK,EAAE,CAAC;AAAA,IAC/C;AAEA,aAAS,UAAWA,OAAM,KAAK,IAAI;AACjC,aAAO,SAAU,IAAI,SAAS;AAC5B,YAAI;AACF,UAAAA,MAAK,cAAc,KAAK,IAAI,EAAE;AAAA;AAE9B,UAAAA,MAAK,gBAAgB,KAAK,SAAS,EAAE;AAAA,MACzC;AAAA,IACF;AAEA,SAAK,UAAU,kBAAkB,SAAU,KAAK,SAAS,IAAI;AAC3D,UAAI,KAAK;AACP;AAKF,UAAI,CAAC,KAAK,QAAQ,CAAC,KAAK,MAAM;AAC5B,iBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAM;AACxC,cAAI,IAAI,QAAQ;AAChB,cAAI,QAAQ;AACV,gBAAI,MAAM;AAAA;AAEV,gBAAI,MAAM,MAAM;AAClB,eAAK,MAAM,KAAK;AAAA,QAClB;AAAA,MACF;AAEA,WAAK,MAAM,OAAO;AAClB,aAAO,GAAG,MAAM,OAAO;AAAA,IACzB;AAEA,SAAK,UAAU,gBAAgB,SAAU,GAAG,IAAI,IAAI;AAClD,UAAI,KAAK;AACP;AAGF,cAAQ,GAAG;AAAA,aACJ;AAAA,aACA;AACH,cAAI,MAAM,KAAK,SAAS,CAAC;AACzB,eAAK,MAAM,OAAO;AAClB,cAAI,QAAQ,KAAK,QAAQ;AACvB,gBAAI,QAAQ,IAAI,MAAM,GAAG,OAAO,kBAAkB,KAAK,GAAG;AAC1D,kBAAM,OAAO,KAAK;AAClB,kBAAM,OAAO,GAAG;AAChB,iBAAK,KAAK,SAAS,KAAK;AACxB,iBAAK,MAAM;AAAA,UACb;AACA;AAAA,aAEG;AAAA,aACA;AAAA,aACA;AAAA,aACA;AACH,eAAK,MAAM,KAAK,SAAS,CAAC,KAAK;AAC/B;AAAA;AAGA,eAAK,MAAM,KAAK,SAAS,CAAC,KAAK;AAC/B,cAAI,KAAK,QAAQ;AACf,iBAAK,KAAK,SAAS,EAAE;AAGrB,iBAAK,MAAM;AAAA,UACb;AACA,cAAI,CAAC,KAAK;AACR,oBAAQ,MAAM,cAAc,EAAE;AAChC;AAAA;AAGJ,aAAO,GAAG;AAAA,IACZ;AAEA,SAAK,UAAU,mBAAmB,SAAU,QAAQ,MAAM,KAAK,QAAQ,OAAO,YAAY,IAAI;AAC5F,UAAIA,QAAO;AACX,WAAK,SAAS,KAAK,YAAY,SAAU,IAAI,SAAS;AACpD,QAAAA,MAAK,kBAAkB,QAAQ,MAAM,KAAK,QAAQ,OAAO,YAAY,SAAS,EAAE;AAAA,MAClF,CAAC;AAAA,IACH;AAGA,SAAK,UAAU,oBAAoB,SAAU,QAAQ,MAAM,KAAK,QAAQ,OAAO,YAAY,SAAS,IAAI;AAKtG,UAAI,CAAC;AACH,eAAO,GAAG;AAIZ,UAAI,wBAAwB,OAAO,MAAM,CAAC;AAC1C,UAAI,SAAS,SAAS,CAAE,MAAO,IAAI,CAAC;AACpC,UAAI,aAAa,OAAO,OAAO,qBAAqB;AAGpD,WAAK,SAAS,YAAY,OAAO,OAAO,EAAE;AAE1C,UAAI,QAAQ,KAAK,SAAS;AAC1B,UAAI,MAAM,QAAQ;AAGlB,UAAI,SAAS;AACX,eAAO,GAAG;AAEZ,eAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,YAAI,IAAI,QAAQ;AAChB,YAAI,EAAE,OAAO,CAAC,MAAM,OAAO,CAAC,KAAK;AAC/B;AAGF,YAAI,UAAU,OAAO,OAAO,QAAQ,IAAI,qBAAqB;AAC7D,aAAK,SAAS,SAAS,OAAO,MAAM,EAAE;AAEtC,YAAI,QAAQ,OAAO,OAAO,QAAQ,IAAI,MAAM;AAC5C,aAAK,SAAS,OAAO,OAAO,MAAM,EAAE;AAAA,MACtC;AAEA,SAAG;AAAA,IACL;AAEA,SAAK,UAAU,iBAAiB,SAAU,QAAQ,OAAO,IAAI;AAG3D,UAAIA,QAAO;AACX,WAAK,MAAM,QAAQ,SAAU,IAAI,QAAQ;AACvC,QAAAA,MAAK,gBAAgB,QAAQ,OAAO,IAAI,QAAQ,EAAE;AAAA,MACpD,CAAC;AAAA,IACH;AACA,SAAK,UAAU,kBAAkB,SAAU,QAAQ,OAAO,IAAI,QAAQ,IAAI;AAIxE,UAAI,CAAC,KAAK,QAAQ;AAChB,aAAK,QAAQ,SAAS,uBAAO,OAAO,IAAI;AAG1C,UAAI,CAAC;AACH,eAAO,GAAG;AAEZ,UAAI,UAAU,WAAW,MAAM,KAAK,CAAC,KAAK,SAAS;AACjD,YAAI,QAAQ,UAAU,KAAK,MAAM;AACjC,YAAI,OAAO,OAAO,CAAC,MAAM,KAAK;AAC5B,mBAASJ,OAAK,KAAK,KAAK,MAAM,MAAM;AAAA,QACtC,OAAO;AACL,mBAASA,OAAK,QAAQ,KAAK,MAAM,MAAM;AACvC,cAAI;AACF,sBAAU;AAAA,QACd;AAAA,MACF;AAEA,UAAI,QAAQ,aAAa;AACvB,iBAAS,OAAO,QAAQ,OAAO,GAAG;AAGpC,WAAK,WAAW,OAAO,MAAM;AAC7B,SAAG;AAAA,IACL;AAGA,SAAK,UAAU,QAAQ,SAAU,GAAG,IAAI;AACtC,UAAI,MAAM,KAAK,SAAS,CAAC;AACzB,UAAI,UAAU,EAAE,MAAM,EAAE,MAAM;AAE9B,UAAI,EAAE,SAAS,KAAK;AAClB,eAAO,GAAG;AAEZ,UAAI,CAAC,KAAK,QAAQ,QAAQ,KAAK,OAAO,GAAG,GAAG;AAC1C,YAAI,IAAI,KAAK,MAAM;AAEnB,YAAI,MAAM,QAAQ,CAAC;AACjB,cAAI;AAGN,YAAI,CAAC,WAAW,MAAM;AACpB,iBAAO,GAAG,MAAM,CAAC;AAEnB,YAAI,WAAW,MAAM;AACnB,iBAAO,GAAG;AAAA,MAId;AAEA,UAAI;AACJ,UAAI,OAAO,KAAK,UAAU;AAC1B,UAAI,SAAS,QAAW;AACtB,YAAI,SAAS;AACX,iBAAO,GAAG,MAAM,IAAI;AAAA,aACjB;AACH,cAAI,OAAO,KAAK,YAAY,IAAI,QAAQ;AACxC,cAAI,WAAW,SAAS;AACtB,mBAAO,GAAG;AAAA;AAEV,mBAAO,GAAG,MAAM,MAAM,IAAI;AAAA,QAC9B;AAAA,MACF;AAEA,UAAII,QAAO;AACX,UAAI,SAAS,SAAS,WAAW,KAAK,QAAQ;AAC9C,UAAI;AACF,QAAAA,MAAK,GAAG,MAAM,KAAK,MAAM;AAE3B,eAAS,SAAU,IAAI,OAAO;AAC5B,YAAI,SAAS,MAAM,eAAe,GAAG;AAGnC,iBAAOA,MAAK,GAAG,KAAK,KAAK,SAAUC,KAAIC,OAAM;AAC3C,gBAAID;AACF,cAAAD,MAAK,OAAO,GAAG,KAAK,MAAM,OAAO,EAAE;AAAA;AAEnC,cAAAA,MAAK,OAAO,GAAG,KAAKC,KAAIC,OAAM,EAAE;AAAA,UACpC,CAAC;AAAA,QACH,OAAO;AACL,UAAAF,MAAK,OAAO,GAAG,KAAK,IAAI,OAAO,EAAE;AAAA,QACnC;AAAA,MACF;AAAA,IACF;AAEA,SAAK,UAAU,SAAS,SAAU,GAAG,KAAK,IAAI,MAAM,IAAI;AACtD,UAAI,OAAO,GAAG,SAAS,YAAY,GAAG,SAAS,YAAY;AACzD,aAAK,UAAU,OAAO;AACtB,eAAO,GAAG;AAAA,MACZ;AAEA,UAAI,UAAU,EAAE,MAAM,EAAE,MAAM;AAC9B,WAAK,UAAU,OAAO;AAEtB,UAAI,IAAI,MAAM,EAAE,MAAM,OAAO,QAAQ,CAAC,KAAK,YAAY;AACrD,eAAO,GAAG,MAAM,OAAO,IAAI;AAE7B,UAAI,IAAI;AACR,UAAI;AACF,YAAI,KAAK,YAAY,IAAI,QAAQ;AACnC,WAAK,MAAM,OAAO,KAAK,MAAM,QAAQ;AAErC,UAAI,WAAW,MAAM;AACnB,eAAO,GAAG;AAEZ,aAAO,GAAG,MAAM,GAAG,IAAI;AAAA,IACzB;AAAA;AAAA;;;ACrxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAG,WAAwB;;;ACAxB,IAAAC,WAAwB;;;ACExB,aAAwB;AAmBxB,SAAS,cACP,QACA,OACA,QACA,MACQ;AACR,MAAI,eAAuB;AAC3B,iBAAe,OAAO,OAAO,EAAE,IAAI,MAAM,OAAO,CAAC,IAAI,SAAS;AAC9D,SAAO;AACT;AAEA,eAAe,eACb,QACA,OACA,QACA,KACA;AACA,QAAMC,eAAc,eAAe;AACnC,MAAI,aAAa,IAAI,MAAM,IAAI;AAE/B,MAAI,SAAS,uBAAkB;AAC7B,IAAO,cAAO,iBAAiB,WAAW,EAAE;AAAA,EAC9C;AACA,WAAS,QAAQ,YAAY;AAC3B,IAAAA,aAAY,WAAW,cAAc,QAAQ,OAAO,QAAQ,IAAI,CAAC;AAAA,EACnE;AACF;AAIO,IAAM,eAAe;AAC5B,eAAsB,cACpB,KACA,QAAoB,sBACpB,SAAiB,IACjB;AACA,MACE,SAAS,yBACR,SAAS,yBAAoB,iBAC9B;AACA,mBAAe,iBAAiB,OAAO,QAAQ,GAAG;AAAA,EACpD;AACF;AAMA,IAAI,kBAA2B;AACxB,SAAS,uBAAuB;AACrC,QAAM,WAAkB,iBAAU,iBAAiB,wBAAwB;AAC3E,oBAAkB,SAAS,IAAI,kBAAkB,KAAK;AACxD;AAEA,IAAI,kBAA2B;AACxB,SAAS,kBAAkB;AAChC,QAAMC,eAAc,eAAe;AACnC,EAAAA,aAAY,KAAK;AACjB,oBAAkB;AACpB;AAQO,SAAS,mBAAmB;AACjC,QAAMC,eAAc,eAAe;AACnC,MAAI,iBAAiB;AACnB,IAAAA,aAAY,KAAK;AACjB,sBAAkB;AAAA,EACpB,OAAO;AACL,IAAAA,aAAY,KAAK;AACjB,sBAAkB;AAAA,EACpB;AACF;;;ACjGA,IAAAC,WAAwB;;;ACSjB,SAAS,cAAc,MAAM,eAAe,OAAO;AACtD,QAAM,MAAM,KAAK;AACjB,MAAI,MAAM,GAAG,QAAQ,IAAI,cAAc,GAAG,QAAQ,IAA6B,aAAa,GAAG,kBAAkB,GAAG,uBAAuB,GAAG,2BAA2B,GAAG,YAAY;AACxL,WAAS,cAAc,OAAO,OAAO;AACjC,QAAI,SAAS;AACb,QAAIC,SAAQ;AACZ,WAAO,SAAS,SAAS,CAAC,OAAO;AAC7B,UAAI,KAAK,KAAK,WAAW,GAAG;AAC5B,UAAI,MAAM,MAA8B,MAAM,IAA4B;AACtE,QAAAA,SAAQA,SAAQ,KAAK,KAAK;AAAA,MAC9B,WACS,MAAM,MAA6B,MAAM,IAA2B;AACzE,QAAAA,SAAQA,SAAQ,KAAK,KAAK,KAA4B;AAAA,MAC1D,WACS,MAAM,MAA6B,MAAM,KAA4B;AAC1E,QAAAA,SAAQA,SAAQ,KAAK,KAAK,KAA4B;AAAA,MAC1D,OACK;AACD;AAAA,MACJ;AACA;AACA;AAAA,IACJ;AACA,QAAI,SAAS,OAAO;AAChB,MAAAA,SAAQ;AAAA,IACZ;AACA,WAAOA;AAAA,EACX;AACA,WAAS,YAAY,aAAa;AAC9B,UAAM;AACN,YAAQ;AACR,kBAAc;AACd,YAAQ;AACR,gBAAY;AAAA,EAChB;AACA,WAAS,aAAa;AAClB,QAAI,QAAQ;AACZ,QAAI,KAAK,WAAW,GAAG,MAAM,IAA4B;AACrD;AAAA,IACJ,OACK;AACD;AACA,aAAO,MAAM,KAAK,UAAU,QAAQ,KAAK,WAAW,GAAG,CAAC,GAAG;AACvD;AAAA,MACJ;AAAA,IACJ;AACA,QAAI,MAAM,KAAK,UAAU,KAAK,WAAW,GAAG,MAAM,IAA6B;AAC3E;AACA,UAAI,MAAM,KAAK,UAAU,QAAQ,KAAK,WAAW,GAAG,CAAC,GAAG;AACpD;AACA,eAAO,MAAM,KAAK,UAAU,QAAQ,KAAK,WAAW,GAAG,CAAC,GAAG;AACvD;AAAA,QACJ;AAAA,MACJ,OACK;AACD,oBAAY;AACZ,eAAO,KAAK,UAAU,OAAO,GAAG;AAAA,MACpC;AAAA,IACJ;AACA,QAAI,MAAM;AACV,QAAI,MAAM,KAAK,WAAW,KAAK,WAAW,GAAG,MAAM,MAA6B,KAAK,WAAW,GAAG,MAAM,MAA6B;AAClI;AACA,UAAI,MAAM,KAAK,UAAU,KAAK,WAAW,GAAG,MAAM,MAAgC,KAAK,WAAW,GAAG,MAAM,IAA+B;AACtI;AAAA,MACJ;AACA,UAAI,MAAM,KAAK,UAAU,QAAQ,KAAK,WAAW,GAAG,CAAC,GAAG;AACpD;AACA,eAAO,MAAM,KAAK,UAAU,QAAQ,KAAK,WAAW,GAAG,CAAC,GAAG;AACvD;AAAA,QACJ;AACA,cAAM;AAAA,MACV,OACK;AACD,oBAAY;AAAA,MAChB;AAAA,IACJ;AACA,WAAO,KAAK,UAAU,OAAO,GAAG;AAAA,EACpC;AACA,WAAS,aAAa;AAClB,QAAI,SAAS,IAAI,QAAQ;AACzB,WAAO,MAAM;AACT,UAAI,OAAO,KAAK;AACZ,kBAAU,KAAK,UAAU,OAAO,GAAG;AACnC,oBAAY;AACZ;AAAA,MACJ;AACA,YAAM,KAAK,KAAK,WAAW,GAAG;AAC9B,UAAI,OAAO,IAAqC;AAC5C,kBAAU,KAAK,UAAU,OAAO,GAAG;AACnC;AACA;AAAA,MACJ;AACA,UAAI,OAAO,IAAmC;AAC1C,kBAAU,KAAK,UAAU,OAAO,GAAG;AACnC;AACA,YAAI,OAAO,KAAK;AACZ,sBAAY;AACZ;AAAA,QACJ;AACA,cAAM,MAAM,KAAK,WAAW,KAAK;AACjC,gBAAQ;AAAA,eACC;AACD,sBAAU;AACV;AAAA,eACC;AACD,sBAAU;AACV;AAAA,eACC;AACD,sBAAU;AACV;AAAA,eACC;AACD,sBAAU;AACV;AAAA,eACC;AACD,sBAAU;AACV;AAAA,eACC;AACD,sBAAU;AACV;AAAA,eACC;AACD,sBAAU;AACV;AAAA,eACC;AACD,sBAAU;AACV;AAAA,eACC;AACD,kBAAM,MAAM,cAAc,GAAG,IAAI;AACjC,gBAAI,OAAO,GAAG;AACV,wBAAU,OAAO,aAAa,GAAG;AAAA,YACrC,OACK;AACD,0BAAY;AAAA,YAChB;AACA;AAAA;AAEA,wBAAY;AAAA;AAEpB,gBAAQ;AACR;AAAA,MACJ;AACA,UAAI,MAAM,KAAK,MAAM,IAAM;AACvB,YAAI,YAAY,EAAE,GAAG;AACjB,oBAAU,KAAK,UAAU,OAAO,GAAG;AACnC,sBAAY;AACZ;AAAA,QACJ,OACK;AACD,sBAAY;AAAA,QAEhB;AAAA,MACJ;AACA;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AACA,WAAS,WAAW;AAChB,YAAQ;AACR,gBAAY;AACZ,kBAAc;AACd,sBAAkB;AAClB,+BAA2B;AAC3B,QAAI,OAAO,KAAK;AAEZ,oBAAc;AACd,aAAO,QAAQ;AAAA,IACnB;AACA,QAAI,OAAO,KAAK,WAAW,GAAG;AAE9B,QAAI,aAAa,IAAI,GAAG;AACpB,SAAG;AACC;AACA,iBAAS,OAAO,aAAa,IAAI;AACjC,eAAO,KAAK,WAAW,GAAG;AAAA,MAC9B,SAAS,aAAa,IAAI;AAC1B,aAAO,QAAQ;AAAA,IACnB;AAEA,QAAI,YAAY,IAAI,GAAG;AACnB;AACA,eAAS,OAAO,aAAa,IAAI;AACjC,UAAI,SAAS,MAA0C,KAAK,WAAW,GAAG,MAAM,IAAkC;AAC9G;AACA,iBAAS;AAAA,MACb;AACA;AACA,6BAAuB;AACvB,aAAO,QAAQ;AAAA,IACnB;AACA,YAAQ;AAAA,WAEC;AACD;AACA,eAAO,QAAQ;AAAA,WACd;AACD;AACA,eAAO,QAAQ;AAAA,WACd;AACD;AACA,eAAO,QAAQ;AAAA,WACd;AACD;AACA,eAAO,QAAQ;AAAA,WACd;AACD;AACA,eAAO,QAAQ;AAAA,WACd;AACD;AACA,eAAO,QAAQ;AAAA,WAEd;AACD;AACA,gBAAQ,WAAW;AACnB,eAAO,QAAQ;AAAA,WAEd;AACD,cAAM,QAAQ,MAAM;AAEpB,YAAI,KAAK,WAAW,MAAM,CAAC,MAAM,IAA+B;AAC5D,iBAAO;AACP,iBAAO,MAAM,KAAK;AACd,gBAAI,YAAY,KAAK,WAAW,GAAG,CAAC,GAAG;AACnC;AAAA,YACJ;AACA;AAAA,UACJ;AACA,kBAAQ,KAAK,UAAU,OAAO,GAAG;AACjC,iBAAO,QAAQ;AAAA,QACnB;AAEA,YAAI,KAAK,WAAW,MAAM,CAAC,MAAM,IAAkC;AAC/D,iBAAO;AACP,gBAAM,aAAa,MAAM;AACzB,cAAI,gBAAgB;AACpB,iBAAO,MAAM,YAAY;AACrB,kBAAM,KAAK,KAAK,WAAW,GAAG;AAC9B,gBAAI,OAAO,MAAoC,KAAK,WAAW,MAAM,CAAC,MAAM,IAA+B;AACvG,qBAAO;AACP,8BAAgB;AAChB;AAAA,YACJ;AACA;AACA,gBAAI,YAAY,EAAE,GAAG;AACjB,kBAAI,OAAO,MAA0C,KAAK,WAAW,GAAG,MAAM,IAAkC;AAC5G;AAAA,cACJ;AACA;AACA,qCAAuB;AAAA,YAC3B;AAAA,UACJ;AACA,cAAI,CAAC,eAAe;AAChB;AACA,wBAAY;AAAA,UAChB;AACA,kBAAQ,KAAK,UAAU,OAAO,GAAG;AACjC,iBAAO,QAAQ;AAAA,QACnB;AAEA,iBAAS,OAAO,aAAa,IAAI;AACjC;AACA,eAAO,QAAQ;AAAA,WAEd;AACD,iBAAS,OAAO,aAAa,IAAI;AACjC;AACA,YAAI,QAAQ,OAAO,CAAC,QAAQ,KAAK,WAAW,GAAG,CAAC,GAAG;AAC/C,iBAAO,QAAQ;AAAA,QACnB;AAAA,WAIC;AAAA,WACA;AAAA,WACA;AAAA,WACA;AAAA,WACA;AAAA,WACA;AAAA,WACA;AAAA,WACA;AAAA,WACA;AAAA,WACA;AACD,iBAAS,WAAW;AACpB,eAAO,QAAQ;AAAA;AAIf,eAAO,MAAM,OAAO,0BAA0B,IAAI,GAAG;AACjD;AACA,iBAAO,KAAK,WAAW,GAAG;AAAA,QAC9B;AACA,YAAI,gBAAgB,KAAK;AACrB,kBAAQ,KAAK,UAAU,aAAa,GAAG;AAEvC,kBAAQ;AAAA,iBACC;AAAQ,qBAAO,QAAQ;AAAA,iBACvB;AAAS,qBAAO,QAAQ;AAAA,iBACxB;AAAQ,qBAAO,QAAQ;AAAA;AAEhC,iBAAO,QAAQ;AAAA,QACnB;AAEA,iBAAS,OAAO,aAAa,IAAI;AACjC;AACA,eAAO,QAAQ;AAAA;AAAA,EAE3B;AACA,WAAS,0BAA0B,MAAM;AACrC,QAAI,aAAa,IAAI,KAAK,YAAY,IAAI,GAAG;AACzC,aAAO;AAAA,IACX;AACA,YAAQ;AAAA,WACC;AAAA,WACA;AAAA,WACA;AAAA,WACA;AAAA,WACA;AAAA,WACA;AAAA,WACA;AAAA,WACA;AACD,eAAO;AAAA;AAEf,WAAO;AAAA,EACX;AACA,WAAS,oBAAoB;AACzB,QAAI;AACJ,OAAG;AACC,eAAS,SAAS;AAAA,IACtB,SAAS,UAAU,MAAyC,UAAU;AACtE,WAAO;AAAA,EACX;AACA,SAAO;AAAA,IACH;AAAA,IACA,aAAa,MAAM;AAAA,IACnB,MAAM,eAAe,oBAAoB;AAAA,IACzC,UAAU,MAAM;AAAA,IAChB,eAAe,MAAM;AAAA,IACrB,gBAAgB,MAAM;AAAA,IACtB,gBAAgB,MAAM,MAAM;AAAA,IAC5B,mBAAmB,MAAM;AAAA,IACzB,wBAAwB,MAAM,cAAc;AAAA,IAC5C,eAAe,MAAM;AAAA,EACzB;AACJ;AACA,SAAS,aAAa,IAAI;AACtB,SAAO,OAAO,MAAiC,OAAO;AAC1D;AACA,SAAS,YAAY,IAAI;AACrB,SAAO,OAAO,MAAoC,OAAO;AAC7D;AACA,SAAS,QAAQ,IAAI;AACjB,SAAO,MAAM,MAA8B,MAAM;AACrD;AACA,IAAI;AAAA,CACH,SAAUC,iBAAgB;AACvB,EAAAA,gBAAeA,gBAAe,cAAc,MAAM;AAClD,EAAAA,gBAAeA,gBAAe,oBAAoB,MAAM;AACxD,EAAAA,gBAAeA,gBAAe,WAAW,MAAM;AAC/C,EAAAA,gBAAeA,gBAAe,QAAQ,MAAM;AAC5C,EAAAA,gBAAeA,gBAAe,QAAQ,MAAM;AAC5C,EAAAA,gBAAeA,gBAAe,QAAQ,MAAM;AAC5C,EAAAA,gBAAeA,gBAAe,QAAQ,MAAM;AAC5C,EAAAA,gBAAeA,gBAAe,QAAQ,MAAM;AAC5C,EAAAA,gBAAeA,gBAAe,QAAQ,MAAM;AAC5C,EAAAA,gBAAeA,gBAAe,QAAQ,MAAM;AAC5C,EAAAA,gBAAeA,gBAAe,QAAQ,MAAM;AAC5C,EAAAA,gBAAeA,gBAAe,QAAQ,MAAM;AAC5C,EAAAA,gBAAeA,gBAAe,QAAQ,MAAM;AAC5C,EAAAA,gBAAeA,gBAAe,OAAO,MAAM;AAC3C,EAAAA,gBAAeA,gBAAe,OAAO,MAAM;AAC3C,EAAAA,gBAAeA,gBAAe,OAAO,MAAM;AAC3C,EAAAA,gBAAeA,gBAAe,OAAO,OAAO;AAC5C,EAAAA,gBAAeA,gBAAe,OAAO,OAAO;AAC5C,EAAAA,gBAAeA,gBAAe,OAAO,OAAO;AAC5C,EAAAA,gBAAeA,gBAAe,OAAO,OAAO;AAC5C,EAAAA,gBAAeA,gBAAe,OAAO,OAAO;AAC5C,EAAAA,gBAAeA,gBAAe,OAAO,OAAO;AAC5C,EAAAA,gBAAeA,gBAAe,OAAO,OAAO;AAC5C,EAAAA,gBAAeA,gBAAe,OAAO,OAAO;AAC5C,EAAAA,gBAAeA,gBAAe,OAAO,OAAO;AAC5C,EAAAA,gBAAeA,gBAAe,OAAO,OAAO;AAC5C,EAAAA,gBAAeA,gBAAe,OAAO,OAAO;AAC5C,EAAAA,gBAAeA,gBAAe,OAAO,OAAO;AAC5C,EAAAA,gBAAeA,gBAAe,OAAO,OAAO;AAC5C,EAAAA,gBAAeA,gBAAe,OAAO,OAAO;AAC5C,EAAAA,gBAAeA,gBAAe,OAAO,OAAO;AAC5C,EAAAA,gBAAeA,gBAAe,OAAO,OAAO;AAC5C,EAAAA,gBAAeA,gBAAe,OAAO,OAAO;AAC5C,EAAAA,gBAAeA,gBAAe,OAAO,OAAO;AAC5C,EAAAA,gBAAeA,gBAAe,OAAO,OAAO;AAC5C,EAAAA,gBAAeA,gBAAe,OAAO,OAAO;AAC5C,EAAAA,gBAAeA,gBAAe,OAAO,OAAO;AAC5C,EAAAA,gBAAeA,gBAAe,OAAO,OAAO;AAC5C,EAAAA,gBAAeA,gBAAe,OAAO,OAAO;AAC5C,EAAAA,gBAAeA,gBAAe,OAAO,MAAM;AAC3C,EAAAA,gBAAeA,gBAAe,OAAO,MAAM;AAC3C,EAAAA,gBAAeA,gBAAe,OAAO,MAAM;AAC3C,EAAAA,gBAAeA,gBAAe,OAAO,MAAM;AAC3C,EAAAA,gBAAeA,gBAAe,OAAO,MAAM;AAC3C,EAAAA,gBAAeA,gBAAe,OAAO,MAAM;AAC3C,EAAAA,gBAAeA,gBAAe,OAAO,MAAM;AAC3C,EAAAA,gBAAeA,gBAAe,OAAO,MAAM;AAC3C,EAAAA,gBAAeA,gBAAe,OAAO,MAAM;AAC3C,EAAAA,gBAAeA,gBAAe,OAAO,MAAM;AAC3C,EAAAA,gBAAeA,gBAAe,OAAO,MAAM;AAC3C,EAAAA,gBAAeA,gBAAe,OAAO,MAAM;AAC3C,EAAAA,gBAAeA,gBAAe,OAAO,MAAM;AAC3C,EAAAA,gBAAeA,gBAAe,OAAO,MAAM;AAC3C,EAAAA,gBAAeA,gBAAe,OAAO,MAAM;AAC3C,EAAAA,gBAAeA,gBAAe,OAAO,MAAM;AAC3C,EAAAA,gBAAeA,gBAAe,OAAO,MAAM;AAC3C,EAAAA,gBAAeA,gBAAe,OAAO,MAAM;AAC3C,EAAAA,gBAAeA,gBAAe,OAAO,MAAM;AAC3C,EAAAA,gBAAeA,gBAAe,OAAO,MAAM;AAC3C,EAAAA,gBAAeA,gBAAe,OAAO,MAAM;AAC3C,EAAAA,gBAAeA,gBAAe,OAAO,MAAM;AAC3C,EAAAA,gBAAeA,gBAAe,OAAO,MAAM;AAC3C,EAAAA,gBAAeA,gBAAe,OAAO,MAAM;AAC3C,EAAAA,gBAA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",
  "names": ["module", "util", "module", "util", "stream", "self", "module", "charset", "path", "extension", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "util", "path", "http", "https", "fs", "FormData", "append", "defaults", "getProxyForUrl", "url", "module", "parse", "module", "self", "format", "extend", "module", "module", "module", "os", "stream", "module", "util", "useColors", "module", "module", "module", "url", "URL", "http", "https", "isFunction", "noop", "self", "isString", "isBuffer", "exports", "spread", "module", "i", "parse", "Range", "range", "comp", "ErrorCodes", "Disposable", "Event", "Is", "CRLF", "MessageReader", "process", "Is", "CRLF", "MessageWriter", "process", "error", "Is", "CancellationToken", "CancellationTokenSource", "Touch", "__export", "Is", "CancelNotification", "Trace", "toString", "TraceFormat", "SetTraceNotification", "LogTraceNotification", "ConnectionErrors", "ConnectionStrategy", "ConnectionState", "startTime", "Position", "Range", "Location", "LocationLink", "Color", "ColorInformation", "ColorPresentation", "FoldingRangeKind", "FoldingRange", "DiagnosticRelatedInformation", "DiagnosticSeverity", "Diagnostic", "Command", "TextEdit", "TextDocumentEdit", "CreateFile", "RenameFile", "DeleteFile", "WorkspaceEdit", "TextEditChangeImpl", "WorkspaceChange", "TextDocumentIdentifier", "VersionedTextDocumentIdentifier", "TextDocumentItem", "MarkupKind", "MarkupContent", "CompletionItemKind", "InsertTextFormat", "CompletionItem", "CompletionList", "MarkedString", "Hover", "ParameterInformation", "SignatureInformation", "DocumentHighlightKind", "DocumentHighlight", "SymbolKind", "SymbolInformation", "DocumentSymbol", "CodeActionKind", "CodeActionContext", "CodeAction", "CodeLens", "FormattingOptions", "DocumentLink", "TextDocument", "applyEdits", "document", "TextDocumentSaveReason", "FullTextDocument", "Is", "toString", "undefined", "require_is", "ImplementationRequest", "TypeDefinitionRequest", "WorkspaceFoldersRequest", "DidChangeWorkspaceFoldersNotification", "ConfigurationRequest", "DocumentColorRequest", "ColorPresentationRequest", "FoldingRangeKind", "FoldingRangeRequest", "DeclarationRequest", "Is", "DocumentFilter", "RegistrationRequest", "UnregistrationRequest", "ResourceOperationKind", "FailureHandlingKind", "TextDocumentSyncKind", "InitializeRequest", "InitializeError", "InitializedNotification", "ShutdownRequest", "ExitNotification", "DidChangeConfigurationNotification", "MessageType", "ShowMessageNotification", "ShowMessageRequest", "LogMessageNotification", "TelemetryEventNotification", "DidOpenTextDocumentNotification", "DidChangeTextDocumentNotification", "DidCloseTextDocumentNotification", "DidSaveTextDocumentNotification", "WillSaveTextDocumentNotification", "WillSaveTextDocumentWaitUntilRequest", "DidChangeWatchedFilesNotification", "FileChangeType", "WatchKind", "PublishDiagnosticsNotification", "CompletionTriggerKind", "CompletionRequest", "CompletionResolveRequest", "HoverRequest", "SignatureHelpRequest", "DefinitionRequest", "ReferencesRequest", "DocumentHighlightRequest", "DocumentSymbolRequest", "WorkspaceSymbolRequest", "CodeActionRequest", "CodeLensRequest", "CodeLensResolveRequest", "DocumentFormattingRequest", "DocumentRangeFormattingRequest", "DocumentOnTypeFormattingRequest", "RenameRequest", "PrepareRenameRequest", "DocumentLinkRequest", "DocumentLinkResolveRequest", "ExecuteCommandRequest", "ApplyWorkspaceEditRequest", "require_main", "__export", "require_is", "Is", "document", "format", "Is", "CodeBlock", "require_async", "parse", "__export", "Is", "ErrorAction", "CloseAction", "RevealOutputChannelOn", "State", "ClientState", "DynamicFeature", "data", "client", "textDocument", "event", "document", "options", "sections", "path", "MessageTransports", "uri", "diagnostics", "Is", "client", "document", "client", "params", "Is", "client", "document", "Is", "client", "document", "client", "event", "Is", "client", "document", "Is", "client", "document", "process", "require_main", "__export", "fs", "Is", "Executable", "TransportKind", "Transport", "NodeModule", "StreamInfo", "ChildProcessInfo", "LanguageClient", "cp", "transport", "process", "ProposedFeatures", "module", "fs", "path", "module", "fs", "path", "module", "fs", "path", "module", "path", "which", "fs", "err", "base", "module", "fs", "module", "isArray", "module", "module", "test", "module", "path", "filter", "minimatch", "Minimatch", "defaults", "makeRe", "braceExpand", "set", "parse", "self", "module", "inherits", "module", "util", "module", "path", "require_common", "fs", "path", "self", "all", "m", "module", "util", "path", "self", "module", "cb", "module", "module", "module", "glob", "inherits", "path", "util", "extend", "origin", "self", "er", "stat", "vscode", "vscode", "messagePane", "messagePane", "messagePane", "vscode", "value", "CharacterCodes", "ParseOptions", "path", "path", "edit", "ScanError", "SyntaxKind", "parse", "ParseErrorCode", "path", "vscode", "vscode", "vscode", "import_child_process", "vscode", "fs", "vscode", "vscode", "import_vscode", "path", "prototype", "descriptors", "filter", "hasOwnProperty", "visit", "filter", "FormData", "path", "prototype", "toString", "encode", "url", "url", "path", "path", "isFormData", "isFileList", "transitional", "filter", "self", "format", "prototype", "validateStatus", "url", "import_util", "url", "import_stream", "stream", "import_stream", "import_stream", "stream", "zlib", "followRedirects", "stream", "util", "path", "https", "http", "transitional", "url", "path", "merge", "transitional", "signal", "stream", "done", "res", "url", "validators", "transitional", "url", "Axios", "AxiosError", "CanceledError", "isCancel", "CancelToken", "VERSION", "all", "isAxiosError", "spread", "toFormData", "AxiosHeaders", "HttpStatusCode", "mergeConfig", "vscode", "vscode", "path", "filter", "path", "fs", "path", "parse", "workspace", "vscode", "vscode", "vscode", "path", "url", "vscode", "fs", "vscode", "fs", "path", "parse", "jsoncEdits", "path", "fs", "vscode", "fs", "path", "import_child_process", "fs", "path", "workspace", "ignoreEnvsInProject", "path", "workspace", "fs", "test", "performance", "url", "nodeKind", "fs", "path", "path", "path", "path", "loadScriptCallBack", "rebuildEnvironmentCallback", "transmitResponse", "fs", "path", "fs", "path", "cacheValue", "fs", "path", "fs", "glob", "os", "path", "parse", "fs", "path", "vscode", "import_child_process", "os", "fs", "terminateServerProcessing", "fs", "os", "terminateServerProcessing", "fs", "path", "context"]
}
