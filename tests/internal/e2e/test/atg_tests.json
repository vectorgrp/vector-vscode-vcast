{
  "cpp/unitTests/QUOTES_EXAMPLE": {
    "quotes_example": {
      "Moo::honk(int,int,int)": {
        "ATG-TEST-1": "-- Unit: quotes_example\n\n-- Subprogram: Moo::honk(int,int,int)\n\n-- Test Case: ATG-TEST-1\nTEST.UNIT:quotes_example\nTEST.SUBPROGRAM:Moo::honk(int,int,int)\nTEST.REPLACE\nTEST.NAME:ATG-TEST-1\nTEST.NOTES:\nThis is an automatically generated test case.\n   Test Path 1\nNo path constraints\n   Test Case Generation Notes:\n\nTEST.END_NOTES:\nTEST.VALUE:quotes_example.<<GLOBAL>>.(cl).Moo.Moo.<<constructor>>.Moo().<<call>>:0\nTEST.END"
      }
    }
  },
  "cpp/unitTests/DATABASE-MANAGER": {
    "database": {
      "DataBase::~DataBase": {
        "ATG-TEST-1": "-- Unit: database\n\n-- Subprogram: DataBase::~DataBase\n\n-- Test Case: ATG-TEST-1\nTEST.UNIT:database\nTEST.SUBPROGRAM:DataBase::~DataBase\nTEST.REPLACE\nTEST.NAME:ATG-TEST-1\nTEST.NOTES:\nThis is an automatically generated test case.\n   Test Path 1\nNo path constraints\n   Test Case Generation Notes:\n\nTEST.END_NOTES:\nTEST.VALUE:database.<<GLOBAL>>.(cl).DataBase.DataBase.<<constructor>>.DataBase().<<call>>:0\nTEST.END"
      },
      "DataBase::DataBase": {
        "ATG-TEST-1": "-- Unit: database\n\n-- Subprogram: DataBase::DataBase\n\n-- Test Case: ATG-TEST-1\nTEST.UNIT:database\nTEST.SUBPROGRAM:DataBase::DataBase\nTEST.REPLACE\nTEST.NAME:ATG-TEST-1\nTEST.NOTES:\nThis is an automatically generated test case.\n   Test Path 1\nNo path constraints\n   Test Case Generation Notes:\n      We didn't set any values -- maybe we have no visibility/static variable?\nTEST.END_NOTES:\nTEST.END"
      },
      "DataBase::DeleteAllRecords": {},
      "DataBase::DeleteOneRecord": {},
      "DataBase::DeleteRecord": {
        "ATG-TEST-1": "-- Unit: database\n\n-- Subprogram: DataBase::DeleteRecord\n\n-- Test Case: ATG-TEST-1\nTEST.UNIT:database\nTEST.SUBPROGRAM:DataBase::DeleteRecord\nTEST.REPLACE\nTEST.NAME:ATG-TEST-1\nTEST.NOTES:\nThis is an automatically generated test case.\n   Test Path 1\n       #  this->DeleteOneRecord(Table, TableData)\n   Test Case Generation Notes:\n      ATG constructed a complete test-case.\nTEST.END_NOTES:\nTEST.STUB:database.DataBase::DeleteOneRecord\nTEST.VALUE:<<OPTIONS>>.SHOW_ONLY_DATA_WITH_EXPECTED_RESULTS:TRUE\nTEST.VALUE:database.<<GLOBAL>>.(cl).DataBase.DataBase.<<constructor>>.DataBase().<<call>>:0\nTEST.VALUE:database.DataBase::DeleteRecord.Table:0\nTEST.END"
      },
      "DataBase::DeleteTableRecord": {},
      "DataBase::GetTableRecord": {
        "ATG-TEST-1": "-- Unit: database\n\n-- Subprogram: DataBase::GetTableRecord\n\n-- Test Case: ATG-TEST-1\nTEST.UNIT:database\nTEST.SUBPROGRAM:DataBase::GetTableRecord\nTEST.REPLACE\nTEST.NAME:ATG-TEST-1\nTEST.NOTES:\nThis is an automatically generated test case.\n   Test Path 1\n       #  *Data := TableData[Table]\n   Test Case Generation Notes:\n      ATG constructed a complete test-case.\nTEST.END_NOTES:\nTEST.VALUE:database.<<GLOBAL>>.(cl).DataBase.DataBase.<<constructor>>.DataBase().<<call>>:0\nTEST.VALUE:database.DataBase::GetTableRecord.Table:4\nTEST.VALUE:database.DataBase::GetTableRecord.Data:<<malloc 1>>\nTEST.END"
      },
      "DataBase::UpdateTableRecord": {
        "ATG-TEST-1": "-- Unit: database\n\n-- Subprogram: DataBase::UpdateTableRecord\n\n-- Test Case: ATG-TEST-1\nTEST.UNIT:database\nTEST.SUBPROGRAM:DataBase::UpdateTableRecord\nTEST.REPLACE\nTEST.NAME:ATG-TEST-1\nTEST.NOTES:\nThis is an automatically generated test case.\n   Test Path 1\n       #  TableData[Table] := *Data\n   Test Case Generation Notes:\n      ATG constructed a complete test-case.\nTEST.END_NOTES:\nTEST.VALUE:database.<<GLOBAL>>.(cl).DataBase.DataBase.<<constructor>>.DataBase().<<call>>:0\nTEST.VALUE:database.DataBase::UpdateTableRecord.Table:5\nTEST.VALUE:database.DataBase::UpdateTableRecord.Data:<<malloc 1>>\nTEST.END"
      }
    },
    "manager": {
      "Manager::AddIncludedDessert": {
        "ATG-TEST-1": "-- Unit: manager\n\n-- Subprogram: Manager::AddIncludedDessert\n\n-- Test Case: ATG-TEST-1\nTEST.UNIT:manager\nTEST.SUBPROGRAM:Manager::AddIncludedDessert\nTEST.REPLACE\nTEST.NAME:ATG-TEST-1\nTEST.NOTES:\nThis is an automatically generated test case.\n   Test Path 1\n      (1) if (!Order) ==> FALSE\n      (2) if ((Order->Entree == (Steak) && Order->Salad == (Caesar)) && Order->Beverage == (MixedDrink)) ==> FALSE\n      (3) if ((Order->Entree == (Lobster) && Order->Salad == (Green)) && Order->Beverage == (Wine)) ==> FALSE\n   Test Case Generation Notes:\n      ATG constructed a complete test-case.\nTEST.END_NOTES:\nTEST.VALUE:manager.<<GLOBAL>>.(cl).Manager.Manager.<<constructor>>.Manager().<<call>>:0\nTEST.VALUE:manager.Manager::AddIncludedDessert.Order:<<malloc 1>>\nTEST.VALUE:manager.Manager::AddIncludedDessert.Order[0].Salad:Green\nTEST.VALUE:manager.Manager::AddIncludedDessert.Order[0].Entree:Lobster\nTEST.VALUE:manager.Manager::AddIncludedDessert.Order[0].Beverage:NoBeverage\nTEST.END",
        "ATG-TEST-2": "-- Unit: manager\n\n-- Subprogram: Manager::AddIncludedDessert\n\n-- Test Case: ATG-TEST-2\nTEST.UNIT:manager\nTEST.SUBPROGRAM:Manager::AddIncludedDessert\nTEST.REPLACE\nTEST.NAME:ATG-TEST-2\nTEST.NOTES:\nThis is an automatically generated test case.\n   Test Path 2\n      (1) if (!Order) ==> FALSE\n      (2) if ((Order->Entree == (Steak) && Order->Salad == (Caesar)) && Order->Beverage == (MixedDrink)) ==> FALSE\n      (3) if ((Order->Entree == (Lobster) && Order->Salad == (Green)) && Order->Beverage == (Wine)) ==> TRUE\n       #  Order->Dessert := Cake\n   Test Case Generation Notes:\n      ATG constructed a complete test-case.\nTEST.END_NOTES:\nTEST.VALUE:manager.<<GLOBAL>>.(cl).Manager.Manager.<<constructor>>.Manager().<<call>>:0\nTEST.VALUE:manager.Manager::AddIncludedDessert.Order:<<malloc 1>>\nTEST.VALUE:manager.Manager::AddIncludedDessert.Order[0].Salad:Green\nTEST.VALUE:manager.Manager::AddIncludedDessert.Order[0].Entree:Lobster\nTEST.VALUE:manager.Manager::AddIncludedDessert.Order[0].Dessert:NoDessert\nTEST.VALUE:manager.Manager::AddIncludedDessert.Order[0].Beverage:Wine\nTEST.END",
        "ATG-TEST-3": "-- Unit: manager\n\n-- Subprogram: Manager::AddIncludedDessert\n\n-- Test Case: ATG-TEST-3\nTEST.UNIT:manager\nTEST.SUBPROGRAM:Manager::AddIncludedDessert\nTEST.REPLACE\nTEST.NAME:ATG-TEST-3\nTEST.NOTES:\nThis is an automatically generated test case.\n   Test Path 3\n      (1) if (!Order) ==> FALSE\n      (2) if ((Order->Entree == (Steak) && Order->Salad == (Caesar)) && Order->Beverage == (MixedDrink)) ==> TRUE\n       #  Order->Dessert := Pies\n   Test Case Generation Notes:\n      ATG constructed a complete test-case.\nTEST.END_NOTES:\nTEST.VALUE:manager.<<GLOBAL>>.(cl).Manager.Manager.<<constructor>>.Manager().<<call>>:0\nTEST.VALUE:manager.Manager::AddIncludedDessert.Order:<<malloc 1>>\nTEST.VALUE:manager.Manager::AddIncludedDessert.Order[0].Salad:Caesar\nTEST.VALUE:manager.Manager::AddIncludedDessert.Order[0].Entree:Steak\nTEST.VALUE:manager.Manager::AddIncludedDessert.Order[0].Dessert:NoDessert\nTEST.VALUE:manager.Manager::AddIncludedDessert.Order[0].Beverage:MixedDrink\nTEST.END",
        "ATG-TEST-4": "-- Unit: manager\n\n-- Subprogram: Manager::AddIncludedDessert\n\n-- Test Case: ATG-TEST-4\nTEST.UNIT:manager\nTEST.SUBPROGRAM:Manager::AddIncludedDessert\nTEST.REPLACE\nTEST.NAME:ATG-TEST-4\nTEST.NOTES:\nThis is an automatically generated test case.\n   Test Path 4\n      (1) if (!Order) ==> TRUE\n   Test Case Generation Notes:\n      ATG constructed a complete test-case.\nTEST.END_NOTES:\nTEST.VALUE:manager.<<GLOBAL>>.(cl).Manager.Manager.<<constructor>>.Manager().<<call>>:0\nTEST.VALUE:manager.Manager::AddIncludedDessert.Order:<<null>>\nTEST.END"
      },
      "Manager::AddPartyToWaitingList": {
        "ATG-TEST-1": "-- Unit: manager\n\n-- Subprogram: Manager::AddPartyToWaitingList\n\n-- Test Case: ATG-TEST-1\nTEST.UNIT:manager\nTEST.SUBPROGRAM:Manager::AddPartyToWaitingList\nTEST.REPLACE\nTEST.NAME:ATG-TEST-1\nTEST.NOTES:\nThis is an automatically generated test case.\n   Test Path 1\n       #  i := 0\n      (1) if (WaitingListSize > (9)) ==> FALSE\n      (2) while (Name && *Name) ==> FALSE\n       #  WaitingList[(WaitingListSize)++][i] := 0\n   Test Case Generation Notes:\n      ATG constructed a complete test-case.\nTEST.END_NOTES:\nTEST.VALUE:manager.<<GLOBAL>>.(cl).Manager.Manager.<<constructor>>.Manager().<<call>>:0\nTEST.VALUE:manager.<<GLOBAL>>.(cl).Manager.Manager.WaitingListSize:4\nTEST.VALUE:manager.Manager::AddPartyToWaitingList.Name:<<malloc 1>>\nTEST.VALUE:manager.Manager::AddPartyToWaitingList.Name[0]:16#0#\nTEST.END",
        "ATG-TEST-2": "-- Unit: manager\n\n-- Subprogram: Manager::AddPartyToWaitingList\n\n-- Test Case: ATG-TEST-2\nTEST.UNIT:manager\nTEST.SUBPROGRAM:Manager::AddPartyToWaitingList\nTEST.REPLACE\nTEST.NAME:ATG-TEST-2\nTEST.NOTES:\nThis is an automatically generated test case.\n   Test Path 2\n       #  i := 0\n      (1) if (WaitingListSize > (9)) ==> FALSE\n      (2) while (Name && *Name) ==> TRUE\n       #  WaitingList[WaitingListSize][i++] := *Name\n       #  Name++\n       #  WaitingList[(WaitingListSize)++][i] := 0\n   Test Case Generation Notes:\n      ATG constructed a complete test-case.\nTEST.END_NOTES:\nTEST.VALUE:manager.<<GLOBAL>>.(cl).Manager.Manager.<<constructor>>.Manager().<<call>>:0\nTEST.VALUE:manager.<<GLOBAL>>.(cl).Manager.Manager.WaitingListSize:7\nTEST.VALUE:manager.Manager::AddPartyToWaitingList.Name:<<malloc 1>>\nTEST.VALUE:manager.Manager::AddPartyToWaitingList.Name[0]:-114\nTEST.END",
        "ATG-TEST-3": "-- Unit: manager\n\n-- Subprogram: Manager::AddPartyToWaitingList\n\n-- Test Case: ATG-TEST-3\nTEST.UNIT:manager\nTEST.SUBPROGRAM:Manager::AddPartyToWaitingList\nTEST.REPLACE\nTEST.NAME:ATG-TEST-3\nTEST.NOTES:\nThis is an automatically generated test case.\n   Test Path 3\n       #  i := 0\n      (1) if (WaitingListSize > (9)) ==> TRUE\n       #  WaitingListSize := 0\n      (2) while (Name && *Name) ==> FALSE\n       #  WaitingList[(WaitingListSize)++][i] := 0\n   Test Case Generation Notes:\n      ATG constructed a complete test-case.\nTEST.END_NOTES:\nTEST.VALUE:manager.<<GLOBAL>>.(cl).Manager.Manager.<<constructor>>.Manager().<<call>>:0\nTEST.VALUE:manager.<<GLOBAL>>.(cl).Manager.Manager.WaitingListSize:131081\nTEST.VALUE:manager.Manager::AddPartyToWaitingList.Name:<<malloc 1>>\nTEST.VALUE:manager.Manager::AddPartyToWaitingList.Name[0]:16#0#\nTEST.END"
      },
      "Manager::ClearTable": {
        "ATG-TEST-1": "-- Unit: manager\n\n-- Subprogram: Manager::ClearTable\n\n-- Test Case: ATG-TEST-1\nTEST.UNIT:manager\nTEST.SUBPROGRAM:Manager::ClearTable\nTEST.REPLACE\nTEST.NAME:ATG-TEST-1\nTEST.NOTES:\nThis is an automatically generated test case.\n   Test Path 1\n       #  (Data).DeleteRecord(Table)\n   Test Case Generation Notes:\n\nTEST.END_NOTES:\nTEST.VALUE:manager.<<GLOBAL>>.(cl).Manager.Manager.<<constructor>>.Manager().<<call>>:0\nTEST.VALUE:manager.Manager::ClearTable.Table:0\nTEST.END"
      },
      "Manager::GetCheckTotal": {
        "ATG-TEST-1": "-- Unit: manager\n\n-- Subprogram: Manager::GetCheckTotal\n\n-- Test Case: ATG-TEST-1\nTEST.UNIT:manager\nTEST.SUBPROGRAM:Manager::GetCheckTotal\nTEST.REPLACE\nTEST.NAME:ATG-TEST-1\nTEST.NOTES:\nThis is an automatically generated test case.\n   Test Path 1\n       #  (Data).DeleteTableRecord(&TableData)\n       #  (Data).GetTableRecord(Table, &TableData)\n       #  return TableData.CheckTotal\n   Test Case Generation Notes:\n      ATG constructed a complete test-case.\nTEST.END_NOTES:\nTEST.STUB:database.DataBase::DeleteTableRecord\nTEST.VALUE:<<OPTIONS>>.SHOW_ONLY_DATA_WITH_EXPECTED_RESULTS:TRUE\nTEST.VALUE:manager.<<GLOBAL>>.(cl).Manager.Manager.<<constructor>>.Manager().<<call>>:0\nTEST.VALUE:manager.Manager::GetCheckTotal.Table:0\nTEST.END"
      },
      "Manager::GetNextPartyToBeSeated": {
        "ATG-TEST-1": "-- Unit: manager\n\n-- Subprogram: Manager::GetNextPartyToBeSeated\n\n-- Test Case: ATG-TEST-1\nTEST.UNIT:manager\nTEST.SUBPROGRAM:Manager::GetNextPartyToBeSeated\nTEST.REPLACE\nTEST.NAME:ATG-TEST-1\nTEST.NOTES:\nThis is an automatically generated test case.\n   Test Path 1\n      (1) if (WaitingListIndex > (9)) ==> FALSE\n       #  return WaitingList[(WaitingListIndex)++]\n   Test Case Generation Notes:\n      ATG constructed a complete test-case.\nTEST.END_NOTES:\nTEST.VALUE:manager.<<GLOBAL>>.(cl).Manager.Manager.<<constructor>>.Manager().<<call>>:0\nTEST.VALUE:manager.<<GLOBAL>>.(cl).Manager.Manager.WaitingListIndex:9\nTEST.END",
        "ATG-TEST-2": "-- Unit: manager\n\n-- Subprogram: Manager::GetNextPartyToBeSeated\n\n-- Test Case: ATG-TEST-2\nTEST.UNIT:manager\nTEST.SUBPROGRAM:Manager::GetNextPartyToBeSeated\nTEST.REPLACE\nTEST.NAME:ATG-TEST-2\nTEST.NOTES:\nThis is an automatically generated test case.\n   Test Path 2\n      (1) if (WaitingListIndex > (9)) ==> TRUE\n       #  WaitingListIndex := 0\n       #  return WaitingList[(WaitingListIndex)++]\n   Test Case Generation Notes:\n      ATG constructed a complete test-case.\nTEST.END_NOTES:\nTEST.VALUE:manager.<<GLOBAL>>.(cl).Manager.Manager.<<constructor>>.Manager().<<call>>:0\nTEST.VALUE:manager.<<GLOBAL>>.(cl).Manager.Manager.WaitingListIndex:131081\nTEST.END"
      },
      "Manager::Manager": {
        "ATG-TEST-1": "-- Unit: manager\n\n-- Subprogram: Manager::Manager\n\n-- Test Case: ATG-TEST-1\nTEST.UNIT:manager\nTEST.SUBPROGRAM:Manager::Manager\nTEST.REPLACE\nTEST.NAME:ATG-TEST-1\nTEST.NOTES:\nThis is an automatically generated test case.\n   Test Path 1\n       #  DataBase::DataBase()\n       #  WaitingListSize := 0\n       #  WaitingListIndex := 0\n   Test Case Generation Notes:\n      We didn't set any values -- maybe we have no visibility/static variable?\nTEST.END_NOTES:\nTEST.END"
      },
      "Manager::PlaceOrder": {
        "ATG-TEST-1": "-- Unit: manager\n\n-- Subprogram: Manager::PlaceOrder\n\n-- Test Case: ATG-TEST-1\nTEST.UNIT:manager\nTEST.SUBPROGRAM:Manager::PlaceOrder\nTEST.REPLACE\nTEST.NAME:ATG-TEST-1\nTEST.NOTES:\nThis is an automatically generated test case.\n   Test Path 1\n       #  (Data).DeleteTableRecord(&TableData)\n       #  (Data).GetTableRecord(Table, &TableData)\n       #  TableData.IsOccupied := true\n       #  (TableData.NumberInParty)++\n       #  TableData.Order[Seat] := Order\n       #  this->AddIncludedDessert(&(TableData.Order[Seat]))\n      (1) case (Order.Entree) ==> Steak 1\n       #  TableData.CheckTotal += 14\n       #  (Data).UpdateTableRecord(Table, &TableData)\n   Test Case Generation Notes:\n      ATG constructed a complete test-case.\nTEST.END_NOTES:\nTEST.STUB:database.DataBase::GetTableRecord\nTEST.STUB:database.DataBase::UpdateTableRecord\nTEST.STUB:database.DataBase::DeleteTableRecord\nTEST.STUB:manager.Manager::AddIncludedDessert\nTEST.VALUE:<<OPTIONS>>.SHOW_ONLY_DATA_WITH_EXPECTED_RESULTS:TRUE\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].IsOccupied:true\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].NumberInParty:-3\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].Order[0].Entree:NoEntree\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].Order[1].Entree:NoEntree\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].Order[2].Entree:NoEntree\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].CheckTotal:-15\nTEST.VALUE:database.DataBase::UpdateTableRecord.Data[0].IsOccupied:false\nTEST.VALUE:database.DataBase::UpdateTableRecord.Data[0].NumberInParty:0\nTEST.VALUE:database.DataBase::UpdateTableRecord.Data[0].Order[0].Entree:NoEntree\nTEST.VALUE:database.DataBase::UpdateTableRecord.Data[0].CheckTotal:0\nTEST.VALUE:database.DataBase::DeleteTableRecord.Data[0].IsOccupied:true\nTEST.VALUE:database.DataBase::DeleteTableRecord.Data[0].NumberInParty:-1\nTEST.VALUE:database.DataBase::DeleteTableRecord.Data[0].Order[0].Entree:NoEntree\nTEST.VALUE:database.DataBase::DeleteTableRecord.Data[0].CheckTotal:-1\nTEST.VALUE:manager.<<GLOBAL>>.(cl).Manager.Manager.<<constructor>>.Manager().<<call>>:0\nTEST.VALUE:manager.Manager::AddIncludedDessert.Order[0].Entree:4383\nTEST.VALUE:manager.Manager::PlaceOrder.Table:0\nTEST.VALUE:manager.Manager::PlaceOrder.Seat:2\nTEST.VALUE:manager.Manager::PlaceOrder.Order.Entree:Steak\nTEST.END",
        "ATG-TEST-2": "-- Unit: manager\n\n-- Subprogram: Manager::PlaceOrder\n\n-- Test Case: ATG-TEST-2\nTEST.UNIT:manager\nTEST.SUBPROGRAM:Manager::PlaceOrder\nTEST.REPLACE\nTEST.NAME:ATG-TEST-2\nTEST.NOTES:\nThis is an automatically generated test case.\n   Test Path 2\n       #  (Data).DeleteTableRecord(&TableData)\n       #  (Data).GetTableRecord(Table, &TableData)\n       #  TableData.IsOccupied := true\n       #  (TableData.NumberInParty)++\n       #  TableData.Order[Seat] := Order\n       #  this->AddIncludedDessert(&(TableData.Order[Seat]))\n      (2) case (Order.Entree) ==> Chicken 2\n       #  TableData.CheckTotal += 10\n       #  (Data).UpdateTableRecord(Table, &TableData)\n   Test Case Generation Notes:\n      ATG constructed a complete test-case.\nTEST.END_NOTES:\nTEST.STUB:database.DataBase::GetTableRecord\nTEST.STUB:database.DataBase::UpdateTableRecord\nTEST.STUB:database.DataBase::DeleteTableRecord\nTEST.STUB:manager.Manager::AddIncludedDessert\nTEST.VALUE:<<OPTIONS>>.SHOW_ONLY_DATA_WITH_EXPECTED_RESULTS:TRUE\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].IsOccupied:true\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].NumberInParty:-3\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].Order[0].Entree:NoEntree\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].Order[1].Entree:NoEntree\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].Order[2].Entree:NoEntree\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].CheckTotal:-13\nTEST.VALUE:database.DataBase::UpdateTableRecord.Data[0].IsOccupied:false\nTEST.VALUE:database.DataBase::UpdateTableRecord.Data[0].NumberInParty:0\nTEST.VALUE:database.DataBase::UpdateTableRecord.Data[0].Order[0].Entree:NoEntree\nTEST.VALUE:database.DataBase::UpdateTableRecord.Data[0].CheckTotal:0\nTEST.VALUE:database.DataBase::DeleteTableRecord.Data[0].IsOccupied:true\nTEST.VALUE:database.DataBase::DeleteTableRecord.Data[0].NumberInParty:-1\nTEST.VALUE:database.DataBase::DeleteTableRecord.Data[0].Order[0].Entree:NoEntree\nTEST.VALUE:database.DataBase::DeleteTableRecord.Data[0].CheckTotal:-1\nTEST.VALUE:manager.<<GLOBAL>>.(cl).Manager.Manager.<<constructor>>.Manager().<<call>>:0\nTEST.VALUE:manager.Manager::AddIncludedDessert.Order[0].Entree:4383\nTEST.VALUE:manager.Manager::PlaceOrder.Table:0\nTEST.VALUE:manager.Manager::PlaceOrder.Seat:2\nTEST.VALUE:manager.Manager::PlaceOrder.Order.Entree:Chicken\nTEST.END",
        "ATG-TEST-3": "-- Unit: manager\n\n-- Subprogram: Manager::PlaceOrder\n\n-- Test Case: ATG-TEST-3\nTEST.UNIT:manager\nTEST.SUBPROGRAM:Manager::PlaceOrder\nTEST.REPLACE\nTEST.NAME:ATG-TEST-3\nTEST.NOTES:\nThis is an automatically generated test case.\n   Test Path 3\n       #  (Data).DeleteTableRecord(&TableData)\n       #  (Data).GetTableRecord(Table, &TableData)\n       #  TableData.IsOccupied := true\n       #  (TableData.NumberInParty)++\n       #  TableData.Order[Seat] := Order\n       #  this->AddIncludedDessert(&(TableData.Order[Seat]))\n      (3) case (Order.Entree) ==> Lobster 3\n       #  TableData.CheckTotal += 18\n       #  (Data).UpdateTableRecord(Table, &TableData)\n   Test Case Generation Notes:\n      ATG constructed a complete test-case.\nTEST.END_NOTES:\nTEST.STUB:database.DataBase::GetTableRecord\nTEST.STUB:database.DataBase::UpdateTableRecord\nTEST.STUB:database.DataBase::DeleteTableRecord\nTEST.STUB:manager.Manager::AddIncludedDessert\nTEST.VALUE:<<OPTIONS>>.SHOW_ONLY_DATA_WITH_EXPECTED_RESULTS:TRUE\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].IsOccupied:true\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].NumberInParty:-3\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].Order[0].Entree:NoEntree\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].Order[1].Entree:NoEntree\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].Order[2].Entree:NoEntree\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].CheckTotal:-21\nTEST.VALUE:database.DataBase::UpdateTableRecord.Data[0].IsOccupied:false\nTEST.VALUE:database.DataBase::UpdateTableRecord.Data[0].NumberInParty:0\nTEST.VALUE:database.DataBase::UpdateTableRecord.Data[0].Order[0].Entree:NoEntree\nTEST.VALUE:database.DataBase::UpdateTableRecord.Data[0].CheckTotal:0\nTEST.VALUE:database.DataBase::DeleteTableRecord.Data[0].IsOccupied:true\nTEST.VALUE:database.DataBase::DeleteTableRecord.Data[0].NumberInParty:-1\nTEST.VALUE:database.DataBase::DeleteTableRecord.Data[0].Order[0].Entree:NoEntree\nTEST.VALUE:database.DataBase::DeleteTableRecord.Data[0].CheckTotal:-1\nTEST.VALUE:manager.<<GLOBAL>>.(cl).Manager.Manager.<<constructor>>.Manager().<<call>>:0\nTEST.VALUE:manager.Manager::AddIncludedDessert.Order[0].Entree:4383\nTEST.VALUE:manager.Manager::PlaceOrder.Table:0\nTEST.VALUE:manager.Manager::PlaceOrder.Seat:2\nTEST.VALUE:manager.Manager::PlaceOrder.Order.Entree:Lobster\nTEST.END",
        "ATG-TEST-4": "-- Unit: manager\n\n-- Subprogram: Manager::PlaceOrder\n\n-- Test Case: ATG-TEST-4\nTEST.UNIT:manager\nTEST.SUBPROGRAM:Manager::PlaceOrder\nTEST.REPLACE\nTEST.NAME:ATG-TEST-4\nTEST.NOTES:\nThis is an automatically generated test case.\n   Test Path 4\n       #  (Data).DeleteTableRecord(&TableData)\n       #  (Data).GetTableRecord(Table, &TableData)\n       #  TableData.IsOccupied := true\n       #  (TableData.NumberInParty)++\n       #  TableData.Order[Seat] := Order\n       #  this->AddIncludedDessert(&(TableData.Order[Seat]))\n      (4) case (Order.Entree) ==> Pasta 4\n       #  TableData.CheckTotal += 12\n       #  (Data).UpdateTableRecord(Table, &TableData)\n   Test Case Generation Notes:\n      ATG constructed a complete test-case.\nTEST.END_NOTES:\nTEST.STUB:database.DataBase::GetTableRecord\nTEST.STUB:database.DataBase::UpdateTableRecord\nTEST.STUB:database.DataBase::DeleteTableRecord\nTEST.STUB:manager.Manager::AddIncludedDessert\nTEST.VALUE:<<OPTIONS>>.SHOW_ONLY_DATA_WITH_EXPECTED_RESULTS:TRUE\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].IsOccupied:true\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].NumberInParty:-3\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].Order[0].Entree:NoEntree\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].Order[1].Entree:NoEntree\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].Order[2].Entree:NoEntree\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].CheckTotal:-13\nTEST.VALUE:database.DataBase::UpdateTableRecord.Data[0].IsOccupied:false\nTEST.VALUE:database.DataBase::UpdateTableRecord.Data[0].NumberInParty:0\nTEST.VALUE:database.DataBase::UpdateTableRecord.Data[0].Order[0].Entree:NoEntree\nTEST.VALUE:database.DataBase::UpdateTableRecord.Data[0].CheckTotal:0\nTEST.VALUE:database.DataBase::DeleteTableRecord.Data[0].IsOccupied:true\nTEST.VALUE:database.DataBase::DeleteTableRecord.Data[0].NumberInParty:-1\nTEST.VALUE:database.DataBase::DeleteTableRecord.Data[0].Order[0].Entree:NoEntree\nTEST.VALUE:database.DataBase::DeleteTableRecord.Data[0].CheckTotal:-1\nTEST.VALUE:manager.<<GLOBAL>>.(cl).Manager.Manager.<<constructor>>.Manager().<<call>>:0\nTEST.VALUE:manager.Manager::AddIncludedDessert.Order[0].Entree:4383\nTEST.VALUE:manager.Manager::PlaceOrder.Table:0\nTEST.VALUE:manager.Manager::PlaceOrder.Seat:2\nTEST.VALUE:manager.Manager::PlaceOrder.Order.Entree:Pasta\nTEST.END",
        "ATG-TEST-5": "-- Unit: manager\n\n-- Subprogram: Manager::PlaceOrder\n\n-- Test Case: ATG-TEST-5\nTEST.UNIT:manager\nTEST.SUBPROGRAM:Manager::PlaceOrder\nTEST.REPLACE\nTEST.NAME:ATG-TEST-5\nTEST.NOTES:\nThis is an automatically generated test case.\n   Test Path 5\n       #  (Data).DeleteTableRecord(&TableData)\n       #  (Data).GetTableRecord(Table, &TableData)\n       #  TableData.IsOccupied := true\n       #  (TableData.NumberInParty)++\n       #  TableData.Order[Seat] := Order\n       #  this->AddIncludedDessert(&(TableData.Order[Seat]))\n      (5) case (Order.Entree) ==> default -1\n       #  (Data).UpdateTableRecord(Table, &TableData)\n   Test Case Generation Notes:\n      ATG constructed a complete test-case.\nTEST.END_NOTES:\nTEST.STUB:database.DataBase::GetTableRecord\nTEST.STUB:database.DataBase::UpdateTableRecord\nTEST.STUB:database.DataBase::DeleteTableRecord\nTEST.STUB:manager.Manager::AddIncludedDessert\nTEST.VALUE:<<OPTIONS>>.SHOW_ONLY_DATA_WITH_EXPECTED_RESULTS:TRUE\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].IsOccupied:true\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].NumberInParty:-3\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].Order[0].Entree:NoEntree\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].Order[1].Entree:NoEntree\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].Order[2].Entree:NoEntree\nTEST.VALUE:database.DataBase::GetTableRecord.Data[0].Order[3].Entree:NoEntree\nTEST.VALUE:database.DataBase::UpdateTableRecord.Data[0].IsOccupied:false\nTEST.VALUE:database.DataBase::UpdateTableRecord.Data[0].NumberInParty:0\nTEST.VALUE:database.DataBase::UpdateTableRecord.Data[0].Order[0].Entree:NoEntree\nTEST.VALUE:database.DataBase::DeleteTableRecord.Data[0].IsOccupied:true\nTEST.VALUE:database.DataBase::DeleteTableRecord.Data[0].NumberInParty:-1\nTEST.VALUE:database.DataBase::DeleteTableRecord.Data[0].Order[0].Entree:NoEntree\nTEST.VALUE:manager.<<GLOBAL>>.(cl).Manager.Manager.<<constructor>>.Manager().<<call>>:0\nTEST.VALUE:manager.Manager::AddIncludedDessert.Order[0].Entree:4382\nTEST.VALUE:manager.Manager::PlaceOrder.Table:0\nTEST.VALUE:manager.Manager::PlaceOrder.Seat:3\nTEST.VALUE:manager.Manager::PlaceOrder.Order.Entree:65536\nTEST.END"
      }
    }
  }
}
