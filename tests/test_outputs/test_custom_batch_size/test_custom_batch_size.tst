-- VectorCAST 6.4s (05/01/17)
-- Test Case Script
-- Environment    : TUTORIAL_C
-- Unit(s) Under Test: manager
-- 
-- Script Features
TEST.SCRIPT_FEATURE:C_DIRECT_ARRAY_INDEXING
TEST.SCRIPT_FEATURE:CPP_CLASS_OBJECT_REVISION
TEST.SCRIPT_FEATURE:MULTIPLE_UUT_SUPPORT
TEST.SCRIPT_FEATURE:MIXED_CASE_NAMES
TEST.SCRIPT_FEATURE:STATIC_HEADER_FUNCS_IN_UUTS

TEST.UNIT:manager
TEST.SUBPROGRAM:Add_Included_Dessert
TEST.NEW
TEST.NAME:Test_No_Free_Dessert_For_Non_Qualifying_Combination-REVIEW-NEEDED
TEST.REQUIREMENT_KEY:FR27
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tests that Add_Included_Dessert does not assign a free dessert when the order does not match any qualifying combination (neither STEAK+CAESAR+MIXED_DRINK nor LOBSTER+GREEN+WINE). This exercises FR27.3, ensuring that for any other combination, the Dessert field remains unchanged (NO_DESSERT).
TEST.END_NOTES:
TEST.VALUE:manager.Add_Included_Dessert.Order:<<malloc 1>>
TEST.VALUE:manager.Add_Included_Dessert.Order[0].Entree:CHICKEN
TEST.VALUE:manager.Add_Included_Dessert.Order[0].Salad:GREEN
TEST.VALUE:manager.Add_Included_Dessert.Order[0].Beverage:SODA
TEST.VALUE:manager.Add_Included_Dessert.Order[0].Dessert:NO_DESSERT
TEST.EXPECTED:manager.Add_Included_Dessert.Order[0].Dessert:NO_DESSERT
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Add_Party_To_Waiting_List
TEST.NEW
TEST.NAME:Test_WaitingList_Maximum_Capacity-REVIEW-NEEDED
TEST.REQUIREMENT_KEY:FR23
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tests that the waiting list supports up to 10 parties by adding a party when the list is at its maximum capacity (WaitingListSize == 9), ensuring the new party is added at index 9 and the size increases to 10.
TEST.END_NOTES:
TEST.VALUE:manager.<<GLOBAL>>.WaitingListSize:9
TEST.VALUE:manager.Add_Party_To_Waiting_List.Name:"PartyTen"
TEST.EXPECTED:manager.<<GLOBAL>>.WaitingList[9]:"PartyTen"
TEST.EXPECTED:manager.<<GLOBAL>>.WaitingListSize:10
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Add_Party_To_Waiting_List
TEST.NEW
TEST.NAME:Test_Add_Party_To_Waiting_List_By_Name-REVIEW-NEEDED
TEST.REQUIREMENT_KEY:FR24
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tests that a party can be added to the waiting list by specifying its name. Adds a party named 'Smith' to an empty waiting list and checks that the name is stored at index 0 and the size is incremented.
TEST.END_NOTES:
TEST.VALUE:manager.<<GLOBAL>>.WaitingListSize:0
TEST.VALUE:manager.Add_Party_To_Waiting_List.Name:"Smith"
TEST.EXPECTED:manager.<<GLOBAL>>.WaitingList[0]:"Smith"
TEST.EXPECTED:manager.<<GLOBAL>>.WaitingListSize:1
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Add_Included_Dessert
TEST.NEW
TEST.NAME:Test_Lobster_Green_Wine_Qualifies_For_Cake-REVIEW-NEEDED
TEST.REQUIREMENT_KEY:FR27
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Verifies that an order with lobster, green salad, and wine qualifies for free cake as dessert according to FR27.2.
TEST.END_NOTES:
TEST.VALUE:manager.Add_Included_Dessert.Order:<<malloc 1>>
TEST.VALUE:manager.Add_Included_Dessert.Order[0].Entree:LOBSTER
TEST.VALUE:manager.Add_Included_Dessert.Order[0].Salad:GREEN
TEST.VALUE:manager.Add_Included_Dessert.Order[0].Beverage:WINE
TEST.VALUE:manager.Add_Included_Dessert.Order[0].Dessert:NO_DESSERT
TEST.EXPECTED:manager.Add_Included_Dessert.Order[0].Dessert:CAKE
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Get_Check_Total
TEST.NEW
TEST.NAME:Get_Check_Total_Returns_Correct_Check_Total_For_Table-REVIEW-NEEDED
TEST.REQUIREMENT_KEY:FR22
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

This test verifies that the Get_Check_Total function returns the correct check total for a given table by stubbing Get_Table_Record to return a table record with a known Check_Total value. This directly exercises the requirement that the system provides a way to obtain the check total for a given table.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.VALUE:manager.Get_Check_Total.Table:5
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:5
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:1
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:3
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'A'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Alice"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Soup:ONION
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Salad:CAESAR
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:STEAK
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Dessert:CAKE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Beverage:WINE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Soup:CHOWDER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Salad:GREEN
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:CHICKEN
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Dessert:PIE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Beverage:BEER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:LOBSTER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Dessert:FRUIT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Beverage:SODA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:123.45
TEST.EXPECTED:manager.Get_Check_Total.return:123.45
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Clear_Table
TEST.NEW
TEST.NAME:Clear_Table_Sets_Check_Total_To_Zero-REVIEW-NEEDED
TEST.REQUIREMENT_KEY:FR21
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

This test verifies that after calling Clear_Table, the table's check total is set to 0.0 in the table database by checking the value passed to Update_Table_Record. The test simulates a table with a nonzero check total and ensures it is cleared.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Clear_Table.Table:2
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:2
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:v_true
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:3
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'A'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Alice"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Soup:ONION
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Salad:CAESAR
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:STEAK
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Dessert:CAKE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Beverage:WINE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Soup:CHOWDER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Salad:GREEN
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:CHICKEN
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Dessert:PIE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Beverage:BEER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:LOBSTER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Dessert:FRUIT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Beverage:MIXED_DRINK
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:PASTA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Beverage:SODA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:123.45
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Table:2
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Check_Total:0
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Get_Next_Party_To_Be_Seated
TEST.NEW
TEST.NAME:GetHeadOfWaitingList_ReturnsHeadPartyName-REVIEW-NEEDED
TEST.REQUIREMENT_KEY:FR25
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tests that Get_Next_Party_To_Be_Seated returns the name of the party at the head of the waiting list (index 0) and increments the index. This exercises the system's ability to provide the name of the party at the head of the waiting list.
TEST.END_NOTES:
TEST.VALUE:manager.<<GLOBAL>>.WaitingListIndex:0
TEST.VALUE:manager.<<GLOBAL>>.WaitingList[0]:"Smith"
TEST.VALUE:manager.<<GLOBAL>>.WaitingList[1]:"Johnson"
TEST.VALUE:manager.<<GLOBAL>>.WaitingList[2]:"Williams"
TEST.VALUE:manager.<<GLOBAL>>.WaitingList[3]:"Brown"
TEST.VALUE:manager.<<GLOBAL>>.WaitingList[4]:"Jones"
TEST.VALUE:manager.<<GLOBAL>>.WaitingList[5]:"Garcia"
TEST.VALUE:manager.<<GLOBAL>>.WaitingList[6]:"Miller"
TEST.VALUE:manager.<<GLOBAL>>.WaitingList[7]:"Davis"
TEST.VALUE:manager.<<GLOBAL>>.WaitingList[8]:"Rodriguez"
TEST.VALUE:manager.<<GLOBAL>>.WaitingList[9]:"Martinez"
TEST.EXPECTED:manager.Get_Next_Party_To_Be_Seated.return:"Smith"
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Get_Next_Party_To_Be_Seated
TEST.NEW
TEST.NAME:WaitingListIndexResetsAtEndOfList-REVIEW-NEEDED
TEST.REQUIREMENT_KEY:FR26
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tests that when the WaitingListIndex exceeds 9, it is reset to 0 and the head of the waiting list is returned from the start. This exercises the requirement that the head of the waiting list is reset when it reaches the end.
TEST.END_NOTES:
TEST.VALUE:manager.<<GLOBAL>>.WaitingListIndex:10
TEST.VALUE:manager.<<GLOBAL>>.WaitingList[0]:"Smith"
TEST.VALUE:manager.<<GLOBAL>>.WaitingList[1]:"Johnson"
TEST.VALUE:manager.<<GLOBAL>>.WaitingList[2]:"Williams"
TEST.VALUE:manager.<<GLOBAL>>.WaitingList[3]:"Brown"
TEST.VALUE:manager.<<GLOBAL>>.WaitingList[4]:"Jones"
TEST.VALUE:manager.<<GLOBAL>>.WaitingList[5]:"Garcia"
TEST.VALUE:manager.<<GLOBAL>>.WaitingList[6]:"Miller"
TEST.VALUE:manager.<<GLOBAL>>.WaitingList[7]:"Davis"
TEST.VALUE:manager.<<GLOBAL>>.WaitingList[8]:"Rodriguez"
TEST.VALUE:manager.<<GLOBAL>>.WaitingList[9]:"Martinez"
TEST.EXPECTED:manager.Get_Next_Party_To_Be_Seated.return:"Smith"
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Add_Included_Dessert
TEST.NEW
TEST.NAME:Test_Steak_Caesar_MixedDrink_Qualifies_For_Pie-REVIEW-NEEDED
TEST.REQUIREMENT_KEY:FR27
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Verifies that an order with steak, caesar salad, and a mixed drink qualifies for free pie as dessert according to FR27.1.
TEST.END_NOTES:
TEST.VALUE:manager.Add_Included_Dessert.Order:<<malloc 1>>
TEST.VALUE:manager.Add_Included_Dessert.Order[0].Entree:STEAK
TEST.VALUE:manager.Add_Included_Dessert.Order[0].Salad:CAESAR
TEST.VALUE:manager.Add_Included_Dessert.Order[0].Beverage:MIXED_DRINK
TEST.VALUE:manager.Add_Included_Dessert.Order[0].Dessert:NO_DESSERT
TEST.EXPECTED:manager.Add_Included_Dessert.Order[0].Dessert:PIE
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Place_Order
TEST.NEW
TEST.NAME:Test_Table_Number_In_Party_Incremented_On_Order-REVIEW-NEEDED
TEST.REQUIREMENT_KEY:FR15
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tests that placing an order increments the table's number in party in the table database by verifying that Update_Table_Record is called with Number_In_Party incremented by 1.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Place_Order.Table:3
TEST.VALUE:manager.Place_Order.Seat:2
TEST.VALUE:manager.Place_Order.Order.Salad:GREEN
TEST.VALUE:manager.Place_Order.Order.Entree:CHICKEN
TEST.VALUE:manager.Place_Order.Order.Dessert:NO_DESSERT
TEST.VALUE:manager.Place_Order.Order.Beverage:SODA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:3
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:v_true
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:4
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'B'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Jones"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:30.0
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Number_In_Party:5
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Place_Order
TEST.NEW
TEST.NAME:Test_Table_Occupied_Status_Updated_On_Order-REVIEW-NEEDED
TEST.REQUIREMENT_KEY:FR14
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tests that placing an order sets the table's occupied status to true in the table database by verifying that Update_Table_Record is called with Is_Occupied set to v_true.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Place_Order.Table:2
TEST.VALUE:manager.Place_Order.Seat:1
TEST.VALUE:manager.Place_Order.Order.Salad:CAESAR
TEST.VALUE:manager.Place_Order.Order.Entree:STEAK
TEST.VALUE:manager.Place_Order.Order.Dessert:NO_DESSERT
TEST.VALUE:manager.Place_Order.Order.Beverage:MIXED_DRINK
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:2
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:v_false
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:2
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'A'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Smith"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:20.0
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Is_Occupied:v_true
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Place_Order
TEST.NEW
TEST.NAME:Test_Steak_Order_Increases_Check_Total_By_14-REVIEW-NEEDED
TEST.REQUIREMENT_KEY:FR17
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tests that placing an order for steak increases the table's check total by 14.0. The test sets up a table with a known check total, places a steak order, and checks that Update_Table_Record is called with the check total increased by 14.0.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Place_Order.Table:2
TEST.VALUE:manager.Place_Order.Seat:0
TEST.VALUE:manager.Place_Order.Order.Salad:CAESAR
TEST.VALUE:manager.Place_Order.Order.Entree:STEAK
TEST.VALUE:manager.Place_Order.Order.Dessert:NO_DESSERT
TEST.VALUE:manager.Place_Order.Order.Beverage:BEER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:2
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:1
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:3
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'B'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Alice"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:50.0
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Table:2
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Check_Total:64.0
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Place_Order
TEST.NEW
TEST.NAME:Test_Place_Order_Supports_4_Seats_Per_Table-REVIEW-NEEDED
TEST.REQUIREMENT_KEY:FR12
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Verifies that Place_Order can handle all 4 seat indices (0 to 3) for a table, as required by FR12.1. This test places an order for seat 3 (the highest valid seat index) and checks that the order is correctly assigned to the fourth seat in the table's order array.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Place_Order.Table:1
TEST.VALUE:manager.Place_Order.Seat:3
TEST.VALUE:manager.Place_Order.Order.Salad:GREEN
TEST.VALUE:manager.Place_Order.Order.Entree:CHICKEN
TEST.VALUE:manager.Place_Order.Order.Dessert:NO_DESSERT
TEST.VALUE:manager.Place_Order.Order.Beverage:SODA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:1
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:v_false
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:2
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'A'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Alice"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:20.0
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Table:1
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[3].Entree:CHICKEN
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[3].Salad:GREEN
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[3].Dessert:NO_DESSERT
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[3].Beverage:SODA
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Number_In_Party:3
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Is_Occupied:v_true
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Check_Total:30.0
TEST.EXPECTED:manager.Place_Order.return:0
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Place_Order
TEST.NEW
TEST.NAME:Test_Place_Order_Supports_All_Entree_Types-REVIEW-NEEDED
TEST.REQUIREMENT_KEY:FR13
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Verifies that Place_Order supports all specified entree types (steak, chicken, lobster, pasta, none) as required by FR13.1. This test places an order for each entree type in a different seat and checks that the correct entree is set for each seat in the table's order array.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Place_Order.Table:2
TEST.VALUE:manager.Place_Order.Seat:0
TEST.VALUE:manager.Place_Order.Order.Salad:CAESAR
TEST.VALUE:manager.Place_Order.Order.Entree:STEAK
TEST.VALUE:manager.Place_Order.Order.Dessert:NO_DESSERT
TEST.VALUE:manager.Place_Order.Order.Beverage:MIXED_DRINK
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:2
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:v_true
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:0
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'B'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Bob"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:CHICKEN
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Beverage:WINE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Salad:GREEN
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:LOBSTER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Beverage:WINE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:PASTA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Beverage:SODA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:0.0
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Table:2
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[0].Entree:STEAK
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[1].Entree:CHICKEN
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[2].Entree:LOBSTER
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[3].Entree:PASTA
TEST.EXPECTED:manager.Place_Order.return:0
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Clear_Table
TEST.NEW
TEST.NAME:Clear_Table_Sets_Number_In_Party_To_One-REVIEW-NEEDED
TEST.REQUIREMENT_KEY:FR19
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

This test verifies that after calling Clear_Table, the table's Number_In_Party is set to 1 in the table database, regardless of its previous value. This directly tests FR19.1.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Clear_Table.Table:2
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:2
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:1
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:4
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'A'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Alice"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Soup:ONION
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Salad:CAESAR
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:STEAK
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Dessert:CAKE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Beverage:WINE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Soup:CHOWDER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Salad:GREEN
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:CHICKEN
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Dessert:PIE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Beverage:BEER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:LOBSTER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Dessert:FRUIT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Beverage:MIXED_DRINK
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:PASTA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Beverage:SODA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:123.45
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Table:2
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Number_In_Party:1
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Clear_Table
TEST.NEW
TEST.NAME:Clear_Table_Clears_All_Orders_For_All_Seats-REVIEW-NEEDED
TEST.REQUIREMENT_KEY:FR20
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

This test verifies that after calling Clear_Table, all order fields (Soup, Salad, Entree, Dessert, Beverage) for all seats are set to their NO_* values in the table database, as required by FR20.1.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Clear_Table.Table:1
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:1
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:1
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:3
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'B'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Bob"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Soup:ONION
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Salad:CAESAR
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:STEAK
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Dessert:CAKE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Beverage:WINE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Soup:CHOWDER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Salad:GREEN
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:CHICKEN
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Dessert:PIE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Beverage:BEER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Soup:ONION
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Salad:CAESAR
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:LOBSTER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Dessert:FRUIT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Beverage:MIXED_DRINK
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Soup:CHOWDER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Salad:GREEN
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:PASTA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Beverage:SODA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:99.99
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Table:1
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[0].Soup:NO_SOUP
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[0].Salad:NO_SALAD
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[0].Entree:NO_ENTREE
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[0].Dessert:NO_DESSERT
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[0].Beverage:NO_BEVERAGE
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[1].Soup:NO_SOUP
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[1].Salad:NO_SALAD
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[1].Entree:NO_ENTREE
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[1].Dessert:NO_DESSERT
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[1].Beverage:NO_BEVERAGE
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[2].Soup:NO_SOUP
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[2].Salad:NO_SALAD
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[2].Entree:NO_ENTREE
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[2].Dessert:NO_DESSERT
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[2].Beverage:NO_BEVERAGE
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[3].Soup:NO_SOUP
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[3].Salad:NO_SALAD
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[3].Entree:NO_ENTREE
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[3].Dessert:NO_DESSERT
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[3].Beverage:NO_BEVERAGE
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Place_Order
TEST.NEW
TEST.NAME:Test_Seat_Order_Updated_In_Table-REVIEW-NEEDED
TEST.REQUIREMENT_KEY:FR16
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tests that placing an order updates the seat's order in the table database. The test sets up a table with 2 seats, places an order for seat 1, and checks that Update_Table_Record is called with the correct order for that seat.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Place_Order.Table:5
TEST.VALUE:manager.Place_Order.Seat:1
TEST.VALUE:manager.Place_Order.Order.Salad:GREEN
TEST.VALUE:manager.Place_Order.Order.Entree:CHICKEN
TEST.VALUE:manager.Place_Order.Order.Dessert:NO_DESSERT
TEST.VALUE:manager.Place_Order.Order.Beverage:SODA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:5
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:0
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:2
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'A'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Bob"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Salad:CAESAR
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:STEAK
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Beverage:WINE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:20.0
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Table:5
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[1].Salad:GREEN
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[1].Entree:CHICKEN
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[1].Dessert:NO_DESSERT
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[1].Beverage:SODA
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Place_Order
TEST.NEW
TEST.NAME:Test_Place_Order_Increases_Check_Total_By_18_For_Lobster-REVIEW-NEEDED
TEST.REQUIREMENT_KEY:FR17
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tests that placing an order for lobster increases the table's check total by 18.0. The test sets up a table with an initial check total, places a lobster order, and verifies that the check total is incremented by 18.0 in the data passed to Update_Table_Record.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Place_Order.Table:3
TEST.VALUE:manager.Place_Order.Seat:2
TEST.VALUE:manager.Place_Order.Order.Salad:NO_SALAD
TEST.VALUE:manager.Place_Order.Order.Entree:LOBSTER
TEST.VALUE:manager.Place_Order.Order.Dessert:NO_DESSERT
TEST.VALUE:manager.Place_Order.Order.Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:3
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:v_true
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:1
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'B'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Sue"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:50.0
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Table:3
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Check_Total:68.0
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Place_Order
TEST.NEW
TEST.NAME:Test_Place_Order_Increases_Check_Total_By_10_For_Chicken-REVIEW-NEEDED
TEST.REQUIREMENT_KEY:FR17
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tests that placing an order for chicken increases the table's check total by 10.0. The test sets up a table with an initial check total, places a chicken order, and verifies that the check total is incremented by 10.0 in the data passed to Update_Table_Record.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Place_Order.Table:2
TEST.VALUE:manager.Place_Order.Seat:1
TEST.VALUE:manager.Place_Order.Order.Salad:NO_SALAD
TEST.VALUE:manager.Place_Order.Order.Entree:CHICKEN
TEST.VALUE:manager.Place_Order.Order.Dessert:NO_DESSERT
TEST.VALUE:manager.Place_Order.Order.Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:2
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:v_false
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:2
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'A'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Bob"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:25.0
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Table:2
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Check_Total:35.0
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Place_Order
TEST.NEW
TEST.NAME:Test_Place_Order_Pasta_Increases_Check_Total_By_12-REVIEW-NEEDED
TEST.REQUIREMENT_KEY:FR17
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tests that placing an order for pasta increases the table's check total by 12.0. The test sets up a table with an initial check total, places a pasta order, and verifies that the check total is increased by 12.0 in the updated table record.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Place_Order.Table:2
TEST.VALUE:manager.Place_Order.Seat:1
TEST.VALUE:manager.Place_Order.Order.Salad:NO_SALAD
TEST.VALUE:manager.Place_Order.Order.Entree:PASTA
TEST.VALUE:manager.Place_Order.Order.Dessert:NO_DESSERT
TEST.VALUE:manager.Place_Order.Order.Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:2
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:v_false
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:2
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'A'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Alice"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:20.0
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Table:2
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Check_Total:32.0
TEST.EXPECTED:manager.Place_Order.return:0
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Place_Order
TEST.NEW
TEST.NAME:Test_Place_Order_None_Increases_Check_Total_By_0-REVIEW-NEEDED
TEST.REQUIREMENT_KEY:FR17
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tests that placing an order for no entree (NO_ENTREE) does not increase the table's check total. The test sets up a table with an initial check total, places a NO_ENTREE order, and verifies that the check total remains unchanged in the updated table record.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Place_Order.Table:3
TEST.VALUE:manager.Place_Order.Seat:2
TEST.VALUE:manager.Place_Order.Order.Salad:NO_SALAD
TEST.VALUE:manager.Place_Order.Order.Entree:NO_ENTREE
TEST.VALUE:manager.Place_Order.Order.Dessert:NO_DESSERT
TEST.VALUE:manager.Place_Order.Order.Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:3
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:v_false
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:1
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'B'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Bob"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:15.0
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Table:3
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Check_Total:15.0
TEST.EXPECTED:manager.Place_Order.return:0
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Clear_Table
TEST.NEW
TEST.NAME:Test_Clear_Table_Supports_All_6_Tables-REVIEW-NEEDED
TEST.REQUIREMENT_KEY:FR11
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Verifies that Clear_Table can be called for all 6 supported table indices (0 to 5) without error. This test uses table index 5, the highest valid table, to confirm support for the full range.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Clear_Table.Table:5
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:5
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:v_true
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:4
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'E'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Alice"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Soup:ONION
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Salad:CAESAR
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:STEAK
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Dessert:CAKE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Beverage:WINE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Soup:CHOWDER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Salad:GREEN
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:CHICKEN
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Dessert:PIE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Beverage:BEER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:LOBSTER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Dessert:FRUIT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Beverage:MIXED_DRINK
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:PASTA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Beverage:SODA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:123.45
TEST.EXPECTED:manager.Clear_Table.return:0
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Table:5
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Clear_Table
TEST.NEW
TEST.NAME:Test_Clear_Table_Updates_Occupied_Status_To_False-REVIEW-NEEDED
TEST.REQUIREMENT_KEY:FR18
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Verifies that after calling Clear_Table, the table's occupied status is set to v_false in the database via Update_Table_Record.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Clear_Table.Table:2
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:2
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:v_true
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:3
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'B'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Bob"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Soup:ONION
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Salad:CAESAR
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:STEAK
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Dessert:CAKE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Beverage:WINE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Soup:CHOWDER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Salad:GREEN
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:CHICKEN
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Dessert:PIE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Beverage:BEER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:LOBSTER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Dessert:FRUIT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Beverage:MIXED_DRINK
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:PASTA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Beverage:SODA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:99.99
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Is_Occupied:v_false
TEST.END

