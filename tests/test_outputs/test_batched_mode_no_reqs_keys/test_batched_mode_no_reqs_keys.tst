-- VectorCAST 6.4s (05/01/17)
-- Test Case Script
-- Environment    : TUTORIAL_C
-- Unit(s) Under Test: manager
-- 
-- Script Features
TEST.SCRIPT_FEATURE:C_DIRECT_ARRAY_INDEXING
TEST.SCRIPT_FEATURE:CPP_CLASS_OBJECT_REVISION
TEST.SCRIPT_FEATURE:MULTIPLE_UUT_SUPPORT
TEST.SCRIPT_FEATURE:MIXED_CASE_NAMES
TEST.SCRIPT_FEATURE:STATIC_HEADER_FUNCS_IN_UUTS

TEST.UNIT:manager
TEST.SUBPROGRAM:Get_Next_Party_To_Be_Seated
TEST.NEW
TEST.NAME:Get_Head_Of_Waiting_List_Returns_Correct_Name-REVIEW-NEEDED
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tested Requirement ID: FR25

Tests that Get_Next_Party_To_Be_Seated returns the name of the party at the head of the waiting list (index 0) and increments the index. This exercises the system's ability to provide the name at the head of the waiting list.
TEST.END_NOTES:
TEST.VALUE:manager.<<GLOBAL>>.WaitingListIndex:0
TEST.VALUE:manager.<<GLOBAL>>.WaitingList[0]:"Smith"
TEST.VALUE:manager.<<GLOBAL>>.WaitingList[1]:"Johnson"
TEST.EXPECTED:manager.Get_Next_Party_To_Be_Seated.return:"Smith"
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Get_Check_Total
TEST.NEW
TEST.NAME:Get_Check_Total_Returns_Correct_Check_Total_For_Table-REVIEW-NEEDED
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tested Requirement ID: FR22

This test verifies that the Get_Check_Total function returns the correct check total for a given table by stubbing Get_Table_Record to return a table_data_type with a known Check_Total value. This directly exercises the requirement that the system provides a way to obtain the check total for a given table.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.VALUE:manager.Get_Check_Total.Table:5
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:5
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:1
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:2
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'A'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Alice"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Soup:ONION
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Salad:CAESAR
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:STEAK
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Dessert:CAKE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Beverage:WINE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Soup:CHOWDER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Salad:GREEN
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:LOBSTER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Dessert:PIE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Beverage:BEER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:123.45
TEST.EXPECTED:manager.Get_Check_Total.return:123.45
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Clear_Table
TEST.NEW
TEST.NAME:Clear_Table_Sets_Check_Total_To_Zero-REVIEW-NEEDED
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tested Requirement ID: FR21

This test verifies that after calling Clear_Table, the table's check total is set to 0.0 in the table database by checking the value passed to Update_Table_Record.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Clear_Table.Table:2
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:2
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:v_true
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:4
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'A'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Alice"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Soup:ONION
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Salad:CAESAR
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:STEAK
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Dessert:CAKE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Beverage:WINE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Soup:CHOWDER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Salad:GREEN
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:CHICKEN
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Dessert:PIE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Beverage:BEER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:LOBSTER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Dessert:FRUIT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Beverage:MIXED_DRINK
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:PASTA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Beverage:SODA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:123.45
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Table:2
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Check_Total:0
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Add_Party_To_Waiting_List
TEST.NEW
TEST.NAME:Test_Waiting_List_Maximum_Capacity-REVIEW-NEEDED
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tested Requirement ID: FR23

Verifies that the waiting list supports up to 10 parties by adding a party when the list is at its maximum capacity and ensuring the list wraps around as per the code logic.
TEST.END_NOTES:
TEST.VALUE:manager.<<GLOBAL>>.WaitingListSize:10
TEST.VALUE:manager.Add_Party_To_Waiting_List.Name:"PartyTen"
TEST.EXPECTED:manager.<<GLOBAL>>.WaitingListSize:1
TEST.EXPECTED:manager.<<GLOBAL>>.WaitingList[0]:"PartyTen"
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Add_Party_To_Waiting_List
TEST.NEW
TEST.NAME:Test_Add_Party_To_Waiting_List_By_Name-REVIEW-NEEDED
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tested Requirement ID: FR24

Verifies that a party can be added to the waiting list with the specified name and that the name is correctly stored in the waiting list.
TEST.END_NOTES:
TEST.VALUE:manager.<<GLOBAL>>.WaitingListSize:0
TEST.VALUE:manager.Add_Party_To_Waiting_List.Name:"Smith Family"
TEST.EXPECTED:manager.<<GLOBAL>>.WaitingListSize:1
TEST.EXPECTED:manager.<<GLOBAL>>.WaitingList[0]:"Smith Family"
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Get_Next_Party_To_Be_Seated
TEST.NEW
TEST.NAME:WaitingListIndex_Resets_When_At_End_Of_List-REVIEW-NEEDED
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tested Requirement ID: FR26

Tests that when the WaitingListIndex is greater than 9, Get_Next_Party_To_Be_Seated resets the index to 0 and returns the party at the head of the waiting list. This ensures the head of the waiting list is reset when it reaches the end.
TEST.END_NOTES:
TEST.VALUE:manager.<<GLOBAL>>.WaitingListIndex:10
TEST.VALUE:manager.<<GLOBAL>>.WaitingList[0]:"Anderson"
TEST.VALUE:manager.<<GLOBAL>>.WaitingList[9]:"Brown"
TEST.EXPECTED:manager.Get_Next_Party_To_Be_Seated.return:"Anderson"
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Add_Included_Dessert
TEST.NEW
TEST.NAME:Test_Other_Combination_Does_Not_Qualify_For_Dessert-REVIEW-NEEDED
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tested Requirement ID: FR27

Tests that an order with a combination not matching the special cases does not qualify for a free dessert.
TEST.END_NOTES:
TEST.VALUE:manager.Add_Included_Dessert.Order:<<malloc 1>>
TEST.VALUE:manager.Add_Included_Dessert.Order[0].Entree:CHICKEN
TEST.VALUE:manager.Add_Included_Dessert.Order[0].Salad:CAESAR
TEST.VALUE:manager.Add_Included_Dessert.Order[0].Beverage:MIXED_DRINK
TEST.VALUE:manager.Add_Included_Dessert.Order[0].Soup:NO_SOUP
TEST.VALUE:manager.Add_Included_Dessert.Order[0].Dessert:NO_DESSERT
TEST.EXPECTED:manager.Add_Included_Dessert.Order[0].Dessert:NO_DESSERT
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Add_Included_Dessert
TEST.NEW
TEST.NAME:Test_Lobster_Green_Wine_Qualifies_For_Cake-REVIEW-NEEDED
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tested Requirement ID: FR27

Tests that an order with lobster, green salad, and wine qualifies for free cake as dessert.
TEST.END_NOTES:
TEST.VALUE:manager.Add_Included_Dessert.Order:<<malloc 1>>
TEST.VALUE:manager.Add_Included_Dessert.Order[0].Entree:LOBSTER
TEST.VALUE:manager.Add_Included_Dessert.Order[0].Salad:GREEN
TEST.VALUE:manager.Add_Included_Dessert.Order[0].Beverage:WINE
TEST.VALUE:manager.Add_Included_Dessert.Order[0].Soup:NO_SOUP
TEST.VALUE:manager.Add_Included_Dessert.Order[0].Dessert:NO_DESSERT
TEST.EXPECTED:manager.Add_Included_Dessert.Order[0].Dessert:CAKE
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Add_Included_Dessert
TEST.NEW
TEST.NAME:Test_Steak_Caesar_MixedDrink_Qualifies_For_Pie-REVIEW-NEEDED
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tested Requirement ID: FR27

Tests that an order with steak, caesar salad, and a mixed drink qualifies for free pie as dessert.
TEST.END_NOTES:
TEST.VALUE:manager.Add_Included_Dessert.Order:<<malloc 1>>
TEST.VALUE:manager.Add_Included_Dessert.Order[0].Entree:STEAK
TEST.VALUE:manager.Add_Included_Dessert.Order[0].Salad:CAESAR
TEST.VALUE:manager.Add_Included_Dessert.Order[0].Beverage:MIXED_DRINK
TEST.VALUE:manager.Add_Included_Dessert.Order[0].Soup:NO_SOUP
TEST.VALUE:manager.Add_Included_Dessert.Order[0].Dessert:NO_DESSERT
TEST.EXPECTED:manager.Add_Included_Dessert.Order[0].Dessert:PIE
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Place_Order
TEST.NEW
TEST.NAME:Test_Place_Order_Updates_Table_Occupied_Status-REVIEW-NEEDED
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tested Requirement ID: FR14

Verifies that after placing an order, the table's occupied status is set to true in the updated table record.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Place_Order.Table:5
TEST.VALUE:manager.Place_Order.Seat:1
TEST.VALUE:manager.Place_Order.Order.Soup:ONION
TEST.VALUE:manager.Place_Order.Order.Salad:GREEN
TEST.VALUE:manager.Place_Order.Order.Entree:CHICKEN
TEST.VALUE:manager.Place_Order.Order.Dessert:NO_DESSERT
TEST.VALUE:manager.Place_Order.Order.Beverage:SODA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:5
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:v_false
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:3
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'C'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Ann"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:5.0
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Is_Occupied:v_true
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Place_Order
TEST.NEW
TEST.NAME:Test_Place_Order_Supports_All_Entree_Types-REVIEW-NEEDED
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tested Requirement ID: FR13

Verifies that Place_Order accepts all supported entree types: STEAK, CHICKEN, LOBSTER, PASTA, and NO_ENTREE. This test places an order with each entree type at seat 0 and checks that the correct entree is set in the updated table record.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Place_Order.Table:2
TEST.VALUE:manager.Place_Order.Seat:0
TEST.VALUE:manager.Place_Order.Order.Soup:NO_SOUP
TEST.VALUE:manager.Place_Order.Order.Salad:NO_SALAD
TEST.VALUE:manager.Place_Order.Order.Entree:LOBSTER
TEST.VALUE:manager.Place_Order.Order.Dessert:NO_DESSERT
TEST.VALUE:manager.Place_Order.Order.Beverage:WINE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:2
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:v_true
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:1
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'B'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Sue"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:0.0
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[0].Entree:LOBSTER
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Place_Order
TEST.NEW
TEST.NAME:Test_Place_Order_Supports_4_Seats_Per_Table-REVIEW-NEEDED
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tested Requirement ID: FR12

Verifies that Place_Order can be called for all 4 seat indices (0 to 3), confirming support for 4 seats per table. This test places an order at seat 3 (the highest valid seat index) and checks that the order is updated for that seat.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Place_Order.Table:1
TEST.VALUE:manager.Place_Order.Seat:3
TEST.VALUE:manager.Place_Order.Order.Soup:NO_SOUP
TEST.VALUE:manager.Place_Order.Order.Salad:NO_SALAD
TEST.VALUE:manager.Place_Order.Order.Entree:STEAK
TEST.VALUE:manager.Place_Order.Order.Dessert:NO_DESSERT
TEST.VALUE:manager.Place_Order.Order.Beverage:BEER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:1
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:v_false
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:2
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'A'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Bob"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:20.0
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[3].Entree:STEAK
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Place_Order
TEST.NEW
TEST.NAME:Test_Place_Order_Updates_Number_In_Party-REVIEW-NEEDED
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tested Requirement ID: FR15

Verifies that after placing an order, the table's number in party is incremented by 1 in the updated table record.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Place_Order.Table:7
TEST.VALUE:manager.Place_Order.Seat:2
TEST.VALUE:manager.Place_Order.Order.Soup:CHOWDER
TEST.VALUE:manager.Place_Order.Order.Salad:CAESAR
TEST.VALUE:manager.Place_Order.Order.Entree:PASTA
TEST.VALUE:manager.Place_Order.Order.Dessert:NO_DESSERT
TEST.VALUE:manager.Place_Order.Order.Beverage:SODA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:7
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:v_true
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:3
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'D'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Eve"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:8.0
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Number_In_Party:4
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Place_Order
TEST.NEW
TEST.NAME:Test_None_Entree_Order_Does_Not_Increase_Check_Total-REVIEW-NEEDED
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tested Requirement ID: FR17

Tests that placing an order with NO_ENTREE does not increase the table's check total. The test sets up a table with an initial check total, places an order with NO_ENTREE, and verifies that the check total remains unchanged in the updated table record.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Place_Order.Table:3
TEST.VALUE:manager.Place_Order.Seat:2
TEST.VALUE:manager.Place_Order.Order.Soup:NO_SOUP
TEST.VALUE:manager.Place_Order.Order.Salad:NO_SALAD
TEST.VALUE:manager.Place_Order.Order.Entree:NO_ENTREE
TEST.VALUE:manager.Place_Order.Order.Dessert:NO_DESSERT
TEST.VALUE:manager.Place_Order.Order.Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:3
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:v_false
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:1
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'B'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Bob"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:25.0
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Table:3
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Check_Total:25.0
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Place_Order
TEST.NEW
TEST.NAME:Test_Pasta_Order_Increases_Check_Total_By_12-REVIEW-NEEDED
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tested Requirement ID: FR17

Tests that placing an order for pasta increases the table's check total by 12.0. The test sets up a table with an initial check total, places a pasta order, and verifies that the check total is incremented by 12.0 in the updated table record.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Place_Order.Table:2
TEST.VALUE:manager.Place_Order.Seat:1
TEST.VALUE:manager.Place_Order.Order.Soup:NO_SOUP
TEST.VALUE:manager.Place_Order.Order.Salad:NO_SALAD
TEST.VALUE:manager.Place_Order.Order.Entree:PASTA
TEST.VALUE:manager.Place_Order.Order.Dessert:NO_DESSERT
TEST.VALUE:manager.Place_Order.Order.Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:2
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:v_false
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:2
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'A'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Alice"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:50.0
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Table:2
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Check_Total:62.0
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Clear_Table
TEST.NEW
TEST.NAME:Test_Clear_Table_Clears_All_Orders-REVIEW-NEEDED
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tested Requirement ID: FR20

Verifies that after calling Clear_Table, all orders for all seats are cleared (set to NO_SOUP, NO_SALAD, NO_ENTREE, NO_DESSERT, NO_BEVERAGE) in the database, as required by FR20.1.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Clear_Table.Table:3
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:3
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:v_true
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:2
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'D'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Dave"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Soup:ONION
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Salad:CAESAR
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:STEAK
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Dessert:CAKE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Beverage:WINE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Soup:CHOWDER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Salad:GREEN
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:CHICKEN
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Dessert:PIE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Beverage:BEER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:LOBSTER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Dessert:FRUIT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Beverage:MIXED_DRINK
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Soup:ONION
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Salad:CAESAR
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:PASTA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Beverage:SODA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:200.0
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[0].Soup:NO_SOUP
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[0].Salad:NO_SALAD
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[0].Entree:NO_ENTREE
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[0].Dessert:NO_DESSERT
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[0].Beverage:NO_BEVERAGE
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[1].Soup:NO_SOUP
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[1].Salad:NO_SALAD
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[1].Entree:NO_ENTREE
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[1].Dessert:NO_DESSERT
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[1].Beverage:NO_BEVERAGE
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[2].Soup:NO_SOUP
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[2].Salad:NO_SALAD
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[2].Entree:NO_ENTREE
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[2].Dessert:NO_DESSERT
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[2].Beverage:NO_BEVERAGE
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[3].Soup:NO_SOUP
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[3].Salad:NO_SALAD
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[3].Entree:NO_ENTREE
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[3].Dessert:NO_DESSERT
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[3].Beverage:NO_BEVERAGE
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Clear_Table
TEST.NEW
TEST.NAME:Test_Clear_Table_Sets_Is_Occupied_False-REVIEW-NEEDED
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tested Requirement ID: FR18

Verifies that after calling Clear_Table, the table's Is_Occupied field is set to v_false in the database, as required by FR18.1.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Clear_Table.Table:2
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:2
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:v_true
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:3
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'B'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Bob"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Soup:ONION
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Salad:CAESAR
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:STEAK
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Dessert:CAKE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Beverage:WINE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Soup:CHOWDER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Salad:GREEN
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:CHICKEN
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Dessert:PIE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Beverage:BEER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:LOBSTER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Dessert:FRUIT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Beverage:MIXED_DRINK
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Soup:ONION
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Salad:CAESAR
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:PASTA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Beverage:SODA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:50.0
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Is_Occupied:v_false
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Clear_Table
TEST.NEW
TEST.NAME:Test_Clear_Table_Accepts_All_Six_Table_Indices-REVIEW-NEEDED
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tested Requirement ID: FR11

Verifies that Clear_Table can be called for all 6 supported table indices (0 to 5), as required by FR11.1. This test uses table index 5 (the highest valid index) to ensure the function supports the full range.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.VALUE:manager.Clear_Table.Table:5
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:5
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:v_true
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:4
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'A'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Alice"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Soup:ONION
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Salad:CAESAR
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:STEAK
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Dessert:CAKE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Beverage:WINE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Soup:CHOWDER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Salad:GREEN
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:CHICKEN
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Dessert:PIE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Beverage:BEER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:LOBSTER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Dessert:FRUIT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Beverage:MIXED_DRINK
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Soup:ONION
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Salad:CAESAR
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:PASTA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Beverage:SODA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:123.45
TEST.EXPECTED:manager.Clear_Table.return:0
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Clear_Table
TEST.NEW
TEST.NAME:Test_Clear_Table_Sets_Number_In_Party_To_One-REVIEW-NEEDED
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tested Requirement ID: FR19

Verifies that after calling Clear_Table, the table's Number_In_Party field is set to 1 in the database, as required by FR19.1.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Clear_Table.Table:1
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:1
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:v_true
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:4
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'C'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Carol"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Soup:ONION
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Salad:CAESAR
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:STEAK
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Dessert:CAKE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Beverage:WINE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Soup:CHOWDER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Salad:GREEN
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:CHICKEN
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Dessert:PIE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Beverage:BEER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:LOBSTER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Dessert:FRUIT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Beverage:MIXED_DRINK
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Soup:ONION
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Salad:CAESAR
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:PASTA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Beverage:SODA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:75.0
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Number_In_Party:1
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Place_Order
TEST.NEW
TEST.NAME:Test_Chicken_Order_Increases_Check_Total_By_10-REVIEW-NEEDED
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tested Requirement ID: FR17

Tests that placing an order for chicken increases the table's check total by 10.0. The test sets up a table with a check total of 5.0, places a chicken order, and expects Update_Table_Record to be called with a check total of 15.0.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Place_Order.Table:7
TEST.VALUE:manager.Place_Order.Seat:0
TEST.VALUE:manager.Place_Order.Order.Soup:CHOWDER
TEST.VALUE:manager.Place_Order.Order.Salad:NO_SALAD
TEST.VALUE:manager.Place_Order.Order.Entree:CHICKEN
TEST.VALUE:manager.Place_Order.Order.Dessert:NO_DESSERT
TEST.VALUE:manager.Place_Order.Order.Beverage:MIXED_DRINK
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:7
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:1
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:1
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'C'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Pat"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:5.0
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Table:7
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Check_Total:15.0
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Place_Order
TEST.NEW
TEST.NAME:Test_Lobster_Order_Increases_Check_Total_By_18-REVIEW-NEEDED
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tested Requirement ID: FR17

Tests that placing an order for lobster increases the table's check total by 18.0. The test sets up a table with a check total of 50.0, places a lobster order, and expects Update_Table_Record to be called with a check total of 68.0.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Place_Order.Table:2
TEST.VALUE:manager.Place_Order.Seat:3
TEST.VALUE:manager.Place_Order.Order.Soup:NO_SOUP
TEST.VALUE:manager.Place_Order.Order.Salad:GREEN
TEST.VALUE:manager.Place_Order.Order.Entree:LOBSTER
TEST.VALUE:manager.Place_Order.Order.Dessert:NO_DESSERT
TEST.VALUE:manager.Place_Order.Order.Beverage:WINE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:2
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:1
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:4
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'D'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Lee"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:50.0
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Table:2
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Check_Total:68.0
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Place_Order
TEST.NEW
TEST.NAME:Test_Steak_Order_Increases_Check_Total_By_14-REVIEW-NEEDED
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tested Requirement ID: FR17

Tests that placing an order for steak increases the table's check total by 14.0. The test sets up a table with a check total of 20.0, places a steak order, and expects Update_Table_Record to be called with a check total of 34.0.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Place_Order.Table:3
TEST.VALUE:manager.Place_Order.Seat:1
TEST.VALUE:manager.Place_Order.Order.Soup:NO_SOUP
TEST.VALUE:manager.Place_Order.Order.Salad:CAESAR
TEST.VALUE:manager.Place_Order.Order.Entree:STEAK
TEST.VALUE:manager.Place_Order.Order.Dessert:NO_DESSERT
TEST.VALUE:manager.Place_Order.Order.Beverage:BEER
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:3
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:1
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:3
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'B'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Alex"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:20.0
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Table:3
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Check_Total:34.0
TEST.END

TEST.UNIT:manager
TEST.SUBPROGRAM:Place_Order
TEST.NEW
TEST.NAME:Test_Order_Updates_Seat_Order-REVIEW-NEEDED
TEST.NOTES:
WARNING: This test case was generated by an AI-based system. Please review it carefully.

Tested Requirement ID: FR16

Tests that placing an order updates the correct seat's order in the table database. The test sets up a table with no order for seat 2, places an order for seat 2, and expects Update_Table_Record to be called with the new order for seat 2.
TEST.END_NOTES:
TEST.STUB:uut_prototype_stubs.Get_Table_Record
TEST.STUB:uut_prototype_stubs.Update_Table_Record
TEST.VALUE:manager.Place_Order.Table:5
TEST.VALUE:manager.Place_Order.Seat:2
TEST.VALUE:manager.Place_Order.Order.Soup:ONION
TEST.VALUE:manager.Place_Order.Order.Salad:GREEN
TEST.VALUE:manager.Place_Order.Order.Entree:CHICKEN
TEST.VALUE:manager.Place_Order.Order.Dessert:NO_DESSERT
TEST.VALUE:manager.Place_Order.Order.Beverage:SODA
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.Table:5
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Is_Occupied:0
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Number_In_Party:2
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Designator:'A'
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Wait_Person:"Sam"
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[0].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[1].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[2].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Soup:NO_SOUP
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Salad:NO_SALAD
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Entree:NO_ENTREE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Dessert:NO_DESSERT
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Order[3].Beverage:NO_BEVERAGE
TEST.VALUE:uut_prototype_stubs.Get_Table_Record.return.Check_Total:0.0
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Table:5
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[2].Soup:ONION
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[2].Salad:GREEN
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[2].Entree:CHICKEN
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[2].Dessert:NO_DESSERT
TEST.EXPECTED:uut_prototype_stubs.Update_Table_Record.Data.Order[2].Beverage:SODA
TEST.END

