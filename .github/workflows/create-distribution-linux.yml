name: Reqs2tests distribution - Linux
run-name: ${{ github.ref_name }} is generating distribution for Linux
on:
  workflow_dispatch:
env:
  NODE_EXTRA_CA_CERTS: /etc/ssl/certs/ca-certificates.crt
  REQUESTS_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt
  VCAST_USER_HOME: /home/vcast_user
jobs:
  reqs2tests_distribution_linux:
    if: github.event.pull_request.draft == false
    permissions: write-all
    runs-on: [self-hosted, reqs2tests, Linux]

    container:
      image: rds-vtc-docker-dev-local.vegistry.vg.vector.int/vcast/reqs2tests_ci:20-latest
      options: --user vcast_user

    steps:
      - name: Check out repository
        id: checkout
        uses: actions/checkout@v4
        continue-on-error: true

      - name: Wait before retry
        id: should-retry-checkout
        if: failure()
        continue-on-error: true
        run: |
          sleep 10
          exit 1

      - name: Check out repository (retry)
        if: failure()
        uses: actions/checkout@v4

      - name: Virtual environment restore from cache
        uses: actions/cache/restore@v4
        id: cache-venv-restore
        with:
          path: ${{ env.VCAST_USER_HOME }}/.venv/
          key: ${{ runner.os }}-venv-${{ hashFiles('./setup.py') }}-${{ hashFiles('./autoreq/**/*') }}

      - name: Setup Python virtual environment
        if: steps.cache-venv-restore.outputs.cache-hit != 'true'
        run: |
          python3.10 -m venv ${{ env.VCAST_USER_HOME }}/.venv
          source ${{ env.VCAST_USER_HOME }}/.venv/bin/activate
          pip install --no-cache --upgrade pip
          pip install --no-cache -e .[dev]
          deactivate
        shell: bash

      - name: Virtual environment save cache
        if: steps.cache-venv-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ${{ env.VCAST_USER_HOME }}/.venv/
          key: ${{ runner.os }}-venv-${{ hashFiles('./setup.py') }}-${{ hashFiles('./autoreq/**/*') }}

      - name: Reqs2tests distribution
        run: |
          ./ci/build_distribution_linux.sh
        shell: bash

      - name: Upload distribution
        if: always()
        run: |
          COMMIT_DATE=$(git log -1 --format=%cd --date=format:%Y-%m-%dT%H:%M:%S)
          BASE_ARTIFACTORY_URL="https://artifactory.vi.vector.int:443/artifactory/rds-build-packages-generic-dev/code2reqs2tests/distributions/${{ github.ref_name }}/$COMMIT_DATE-${{ github.sha }}/"
          echo "## Distribution" >> $GITHUB_STEP_SUMMARY
          if [[ -f ${{ env.VCAST_USER_HOME }}/autoreq-linux.tar.gz ]] ; then
            DISTRIBUTION_URL=$BASE_ARTIFACTORY_URL/autoreq-linux.tar.gz
            curl -H "X-JFrog-Art-Api:${{ secrets.ARTIFACTORY_TOKEN }}" -X PUT $DISTRIBUTION_URL -T ${{ env.VCAST_USER_HOME }}/autoreq-linux.tar.gz
            echo "[Download distribution]($DISTRIBUTION_URL)" >> $GITHUB_STEP_SUMMARY
          else
            echo "Unable to build distribution" >> $GITHUB_STEP_SUMMARY
          fi
        shell: bash